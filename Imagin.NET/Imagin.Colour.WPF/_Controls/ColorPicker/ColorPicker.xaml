<Common:UserControl
    x:Class="Imagin.Colour.Controls.ColorPicker"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:l="http://wpflocalizeextension.codeplex.com"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    mc:Ignorable="d"
    xmlns:local="clr-namespace:Imagin.Colour.Controls" 
    xmlns:Common="http://imagin.tech/imagin/common" 
    xmlns:Common.Media="clr-namespace:Imagin.Common.Media;assembly=Imagin.Common" 
    xmlns:Models="clr-namespace:Imagin.Colour.Controls.Models"
    x:Name="PART_ColorPicker">
    <Common:UserControl.Resources>
        <Common:BindingProxy x:Key="BindingProxy" Data="{Binding ElementName=PART_ColorPicker}"/>

        <Common:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <Common:ColorToHexConverter x:Key="ColorToHexConverter"/>
        <Common:ColorToSolidColorBrushConverter x:Key="ColorToSolidColorBrushConverter"/>

        <DataTemplate 
            x:Key="DataTemplate.Models"
            DataType="{x:Type Models:ColorModel}">
            <DataTemplate.Resources>
                <Common:BindingProxy x:Key="ComponentProxy" Data="{Binding Mode=OneWay, RelativeSource={RelativeSource Self}}"/>
            </DataTemplate.Resources>
            <local:ColorSpaceView 
                x:Name="PART_Components" 
                ColorSpace="{Binding Mode=OneWay}"
                ItemsSource="{Binding Components, Mode=OneWay}" 
                Margin="0,0,0,15">
                <local:ColorSpaceView.ItemTemplate>
                    <DataTemplate DataType="{x:Type Models:Component}">
                        <DataTemplate.Resources>
                            <Common:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
                        </DataTemplate.Resources>
                        <local:ComponentView 
                            x:Name="PART_ComponentView"
                            Color="{Binding NewColor, RelativeSource={RelativeSource AncestorType={x:Type local:ColorPicker}}}"
                            ColorSpaceModel="{Binding DataContext, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type local:ColorSpaceView}}}"
                            ComponentModel="{Binding Mode=OneWay}"
                            Converter="{Binding Converter, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type local:ColorPicker}}}"
                            Value="{Binding Value}">
                            <Grid 
                                Common:PanelExtensions.Spacing="0,0,7,0"
                                Common:PanelExtensions.TrimLast="True"
                                Common:PanelExtensions.VerticalContentAlignment="Center">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Name="PART_Column0"/>
                                    <ColumnDefinition Width="{Binding ComponentWidth, RelativeSource={RelativeSource AncestorType={x:Type local:ColorPicker}}}" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <ContentPresenter 
                                    x:Name="PART_Label"
                                    Content="{Binding Mode=OneWay}"/>
                                <Common:DoubleUpDown
                                    Grid.Column="1" 
                                    x:Name="PART_Value"
                                    CanUpDown="{Binding CanUpDownComponents, RelativeSource={RelativeSource AncestorType={x:Type local:ColorPicker}}}"
                                    Increment="{Binding Increment, Mode=OneWay}"
                                    Maximum="{Binding Maximum, Mode=OneWay}"
                                    Minimum="{Binding Minimum, Mode=OneWay}"
                                    StringFormat="{Binding ComponentStringFormat, RelativeSource={RelativeSource AncestorType={x:Type local:ColorPicker}}}"/>
                                <Label 
                                    x:Name="PART_Unit"
                                    Grid.Column="2"
                                    FontFamily="Consolas"/>
                            </Grid>
                        </local:ComponentView>
                        <DataTemplate.Triggers>
                            <DataTrigger Binding="{Binding IsAsync, RelativeSource={RelativeSource AncestorType={x:Type local:ColorPicker}}}" Value="False">
                                <Setter TargetName="PART_Value" Property="Value" Value="{Binding Value, IsAsync=False, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsAsync, RelativeSource={RelativeSource AncestorType={x:Type local:ColorPicker}}}" Value="True">
                                <Setter TargetName="PART_Value" Property="Value" Value="{Binding Value, IsAsync=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding CanSelect}" Value="True">
                                <Setter TargetName="PART_Column0" Property="Width" Value="50"/>
                                <Setter TargetName="PART_Label" Property="ContentTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <RadioButton 
                                                x:Name="PART_Radio"
                                                Content="{Binding Label}"
                                                GroupName="ColorSpace"
                                                HorizontalAlignment="Center"
                                                IsChecked="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding CanSelect}" Value="False">
                                <Setter TargetName="PART_Column0" Property="Width" Value="25"/>
                                <Setter TargetName="PART_Label" Property="ContentTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <Label 
                                                Content="{Binding Label}" 
                                                HorizontalAlignment="Center"/>
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Unit}" Value="{x:Static Common.Media:ComponentUnit.Degrees}">
                                <Setter TargetName="PART_Unit" Property="Content" Value="°"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Unit}" Value="{x:Static Common.Media:ComponentUnit.None}">
                                <Setter TargetName="PART_Unit" Property="Content" Value=" "/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Unit}" Value="{x:Static Common.Media:ComponentUnit.Percent}">
                                <Setter TargetName="PART_Unit" Property="Content" Value="%"/>
                            </DataTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </local:ColorSpaceView.ItemTemplate>
            </local:ColorSpaceView>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding Orientation}" Value="Horizontal">
                    <Setter TargetName="PART_Components" Property="ItemContainerStyle">
                        <Setter.Value>
                            <Style TargetType="ContentPresenter">
                                <Setter Property="Margin" Value="0,0,10,0"/>
                            </Style>
                        </Setter.Value>
                    </Setter>
                    <Setter TargetName="PART_Components" Property="ItemsPanel">
                        <Setter.Value>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Horizontal"/>
                            </ItemsPanelTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Orientation}" Value="Vertical">
                    <Setter TargetName="PART_Components" Property="ItemContainerStyle">
                        <Setter.Value>
                            <Style TargetType="ContentPresenter">
                                <Setter Property="Margin" Value="0,0,7,7"/>
                            </Style>
                        </Setter.Value>
                    </Setter>
                    <Setter TargetName="PART_Components" Property="ItemsPanel">
                        <Setter.Value>
                            <ItemsPanelTemplate>
                                <StackPanel/>
                            </ItemsPanelTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>
    </Common:UserControl.Resources>
    <Grid 
        DataContext="{Binding ElementName=PART_ColorPicker}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="{Binding InputWidth}"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        
        <local:ColorSelector 
            Alpha="{Binding Alpha, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            CheckerBackground="{Binding CheckerBackground, Mode=OneWay}"
            CheckerForeground="{Binding CheckerForeground, Mode=OneWay}"
            Color="{Binding NewColor}"
            Component="{Binding SelectedComponent, Mode=OneWay}"
            SelectionLength="{Binding SelectionLength, Mode=OneWay}"
            SelectionType="{Binding SelectionType, Mode=OneWay}"
            Transparency="{Binding Transparency, Mode=OneWay}"/>
        
        <Grid 
            Grid.Column="1" 
            Visibility="{Binding InputVisibility, Mode=OneWay}" 
            MaxHeight="256"
            Margin="10,0,0,0">
            <ScrollViewer VerticalScrollBarVisibility="Auto">
                <ItemsControl 
                    ItemsSource="{Binding ColorModels, Mode=OneWay}" 
                    ItemTemplate="{StaticResource DataTemplate.Models}"
                    VirtualizingPanel.IsVirtualizing="True"
                    VirtualizingPanel.VirtualizationMode="Recycling"
                    VerticalAlignment="Center">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel Orientation="Horizontal"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>
            </ScrollViewer>
        </Grid>
        
        <StackPanel 
            Grid.Column="2" 
            Height="256" 
            HorizontalAlignment="Center"
            Margin="15,0,0,0">
            <Common:SplitView
                Height="125" 
                HorizontalAlignment="Center" 
                Orientation="Vertical"
                VerticalAlignment="Top"
                Width="100">
                <Common:SplitView.Content1>
                    <Common:SplitView Orientation="Vertical">
                        <Common:SplitView.Content1>
                            <Label 
                                HorizontalAlignment="Center" 
                                Content="{l:Loc Imagin.Colour.Controls.WPF:Main:New}"  
                                Margin="0,0,0,5"/>
                        </Common:SplitView.Content1>
                        <Common:SplitView.Content2>
                            <Common:CheckerBoard 
                                DataContext="{Binding Data, Source={StaticResource BindingProxy}}"
                                BorderBrush="Black"
                                BorderThickness="1"
                                CheckerBackground="{Binding CheckerBackground, Mode=OneWay}"
                                CheckerForeground="{Binding CheckerForeground, Mode=OneWay}"
                                ToolTip="{Binding NewColor, Converter={StaticResource ColorToHexConverter}, ConverterParameter=WithAlpha, StringFormat={}#{0}}">
                                <Rectangle Fill="{Binding NewColor, Converter={StaticResource ColorToSolidColorBrushConverter}}"/>
                            </Common:CheckerBoard>
                        </Common:SplitView.Content2>
                    </Common:SplitView>
                </Common:SplitView.Content1>
                <Common:SplitView.Content2>
                    <Common:SplitView Orientation="Vertical">
                        <Common:SplitView.Content1>
                            <Common:CheckerBoard 
                                DataContext="{Binding Data, Source={StaticResource BindingProxy}}"
                                BorderBrush="Black"
                                BorderThickness="1"
                                CheckerBackground="{Binding CheckerBackground, Mode=OneWay}"
                                CheckerForeground="{Binding CheckerForeground, Mode=OneWay}"
                                Margin="0,-1,0,0"
                                ToolTip="{Binding OldColor, Converter={StaticResource ColorToHexConverter}, ConverterParameter=WithAlpha, StringFormat={}#{0}}">
                                <Rectangle x:Name="PART_OldRectangle"/>
                            </Common:CheckerBoard>
                        </Common:SplitView.Content1>
                        <Common:SplitView.Content2>
                            <Label 
                                Content="{l:Loc Imagin.Colour.Controls.WPF:Main:Current}"  
                                HorizontalAlignment="Center" 
                                Margin="0,5,0,0"/>
                        </Common:SplitView.Content2>
                    </Common:SplitView>
                </Common:SplitView.Content2>
            </Common:SplitView>
            <Common:HexBox 
                Margin="0,10,0,0"
                VerticalAlignment="Center"
                Width="90">
                <Common:HexBox.Style>
                    <Style TargetType="Common:HexBox" BasedOn="{StaticResource {x:Type Common:HexBox}}">
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Transparency, RelativeSource={RelativeSource AncestorType={x:Type local:ColorPicker}}}" Value="Transparent"/>
                                    <Condition Binding="{Binding IsAsync, RelativeSource={RelativeSource AncestorType={x:Type local:ColorPicker}}}" Value="True"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Text" Value="{Binding NewColor, Mode=TwoWay, UpdateSourceTrigger=LostFocus, ElementName=PART_ColorPicker, Converter={StaticResource ColorToHexConverter}, ConverterParameter=WithAlpha, IsAsync=True}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Transparency, RelativeSource={RelativeSource AncestorType={x:Type local:ColorPicker}}}" Value="Transparent"/>
                                    <Condition Binding="{Binding IsAsync, RelativeSource={RelativeSource AncestorType={x:Type local:ColorPicker}}}" Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Text" Value="{Binding NewColor, Mode=TwoWay, UpdateSourceTrigger=LostFocus, ElementName=PART_ColorPicker, Converter={StaticResource ColorToHexConverter}, ConverterParameter=WithAlpha}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Transparency, RelativeSource={RelativeSource AncestorType={x:Type local:ColorPicker}}}" Value="Opaque"/>
                                    <Condition Binding="{Binding IsAsync, RelativeSource={RelativeSource AncestorType={x:Type local:ColorPicker}}}" Value="True"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Text" Value="{Binding NewColor, Mode=TwoWay, UpdateSourceTrigger=LostFocus, ElementName=PART_ColorPicker, Converter={StaticResource ColorToHexConverter}, IsAsync=True}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Transparency, RelativeSource={RelativeSource AncestorType={x:Type local:ColorPicker}}}" Value="Opaque"/>
                                    <Condition Binding="{Binding IsAsync, RelativeSource={RelativeSource AncestorType={x:Type local:ColorPicker}}}" Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Text" Value="{Binding NewColor, Mode=TwoWay, UpdateSourceTrigger=LostFocus, ElementName=PART_ColorPicker, Converter={StaticResource ColorToHexConverter}}"/>
                            </MultiDataTrigger>
                            <DataTrigger Binding="{Binding Transparency, RelativeSource={RelativeSource AncestorType={x:Type local:ColorPicker}}}" Value="Transparent">
                                <Setter Property="MaxLength" Value="8"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Transparency, RelativeSource={RelativeSource AncestorType={x:Type local:ColorPicker}}}" Value="Opaque">
                                <Setter Property="MaxLength" Value="6"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Common:HexBox.Style>
            </Common:HexBox>
        </StackPanel>
    </Grid>
</Common:UserControl>
