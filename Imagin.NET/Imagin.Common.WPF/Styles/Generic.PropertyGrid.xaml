<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:l="http://wpflocalizeextension.codeplex.com"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Imagin.Common"
    xmlns:Common="http://imagin.tech/imagin/common"
    xmlns:Common.Portable="clr-namespace:Imagin.Common;assembly=Imagin.Common"
    xmlns:Converters="clr-namespace:Imagin.Common.Converters"
    xmlns:Data="clr-namespace:Imagin.Common.Data"
    xmlns:Linq="clr-namespace:Imagin.Common.Linq"
    xmlns:Markup="clr-namespace:Imagin.Common.Markup"
    xmlns:System="clr-namespace:System;assembly=mscorlib"
    xmlns:System.2="clr-namespace:System;assembly=System"
    xmlns:System.Collections="clr-namespace:System.Collections;assembly=mscorlib"
    xmlns:System.ComponentModel="clr-namespace:System.ComponentModel;assembly=System"
    xmlns:System.Net="clr-namespace:System.Net;assembly=System"
    xmlns:System.Windows="clr-namespace:System.Windows;assembly=WindowsBase"
    xmlns:System.Windows.Media="clr-namespace:System.Windows.Media;assembly=PresentationCore">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Imagin.Common.WPF;component/Styles/Generic.DataGrid.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Imagin.Common.WPF;component/Styles/Generic.Menu.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Converters:NullToBooleanConverter x:Key="NullToBooleanConverter"/>
    <Converters:ObjectToTypeConverter x:Key="ObjectToTypeConverter"/>
    <Converters:StringToCamelCaseConverter x:Key="StringToCamelCaseConverter"/>

    <Style x:Key="{x:Type local:PropertyGridBase}" TargetType="{x:Type local:PropertyGridBase}" BasedOn="{StaticResource {x:Type DataGrid}}">
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Brush.Border}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="CanUserDeleteRows" Value="False"/>
        <Setter Property="CanUserReorderColumns" Value="False"/>
        <Setter Property="CanUserResizeColumns" Value="True"/>
        <Setter Property="CanUserResizeRows" Value="False"/>
        <Setter Property="EnableColumnVirtualization" Value="True"/>
        <Setter Property="EnableRowVirtualization" Value="True"/>
        <Setter Property="Foreground" Value="{DynamicResource Brush.Text}"/>
        <Setter Property="DescriptionTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border
                        Background="{DynamicResource Brush.PropertyGrid.Description.Background}"
                        BorderBrush="{DynamicResource Brush.PropertyGrid.Description.Border}"
                        BorderThickness="0,1,0,0"
                        MinHeight="36"
                        TextElement.Foreground="{DynamicResource Brush.Text}"
                        Padding="10">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <local:LocalizedTextBlock 
                                FontWeight="Bold"
                                Margin="0,0,0,7"
                                Text="{Binding DisplayName, Converter={StaticResource StringToCamelCaseConverter}, Mode=OneWay}"
                                TextTrimming="CharacterEllipsis"
                                ToolTip="{Binding LocalizedText, Mode=OneWay, RelativeSource={RelativeSource Self}}"/>
                            <local:LocalizedTextBlock 
                                Grid.Row="1"
                                Text="{Binding Description, Mode=OneWay}"
                                TextTrimming="CharacterEllipsis"
                                TextWrapping="Wrap"
                                ToolTip="{Binding LocalizedText, Mode=OneWay, RelativeSource={RelativeSource Self}}"/>
                        </Grid>
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type DataGridRow}">
                    <!--
                    <Setter Property="Visibility">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource StartsWithToVisibilityMultiValueConverter}" BindingGroupName="{x:Null}">
                                <Binding Converter="{StaticResource LocalizationConverter}" Path="DisplayName"/>
                                <Binding Path="Data.SearchQuery" Source="{StaticResource BindingProxy}"/>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                    -->
                    <Style.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="Transparent"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="Transparent"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="Selector.IsSelectionActive" Value="False" />
                                <Condition Property="IsMouseOver" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="Transparent"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="Selector.IsSelectionActive" Value="True" />
                                <Condition Property="IsMouseOver" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="Transparent"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False" />
                                <Condition Property="ItemsControl.AlternationIndex" Value="0" />
                                <Condition Property="IsMouseOver" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="Transparent"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False" />
                                <Condition Property="ItemsControl.AlternationIndex" Value="1" />
                                <Condition Property="IsMouseOver" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="Transparent"/>
                        </MultiTrigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="NestedPropertyTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Button
                        Command="{Binding NestCommand, RelativeSource={RelativeSource AncestorType={x:Type local:PropertyGridBase}}}"
                        CommandParameter="{Binding Value, Mode=OneWay}">
                        <local:MaskedImage
                            Source="pack://application:,,,/Imagin.Common.WPF;component/Images/Dots.png"/>
                    </Button>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="SplitterStyle">
            <Setter.Value>
                <Style TargetType="GridSplitter">
                    <Setter Property="Background" Value="{DynamicResource Brush.GridSplitter.Background}" />
                    <Setter Property="Height" Value="3"/>
                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                    <Setter Property="ResizeBehavior" Value="PreviousAndNext" />
                    <Setter Property="VerticalAlignment" Value="Top"/>
                    <Setter Property="Width" Value="Auto"/>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:PropertyGridBase">
                    <ControlTemplate.Resources>
                        <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource {x:Type DataGridCell}}">
                            <Setter Property="Padding" Value="10,1"/>
                        </Style>
                    </ControlTemplate.Resources>
                    <Border 
                        x:Name="PART_Border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Border.Resources>
                            <Data:BindingProxy x:Key="BindingProxy"  Data="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:PropertyGridBase}}}"/>

                            <!-- //////////////////////////////////////////////////////////////////// [Converters] -->
                            
                            <Converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
                            <Converters:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
                            <Converters:LocalizationConverter x:Key="LocalizationConverter"/>
                            <Converters:NullToBooleanConverter x:Key="NullToBooleanConverter"/>
                            <Converters:NullToVisibilityConverter x:Key="NullToVisibilityConverter"/>
                            <Converters:StartsWithToVisibilityMultiValueConverter x:Key="StartsWithToVisibilityMultiValueConverter"/>
                            <Converters:ValueEqualsParameterMultiValueConverter x:Key="ValueEqualsParameterMultiValueConverter"/>

                            <!-- //////////////////////////////////////////////////////////////////// [Styles] -->

                            <DataTemplate x:Key="DataTemplate.Property.Name">
                                <local:LocalizedTextBlock
                                Text="{Binding DisplayName, Mode=OneWay}"
                                TextTrimming="CharacterEllipsis"
                                ToolTip="{Binding LocalizedText, Mode=OneWay, RelativeSource={RelativeSource Self}}"
                                VerticalAlignment="Center"/>
                            </DataTemplate>
                            <DataTemplate x:Key="DataTemplate.Property.Value">
                                <ContentControl Content="{Binding Mode=OneWay}">
                                    <ContentControl.ContentTemplateSelector>
                                        <local:PropertyTemplateSelector>
                                            <local:PropertyTemplateSelector.Resources>
                                                <ResourceDictionary>
                                                    <!-- //////////////////////////////////////////////////////////////////////// [Converters] -->

                                                    <Converters:ColorToHexConverter x:Key="BooleanToVisibilityConverter"/>
                                                    <Converters:DisplayNameAttributeConverter x:Key="DisplayNameAttributeConverter"/>
                                                    <Converters:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
                                                    <Converters:FileSizeMultiValueConverter x:Key="FileSizeMultiValueConverter"/>
                                                    <Converters:RelativeTimeConverter x:Key="RelativeTimeConverter"/>
                                                    <Converters:SolidColorBrushToHexConverter x:Key="SolidColorBrushToHexConverter"/>

                                                    <!-- //////////////////////////////////////////////////////////////////////// [Templates] -->

                                                    <DataTemplate x:Key="{x:Type System:Boolean}">
                                                        <CheckBox 
                                                            HorizontalAlignment="Left" 
                                                            IsChecked="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                            IsEnabled="{Binding IsReadOnly, Converter={StaticResource InverseBooleanConverter}, Mode=OneWay}"
                                                            Margin="0,5"/>
                                                    </DataTemplate>
                                                    <DataTemplate x:Key="{x:Type System:Byte}">
                                                        <local:ByteUpDown 
                                                            HorizontalAlignment="Stretch"
                                                            IsReadOnly="{Binding IsReadOnly, Mode=OneWay}"
                                                            CanUpDown="{Binding IsReadOnly, Converter={StaticResource InverseBooleanConverter}, Mode=OneWay}"
                                                            Maximum="{Binding Maximum}"
                                                            Minimum="{Binding Minimum}"
                                                            StringFormat="{Binding StringFormat}"
                                                            Value="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                    </DataTemplate>
                                                    <DataTemplate x:Key="{x:Type System.Windows.Media:Color}">
                                                        <!--
                                                        <DataTemplate.Resources>
                                                            <Converters:ColorToHexConverter x:Key="ColorToHexConverter"/>
                                                        </DataTemplate.Resources>
                                                        <Grid IsEnabled="{Binding IsReadOnly, Converter={StaticResource InverseBooleanConverter}, Mode=OneWay}">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="Auto"/>
                                                                <ColumnDefinition Width="*"/>
                                                            </Grid.ColumnDefinitions>
                                                            <local:ColorChip
                                                                Color="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                                Height="25" 
                                                                Margin="0,0,5,0"
                                                                Width="25"/>
                                                            <local:HexBox
                                                                Grid.Column="1"  
                                                                IsReadOnly="{Binding IsReadOnly, Mode=OneWay}"
                                                                MaxLength="8"
                                                                Text="{Binding Value, Mode=TwoWay, Converter={StaticResource ColorToHexConverter}, UpdateSourceTrigger=LostFocus}"/>
                                                        </Grid>
                                                        -->
                                                    </DataTemplate>
                                                    <DataTemplate x:Key="{x:Type System.Collections:IList}">
                                                        <Grid/>
                                                    </DataTemplate>
                                                    <DataTemplate x:Key="{x:Type System:DateTime}">
                                                        <ContentControl 
                                                            x:Name="PART_Content"
                                                            Content="{Binding Mode=OneWay}">
                                                            <ContentControl.ContentTemplate>
                                                                <DataTemplate>
                                                                    <local:DateTimeUpDown 
                                                                        HorizontalAlignment="Stretch"
                                                                        Maximum="{Binding Maximum}"
                                                                        Minimum="{Binding Minimum}"
                                                                        Value="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                                </DataTemplate>
                                                            </ContentControl.ContentTemplate>
                                                        </ContentControl>
                                                        <DataTemplate.Triggers>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding IsReadOnly}" Value="True"/>
                                                                    <Condition Binding="{Binding Format}" Value="Default"/>
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter TargetName="PART_Content" Property="ContentTemplate">
                                                                    <Setter.Value>
                                                                        <DataTemplate>
                                                                            <TextBlock
                                                                                Margin="0,5"
                                                                                Text="{Binding Value, Mode=OneWay}"
                                                                                ToolTip="{Binding Text, Mode=OneWay, RelativeSource={RelativeSource Self}}"/>
                                                                        </DataTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </MultiDataTrigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding IsReadOnly}" Value="True"/>
                                                                    <Condition Binding="{Binding Format}" Value="Relative"/>
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter TargetName="PART_Content" Property="ContentTemplate">
                                                                    <Setter.Value>
                                                                        <DataTemplate>
                                                                            <TextBlock
                                                                                Margin="0,5"
                                                                                Text="{Binding Value, Converter={StaticResource RelativeTimeConverter}, Mode=OneWay}"
                                                                                TextTrimming="CharacterEllipsis"
                                                                                ToolTip="{Binding Text, Mode=OneWay, RelativeSource={RelativeSource Self}}"/>
                                                                        </DataTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </MultiDataTrigger>
                                                        </DataTemplate.Triggers>
                                                    </DataTemplate>
                                                    <DataTemplate x:Key="{x:Type System:Decimal}">
                                                        <local:DecimalUpDown 
                                                            HorizontalAlignment="Stretch"
                                                            IsReadOnly="{Binding IsReadOnly, Mode=OneWay}"
                                                            CanUpDown="{Binding IsReadOnly, Converter={StaticResource InverseBooleanConverter}, Mode=OneWay}"
                                                            Maximum="{Binding Maximum}"
                                                            Minimum="{Binding Minimum}"
                                                            StringFormat="{Binding StringFormat}"
                                                            Value="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                    </DataTemplate>
                                                    <DataTemplate x:Key="{x:Type System:Double}">
                                                        <local:DoubleUpDown 
                                                            HorizontalAlignment="Stretch"
                                                            IsReadOnly="{Binding IsReadOnly, Mode=OneWay}"
                                                            CanUpDown="{Binding IsReadOnly, Converter={StaticResource InverseBooleanConverter}, Mode=OneWay}"
                                                            Maximum="{Binding Maximum}"
                                                            Minimum="{Binding Minimum}"
                                                            StringFormat="{Binding StringFormat}"
                                                            Value="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                    </DataTemplate>
                                                    <DataTemplate x:Key="{x:Type System:Enum}">
                                                        <ContentControl x:Name="PART_Content">
                                                            <ComboBox
                                                                IsEnabled="{Binding IsReadOnly, Converter={StaticResource InverseBooleanConverter}, Mode=OneWay}"
                                                                ItemsSource="{Data:EnumerateBinding Value}" 
                                                                SelectedValue="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                                VirtualizingPanel.IsVirtualizing="True" 
                                                                VirtualizingPanel.VirtualizationMode="Recycling">
                                                                <ComboBox.ItemTemplate>
                                                                    <DataTemplate>
                                                                        <local:LocalizedTextBlock 
                                                                            Text="{Binding Converter={StaticResource DisplayNameAttributeConverter}, Mode=OneWay}"
                                                                            TextTrimming="CharacterEllipsis"/>
                                                                    </DataTemplate>
                                                                </ComboBox.ItemTemplate>
                                                            </ComboBox>
                                                        </ContentControl>
                                                        <DataTemplate.Triggers>
                                                            <DataTrigger Binding="{Binding Format}" Value="Flags">
                                                                <Setter TargetName="PART_Content" Property="Content">
                                                                    <Setter.Value>
                                                                        <local:FlagCheckView
                                                                            Flags="{Binding Value,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                                            IsEnabled="{Binding IsReadOnly, Converter={StaticResource InverseBooleanConverter}, Mode=OneWay}"
                                                                            Margin="0,10,0,0">
                                                                            <local:FlagCheckView.ItemsPanel>
                                                                                <ItemsPanelTemplate>
                                                                                    <StackPanel/>
                                                                                </ItemsPanelTemplate>
                                                                            </local:FlagCheckView.ItemsPanel>
                                                                            <local:FlagCheckView.ItemTemplate>
                                                                                <DataTemplate>
                                                                                    <CheckBox
                                                                                        IsChecked="{Binding IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                                                        Margin="0,0,0,10">
                                                                                        <CheckBox.Content>
                                                                                            <local:LocalizedTextBlock 
                                                                                                Text="{Binding Value, Converter={StaticResource DisplayNameAttributeConverter}, Mode=OneWay}"
                                                                                                TextTrimming="CharacterEllipsis"/>
                                                                                        </CheckBox.Content>
                                                                                        <CheckBox.ToolTip>
                                                                                            <local:LocalizedTextBlock 
                                                                                                Text="{Binding Value, Converter={StaticResource DisplayNameAttributeConverter}, Mode=OneWay}"/>
                                                                                        </CheckBox.ToolTip>
                                                                                    </CheckBox>
                                                                                </DataTemplate>
                                                                            </local:FlagCheckView.ItemTemplate>
                                                                        </local:FlagCheckView>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </DataTrigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding IsReadOnly}" Value="True"/>
                                                                    <Condition Binding="{Binding Format}" Value="Default"/>
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter TargetName="PART_Content" Property="Content">
                                                                    <Setter.Value>
                                                                        <local:LocalizedTextBlock 
                                                                            Margin="0,5"
                                                                            Text="{Binding Value, Converter={StaticResource DisplayNameAttributeConverter}, Mode=OneWay}"
                                                                            TextTrimming="CharacterEllipsis">
                                                                            <local:LocalizedTextBlock.ToolTip>
                                                                                <local:LocalizedTextBlock Text="{Binding Value, Converter={StaticResource DisplayNameAttributeConverter}, Mode=OneWay}"/>
                                                                            </local:LocalizedTextBlock.ToolTip>
                                                                        </local:LocalizedTextBlock>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </MultiDataTrigger>
                                                        </DataTemplate.Triggers>
                                                    </DataTemplate>
                                                    <DataTemplate x:Key="{x:Type System:Int16}">
                                                        <local:Int16UpDown 
                                                            HorizontalAlignment="Stretch"
                                                            IsReadOnly="{Binding IsReadOnly, Mode=OneWay}"
                                                            CanUpDown="{Binding IsReadOnly, Converter={StaticResource InverseBooleanConverter}, Mode=OneWay}"
                                                            Maximum="{Binding Maximum}"
                                                            Minimum="{Binding Minimum}"
                                                            StringFormat="{Binding StringFormat}"
                                                            Value="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                    </DataTemplate>
                                                    <DataTemplate x:Key="{x:Type System:Int32}">
                                                        <local:Int32UpDown 
                                                            HorizontalAlignment="Stretch"
                                                            IsReadOnly="{Binding IsReadOnly, Mode=OneWay}"
                                                            CanUpDown="{Binding IsReadOnly, Converter={StaticResource InverseBooleanConverter}, Mode=OneWay}"
                                                            Maximum="{Binding Maximum}"
                                                            Minimum="{Binding Minimum}"
                                                            StringFormat="{Binding StringFormat}"
                                                            Value="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                    </DataTemplate>
                                                    <DataTemplate x:Key="{x:Type System:Int64}">
                                                        <ContentControl x:Name="PART_Content">
                                                            <local:Int64UpDown 
                                                                HorizontalAlignment="Stretch"
                                                                IsReadOnly="{Binding IsReadOnly, Mode=OneWay}"
                                                                CanUpDown="{Binding IsReadOnly, Converter={StaticResource InverseBooleanConverter}, Mode=OneWay}"
                                                                Maximum="{Binding Maximum}"
                                                                Minimum="{Binding Minimum}"
                                                                StringFormat="{Binding StringFormat}"
                                                                Value="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                        </ContentControl>
                                                        <DataTemplate.Triggers>
                                                            <DataTrigger Binding="{Binding Format}" Value="FileSize">
                                                                <Setter TargetName="PART_Content" Property="Content">
                                                                    <Setter.Value>
                                                                        <TextBlock Margin="0,10">
                                                                            <TextBlock.Text>
                                                                                <MultiBinding Converter="{StaticResource FileSizeMultiValueConverter}">
                                                                                    <Binding Path="Value" Mode="OneWay"/>
                                                                                    <Binding Path="Data.FileSizeFormat" Source="{StaticResource BindingProxy}"/>
                                                                                </MultiBinding>
                                                                            </TextBlock.Text>
                                                                        </TextBlock>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </DataTrigger>
                                                        </DataTemplate.Triggers>
                                                    </DataTemplate>
                                                    <DataTemplate x:Key="{x:Type System.Windows.Media:LinearGradientBrush}">
                                                        <!--
                                                        <local:GradientChip 
                                                            Height="25"
                                                            Value="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                            Width="Auto"/>
                                                        -->
                                                    </DataTemplate>
                                                    <DataTemplate x:Key="{x:Type System:Guid}">
                                                        <local:RegexBox 
                                                            HorizontalAlignment="Stretch"
                                                            IsReadOnly="{Binding IsReadOnly, Mode=OneWay}" 
                                                            Pattern="^([0-9A-Fa-f]{8}[-][0-9A-Fa-f]{4}[-][0-9A-Fa-f]{4}[-][0-9A-Fa-f]{4}[-][0-9A-Fa-f]{12})$"
                                                            Text="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                    </DataTemplate>
                                                    <DataTemplate x:Key="{x:Type System.Net:NetworkCredential}">
                                                        <StackPanel IsEnabled="{Binding IsReadOnly, Converter={StaticResource InverseBooleanConverter}, Mode=OneWay}">
                                                            <local:TextBox
                                                                Margin="0,0,0,5"
                                                                Placeholder="{l:Loc Username}"
                                                                Text="{Binding Value.UserName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                            <local:TextBox
                                                                IsCharacterMaskingEnabled="True"
                                                                Placeholder="{l:Loc Password}"
                                                                ShowToggleButton="True"
                                                                Text="{Binding Value.Password, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                        </StackPanel>
                                                    </DataTemplate>
                                                    <DataTemplate x:Key="{x:Type System:Object}">
                                                        <ContentControl
                                                            Content="{Binding Mode=OneWay}"
                                                            ContentStringFormat="{Binding Data.NestedPropertyStringFormat, Source={StaticResource BindingProxy}}"
                                                            ContentTemplate="{Binding Data.NestedPropertyTemplate, Source={StaticResource BindingProxy}}"
                                                            ContentTemplateSelector="{Binding Data.NestedPropertyTemplateSelector, Source={StaticResource BindingProxy}}"/>
                                                    </DataTemplate>
                                                    <DataTemplate x:Key="{x:Type System.Windows:Point}">
                                                        <Grid>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="*"/>
                                                                <ColumnDefinition Width="*"/>
                                                            </Grid.ColumnDefinitions>

                                                            <local:DoubleUpDown 
                                                                CanUpDown="{Binding IsReadOnly, Converter={StaticResource InverseBooleanConverter}, Mode=OneWay}"
                                                                IsReadOnly="{Binding IsReadOnly, Mode=OneWay}"
                                                                Margin="0,0,5,0"
                                                                Minimum="{Binding Minimum.X}"
                                                                StringFormat="{Binding StringFormat}"
                                                                ToolTip="{l:Loc X}"
                                                                Value="{Binding Variant.X, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                            <local:DoubleUpDown 
                                                                Grid.Column="1"
                                                                Grid.Row="1"
                                                                CanUpDown="{Binding IsReadOnly, Converter={StaticResource InverseBooleanConverter}, Mode=OneWay}"
                                                                IsReadOnly="{Binding IsReadOnly, Mode=OneWay}"
                                                                Minimum="{Binding Minimum.Y}"
                                                                StringFormat="{Binding StringFormat}"
                                                                ToolTip="{l:Loc Y}"
                                                                Value="{Binding Variant.Y, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                        </Grid>
                                                    </DataTemplate>
                                                    <DataTemplate x:Key="{x:Type System.Windows.Media:RadialGradientBrush}">
                                                        <!--
                                                        <local:GradientChip 
                                                            Height="25"
                                                            Value="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                            Width="Auto"/>
                                                        -->
                                                    </DataTemplate>
                                                    <DataTemplate x:Key="{x:Type System.Windows:Size}">
                                                        <Grid>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="*"/>
                                                                <ColumnDefinition Width="Auto"/>
                                                                <ColumnDefinition Width="*"/>
                                                            </Grid.ColumnDefinitions>

                                                            <local:DoubleUpDown
                                                                    x:Name="PART_Width"
                                                                    CanUpDown="{Binding IsReadOnly, Converter={StaticResource InverseBooleanConverter}, Mode=OneWay}"
                                                                    IsReadOnly="{Binding IsReadOnly, Mode=OneWay}"
                                                                    Minimum="0"
                                                                    StringFormat="{Binding StringFormat}"
                                                                    ToolTip="{l:Loc Width}"
                                                                    Value="{Binding Variant.Width, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                            <local:MaskedToggleButton
                                                                    Grid.Column="1"
                                                                    CheckedToolTip="{l:Loc Imagin.Common:Main:Unbind}"
                                                                    Padding="7,0"
                                                                    Source="pack://application:,,,/Imagin.Common.WPF;component/Images/LinkHorizontal.png"
                                                                    ToolTip="{l:Loc Imagin.Common:Main:Bind}"/>
                                                            <local:DoubleUpDown
                                                                    Grid.Column="2"
                                                                    x:Name="PART_Height"
                                                                    CanUpDown="{Binding IsReadOnly, Converter={StaticResource InverseBooleanConverter}, Mode=OneWay}"
                                                                    IsReadOnly="{Binding IsReadOnly, Mode=OneWay}"
                                                                    Minimum="0"
                                                                    StringFormat="{Binding StringFormat}"
                                                                    ToolTip="{l:Loc Height}"
                                                                    Value="{Binding Variant.Height, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                        </Grid>
                                                    </DataTemplate>
                                                    <DataTemplate x:Key="{x:Type System.Windows.Media:SolidColorBrush}">
                                                        <!--
                                                        <DataTemplate.Resources>
                                                            <Converters:SolidColorBrushToHexConverter x:Key="SolidColorBrushToHexConverter"/>
                                                        </DataTemplate.Resources>
                                                        <Grid IsEnabled="{Binding IsReadOnly, Converter={StaticResource InverseBooleanConverter}, Mode=OneWay}">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="Auto"/>
                                                                <ColumnDefinition Width="*"/>
                                                            </Grid.ColumnDefinitions>
                                                            <local:ColorChip
                                                                Value="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                                Width="25" 
                                                                Height="25" 
                                                                Margin="0,0,5,0"/>
                                                            <local:HexBox
                                                                    Grid.Column="1"  
                                                                    IsReadOnly="{Binding IsReadOnly, Mode=OneWay}"
                                                                    MaxLength="8"
                                                                    Text="{Binding Value, Mode=TwoWay, Converter={StaticResource SolidColorBrushToHexConverter}, UpdateSourceTrigger=LostFocus}"/>
                                                        </Grid>
                                                        -->
                                                    </DataTemplate>
                                                    <DataTemplate x:Key="{x:Type System:Single}">
                                                        <local:FloatUpDown 
                                                                HorizontalAlignment="Stretch"
                                                                IsReadOnly="{Binding IsReadOnly, Mode=OneWay}"
                                                                CanUpDown="{Binding IsReadOnly, Converter={StaticResource InverseBooleanConverter}, Mode=OneWay}"
                                                                Maximum="{Binding Maximum}"
                                                                Minimum="{Binding Minimum}"
                                                                StringFormat="{Binding StringFormat}"
                                                                Value="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                    </DataTemplate>
                                                    <DataTemplate x:Key="{x:Type System:String}">
                                                        <ContentControl 
                                                                x:Name="PART_Content"
                                                                Content="{Binding Mode=OneWay}">
                                                            <ContentControl.ContentTemplate>
                                                                <DataTemplate>
                                                                    <local:TextBox 
                                                                            HorizontalAlignment="Stretch"
                                                                            IsClearEnabled="True"
                                                                            IsReadOnly="{Binding IsReadOnly, Mode=OneWay}" 
                                                                            Text="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                                </DataTemplate>
                                                            </ContentControl.ContentTemplate>
                                                        </ContentControl>
                                                        <DataTemplate.Triggers>
                                                            <DataTrigger Binding="{Binding Format, UpdateSourceTrigger=PropertyChanged}" Value="FilePath">
                                                                <Setter TargetName="PART_Content" Property="ContentTemplate">
                                                                    <Setter.Value>
                                                                        <DataTemplate>
                                                                            <local:FileBox  
                                                                                    BrowseMode="OpenFile"
                                                                                    CanBrowse="{Binding IsReadOnly, Converter={StaticResource InverseBooleanConverter}, Mode=OneWay}"
                                                                                    HorizontalAlignment="Stretch"
                                                                                    IsClearEnabled="True"
                                                                                    IsReadOnly="{Binding IsReadOnly, Mode=OneWay}"
                                                                                    Text="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                                        </DataTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Format, UpdateSourceTrigger=PropertyChanged}" Value="FolderPath">
                                                                <Setter TargetName="PART_Content" Property="ContentTemplate">
                                                                    <Setter.Value>
                                                                        <DataTemplate>
                                                                            <local:FileBox  
                                                                                    BrowseMode="OpenFolder"
                                                                                    CanBrowse="{Binding IsReadOnly, Converter={StaticResource InverseBooleanConverter}, Mode=OneWay}"
                                                                                    HorizontalAlignment="Stretch"
                                                                                    IsClearEnabled="True"
                                                                                    IsReadOnly="{Binding IsReadOnly, Mode=OneWay}"
                                                                                    Text="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                                        </DataTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Format, UpdateSourceTrigger=PropertyChanged}" Value="Multiline">
                                                                <Setter TargetName="PART_Content" Property="ContentTemplate">
                                                                    <Setter.Value>
                                                                        <DataTemplate>
                                                                            <local:TextBox 
                                                                                    AcceptsReturn="True"
                                                                                    Height="Auto"
                                                                                    HorizontalAlignment="Stretch"
                                                                                    IsReadOnly="{Binding IsReadOnly, Mode=OneWay}" 
                                                                                    Padding="5,7"
                                                                                    Text="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                                                    TextBlock.LineStackingStrategy="BlockLineHeight"
                                                                                    TextBlock.LineHeight="15"
                                                                                    VerticalContentAlignment="Top"
                                                                                    TextWrapping="Wrap"/>
                                                                        </DataTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Format, UpdateSourceTrigger=PropertyChanged}" Value="Password">
                                                                <Setter TargetName="PART_Content" Property="ContentTemplate">
                                                                    <Setter.Value>
                                                                        <DataTemplate>
                                                                            <local:TextBox 
                                                                                    IsCharacterMaskingEnabled="True"
                                                                                    IsClearEnabled="True"
                                                                                    IsReadOnly="{Binding IsReadOnly, Mode=OneWay}"
                                                                                    ShowToggleButton="True"
                                                                                    Text="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                                                    HorizontalAlignment="Stretch"/>
                                                                        </DataTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Format, UpdateSourceTrigger=PropertyChanged}" Value="Tokens">
                                                                <Setter TargetName="PART_Content" Property="ContentTemplate">
                                                                    <Setter.Value>
                                                                        <DataTemplate>
                                                                            <local:TokenView 
                                                                                    IsReadOnly="{Binding IsReadOnly, Mode=OneWay}"
                                                                                    HorizontalAlignment="Stretch"
                                                                                    TokensSource="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                                                    TokenStyle="{Binding Data.TokenStyle, Source={StaticResource BindingProxy}}">
                                                                            </local:TokenView>
                                                                        </DataTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </DataTrigger>
                                                        </DataTemplate.Triggers>
                                                    </DataTemplate>
                                                    <DataTemplate x:Key="{x:Type System:UInt16}">
                                                        <local:UInt16UpDown 
                                                                HorizontalAlignment="Stretch"
                                                                IsReadOnly="{Binding IsReadOnly, Mode=OneWay}"
                                                                CanUpDown="{Binding IsReadOnly, Converter={StaticResource InverseBooleanConverter}, Mode=OneWay}"
                                                                Maximum="{Binding Maximum}"
                                                                Minimum="{Binding Minimum}"
                                                                StringFormat="{Binding StringFormat}"
                                                                Value="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                    </DataTemplate>
                                                    <DataTemplate x:Key="{x:Type System:UInt32}">
                                                        <local:UInt32UpDown 
                                                                HorizontalAlignment="Stretch"
                                                                IsReadOnly="{Binding IsReadOnly, Mode=OneWay}"
                                                                CanUpDown="{Binding IsReadOnly, Converter={StaticResource InverseBooleanConverter}, Mode=OneWay}"
                                                                Maximum="{Binding Maximum}"
                                                                Minimum="{Binding Minimum}"
                                                                StringFormat="{Binding StringFormat}"
                                                                Value="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                    </DataTemplate>
                                                    <DataTemplate x:Key="{x:Type System:UInt64}">
                                                        <ContentControl x:Name="PART_Content">
                                                            <local:UInt64UpDown 
                                                                    HorizontalAlignment="Stretch"
                                                                    IsReadOnly="{Binding IsReadOnly, Mode=OneWay}"
                                                                    CanUpDown="{Binding IsReadOnly, Converter={StaticResource InverseBooleanConverter}, Mode=OneWay}"
                                                                    Maximum="{Binding Maximum}"
                                                                    Minimum="{Binding Minimum}"
                                                                    StringFormat="{Binding StringFormat}"
                                                                    Value="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                        </ContentControl>
                                                        <DataTemplate.Triggers>
                                                            <DataTrigger Binding="{Binding Format }" Value="FileSize">
                                                                <Setter TargetName="PART_Content" Property="Content">
                                                                    <Setter.Value>
                                                                        <TextBlock Margin="0,10">
                                                                            <TextBlock.Text>
                                                                                <MultiBinding Converter="{StaticResource FileSizeMultiValueConverter}">
                                                                                    <Binding Path="Value" Mode="OneWay"/>
                                                                                    <Binding Path="Data.FileSizeFormat" Source="{StaticResource BindingProxy}"/>
                                                                                </MultiBinding>
                                                                            </TextBlock.Text>
                                                                        </TextBlock>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </DataTrigger>
                                                        </DataTemplate.Triggers>
                                                    </DataTemplate>
                                                    <DataTemplate x:Key="{x:Type System.2:Uri}">
                                                        <local:UriBox 
                                                                HorizontalAlignment="Stretch"
                                                                IsReadOnly="{Binding IsReadOnly, Mode=OneWay}" 
                                                                Value="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                    </DataTemplate>
                                                    <DataTemplate x:Key="{x:Type System:Version}">
                                                        <local:VersionBox
                                                                HorizontalAlignment="Stretch"
                                                                IsEnabled="{Binding IsReadOnly, Converter={StaticResource InverseBooleanConverter}, Mode=OneWay}"
                                                                Value="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                    </DataTemplate>
                                                </ResourceDictionary>
                                            </local:PropertyTemplateSelector.Resources>
                                        </local:PropertyTemplateSelector>
                                    </ContentControl.ContentTemplateSelector>
                                </ContentControl>
                            </DataTemplate>

                            <GroupStyle x:Key="Style.Group">
                                <GroupStyle.ContainerStyle>
                                    <Style TargetType="GroupItem">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type GroupItem}">
                                                    <Expander 
                                                        IsExpanded="{Binding Data.GroupVisibility, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay, Source={StaticResource BindingProxy}}" 
                                                        HorizontalAlignment="Stretch">
                                                        <Expander.Header>
                                                            <Grid>
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="Auto"/>
                                                                    <ColumnDefinition Width="*"/>
                                                                </Grid.ColumnDefinitions>
                                                                <TextBlock FontSize="15">
                                                            <Run Text="{Binding Name, Mode=OneWay}" 
                                                                Foreground="{DynamicResource Brush.Link}"/>
                                                            <Run Text="{Binding ItemCount, Mode=OneWay, StringFormat= ({0})}"/>
                                                                </TextBlock>
                                                                <local:Line
                                                            Grid.Column="1"
                                                            Margin="5,0,0,0"
                                                            Orientation="Horizontal"/>
                                                            </Grid>
                                                        </Expander.Header>
                                                        <ItemsPresenter/>
                                                    </Expander>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </GroupStyle.ContainerStyle>
                                <GroupStyle.Panel>
                                    <ItemsPanelTemplate>
                                        <DataGridRowsPresenter/>
                                    </ItemsPanelTemplate>
                                </GroupStyle.Panel>
                            </GroupStyle>
                        </Border.Resources>
                        <Grid DataContext="{Binding Data, Source={StaticResource BindingProxy}}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="30"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <!-- ////////////////////////////////// [Header] -->
                            <Border 
                                Style="{DynamicResource Style.Border.Bottom}"
                                Visibility="{Binding HeaderVisibility, Mode=OneWay}">
                                <Grid 
                                    IsEnabled="{Binding Source, Converter={StaticResource NullToBooleanConverter}}"
                                    Margin="0,0,5,0"
                                    Linq:PanelExtensions.Spacing="0,0,10,0"
                                    Linq:PanelExtensions.TrimLast="True">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>

                                    <!-- Custom Buttons -->
                                    <ItemsControl
                                        ItemsSource="{Binding HeaderButtons}"
                                        VerticalAlignment="Center">
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <ContentPresenter Content="{Binding Mode=OneWay}"/>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>

                                    <!-- Default Buttons -->

                                    <local:MaskedButton
                                        Grid.Column="1"
                                        Command="{Binding RewindNestCommand}"
                                        Source="pack://application:,,,/Imagin.Common.WPF;component/Images/ArrowLeftRound.png"
                                        ToolTip="{l:Loc Imagin.Common.WPF:Main:Back}"
                                        VerticalAlignment="Center"
                                        Visibility="{Binding IsEnabled, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay, RelativeSource={RelativeSource Self}, UpdateSourceTrigger=PropertyChanged}"/>
                                    <local:MaskedDropDownButton
                                        Grid.Column="2"
                                        Source="pack://application:,,,/Imagin.Common.WPF;component/Images/Category.png"
                                        ToolTip="{l:Loc Imagin.Common.WPF:Main:Group}"
                                        VerticalAlignment="Center">
                                        <local:MaskedDropDownButton.DropDown>
                                            <ContextMenu DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
                                                <ContextMenu.ItemsSource>
                                                    <CompositeCollection>
                                                        <CollectionContainer Collection="{Markup:Enumerate local:PropertyGridGroupName}"/>
                                                    </CompositeCollection>
                                                </ContextMenu.ItemsSource>
                                                <ContextMenu.Resources>
                                                    <Style TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}">
                                                        <Setter Property="Command" Value="{Binding Data.GroupCommand, Source={StaticResource BindingProxy}}"/>
                                                        <Setter Property="CommandParameter" Value="{Binding Mode=OneWay}"/>
                                                        <Setter Property="StaysOpenOnClick" Value="True"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Converter={StaticResource ObjectToTypeConverter}}" Value="{x:Type local:PropertyGridGroupName}">
                                                                <Setter Property="IsChecked">
                                                                    <Setter.Value>
                                                                        <MultiBinding Converter="{StaticResource ValueEqualsParameterMultiValueConverter}" Mode="OneWay">
                                                                            <Binding Path="Data.GroupName" Source="{StaticResource BindingProxy}"/>
                                                                            <Binding Path="."/>
                                                                        </MultiBinding>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </ContextMenu.Resources>
                                            </ContextMenu>
                                        </local:MaskedDropDownButton.DropDown>
                                    </local:MaskedDropDownButton>
                                    <local:MaskedDropDownButton
                                        Grid.Column="3"
                                        Source="pack://application:,,,/Imagin.Common.WPF;component/Images/Sort.png"
                                        ToolTip="{l:Loc Imagin.Common.WPF:Main:Sort}"
                                        VerticalAlignment="Center">
                                        <local:MaskedDropDownButton.DropDown>
                                            <ContextMenu DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
                                                <ContextMenu.ItemsSource>
                                                    <CompositeCollection>
                                                        <CollectionContainer Collection="{Markup:Enumerate local:PropertyGridSortName}"/>
                                                        <Separator/>
                                                        <CollectionContainer Collection="{Markup:Enumerate System.ComponentModel:ListSortDirection}"/>
                                                    </CompositeCollection>
                                                </ContextMenu.ItemsSource>
                                                <ContextMenu.Resources>
                                                    <Style TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}">
                                                        <Setter Property="Command" Value="{Binding Data.SortCommand, Source={StaticResource BindingProxy}}"/>
                                                        <Setter Property="CommandParameter" Value="{Binding Mode=OneWay}"/>
                                                        <Setter Property="StaysOpenOnClick" Value="True"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Converter={StaticResource ObjectToTypeConverter}}" Value="{x:Type local:PropertyGridSortName}">
                                                                <Setter Property="IsChecked">
                                                                    <Setter.Value>
                                                                        <MultiBinding Converter="{StaticResource ValueEqualsParameterMultiValueConverter}" Mode="OneWay">
                                                                            <Binding Path="Data.SortName" Source="{StaticResource BindingProxy}"/>
                                                                            <Binding Path="."/>
                                                                        </MultiBinding>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Converter={StaticResource ObjectToTypeConverter}}" Value="{x:Type System.ComponentModel:ListSortDirection}">
                                                                <Setter Property="IsChecked">
                                                                    <Setter.Value>
                                                                        <MultiBinding Converter="{StaticResource ValueEqualsParameterMultiValueConverter}" Mode="OneWay">
                                                                            <Binding Path="Data.SortDirection" Source="{StaticResource BindingProxy}"/>
                                                                            <Binding Path="."/>
                                                                        </MultiBinding>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </ContextMenu.Resources>
                                                <!--
                                                <MenuItem 
                                                    Header="{l:Loc Imagin.Common.WPF:Main:Name}" 
                                                    IsCheckable="True" 
                                                    IsChecked="{Binding SortByName, UpdateSourceTrigger=PropertyChanged}" 
                                                    Linq:MenuItemExtensions.GroupName="SortName"
                                                    StaysOpenOnClick="True"/>
                                                <MenuItem 
                                                    Header="{l:Loc Imagin.Common.WPF:Main:Type}" 
                                                    IsCheckable="True" 
                                                    IsChecked="{Binding SortByType, UpdateSourceTrigger=PropertyChanged}"
                                                    Linq:MenuItemExtensions.GroupName="SortName"
                                                    StaysOpenOnClick="True"/>
                                                <Separator/>
                                                <MenuItem 
                                                    Header="{l:Loc Imagin.Common.WPF:Main:Ascending}" 
                                                    IsCheckable="True" 
                                                    IsChecked="{Binding IsSortAscending, UpdateSourceTrigger=PropertyChanged}" 
                                                    Linq:MenuItemExtensions.GroupName="SortDirection"
                                                    StaysOpenOnClick="True"/>
                                                <MenuItem 
                                                    Header="{l:Loc Imagin.Common.WPF:Main:Descending}"
                                                    IsCheckable="True" 
                                                    IsChecked="{Binding IsSortDescending, UpdateSourceTrigger=PropertyChanged}" 
                                                    Linq:MenuItemExtensions.GroupName="SortDirection"
                                                    StaysOpenOnClick="True"/>
                                                -->
                                            </ContextMenu>
                                        </local:MaskedDropDownButton.DropDown>
                                    </local:MaskedDropDownButton>

                                    <!-- Search -->
                                    <local:MaskedImage
                                        Grid.Column="4"
                                        Source="pack://application:,,,/Imagin.Common.WPF;component/Images/Search.png"/>
                                    <local:TextBox
                                        Grid.Column="5"
                                        Background="Transparent"
                                        BorderThickness="0"
                                        IsClearEnabled="True"
                                        Padding="0"
                                        Placeholder="{l:Loc Imagin.Common.WPF:Main:Search}"
                                        Text="{Binding SearchQuery, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        ToolTip="{l:Loc Imagin.Common.WPF:Main:Search}"/>

                                    <!-- Options (the following commands are optional) -->
                                    <!--
                                    <local:MaskedDropDownButton
                                        Grid.Column="6"
                                        Padding="5,0"
                                        Source="pack://application:,,,/Imagin.Common.WPF;component/Images/ArrowDown.png"
                                        ToolTip="{l:Loc Imagin.Common.WPF:Main:Options}"
                                        VerticalAlignment="Stretch"
                                        VerticalContentAlignment="Center">
                                        <local:MaskedDropDownButton.DropDown>
                                            <ContextMenu DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
                                                <MenuItem 
                                                    Header="{l:Loc Imagin.Common.WPF:Main:CollapseGroups}" 
                                                    IsCheckable="True"
                                                    IsChecked="{Binding CollapseGroups}"
                                                    StaysOpenOnClick="True"/>
                                                <Separator/>
                                                <MenuItem 
                                                    Header="{l:Loc Imagin.Common.WPF:Main:Disconnect}" 
                                                    Command="{Binding DisconnectSourceCommand}"/>
                                                <MenuItem 
                                                    Header="{l:Loc Imagin.Common.WPF:Main:Reset}" 
                                                    Command="{Binding ResetSourceCommand}"/>
                                            </ContextMenu>
                                        </local:MaskedDropDownButton.DropDown>
                                    </local:MaskedDropDownButton>
                                    -->
                                </Grid>
                            </Border>

                            <!-- ////////////////////////////////// [Body] -->
                            <Grid
                                Grid.Row="1">
                                <!-- ////////////////////////////// [Loader] -->
                                <ContentControl
                                    ContentTemplate="{Binding LoaderTemplate}"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Visibility="{Binding IsLoading, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                <!-- ////////////////////////////// [Content] -->
                                <Grid
                                    Visibility="{Binding IsLoading, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=Inverted}">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>

                                    <!-- ////////////////////////// [Type] -->
                                    <ContentControl
                                        x:Name="PART_Type"
                                        Content="{Binding Source}"
                                        ContentStringFormat="{Binding TypeStringFormat}"
                                        ContentTemplate="{Binding TypeTemplate}"
                                        ContentTemplateSelector="{Binding TypeTemplateSelector}"
                                        Margin="10,5"/>

                                    <!-- ////////////////////////// [Featured] -->
                                    <Grid 
                                        Grid.Row="1"
                                        Margin="10,5"
                                        Visibility="{Binding Properties.Featured, Converter={StaticResource NullToVisibilityConverter}, Mode=OneWay}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>

                                        <local:LocalizedTextBlock
                                            Margin="0,0,10,0" 
                                            Text="{Binding Properties.Featured.DisplayName, Mode=OneWay}"
                                            VerticalAlignment="Center"/>
                                        <ContentControl
                                            Grid.Column="1"
                                            Content="{Binding Properties.Featured, Mode=OneWay}"
                                            ContentTemplate="{StaticResource DataTemplate.Property.Value}"/>
                                    </Grid>
                                    
                                    <!-- ////////////////////////// [DataGrid] -->
                                    <ScrollViewer 
                                        Grid.Row="2"
                                        x:Name="PART_ScrollViewer" 
                                        Panel.ZIndex="1"
                                        Focusable="False"
                                        IsEnabled="{Binding IsSourceEnabled}"
                                        Style="{StaticResource Style.DataGrid.ScrollViewer}">
                                        <ItemsPresenter 
                                            Margin="{TemplateBinding Padding}"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </ScrollViewer>
                                </Grid>
                            </Grid>

                            <!-- ////////////////////////////////// [Footer] -->
                            <GridSplitter
                                Grid.Row="2"
                                x:Name="PART_Splitter"
                                ResizeDirection="Rows"
                                Style="{Binding SplitterStyle}"/>
                            <ContentControl 
                                Grid.Row="3"
                                Content="{Binding Properties.ActiveProperty}"
                                ContentStringFormat="{Binding DescriptionStringFormat}"
                                ContentTemplate="{Binding DescriptionTemplate}"
                                ContentTemplateSelector="{Binding DescriptionTemplateSelector}"
                                Visibility="{Binding DescriptionVisibility}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Source, Converter={StaticResource NullToBooleanConverter}}" Value="False">
                            <Setter TargetName="PART_Type" Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Source, Converter={StaticResource NullToBooleanConverter}}" Value="True">
                            <Setter TargetName="PART_Type" Property="Visibility" Value="{Binding TypeVisibility, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="TypeTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock 
                        FontWeight="Bold"
                        Text="{Binding Mode=OneWay, Converter={StaticResource ObjectToTypeConverter}}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VirtualizingPanel.IsContainerVirtualizable" Value="True"/>
        <Setter Property="VirtualizingPanel.IsVirtualizing" Value="True"/>
        <Setter Property="VirtualizingPanel.VirtualizationMode" Value="Recycling"/>
    </Style>

    <Style x:Key="{x:Type local:PropertyGrid}" 
        TargetType="{x:Type local:PropertyGrid}" 
        BasedOn="{StaticResource {x:Type local:PropertyGridBase}}"/>

    <Style x:Key="{x:Type local:ResourceDictionaryEditor}" 
        TargetType="{x:Type local:ResourceDictionaryEditor}" 
        BasedOn="{StaticResource {x:Type local:PropertyGridBase}}"/>
</ResourceDictionary>