<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sf="http://schemas.syncfusion.com/wpf"
                    xmlns:sfx="clr-namespace:Syncfusion.UI.Xaml.Grid;assembly=Syncfusion.SfGrid.WPF"
                    xmlns:tools="clr-namespace:Qhta.SF.WPF.Tools"
                    xmlns:converters="clr-namespace:Qhta.WPF.Converters;assembly=Qhta.WPF.Converters"
                    xmlns:mvvm="clr-namespace:Qhta.MVVM;assembly=Qhta.MVVM"
                    xmlns:sys="clr-namespace:System.Globalization;assembly=System.Runtime"
                    x:Class="Qhta.SF.WPF.Tools.SfDataGridTools">
  <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
  <converters:NegateValueConverter x:Key="NegateValueConverter"/>
  <tools:GridColumnMappingConverter x:Key="GridColumnMappingConverter"/>
  <tools:LongTextColumnExpanderVisibilityConverter x:Key="LongTextColumnExpanderVisibilityConverter"/>

  <Style x:Key="{x:Type tools:RowResizer}" Style.TargetType="{x:Type tools:RowResizer}" >
    <Setter Property="Control.Background" Value="#01000000" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate ControlTemplate.TargetType="{x:Type tools:RowResizer}">
          <Border BorderBrush="{TemplateBinding Control.BorderBrush}" 
                  BorderThickness="{TemplateBinding Control.BorderThickness}" 
                  Background="{TemplateBinding Control.Background}"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="{x:Type sf:GridRowHeaderCell}" x:Key="ResizedGridRowHeaderCellStyle" >
    <Setter Property="Background" Value="Silver" />
    <Setter Property="BorderBrush" Value="#FF808080" />
    <Setter Property="BorderThickness" Value="0,0,1,1" />
    <Setter Property="Foreground" Value="#FF303030" />
    <Setter Property="Padding" Value="0,0,0,0" />
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="RowErrorMessage" Value="{Binding ErrorMessage}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <Border Name="PART_RowHeaderCellBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="BorderStates">
                <VisualState x:Name="NormalCell" />
                <VisualState x:Name="TableSummaryCell">
                  <Storyboard BeginTime="0">
                    <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="PART_RowHeaderCellBorder" Storyboard.TargetProperty="(Border.BorderThickness)">
                      <EasingThicknessKeyFrame KeyTime="0" Value="0" />
                    </ThicknessAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Fixed_NormalCell">
                  <Storyboard BeginTime="0">
                    <ThicknessAnimationUsingKeyFrames BeginTime="0" Duration="1" Storyboard.TargetName="PART_RowHeaderCellBorder" Storyboard.TargetProperty="BorderThickness">
                      <EasingThicknessKeyFrame KeyTime="0" Value="0, 1, 1, 1" />
                    </ThicknessAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="IndicationStates">
                <VisualState x:Name="Normal">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_RowHeaderIndicatorGrid" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <ObjectKeyFrame.Value>
                          <Visibility>
                            Collapsed
                          </Visibility>
                        </ObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Error_CurrentRow">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_RowHeaderIndicator" Storyboard.TargetProperty="Data">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <ObjectKeyFrame.Value>
                          <Geometry>
                            F1 M 397.333,276.552L 395.445,274.666L 392,278.112L 388.555,274.666L 386.667,276.552L 390.113,279.999L 386.667,283.445L 388.555,285.334L 392,281.887L 395.445,285.334L 397.333,283.445L 393.887,279.999L 397.333,276.552 Z
                          </Geometry>
                        </ObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="PART_RowHeaderIndicator" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                      <EasingColorKeyFrame KeyTime="0" Value="#FFFF3D2E" />
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Error">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_RowHeaderIndicator" Storyboard.TargetProperty="Data">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <ObjectKeyFrame.Value>
                          <Geometry>
                            F1 M 397.333,276.552L 395.445,274.666L 392,278.112L 388.555,274.666L 386.667,276.552L 390.113,279.999L 386.667,283.445L 388.555,285.334L 392,281.887L 395.445,285.334L 397.333,283.445L 393.887,279.999L 397.333,276.552 Z
                          </Geometry>
                        </ObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="PART_RowHeaderIndicator" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                      <EasingColorKeyFrame KeyTime="0" Value="#FFEC777C" />
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="CurrentRow">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_RowHeaderIndicator" Storyboard.TargetProperty="Data">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <ObjectKeyFrame.Value>
                          <Geometry>
                            F1 M 390.741,274.667L 387.928,274.667L 393.048,280L 387.927,285.333L 390.741,285.333L 396.073,280L 390.741,274.667 Z
                          </Geometry>
                        </ObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ToolTip" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <ObjectKeyFrame.Value>
                          <Visibility>
                            Collapsed
                          </Visibility>
                        </ObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="EditingRow">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_RowHeaderIndicator" Storyboard.TargetProperty="Data">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <ObjectKeyFrame.Value>
                          <Geometry>
                            M6.8007798,1.7332839 L8.97791,3.9143763 2.8868401,10.034073 0,10.666874 0.70837402,7.8491302 z M9.1967516,0.00016105175 C9.5903473,-0.0053596497 9.9693098,0.13107061 10.251301,0.41431141 10.856801,1.0224026 10.794301,2.067961 10.110801,2.7515601 L7.9219999,0.5588423 C8.2858057,0.19500291 8.7506762,0.0064178705 9.1967516,0.00016105175z
                          </Geometry>
                        </ObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ToolTip" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <ObjectKeyFrame.Value>
                          <Visibility>
                            Collapsed
                          </Visibility>
                        </ObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="AddNewRow">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_RowHeaderIndicator" Storyboard.TargetProperty="Data">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <ObjectKeyFrame.Value>
                          <Geometry>
                            F1 M 397.333,278.825L 393.176,278.825L 393.176,274.667L 390.824,274.667L 390.824,278.825L 386.667,278.825L 386.667,281.175L 390.824,281.175L 390.824,285.333L 393.176,285.333L 393.176,281.175L 397.333,281.175L 397.333,278.825 Z
                          </Geometry>
                        </ObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ToolTip" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <ObjectKeyFrame.Value>
                          <Visibility>
                            Collapsed
                          </Visibility>
                        </ObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="FilterRow">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_RowHeaderIndicator" Storyboard.TargetProperty="Data">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <ObjectKeyFrame.Value>
                          <Geometry>
                            F1M12,6L12,7L13,7L13,8L14,8L14,9L15,9L15,13L17,14L17,9L18,9L18,8L19,8L19,7L20,7L20,6z
                          </Geometry>
                        </ObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ToolTip" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <ObjectKeyFrame.Value>
                          <Visibility>
                            Collapsed
                          </Visibility>
                        </ObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="PART_RowHeaderIndicatorGrid" Panel.Background="#00FFFFFF">
              <Path x:Name="PART_RowHeaderIndicator" 
                    Width="8.146" 
                    Height="8.146" 
                    HorizontalAlignment="Center" 
                    VerticalAlignment="Center" 
                    Fill="#FF303030" 
                    Stretch="Fill" />
              <tools:RowResizer Visibility="{Binding Path=(tools:SfDataGridBehavior.AllowRowResizing), 
                         RelativeSource={RelativeSource AncestorType={x:Type sf:SfDataGrid}}, 
                         Converter={StaticResource BoolToVisibilityConverter}}" />
              <ToolTipService.ToolTip>
                <ToolTip Name="PART_ToolTip" Background="#FFDB000C" Placement="Left" 
                           PlacementRectangle="20,0,0,0" Tag="{TemplateBinding sf:GridRowHeaderCell.RowErrorMessage}" 
                           Template="{DynamicResource ValidationToolTipTemplate}" Visibility="Collapsed"/>
              </ToolTipService.ToolTip>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type sf:GridRowHeaderCell}" BasedOn="{StaticResource ResizedGridRowHeaderCellStyle}" TargetType="{x:Type sf:GridRowHeaderCell}"/>

  <tools:SfDataGridColumnConverter x:Key="GridColumnConverter" />

  <Style TargetType="sf:GridRowHeaderIndentCell">
    <Setter Property="Background" Value="Silver" />
    <EventSetter Event="PreviewMouseDown" Handler="GridRowHeaderIndentCell_MouseLeftButtonDown" />
  </Style>

  <Style TargetType="sf:GridHeaderCellControl">
    <Setter Property="Foreground" Value="#FF404040" />
    <Setter Property="Background" Value="Silver" />
    <EventSetter Event="PreviewMouseDown" Handler="GridHeaderCellControl_MouseLeftButtonDown" />
    <EventSetter Event="PreviewMouseDown" Handler="GridHeaderCellControl_MouseRightButtonDown"  />  
  </Style>

  <Style TargetType="sf:GridHeaderCellControl" x:Key="SelectedColumnHeaderStyle">
    <Setter Property="Foreground" Value="#FF404040" />
    <Setter Property="Background" Value="#FFA0A0A0" />
    <EventSetter Event="PreviewMouseDown" Handler="GridHeaderCellControl_MouseLeftButtonDown" />
    <EventSetter Event="PreviewMouseDown" Handler="GridHeaderCellControl_MouseRightButtonDown"  />
  </Style>

  <Style TargetType="sfx:GridCell" x:Key="UnselectedGridCellStyle">
    <Setter Property="Background" Value="Transparent" />
  </Style>

  <Style TargetType="sfx:GridCell" x:Key="SelectedGridCellStyle">
    <Setter Property="Background" Value="Silver" />
  </Style>

  <DataTemplate x:Key="DataGridHeaderTooltipTemplate" />

  <Style TargetType="sf:SfDataGrid">
    <Setter Property="AllowDraggingColumns" Value="True" />
    <Setter Property="AllowEditing" Value="True" />
    <Setter Property="AllowFiltering" Value="True" />
    <Setter Property="AllowResizingColumns" Value="True" />
    <Setter Property="AllowSorting" Value="True" />
    <Setter Property="AllowTriStateSorting" Value="True" />
    <Setter Property="AllowDeleting" Value="True" />
    <Setter Property="ColumnSizer" Value="Auto" />
    <Setter Property="HeaderRowHeight" Value="26" />
    <Setter Property="AutoGenerateColumns" Value="False" />
    <Setter Property="GridValidationMode" Value="InEdit" />
    <Setter Property="EditTrigger" Value="OnTap" />
    <Setter Property="EnableDataVirtualization" Value="True" />
    <Setter Property="GridCopyOption" Value="CopyData,IncludeFormat" />
    <Setter Property="SelectionUnit" Value="Any" />
    <Setter Property="SelectionMode" Value="Extended" />
    <Setter Property="ShowRowHeader" Value="True" />
    <Setter Property="tools:SfDataGridBehavior.AllowColumnManagement" Value="True" />
    <EventSetter Event="Loaded" Handler="DataGrid_OnLoaded"/>
    <EventSetter Event="KeyDown" Handler="DataGrid_OnKeyDown"/>
  </Style>

  <DataTemplate x:Key="LongTextCellTemplate">
    <Grid>
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="Auto"/>
      </Grid.ColumnDefinitions>
      <TextBlock 
        x:Name="LongTextBlock"
        Padding="3"
        TextWrapping="Wrap">
        <TextBlock.Text>
          <MultiBinding Converter="{StaticResource GridColumnMappingConverter}">
            <Binding Path="DataContext" 
                     RelativeSource="{RelativeSource AncestorType={x:Type sfx:GridCell}}" />
            <Binding Path="ColumnBase.GridColumn.MappingName" 
                     RelativeSource="{RelativeSource AncestorType={x:Type sfx:GridCell}}" />
          </MultiBinding>
        </TextBlock.Text>
      </TextBlock>
      <Button 
        Grid.Column="1"
        x:Name="ShowPopupButton"
        Height="20"
        VerticalAlignment="Top"
        Background="Transparent"
        BorderThickness="0"
        BorderBrush="Transparent"
        Content="▼"
        Click="ShowPopupButton_Click">
        <Button.Visibility>
          <MultiBinding Converter="{StaticResource LongTextColumnExpanderVisibilityConverter}">
            <Binding Path="DataContext" 
                     RelativeSource="{RelativeSource AncestorType={x:Type sfx:GridCell}}" />
            <Binding Path="ColumnBase.GridColumn.MappingName" 
                     RelativeSource="{RelativeSource AncestorType={x:Type sfx:GridCell}}" />
            <Binding BindsDirectlyToSource="True" 
                     RelativeSource="{RelativeSource AncestorType={x:Type sfx:GridCell}}" />
          </MultiBinding>
        </Button.Visibility>
      </Button>
      <Popup Grid.Column="0" Grid.ColumnSpan="2" x:Name="LongTextPopup" Placement="Mouse" StaysOpen="false">
        <Border Background="LightGray" BorderBrush="Black" BorderThickness="1" Padding="3" >
          <Grid>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
          </Grid.ColumnDefinitions>
            <TextBlock 
            TextWrapping="Wrap">
              <TextBlock.Text>
                <MultiBinding Converter="{StaticResource GridColumnMappingConverter}">
                  <Binding Path="DataContext" 
                           RelativeSource="{RelativeSource AncestorType={x:Type sfx:GridCell}}" />
                  <Binding Path="ColumnBase.GridColumn.MappingName" 
                           RelativeSource="{RelativeSource AncestorType={x:Type sfx:GridCell}}" />
                </MultiBinding>
              </TextBlock.Text>
            </TextBlock>
          <Button 
            Grid.Column="1"
            x:Name="HidePopupButton"
            Height="20"
            VerticalAlignment="Top"
            Background="Transparent"
            BorderThickness="0"
            BorderBrush="Transparent"
            Content="▲"
            Click="HidePopupButton_Click">
            <Button.Visibility>
              <MultiBinding Converter="{StaticResource LongTextColumnExpanderVisibilityConverter}">
                <Binding Path="DataContext" 
                         RelativeSource="{RelativeSource AncestorType={x:Type sfx:GridCell}}" />
                <Binding Path="ColumnBase.GridColumn.MappingName" 
                         RelativeSource="{RelativeSource AncestorType={x:Type sfx:GridCell}}" />
                <Binding BindsDirectlyToSource="True" 
                         RelativeSource="{RelativeSource AncestorType={x:Type sfx:GridCell}}" />
              </MultiBinding>
            </Button.Visibility>
          </Button>

          </Grid>
        </Border>
      </Popup>
    </Grid>
  </DataTemplate>

  <DataTemplate x:Key="LongTextEditTemplate" DataType="{x:Type sfx:GridCell}">
    <Grid x:Name="EditedGrid">
      <TextBlock 
        Padding="0"
        TextWrapping="Wrap">
        <TextBlock.Text>
          <MultiBinding Converter="{StaticResource GridColumnMappingConverter}">
            <Binding Path="DataContext" 
                     RelativeSource="{RelativeSource AncestorType={x:Type sfx:GridCell}}" />
            <Binding Path="ColumnBase.GridColumn.MappingName" 
                     RelativeSource="{RelativeSource AncestorType={x:Type sfx:GridCell}}" />
          </MultiBinding>
        </TextBlock.Text>
      </TextBlock>
      <Popup 
         x:Name="LongTextEditPopup" 
         PlacementTarget="{Binding 
           RelativeSource={RelativeSource AncestorType={x:Type Grid}},
           BindsDirectlyToSource=true}"
         Placement = "Bottom"
         VerticalOffset="{Binding
           RelativeSource={RelativeSource AncestorType={x:Type Grid}},
           Path=ActualHeight,
           Converter = {StaticResource NegateValueConverter}}"
         Width="{Binding
           RelativeSource={RelativeSource AncestorType={x:Type Grid}},
           Path=ActualWidth}"
         IsOpen = "true"   
         StaysOpen="false"
         Opened="LongTextEditPopup_OnOpened">
        <Border Background="White" BorderBrush="Black" BorderThickness="1" Padding="3" >
          <TextBox 
            Padding="0"
            TextWrapping="Wrap"
            BorderBrush="Transparent"
            BorderThickness="0"
            AcceptsReturn="True"
            AcceptsTab="True"
            >
            <TextBox.Text>
              <MultiBinding Converter="{StaticResource GridColumnMappingConverter}" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                <Binding Path="DataContext" 
                         RelativeSource="{RelativeSource AncestorType={x:Type sfx:GridCell}}" />
                <Binding Path="ColumnBase.GridColumn.MappingName" 
                         RelativeSource="{RelativeSource AncestorType={x:Type sfx:GridCell}}" />
              </MultiBinding>
            </TextBox.Text>
          </TextBox>
        </Border>
      </Popup>
    </Grid>
  </DataTemplate>

  <Style TargetType="TextBox" >
    <Setter Property="IsUndoEnabled" Value="True"></Setter>
  </Style>

  <Style x:Key="cmbBoxStyle" Style.TargetType="{x:Type ComboBox}">
    <Setter Setter.Property="FrameworkElement.FocusVisualStyle">
      <Setter.Value>
        <Style>
          <Setter Setter.Property="Control.Template">
            <Setter.Value>
              <ControlTemplate>
                <Rectangle FrameworkElement.Margin="4,4,21,4" UIElement.SnapsToDevicePixels="True" Shape.Stroke="#FF000000" Shape.StrokeDashArray="1 2" Shape.StrokeThickness="1" />
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>
      </Setter.Value>
    </Setter>
    <Setter Setter.Property="Control.BorderBrush" Setter.Value="{DynamicResource MetroBorderBrush}" />
    <Setter Setter.Property="Control.Background" Setter.Value="{DynamicResource MetroPanelBackgroundBrush}" />
    <Setter Setter.Property="Control.Foreground" Setter.Value="{DynamicResource MetroForegroundBrush}" />
    <Setter Setter.Property="Control.BorderThickness" Setter.Value="1" />
    <Setter Setter.Property="ScrollViewer.HorizontalScrollBarVisibility" Setter.Value="Auto" />
    <Setter Setter.Property="ScrollViewer.VerticalScrollBarVisibility" Setter.Value="Auto" />
    <Setter Setter.Property="Control.Padding" Setter.Value="3,3,23,3" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate ControlTemplate.TargetType="{x:Type ComboBox}">
          <Grid>
            <ToggleButton ToggleButton.Name="ToggleButton" Grid.Column="2"
                          Control.Background="{TemplateBinding Control.Background}"
                          Control.BorderBrush="{TemplateBinding Control.BorderBrush}" ButtonBase.ClickMode="Press"
                          UIElement.Focusable="False"
                          ToggleButton.IsChecked="{Binding IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}">
              <FrameworkElement.Style>
                <Style Style.TargetType="{x:Type ToggleButton}">
                  <Setter Setter.Property="FrameworkElement.OverridesDefaultStyle" Setter.Value="True" />
                  <Setter Setter.Property="Control.IsTabStop" Setter.Value="False" />
                  <Setter Setter.Property="UIElement.Focusable" Setter.Value="False" />
                  <Setter Setter.Property="Control.BorderThickness" Setter.Value="1" />
                  <Setter Setter.Property="ButtonBase.ClickMode" Setter.Value="Press" />
                  <Setter Setter.Property="Control.Template">
                    <Setter.Value>
                      <ControlTemplate ControlTemplate.TargetType="{x:Type ToggleButton}">
                        <Border Border.Name="Chrome1" Border.Background="{TemplateBinding Control.Background}"
                                Border.BorderBrush="{TemplateBinding Control.BorderBrush}"
                                Border.BorderThickness="{TemplateBinding Control.BorderThickness}"
                                UIElement.SnapsToDevicePixels="True">
                          <Grid>
                            <Grid.ColumnDefinitions>
                              <ColumnDefinition ColumnDefinition.Width="*" />
                              <ColumnDefinition ColumnDefinition.Width="20"
                                                DefinitionBase.SharedSizeGroup="ComboBoxButton" />
                            </Grid.ColumnDefinitions>
                            <Path Path.Name="Arrow" Grid.Column="1" FrameworkElement.HorizontalAlignment="Center"
                                  FrameworkElement.VerticalAlignment="Center" Path.Data="M0,0L3.5,4 7,0z"
                                  Shape.Fill="{DynamicResource MetroForegroundBrush}" />
                          </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                          <!--<Trigger Trigger.Property="SkinStorage.EnableTouch" Trigger.Value="True">
                            <Setter Setter.TargetName="Arrow" Setter.Property="Path.Data" Setter.Value="M0,0L7,7 14,0z" />
                          </Trigger>-->
                          <Trigger Trigger.Property="ToggleButton.IsChecked" Trigger.Value="True">
                            <Setter Setter.TargetName="Chrome1" Setter.Property="Border.Background"
                                    Setter.Value="#FFFFFFFF" />
                            <Setter Setter.TargetName="Arrow"
                                    Setter.Value="{DynamicResource MetroHighlightedForegroundBrush}"
                                    Setter.Property="Shape.Fill" />
                          </Trigger>
                          <Trigger Trigger.SourceName="Chrome1" Trigger.Property="UIElement.IsMouseOver"
                                   Trigger.Value="True">
                            <Setter Setter.TargetName="Chrome1" Setter.Value="{DynamicResource MetroHoverBrush}"
                                    Setter.Property="Border.Background" />
                          </Trigger>
                          <Trigger Trigger.SourceName="Chrome1" Trigger.Property="UIElement.IsKeyboardFocusWithin"
                                   Trigger.Value="True">
                            <Setter Setter.TargetName="Chrome1" Setter.Property="Border.Background"
                                    Setter.Value="#FFFFFFFF" />
                          </Trigger>
                          <MultiTrigger>
                            <MultiTrigger.Conditions>
                              <Condition Condition.Property="ToggleButton.IsChecked" Condition.Value="True" />
                              <Condition Condition.Property="UIElement.IsMouseOver" Condition.Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Setter.TargetName="Chrome1" Setter.Property="Border.Background"
                                    Setter.Value="#FFFFFFFF" />
                            <Setter Setter.TargetName="Arrow"
                                    Setter.Value="{DynamicResource MetroHighlightedForegroundBrush}"
                                    Setter.Property="Shape.Fill" />
                          </MultiTrigger>
                          <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
                            <Setter Setter.Property="UIElement.Opacity" Setter.Value="0.5" />
                          </Trigger>
                        </ControlTemplate.Triggers>
                      </ControlTemplate>
                    </Setter.Value>
                  </Setter>
                </Style>
              </FrameworkElement.Style>
            </ToggleButton>
            <ContentPresenter ContentPresenter.Name="ContentSite" FrameworkElement.Margin="{TemplateBinding Control.Padding}" FrameworkElement.HorizontalAlignment="Left" FrameworkElement.VerticalAlignment="Center" ContentPresenter.Content="{TemplateBinding ComboBox.SelectionBoxItem}" ContentPresenter.ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}" UIElement.IsHitTestVisible="False" />
            <TextBox TextBox.Name="PART_EditableTextBox" FrameworkElement.Margin="3,3,23,3" FrameworkElement.HorizontalAlignment="Left" FrameworkElement.VerticalAlignment="Center" Control.Background="#00FFFFFF" UIElement.Focusable="True" TextBoxBase.IsReadOnly="{TemplateBinding ComboBox.IsReadOnly}" UIElement.Visibility="Hidden">
              <FrameworkElement.Style>
                <Style Style.TargetType="{x:Type TextBox}">
                  <Setter Setter.Property="FrameworkElement.OverridesDefaultStyle" Setter.Value="True" />
                  <Setter Setter.Property="UIElement.AllowDrop" Setter.Value="True" />
                  <Setter Setter.Property="FrameworkElement.MinWidth" Setter.Value="0" />
                  <Setter Setter.Property="FrameworkElement.MinHeight" Setter.Value="0" />
                  <Setter Setter.Property="FrameworkElement.FocusVisualStyle" Setter.Value="{x:Null}" />
                  <Setter Setter.Property="Control.Template">
                    <Setter.Value>
                      <ControlTemplate ControlTemplate.TargetType="{x:Type TextBox}">
                        <ScrollViewer ScrollViewer.Name="PART_ContentHost" Control.Background="#00FFFFFF" UIElement.Focusable="False" ScrollViewer.HorizontalScrollBarVisibility="Hidden" ScrollViewer.VerticalScrollBarVisibility="Hidden" />
                      </ControlTemplate>
                    </Setter.Value>
                  </Setter>
                </Style>
              </FrameworkElement.Style>
            </TextBox>
            <Popup Popup.Name="Popup" Popup.AllowsTransparency="True" UIElement.Focusable="False" Popup.IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}" Popup.Placement="Bottom" Popup.PopupAnimation="Slide">
              <Border Border.Name="DropDownBorder" Border.Background="{DynamicResource MetroPanelBackgroundBrush}" Border.BorderBrush="{DynamicResource MetroBorderBrush}" Border.BorderThickness="1">
                <Grid Grid.Name="DropDown" FrameworkElement.MinWidth="{TemplateBinding FrameworkElement.ActualWidth}" FrameworkElement.MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}" UIElement.SnapsToDevicePixels="True">
                  <Grid.RowDefinitions>
                    <RowDefinition RowDefinition.Height="*" />
                    <RowDefinition RowDefinition.Height="Auto" />
                  </Grid.RowDefinitions>
                  <ScrollViewer FrameworkElement.Margin="4,6" ScrollViewer.CanContentScroll="True" ScrollViewer.HorizontalScrollBarVisibility="Auto" UIElement.SnapsToDevicePixels="True" ScrollViewer.VerticalScrollBarVisibility="Auto">
                    <ItemsPresenter ItemsPresenter.Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" UIElement.SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                  </ScrollViewer>
                </Grid>
              </Border>
            </Popup>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="ItemsControl.HasItems" Trigger.Value="False">
              <Setter Setter.TargetName="DropDownBorder" Setter.Property="FrameworkElement.MinHeight" Setter.Value="95" />
            </Trigger>
            <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
              <Setter Setter.Value="{DynamicResource GrayTextBrush}" Setter.Property="Control.Foreground" />
            </Trigger>
            <Trigger Trigger.Property="ItemsControl.IsGrouping" Trigger.Value="True">
              <Setter Setter.Property="ScrollViewer.CanContentScroll" Setter.Value="False" />
            </Trigger>
            <Trigger Trigger.SourceName="Popup" Trigger.Property="Popup.AllowsTransparency" Trigger.Value="True">
              <Setter Setter.TargetName="DropDownBorder" Setter.Property="FrameworkElement.Margin" Setter.Value="0" />
            </Trigger>
            <Trigger Trigger.Property="ComboBox.IsEditable" Trigger.Value="True">
              <Setter Setter.Property="Control.IsTabStop" Setter.Value="False" />
              <Setter Setter.TargetName="PART_EditableTextBox" Setter.Property="UIElement.Visibility" Setter.Value="Visible" />
              <Setter Setter.TargetName="ContentSite" Setter.Property="UIElement.Visibility" Setter.Value="Hidden" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Trigger.Property="ComboBox.IsEditable" Trigger.Value="True">
        <Setter Setter.Property="Control.BorderThickness" Setter.Value="1" />
        <Setter Setter.Property="Control.BorderBrush" Setter.Value="{DynamicResource MetroBorderBrush}" />
        <Setter Setter.Property="Control.Background" Setter.Value="{DynamicResource MetroPanelBackgroundBrush}" />
        <Setter Setter.Property="Control.Foreground" Setter.Value="{DynamicResource MetroForegroundBrush}" />
        <Setter Setter.Property="Control.IsTabStop" Setter.Value="False" />
        <Setter Setter.Property="Control.Padding" Setter.Value="3" />
        <Setter Setter.Property="Control.Template">
          <Setter.Value>
            <ControlTemplate ControlTemplate.TargetType="{x:Type ComboBox}">
              <Grid>
                <ToggleButton ToggleButton.Name="ToggleButton" Grid.Column="2" Control.Background="{TemplateBinding Control.Background}" Control.BorderBrush="{TemplateBinding Control.BorderBrush}" ButtonBase.ClickMode="Press" UIElement.Focusable="False" ToggleButton.IsChecked="{Binding IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}">
                  <FrameworkElement.Style>
                    <Style Style.TargetType="{x:Type ToggleButton}">
                      <Setter Setter.Property="FrameworkElement.OverridesDefaultStyle" Setter.Value="True" />
                      <Setter Setter.Property="Control.IsTabStop" Setter.Value="False" />
                      <Setter Setter.Property="UIElement.Focusable" Setter.Value="False" />
                      <Setter Setter.Property="Control.BorderThickness" Setter.Value="1" />
                      <Setter Setter.Property="ButtonBase.ClickMode" Setter.Value="Press" />
                      <Setter Setter.Property="Control.Template">
                        <Setter.Value>
                          <ControlTemplate ControlTemplate.TargetType="{x:Type ToggleButton}">
                            <Border Border.Name="Chrome1" Border.Background="{TemplateBinding Control.Background}" Border.BorderBrush="{TemplateBinding Control.BorderBrush}" Border.BorderThickness="{TemplateBinding Control.BorderThickness}" UIElement.SnapsToDevicePixels="True">
                              <Grid>
                                <Grid.ColumnDefinitions>
                                  <ColumnDefinition ColumnDefinition.Width="*" />
                                  <ColumnDefinition ColumnDefinition.Width="20" DefinitionBase.SharedSizeGroup="ComboBoxButton" />
                                </Grid.ColumnDefinitions>
                                <Path Path.Name="Arrow" Grid.Column="1" FrameworkElement.HorizontalAlignment="Center" FrameworkElement.VerticalAlignment="Center" Path.Data="M0,0L3.5,4 7,0z" Shape.Fill="{DynamicResource MetroForegroundBrush}" />
                              </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                              <!--<Trigger Trigger.Property="SkinStorage.EnableTouch" Trigger.Value="True">
                                <Setter Setter.TargetName="Arrow" Setter.Property="Path.Data" Setter.Value="M0,0L7,7 14,0z" />
                              </Trigger>-->
                              <Trigger Trigger.Property="ToggleButton.IsChecked" Trigger.Value="True">
                                <Setter Setter.TargetName="Chrome1" Setter.Property="Border.Background" Setter.Value="#FFFFFFFF" />
                                <Setter Setter.TargetName="Arrow" Setter.Value="{DynamicResource MetroHighlightedForegroundBrush}" Setter.Property="Shape.Fill" />
                              </Trigger>
                              <Trigger Trigger.SourceName="Chrome1" Trigger.Property="UIElement.IsMouseOver" Trigger.Value="True">
                                <Setter Setter.TargetName="Chrome1" Setter.Value="{DynamicResource MetroHoverBrush}" Setter.Property="Border.Background" />
                              </Trigger>
                              <Trigger Trigger.SourceName="Chrome1" Trigger.Property="UIElement.IsKeyboardFocusWithin" Trigger.Value="True">
                                <Setter Setter.TargetName="Chrome1" Setter.Property="Border.Background" Setter.Value="#FFFFFFFF" />
                              </Trigger>
                              <MultiTrigger>
                                <MultiTrigger.Conditions>
                                  <Condition Condition.Property="ToggleButton.IsChecked" Condition.Value="True" />
                                  <Condition Condition.Property="UIElement.IsMouseOver" Condition.Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter Setter.TargetName="Chrome1" Setter.Property="Border.Background" Setter.Value="#FFFFFFFF" />
                                <Setter Setter.TargetName="Arrow" Setter.Value="{DynamicResource MetroHighlightedForegroundBrush}" Setter.Property="Shape.Fill" />
                              </MultiTrigger>
                              <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
                                <Setter Setter.Property="UIElement.Opacity" Setter.Value="0.5" />
                              </Trigger>
                            </ControlTemplate.Triggers>
                          </ControlTemplate>
                        </Setter.Value>
                      </Setter>
                    </Style>
                  </FrameworkElement.Style>
                </ToggleButton>
                <ContentPresenter ContentPresenter.Name="ContentSite" FrameworkElement.Margin="3,3,23,3" FrameworkElement.HorizontalAlignment="Left" FrameworkElement.VerticalAlignment="Center" ContentPresenter.Content="{TemplateBinding ComboBox.SelectionBoxItem}" ContentPresenter.ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}" UIElement.IsHitTestVisible="False" />
                <TextBox TextBox.Name="PART_EditableTextBox" FrameworkElement.Margin="3,3,23,3" FrameworkElement.HorizontalAlignment="Left" FrameworkElement.VerticalAlignment="Center" Control.Background="#00FFFFFF" UIElement.Focusable="True" TextBoxBase.IsReadOnly="{TemplateBinding ComboBox.IsReadOnly}" UIElement.Visibility="Hidden">
                  <FrameworkElement.Style>
                    <Style Style.TargetType="{x:Type TextBox}">
                      <Setter Setter.Property="FrameworkElement.OverridesDefaultStyle" Setter.Value="True" />
                      <Setter Setter.Property="UIElement.AllowDrop" Setter.Value="True" />
                      <Setter Setter.Property="FrameworkElement.MinWidth" Setter.Value="0" />
                      <Setter Setter.Property="FrameworkElement.MinHeight" Setter.Value="0" />
                      <Setter Setter.Property="FrameworkElement.FocusVisualStyle" Setter.Value="{x:Null}" />
                      <Setter Setter.Property="Control.Template">
                        <Setter.Value>
                          <ControlTemplate ControlTemplate.TargetType="{x:Type TextBox}">
                            <ScrollViewer ScrollViewer.Name="PART_ContentHost" Control.Background="#00FFFFFF" UIElement.Focusable="False" ScrollViewer.HorizontalScrollBarVisibility="Hidden" ScrollViewer.VerticalScrollBarVisibility="Hidden" />
                          </ControlTemplate>
                        </Setter.Value>
                      </Setter>
                    </Style>
                  </FrameworkElement.Style>
                </TextBox>
                <Popup Popup.Name="Popup" Popup.AllowsTransparency="True" UIElement.Focusable="False" Popup.IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}" Popup.Placement="Bottom" Popup.PopupAnimation="Slide">
                  <Grid Grid.Name="DropDown" FrameworkElement.MinWidth="{TemplateBinding FrameworkElement.ActualWidth}" FrameworkElement.MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}" UIElement.SnapsToDevicePixels="True">
                    <Border Border.Name="DropDownBorder" Border.Background="{TemplateBinding Control.Background}" Border.BorderBrush="{TemplateBinding Control.BorderBrush}" Border.BorderThickness="1" />
                    <ScrollViewer FrameworkElement.Margin="4,6" ScrollViewer.CanContentScroll="True" ScrollViewer.HorizontalScrollBarVisibility="Auto" UIElement.SnapsToDevicePixels="True" ScrollViewer.VerticalScrollBarVisibility="Auto">
                      <ItemsPresenter ItemsPresenter.Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" UIElement.SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                    </ScrollViewer>
                  </Grid>
                </Popup>
              </Grid>
              <ControlTemplate.Triggers>
                <Trigger Trigger.Property="UIElement.IsKeyboardFocusWithin" Trigger.Value="True">
                  <Setter Setter.TargetName="ToggleButton" Setter.Value="{DynamicResource MetroBrush}" Setter.Property="Control.BorderBrush" />
                </Trigger>
                <Trigger Trigger.Property="ItemsControl.HasItems" Trigger.Value="False">
                  <Setter Setter.TargetName="DropDownBorder" Setter.Property="FrameworkElement.MinHeight" Setter.Value="95" />
                </Trigger>
                <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
                  <Setter Setter.Value="{DynamicResource GrayTextBrush}" Setter.Property="Control.Foreground" />
                </Trigger>
                <Trigger Trigger.Property="ItemsControl.IsGrouping" Trigger.Value="True">
                  <Setter Setter.Property="ScrollViewer.CanContentScroll" Setter.Value="False" />
                </Trigger>
                <Trigger Trigger.SourceName="Popup" Trigger.Property="Popup.AllowsTransparency" Trigger.Value="True">
                  <Setter Setter.TargetName="DropDownBorder" Setter.Property="FrameworkElement.Margin" Setter.Value="0" />
                </Trigger>
                <Trigger Trigger.Property="ComboBox.IsEditable" Trigger.Value="True">
                  <Setter Setter.Property="Control.IsTabStop" Setter.Value="False" />
                  <Setter Setter.TargetName="PART_EditableTextBox" Setter.Property="UIElement.Visibility" Setter.Value="Visible" />
                  <Setter Setter.TargetName="ContentSite" Setter.Property="UIElement.Visibility" Setter.Value="Hidden" />
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>
</ResourceDictionary>