<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Qhta.WPF.PropertyGrid">

  <!--<DataTemplate x:Key="DataTemplate.Property.NameTemplate">
    <TextBlock
      Text="{Binding Name, Mode=OneWay}"
      Padding="2,0,2,0"
      VerticalAlignment="Center"/>
  </DataTemplate>-->

  <DataTemplate x:Key="DataTemplate.Property.ReadonlyValueTemplate">
    <Border BorderBrush="Black" BorderThickness="0.5" SnapsToDevicePixels="True">
      <TextBlock
        Text="{Binding Value, Mode=OneWay}"
        Margin="2,0,2,0"
        VerticalAlignment="Center"/>
    </Border>
  </DataTemplate>


  <DataTemplate x:Key="DataTemplate.Property.StringValueTemplate">
    <TextBox
      Text="{Binding Value}"
      VerticalAlignment="Center"/>
  </DataTemplate>

  <Style x:Key="PropertyGrid.NameCellStyle" TargetType="{x:Type DataGridCell}">
    <Setter Property="Background" Value="Transparent"/>
    <!--<Setter Property="ContentTemplate">
      <Setter.Value>
        <DataTemplate>
            <TextBlock Text="{Binding Path=Name}" VerticalAlignment="Center" />
        </DataTemplate>
      </Setter.Value>
    </Setter>-->    
    <Style.Triggers>
      <Trigger Property="IsKeyboardFocusWithin" Value="True">
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="Black"/>
      </Trigger>
      <Trigger Property="IsKeyboardFocusWithin" Value="False">
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Foreground" Value="Black"/>
      </Trigger>
    </Style.Triggers>
  </Style>

  <Style x:Key="PropertyGrid.ValueCellStyle" TargetType="{x:Type DataGridCell}">
    <Setter Property="Background" Value="Transparent"/>
    <Style.Triggers>
      <Trigger Property="IsKeyboardFocusWithin" Value="True">
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontStyle" Value="Normal"/>
        <Setter Property="Foreground" Value="Black"/>
      </Trigger>
      <Trigger Property="IsKeyboardFocusWithin" Value="False">
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontStyle" Value="Normal"/>
        <Setter Property="Foreground" Value="Black"/>
      </Trigger>
    </Style.Triggers>    
  </Style>  
  
  
  <Style x:Key="{x:Type local:PropertyGrid}" TargetType="{x:Type local:PropertyGrid}" BasedOn="{StaticResource {x:Type DataGrid}}">
    <Setter Property="AutoGenerateColumns" Value="False"/>
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="BorderBrush" Value="Transparent"/>
    <Setter Property="BorderThickness" Value="0"/>
    <Setter Property="HeadersVisibility" Value="None"/>
    <Setter Property="CanUserAddRows" Value="False"/>
    <Setter Property="CanUserDeleteRows" Value="False"/>
    <Setter Property="CanUserReorderColumns" Value="False"/>
    <Setter Property="CanUserResizeColumns" Value="False"/>
    <Setter Property="CanUserResizeRows" Value="False"/>
    <Setter Property="EnableColumnVirtualization" Value="False"/>
    <Setter Property="EnableRowVirtualization" Value="False"/>
    <Setter Property="Foreground" Value="{DynamicResource Brush.Text}"/>
    <Setter Property="HorizontalGridLinesBrush" Value="Transparent"/>
    <Setter Property="VerticalGridLinesBrush" Value="Transparent"/>
    <Setter Property="SelectionMode" Value="Extended"/>
    <Setter Property="ItemContainerStyle">
      <Setter.Value>
        <Style TargetType="{x:Type DataGridRow}">
          <Setter Property="Margin" Value="0,3,0,3"/>
          <Style.Triggers>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsSelected" Value="False" />
                <Condition Property="IsMouseOver" Value="True" />
              </MultiTrigger.Conditions>
              <Setter Property="Background" Value="Transparent"/>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsSelected" Value="True" />
                <Condition Property="IsMouseOver" Value="True" />
              </MultiTrigger.Conditions>
              <Setter Property="Background" Value="Transparent"/>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsSelected" Value="True" />
                <Condition Property="Selector.IsSelectionActive" Value="False" />
                <Condition Property="IsMouseOver" Value="False" />
              </MultiTrigger.Conditions>
              <Setter Property="Background" Value="Transparent"/>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsSelected" Value="True" />
                <Condition Property="Selector.IsSelectionActive" Value="True" />
                <Condition Property="IsMouseOver" Value="False" />
              </MultiTrigger.Conditions>
              <Setter Property="Background" Value="Transparent"/>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsSelected" Value="False" />
                <Condition Property="ItemsControl.AlternationIndex" Value="0" />
                <Condition Property="IsMouseOver" Value="False" />
              </MultiTrigger.Conditions>
              <Setter Property="Background" Value="Transparent"/>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsSelected" Value="False" />
                <Condition Property="ItemsControl.AlternationIndex" Value="1" />
                <Condition Property="IsMouseOver" Value="False" />
              </MultiTrigger.Conditions>
              <Setter Property="Background" Value="Transparent"/>
            </MultiTrigger>
          </Style.Triggers>
        </Style>
      </Setter.Value>
    </Setter>

  </Style>
</ResourceDictionary>