<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:helpers="clr-namespace:Qhta.UnicodeBuild.Helpers"
                    xmlns:converters="clr-namespace:Qhta.WPF.Converters;assembly=Qhta.WPF.Converters"
                    xmlns:viewModels="clr-namespace:Qhta.UnicodeBuild.ViewModels"
                    xmlns:resources="clr-namespace:Qhta.UnicodeBuild.Resources"
                    xmlns:sf="http://schemas.syncfusion.com/wpf"
                    xmlns:sys="clr-namespace:System;assembly=System.Runtime"
                    xmlns:mvvm="clr-namespace:Qhta.MVVM;assembly=Qhta.MVVM"
                    xmlns:sfTools="clr-namespace:Qhta.SF.Tools;assembly=Qhta.SF.Tools"
                    xmlns:commands="clr-namespace:Qhta.UnicodeBuild.Commands"
                    x:Class="Qhta.UnicodeBuild.AppResourceDictionary">
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="pack://application:,,,/Qhta.SF.Tools;component/SfDataGridTools.xaml" />
  </ResourceDictionary.MergedDictionaries>
  <helpers:ViewModelsBindingProxy x:Key="ViewModels"/>
  <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
  <converters:BoolToTextWrappingConverter x:Key="BoolToTextWrappingConverter"/>
  <converters:AddingConverter x:Key="AddingConverter"/>
  <sfTools:MappingNameBinder x:Key="MappingNameBinder"/>
  <helpers:CodeRangeComparer x:Key="CodeRangeComparer"/>
  <helpers:CodeRangeValueConverter x:Key="CodeRangeValueConverter"/>
  <helpers:CodePointValueConverter x:Key="CodePointValueConverter"/>
  <helpers:StringFormattingValueConverter x:Key="StringFormattingValueConverter"/>
  <converters:NegateValueConverter x:Key="NegateValueConverter"/>
  <helpers:WritingSystemTypeToImageConverter x:Key="TypeToImageConverter" />
  <helpers:EnumToResourceConverter 
    ResourceType="{x:Type resources:WritingSystemTypeStrings}" x:Key="WritingSystemTypeResourceConverter"/>
  <helpers:EnumToResourceConverter 
    ResourceType="{x:Type resources:WritingSystemKindStrings}" x:Key="WritingSystemKindResourceConverter"/>
  <helpers:EnumToResourceConverter 
    ResourceType="{x:Type resources:NameGenMethodStrings}" x:Key="NameGenMethodResourceConverter"/>
  <helpers:EnumToResourceConverter 
    ResourceType="{x:Type resources:Strings}" x:Key="FindInSequenceConverter"/>
  <ObjectDataProvider MethodName="GetValues" ObjectType="{x:Type sys:Enum}" x:Key="FindInSequenceProvider">
    <ObjectDataProvider.MethodParameters>
      <x:Type TypeName="sfTools:FindInSequence" />
    </ObjectDataProvider.MethodParameters>
  </ObjectDataProvider>
  <helpers:CategoryResourceConverter x:Key="CategoryResourceConverter"/>
  <!--<helpers:InsertItemConverter x:Key="InsertItemConverter"/>-->
  <viewModels:WritingSystemViewModel x:Key="BlankWritingSystem"/>
  <viewModels:UcdBlockViewModel x:Key="BlankUcdBlock"/>

  <Style x:Key="HiddenTabControlStyle" TargetType="TabControl">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="TabControl">
          <Grid>
            <ContentPresenter ContentSource="SelectedContent" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Image x:Key="EditIcon" Source="/Assets/Edit.png" Width="16" Height="16"/>

  <!--<commands:UndoCommand x:Key="UndoCommand"/>
  <commands:RedoCommand x:Key="RedoCommand"/>-->

  <commands:NewWritingSystemCommand x:Key="NewWritingSystemCommand"/>
  <commands:EditWritingSystemCommand x:Key="EditWritingSystemCommand"/>
  <commands:DeleteWritingSystemCommand x:Key="DeleteWritingSystemCommand"/>


  <Style x:Key="MenuItemObjectStyle" TargetType="MenuItem">
    <Setter Property="Header" Value="{Binding Header}" />
    <Setter Property="Icon" Value="{Binding Icon}" />
    <Setter Property="ToolTip" Value="{Binding ToolTip}" />
    <Setter Property="Command" Value="{Binding Command}" />
    <Setter Property="CommandParameter" Value="{Binding CommandParameter}" />
  </Style>

  <MenuItem x:Key="DataMenu"
            Header="{x:Static resources:Strings.Data}">
    <MenuItem Header="{x:Static resources:Strings.Save}" 
              Command="Save" />
  </MenuItem>

  <ContextMenu x:Key="CommonContextMenu">
    <MenuItem Header="Copy" Command="Copy"/>
    <MenuItem Header="Paste" Command="Paste"/>
    <MenuItem Header="Cut" Command="Cut"/>
  </ContextMenu>

  <Style TargetType="ContextMenu">
    <Setter Property="Effect">
      <Setter.Value>
        <DropShadowEffect ShadowDepth="5" BlurRadius="10" Opacity="0.5" />
      </Setter.Value>
    </Setter>
  </Style>


  <Style x:Key="FlatButtonStyle" TargetType="ButtonBase">
    <Setter Property="FontFamily" Value="Segoe UI Symbol"/>
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="BorderThickness" Value="0"/>
  </Style>

  <Style TargetType="TextBox">
    <Setter Property="Validation.ErrorTemplate">
      <Setter.Value>
        <ControlTemplate>
          <DockPanel>
            <Border DockPanel.Dock="Bottom" Background="Red" BorderBrush="Black" BorderThickness="1"
                    Padding="2">
              <TextBlock Foreground="White" Text="{Binding [0].ErrorContent}" />
            </Border>
            <AdornedElementPlaceholder />
          </DockPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="Validation.HasError" Value="True">
        <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
      </Trigger>
    </Style.Triggers>
  </Style>

  <Style TargetType="ToolTip">
    <Setter Property="MaxWidth" Value="400"/>
    <Setter Property="ContentTemplate">
      <Setter.Value>
        <DataTemplate>
          <StackPanel>
            <TextBlock Text="{TemplateBinding Content}" TextWrapping="Wrap"/>
          </StackPanel>
        </DataTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <DataTemplate x:Key="RangeCellTemplate">
    <TextBlock 
        Text="{Binding Range, Converter={StaticResource CodeRangeValueConverter}}" 
        Padding="3"/>
  </DataTemplate>

  <DataTemplate x:Key="RangeEditTemplate">
    <TextBox >
      <TextBox.Text>
        <Binding Path="Range" 
                   Converter="{StaticResource CodeRangeValueConverter}"
                   UpdateSourceTrigger="PropertyChanged"
                   Mode="TwoWay">
          <Binding.ValidationRules>
            <helpers:CodeRangeValidationRule />
          </Binding.ValidationRules>
        </Binding>
      </TextBox.Text>
    </TextBox>
  </DataTemplate>

  <DataTemplate x:Key="CodePointTemplate">
    <TextBlock 
      Text="{Binding CP, Converter={StaticResource CodePointValueConverter}}" 
      Padding="3"/>
  </DataTemplate>

  <DataTemplate x:Key="CodePointEditTemplate">
    <TextBox >
      <TextBox.Text>
        <Binding Path="CP" 
                 Converter="{StaticResource CodePointValueConverter}"
                 UpdateSourceTrigger="PropertyChanged"
                 Mode="TwoWay">
          <Binding.ValidationRules>
            <helpers:CodePointValidationRule />
          </Binding.ValidationRules>
        </Binding>
      </TextBox.Text>
    </TextBox>
  </DataTemplate>


  <helpers:MultiValueToStringConverter x:Key="MultiValueToStringConverter" />

  <!--<DataTemplate x:Key="ValidationErrorTemplateEx">
    <TextBlock TextWrapping="Wrap" Text="{Binding ErrorMessage}" >
      <TextBlock.Style>
        <Style TargetType="{x:Type TextBlock}">
          <Setter Property="Foreground" Value="Red"/>
          <Style.Triggers>
            <DataTrigger Binding="{Binding Severity}" Value="{x:Static helpers:Severity.Warning}">
              <Setter Property="Foreground" Value="Orange"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Severity}" Value="{x:Null}">
              <Setter Property="Foreground" Value="Red"/>
            </DataTrigger>
          </Style.Triggers>
        </Style>
      </TextBlock.Style>
    </TextBlock>
  </DataTemplate>-->

  <Style x:Key="ErrorInToolTipStyleEx" TargetType="{x:Type FrameworkElement}">
    <Style.Triggers>
      <Trigger Property="Validation.HasError" Value="true">
        <Setter Property="ToolTip">
          <Setter.Value>
            <MultiBinding Converter="{StaticResource MultiValueToStringConverter}">
              <Binding RelativeSource="{RelativeSource Self}" Path="(Validation.Errors)" />
              <Binding RelativeSource="{RelativeSource Self}" Path="(Validation.Errors).Count" />
            </MultiBinding>
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>

  <Style TargetType="sf:FilterToggleButton">
    <Setter Property="Foreground" Value="#FF404040" />
  </Style>

  <!--<DataTemplate x:Key="WritingSystemTypeFilterPopupTemplate">
    <ComboBox ItemsSource="{helpers:EnumValues EnumType={x:Type models:WritingSystemType}}"
              SelectedItem="{Binding FilterValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
      <ComboBox.ItemTemplate>
        <DataTemplate>
          <TextBlock Text="{Binding Converter={StaticResource WritingSystemTypeResourceConverter}}" />
        </DataTemplate>
      </ComboBox.ItemTemplate>
    </ComboBox>
  </DataTemplate>-->
</ResourceDictionary>