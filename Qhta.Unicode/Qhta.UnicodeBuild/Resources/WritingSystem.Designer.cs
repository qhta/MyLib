//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Qhta.UnicodeBuild.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class WritingSystem {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal WritingSystem() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Qhta.UnicodeBuild.Resources.WritingSystem", typeof(WritingSystem).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Abbr.
        /// </summary>
        public static string Abbr {
            get {
                return ResourceManager.GetString("Abbr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Abbreviation is a string to identify the writing system in the output text..
        /// </summary>
        public static string AbbrTooltip {
            get {
                return ResourceManager.GetString("AbbrTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ctg.
        /// </summary>
        public static string Ctg {
            get {
                return ResourceManager.GetString("Ctg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A category string can be compared to Ctg  field of a code point to classify the code point to this writing system.
        ///Wildchars &apos;*&apos; can be used to define more sophisticated classification rules..
        /// </summary>
        public static string CtgTooltip {
            get {
                return ResourceManager.GetString("CtgTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Description.
        /// </summary>
        public static string Description {
            get {
                return ResourceManager.GetString("Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ext.
        /// </summary>
        public static string Ext {
            get {
                return ResourceManager.GetString("Ext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extension is a string which is appended to the abbreviation to create a unique key for each writing system. It does not appear in the output text..
        /// </summary>
        public static string ExtTooltip {
            get {
                return ResourceManager.GetString("ExtTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ISO.
        /// </summary>
        public static string ISO {
            get {
                return ResourceManager.GetString("ISO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Identifier of the writing system (script or language) in ISO-15924 or ISO-639 standard..
        /// </summary>
        public static string ISOTooltip {
            get {
                return ResourceManager.GetString("ISOTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Is used.
        /// </summary>
        public static string IsUsed {
            get {
                return ResourceManager.GetString("IsUsed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates whether the writing system is a parent for some other systems or is referenced in Unicode Blocks or Unicode Ranges..
        /// </summary>
        public static string IsUsedTooltip {
            get {
                return ResourceManager.GetString("IsUsedTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Key phrase.
        /// </summary>
        public static string KeyPhrase {
            get {
                return ResourceManager.GetString("KeyPhrase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Key phrase should exist in a code point description to classify the code point to this writing system.
        ///Wildchars &apos;*&apos; can be used to define more sophisticated classification rules..
        /// </summary>
        public static string KeyPhraseTooltip {
            get {
                return ResourceManager.GetString("KeyPhraseTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Kind.
        /// </summary>
        public static string Kind {
            get {
                return ResourceManager.GetString("Kind", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type of writing system determines the nature of the characters in that system..
        /// </summary>
        public static string KindTooltip {
            get {
                return ResourceManager.GetString("KindTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name.
        /// </summary>
        public static string Name {
            get {
                return ResourceManager.GetString("Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Writing system name is a unique name starting with a letter and optionally containing letters, digits and spaces..
        /// </summary>
        public static string NameTooltip {
            get {
                return ResourceManager.GetString("NameTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parent system.
        /// </summary>
        public static string Parent {
            get {
                return ResourceManager.GetString("Parent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Writing system parent is used to organize systems in a hierarchy..
        /// </summary>
        public static string ParentTooltip {
            get {
                return ResourceManager.GetString("ParentTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type.
        /// </summary>
        public static string Type {
            get {
                return ResourceManager.GetString("Type", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type of writing system determines the primary purpose of the system..
        /// </summary>
        public static string TypeTooltip {
            get {
                return ResourceManager.GetString("TypeTooltip", resourceCulture);
            }
        }
    }
}
