<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:local="clr-namespace:Syncfusion.Windows.PropertyGrid;assembly=Syncfusion.PropertyGrid.Wpf" 
                    xmlns:shared="http://schemas.syncfusion.com/wpf" 
                    xmlns:vsm="clr-namespace:Syncfusion.Windows;assembly=Syncfusion.Shared.Wpf" 
                    xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="/Syncfusion.Shared.WPF;component/Controls/Editors/Themes/Generic.xaml" />
    <ResourceDictionary Source="/Syncfusion.Shared.WPF;component/Controls/ColorPicker/Themes/generic.xaml" />
    <ResourceDictionary Source="/Syncfusion.Shared.WPF;component/Controls/DateTimeEdit/Themes/Generic.xaml" />
    <ResourceDictionary Source="/Syncfusion.Shared.WPF;component/Controls/UpDown/Themes/generic.xaml" />
    <ResourceDictionary Source="/Syncfusion.Shared.WPF;component/Controls/ComboBoxAdv/Themes/generic.xaml" />
    <ResourceDictionary Source="/Syncfusion.Shared.WPF;component/SkinManager/DefaultStyle.xaml" />
    <ResourceDictionary Source="/Syncfusion.PropertyGrid.WPF;component/Themes/DataTemlates.xaml" />
  </ResourceDictionary.MergedDictionaries>
  <shared:PropertyItemToNameConverter x:Key="NameConverter" />
  <shared:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
  <shared:LevelToThicknessConverterForTogglebutton x:Key="LevelConverter" />
  <shared:InvertBooleanVisibilityConverter x:Key="InvertBooleanVisibilityConverter" />
  <shared:StringTrimmerConverter x:Key="StringTrimmerConverter" />
  <SolidColorBrush x:Key="SelectedBackground" Color="#FF3399FF" />
  <Style x:Key="ToggleGroupButtonStyle" TargetType="{x:Type shared:ToggleGroupButton}">
    <Setter Property="Background" Value="#FF1F3B53" />
    <Setter Property="Foreground" Value="#FF000000" />
    <Setter Property="Padding" Value="3" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="BorderBrush">
      <Setter.Value>
        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
          <GradientStop Color="#FFA3AEB9" Offset="0" />
          <GradientStop Color="#FF8399A9" Offset="0.375" />
          <GradientStop Color="#FF718597" Offset="0.375" />
          <GradientStop Color="#FF617584" Offset="1" />
        </LinearGradientBrush>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type shared:ToggleGroupButton}">
          <Grid Name="LayoutRoot">
            <Rectangle Stretch="Fill" StrokeThickness="0.800067" StrokeLineJoin="Round" Stroke="#FFA0A0A0" Fill="#FFBCC7D8" />
            <Rectangle Name="MouseOverRect" Stretch="Fill" StrokeThickness="0.800067" StrokeLineJoin="Round" Stroke="#FFE5C365" Visibility="Collapsed">
              <Shape.Fill>
                <LinearGradientBrush StartPoint="0.994329,1.05357" EndPoint="2.01699,1.05357">
                  <Brush.RelativeTransform>
                    <TransformGroup>
                      <SkewTransform CenterX="0.994329" CenterY="1.05357" AngleX="1.85767" AngleY="0" />
                      <RotateTransform CenterX="0.994329" CenterY="1.05357" Angle="249.891" />
                    </TransformGroup>
                  </Brush.RelativeTransform>
                  <GradientStop Color="#FFFFEDBB" Offset="0" />
                  <GradientStop Color="#FFFFFBF1" Offset="1" />
                </LinearGradientBrush>
              </Shape.Fill>
            </Rectangle>
            <Rectangle Name="SelectionRect" Stretch="Fill" StrokeThickness="0.800067" StrokeLineJoin="Round" Stroke="#FFE5C365" Fill="#FFFFEFBB" Visibility="Collapsed" />
            <Path Data="M20.615001,26.349001 L25.712999,26.349001 L25.712999,27.342001 L20.615001,27.342001 M13.816002,26.349001 L18.915002,26.349001 L18.915002,27.342001 L13.816002,27.342001 M20.615001,23.407002 L25.712999,23.407002 L25.712999,24.400002 L20.615001,24.400002 M13.816002,23.407002 L18.915002,23.407002 L18.915002,24.400002 L13.816002,24.400002 M13.816002,20.463999 L18.915002,20.463999 L18.915002,21.456999 L13.816002,21.456999 M5.4510002,18.315001 L6.3190002,18.315001 L6.3190002,20.991001 L8.9959998,20.991001 L8.9959998,21.860001 L6.3190002,21.860001 L6.3190002,24.536 L5.4510002,24.536 L5.4510002,21.860001 L2.7740004,21.860001 L2.7740004,20.991001 L5.4510002,20.991001 M1.2389999,16.779003 L1.2389999,26.072002 L10.531999,26.072002 L10.531999,16.779003 M1.2222827E-06,15.540001 L11.771001,15.540001 L11.771001,27.311001 L1.2222827E-06,27.311001 M20.615001,14.579001 L25.712999,14.579001 L25.712999,15.572001 L20.615001,15.572001 M13.816002,14.579001 L18.915002,14.579001 L18.915002,15.572001 L13.816002,15.572001 M20.615001,11.636002 L25.712999,11.636002 L25.712999,12.629002 L20.615001,12.629002 M13.816002,11.636002 L18.915002,11.636002 L18.915002,12.629002 L13.816002,12.629002 M20.615001,8.6929989 L25.712999,8.6929989 L25.712999,9.6860027 L20.615001,9.6860027 M13.816002,8.6929989 L18.915002,8.6929989 L18.915002,9.6860027 L13.816002,9.6860027 M20.615001,5.7510004 L25.712999,5.7510004 L25.712999,6.7440004 L20.615001,6.7440004 M13.816002,5.7510004 L18.915002,5.7510004 L18.915002,6.7440004 L13.816002,6.7440004 M13.816002,2.8080015 L18.915002,2.8080015 L18.915002,3.8010015 L13.816002,3.8010015 M5.4510002,2.7750015 L6.3190002,2.7750015 L6.3190002,5.4510012 L8.9959998,5.4510012 L8.9959998,6.3200016 L6.3190002,6.3200016 L6.3190002,8.9960008 L5.4510002,8.9960008 L5.4510002,6.3200016 L2.7740004,6.3200016 L2.7740004,5.4510012 L5.4510002,5.4510012 M1.2389999,1.2389994 L1.2389999,10.532 L10.532,10.532 L10.532,1.2389994 M0,0 L11.771,0 L11.771,11.771 L0,11.771" Fill="#FF545454" Height="15" Canvas.Left="43.121" Stretch="Fill" Canvas.Top="37.042" Width="15" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <Setter TargetName="SelectionRect" Property="Visibility" Value="Visible" />
              <Setter TargetName="MouseOverRect" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="UIElement.IsMouseOver" Value="True" />
                <Condition Property="ToggleButton.IsChecked" Value="false" />
              </MultiTrigger.Conditions>
              <MultiTrigger.Setters>
                <Setter TargetName="MouseOverRect" Property="Visibility" Value="Visible" />
                <Setter TargetName="SelectionRect" Property="Visibility" Value="Collapsed" />
              </MultiTrigger.Setters>
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type shared:ToggleGroupButton}" BasedOn="{StaticResource ToggleGroupButtonStyle}" TargetType="{x:Type shared:ToggleGroupButton}" />
  <Style x:Key="ToggleSortButtonStyle" TargetType="{x:Type shared:ToggleSortButton}">
    <Setter Property="Background" Value="#FF1F3B53" />
    <Setter Property="Foreground" Value="#FF000000" />
    <Setter Property="Padding" Value="3" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="BorderBrush">
      <Setter.Value>
        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
          <GradientStop Color="#FFA3AEB9" Offset="0" />
          <GradientStop Color="#FF8399A9" Offset="0.375" />
          <GradientStop Color="#FF718597" Offset="0.375" />
          <GradientStop Color="#FF617584" Offset="1" />
        </LinearGradientBrush>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type shared:ToggleSortButton}">
          <Grid Name="LayoutRoot">
            <Rectangle Stretch="Fill" StrokeThickness="0.800067" StrokeLineJoin="Round" Stroke="#FFA0A0A0" Fill="#FFBCC7D8" />
            <Rectangle Name="MouseOverRect" Stretch="Fill" StrokeThickness="0.800067" StrokeLineJoin="Round" Stroke="#FFE5C365" Visibility="Collapsed">
              <Shape.Fill>
                <LinearGradientBrush StartPoint="0.994329,1.05357" EndPoint="2.01699,1.05357">
                  <Brush.RelativeTransform>
                    <TransformGroup>
                      <SkewTransform CenterX="0.994329" CenterY="1.05357" AngleX="1.85767" AngleY="0" />
                      <RotateTransform CenterX="0.994329" CenterY="1.05357" Angle="249.891" />
                    </TransformGroup>
                  </Brush.RelativeTransform>
                  <GradientStop Color="#FFFFEDBB" Offset="0" />
                  <GradientStop Color="#FFFFFBF1" Offset="1" />
                </LinearGradientBrush>
              </Shape.Fill>
            </Rectangle>
            <Rectangle Name="SelectionRect" Stretch="Fill" StrokeThickness="0.800067" StrokeLineJoin="Round" Stroke="#FFE5C365" Fill="#FFFFEFBB" Visibility="Collapsed" />
            <Path Name="path1" Data="M1.3160061,16.219 L9.3820011,16.219 L9.3820011,17.011999 L3.3900052,25.618999 L9.3050014,25.618999 L9.3050014,27.150999 L0.8510067,27.150999 L0.8510067,26.32 L6.8660027,17.758999 L1.3160061,17.758999 M5.0549981,1.6239972 C5.0090004,1.9139979 4.9579984,2.1429981 4.9019986,2.3099981 L3.4009997,6.6709984 L6.7469989,6.6709984 L5.2310006,2.3099981 C5.1840035,2.1679996 5.1359993,1.9389994 5.0849968,1.6239972 M17.685007,0.00099942505 L20.365008,0.00099942505 L20.365008,18.335001 L25.026007,18.335001 L19.025007,27.331001 L13.024006,18.335001 L17.685007,18.335001 M4.094,0 L6.1369983,0 L10.200999,10.932001 L8.2110025,10.932001 L7.2270023,8.1499985 L2.9280003,8.1499985 L1.9820016,10.932001 L0,10.932001" Fill="#FF545454" Height="15" Canvas.Left="100.75" Stretch="Fill" Canvas.Top="33.352" Width="15" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <Setter TargetName="SelectionRect" Property="Visibility" Value="Visible" />
              <Setter TargetName="MouseOverRect" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="UIElement.IsMouseOver" Value="True" />
                <Condition Property="ToggleButton.IsChecked" Value="false" />
              </MultiTrigger.Conditions>
              <MultiTrigger.Setters>
                <Setter TargetName="MouseOverRect" Property="Visibility" Value="Visible" />
                <Setter TargetName="SelectionRect" Property="Visibility" Value="Collapsed" />
              </MultiTrigger.Setters>
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type shared:ToggleSortButton}" BasedOn="{StaticResource ToggleSortButtonStyle}" TargetType="{x:Type shared:ToggleSortButton}" />
  <shared:BooleanToSortDirectionConverter x:Key="BooleanToSortDirectionConverter" />
  <shared:InvertBooleanConverter x:Key="InvertBooleanConverter" />
  <LinearGradientBrush x:Key="ExpanderMouseOverStrokeKey" StartPoint="0.413819,0.422206" EndPoint="0.851368,0.859752">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FF2BC9F7" Offset="0" />
      <GradientStop Color="#FF1AC4F7" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ExpanderMouseOverFillKey" StartPoint="0.407923,0.416884" EndPoint="0.875406,0.884363">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FF7ADDFA" Offset="0" />
      <GradientStop Color="#FF82DFFA" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ExpanderUnCheckedStrokeKey" StartPoint="0.0440532,0.499998" EndPoint="0.955947,0.499998">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FFC8C8C8" Offset="0" />
      <GradientStop Color="#FF242424" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ExpanderUnCheckedFillKey" StartPoint="0,0.499998" EndPoint="1,0.499998">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FF555555" Offset="0" />
      <GradientStop Color="#FF595959" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ExpanderCheckedStrokeKey" StartPoint="0.413819,0.422208" EndPoint="0.851368,0.859755">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FFC8C8C8" Offset="0" />
      <GradientStop Color="#FF242424" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ExpanderCheckedFillKey" StartPoint="0.407923,0.416886" EndPoint="0.875406,0.884367">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FF555555" Offset="0" />
      <GradientStop Color="#FF595959" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="ExpanderButtonBackground" Color="#FF555555" />
  <PathGeometry x:Key="TreeArrow">
    <PathGeometry.Figures>
      <PathFigureCollection>
        <PathFigure IsFilled="True" StartPoint="0 0" IsClosed="True">
          <PathFigure.Segments>
            <PathSegmentCollection>
              <LineSegment Point="0 6" />
              <LineSegment Point="6 0" />
            </PathSegmentCollection>
          </PathFigure.Segments>
        </PathFigure>
      </PathFigureCollection>
    </PathGeometry.Figures>
  </PathGeometry>
  <Style x:Key="ExpanderButtonStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Focusable" Value="False" />
    <Setter Property="Width" Value="15" />
    <Setter Property="Height" Value="15" />
    <Setter Property="Margin" Value="0,0,0,0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Name="ExpandButtonBorder" Background="#00FFFFFF" Width="{TemplateBinding FrameworkElement.Width}" Height="{TemplateBinding FrameworkElement.Height}">
            <Path Name="ExpandPath" Margin="0" StrokeThickness="1" VerticalAlignment="{TemplateBinding FrameworkElement.VerticalAlignment}" HorizontalAlignment="{TemplateBinding FrameworkElement.HorizontalAlignment}" Fill="{StaticResource ExpanderButtonBackground}" Stroke="{StaticResource ExpanderButtonBackground}" Data="{StaticResource TreeArrow}">
              <UIElement.RenderTransform>
                <RotateTransform Angle="135" CenterX="3" CenterY="3" />
              </UIElement.RenderTransform>
            </Path>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
              <Setter TargetName="ExpandPath" Property="RenderTransform">
                <Setter.Value>
                  <RotateTransform Angle="180" CenterX="3" CenterY="3" />
                </Setter.Value>
              </Setter>
              <Setter TargetName="ExpandPath" Property="Margin" Value="0" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="False">
              <Setter TargetName="ExpandPath" Property="HorizontalAlignment" Value="Left" />
              <Setter TargetName="ExpandButtonBorder" Property="Margin" Value="2,0,0,0" />
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="ExpandPath" Property="Shape.Stroke" Value="{StaticResource ExpanderMouseOverStrokeKey}" />
              <Setter TargetName="ExpandPath" Property="Shape.Fill" Value="{StaticResource ExpanderMouseOverFillKey}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <SolidColorBrush x:Key="MouseOverForeground" Color="#FF040404" />
  <SolidColorBrush x:Key="MouseOverBorderBrush" Color="#FFCCECFF" />
  <LinearGradientBrush x:Key="MouseOverBackground" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="#FFEFF7FD" Offset="0.056" />
    <GradientStop Color="#FFDEEEF9" Offset="0.944" />
    <GradientStop Color="White" Offset="1" />
  </LinearGradientBrush>
  <SolidColorBrush x:Key="SelectedBorderBrush" Color="#FF99CCFF" />
  <SolidColorBrush x:Key="SelectedForeground" Color="White" />
  <SolidColorBrush x:Key="LineColor" Color="#FFF0F0F0" />
  <SolidColorBrush x:Key="ViewBackgroundColor" Color="#FFFCFCFC" />
  <SolidColorBrush x:Key="CategoryForeground" Color="#FF2C367E" />
  <SolidColorBrush x:Key="ViewForeground" Color="#FF2C367E" />
  <DataTemplate x:Key="DescriptionTemplate">
    <Grid>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto" />
        <RowDefinition />
      </Grid.RowDefinitions>
      <shared:DescriptionNameTextBlock Grid.Row="0" Margin="5" FontWeight="Bold" Text="{Binding DisplayName}" />
      <shared:DescriptionDetailsTextBlock x:Name="DescriptionTextBlock" Margin="5" Grid.Row="1" TextWrapping="Wrap" TextTrimming="CharacterEllipsis" Text="{Binding Description}">
        <FrameworkElement.ToolTip>
          <ToolTip DataContext="{Binding Path=PlacementTarget, RelativeSource={RelativeSource Self}}">
            <TextBlock TextWrapping="Wrap" Text="{Binding Text}" />
          </ToolTip>
        </FrameworkElement.ToolTip>
      </shared:DescriptionDetailsTextBlock>
    </Grid>
  </DataTemplate>
  <Style x:Key="DefaultPropertyViewItemStyle" TargetType="{x:Type local:PropertyViewItem}">
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="local:PropertyViewItem.EditorTemplate" Value="{StaticResource PropertyNameTemplate}" />
    <Setter Property="Background" Value="{Binding Path=PropertyView.ViewBackgroundColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Self}}" />
    <Setter Property="BorderThickness" Value="0 0 0 0" />
    <Setter Property="Padding" Value="0,2" />
    <Setter Property="BorderBrush" Value="#FFD3D3D3" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:PropertyViewItem}">
          <Grid   Margin="0,0,0,5">
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid Name="PART_PropertyView">
              <Border Name="Bd" 
                      Background="{TemplateBinding Control.Background}" 
                      BorderBrush="{TemplateBinding Control.BorderBrush}" 
                      SnapsToDevicePixels="True" 
                      BorderThickness="{TemplateBinding Control.BorderThickness}"
                    >
                <Grid Name="ViewGrid">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Name="Part_Col" />
                    <ColumnDefinition Width="1" />
                    <ColumnDefinition MinWidth="44" Width="{Binding Path=ResizeColumn2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource TemplatedParent}}" />
                  </Grid.ColumnDefinitions>
                  <Border Name="Border" Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="True">
                    <Grid Margin="{Binding PropertyLevel, Mode=OneWay, Converter={StaticResource LevelConverter}}">
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Name="expanderColumn" Width="5" />
                        <ColumnDefinition Width="*" />
                      </Grid.ColumnDefinitions>
                      <ToggleButton Name="NestedToggleButton" Tag="ViewItem" Width="15" Height="15" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="Collapsed" Style="{StaticResource ExpanderButtonStyle}" IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
                      <ContentPresenter Name="PART_Content" Margin="{TemplateBinding Control.Padding}" Grid.Column="1" ContentTemplate="{TemplateBinding local:PropertyViewItem.EditorTemplate}" Content="{TemplateBinding HeaderedItemsControl.Header}" />
                    </Grid>
                  </Border>
                  <GridSplitter IsTabStop="False" Width="1" Background="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" BorderBrush="{TemplateBinding Control.BorderBrush}" HorizontalAlignment="Stretch" Grid.Column="1"  />
                  <ContentPresenter Name="PART_Content1" Grid.Column="2" Content="{TemplateBinding HeaderedItemsControl.Header}" ContentTemplate="{StaticResource PropertyValueTemplate}" />
                  <!--<GridSplitter IsTabStop="False" Width="1" Background="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" BorderBrush="{TemplateBinding Control.BorderBrush}" HorizontalAlignment="Stretch" Grid.Column="1" Visibility="{TemplateBinding IsCategoryEditorEnabled, Converter={StaticResource InvertBooleanVisibilityConverter}}" />-->
                  <!--<ContentPresenter Name="PART_Content1" Grid.Column="2" Content="{TemplateBinding HeaderedItemsControl.Header}" ContentTemplate="{StaticResource PropertyValueTemplate}" Visibility="{TemplateBinding IsCategoryEditorEnabled, Converter={StaticResource InvertBooleanVisibilityConverter}}" />-->
                </Grid>
              </Border>
              <Border Name="PropertySideborder" SnapsToDevicePixels="True" BorderThickness="0" HorizontalAlignment="Left" Width="25">
                <ToggleButton Name="ToggleButton" HorizontalAlignment="Center" VerticalAlignment="Center" Width="15" Height="15" Visibility="Collapsed" Style="{StaticResource ExpanderButtonStyle}" IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
              </Border>
            </Grid>
            <ItemsPresenter Name="SubItemPresenter" Visibility="Collapsed" Grid.Row="1" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsVisible" Value="True">
              <Setter TargetName="Part_Col" Property="ColumnDefinition.Width" Value="{Binding Path=PropertyNameColumnDefinition, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:PropertyGrid}}}" />
            </Trigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Value="FlatMode" Binding="{Binding Path=PropertyExpandMode, RelativeSource={RelativeSource Self}}" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="expanderColumn" Property="ColumnDefinition.Width" Value="25" />
            </MultiDataTrigger>
            <DataTrigger Value="NestedMode" Binding="{Binding Path=PropertyExpandMode, RelativeSource={RelativeSource Self}}">
              <Setter TargetName="ToggleButton" Property="Visibility" Value="Collapsed" />
              <Setter TargetName="NestedToggleButton" Property="Visibility" Value="{Binding HasChildren, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" />
              <Setter TargetName="expanderColumn" Property="ColumnDefinition.Width" Value="25" />
            </DataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Value="NestedMode" Binding="{Binding Path=PropertyExpandMode, RelativeSource={RelativeSource Self}}" />
                <Condition Value="1" Binding="{Binding Path=PropertyLevel}" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="NestedToggleButton" Property="Visibility" Value="Collapsed" />
              <Setter TargetName="ToggleButton" Property="Visibility" Value="{Binding HasChildren, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" />
            </MultiDataTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition SourceName="ToggleButton" Property="Visibility" Value="Visible" />
                <Condition SourceName="ToggleButton" Property="ToggleButton.IsChecked" Value="True" />
              </MultiTrigger.Conditions>
              <Setter TargetName="SubItemPresenter" Property="Visibility" Value="Visible" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition SourceName="NestedToggleButton" Property="Visibility" Value="Visible" />
                <Condition SourceName="NestedToggleButton" Property="ToggleButton.IsChecked" Value="True" />
              </MultiTrigger.Conditions>
              <Setter TargetName="SubItemPresenter" Property="Visibility" Value="Visible" />
            </MultiTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Value="True" Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Self}}" />
                <Condition Value="True" Binding="{Binding Path=PropertyView.IsKeyboardFocusWithin, RelativeSource={RelativeSource Self}}" />
                <Condition Value="False" Binding="{Binding Path=IsCategoryEditorEnabled, RelativeSource={RelativeSource Self}}" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="Border" Property="Border.Background" Value="{StaticResource SelectedBackground}" />
              <Setter TargetName="Border" Property="TextElement.Foreground" Value="{StaticResource SelectedForeground}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Value="True" Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Self}}" />
                <Condition Value="False" Binding="{Binding Path=PropertyView.IsKeyboardFocusWithin, RelativeSource={RelativeSource Self}}" />
                <Condition Value="False" Binding="{Binding Path=IsCategoryEditorEnabled, RelativeSource={RelativeSource Self}}" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="Border" Property="Border.Background" Value="#FF808080" />
              <Setter TargetName="Border" Property="TextElement.Foreground" Value="{StaticResource ViewForeground}" />
            </MultiDataTrigger>
            <Trigger Property="shared:SkinStorage.EnableTouch" Value="True">
              <Setter TargetName="Bd" Property="Height" Value="50" />
              <Setter TargetName="PART_Content" Property="TextElement.FontSize" Value="18" />
              <Setter TargetName="PART_Content1" Property="TextElement.FontSize" Value="18" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <VirtualizingStackPanel VirtualizationMode="Recycling" />
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type local:PropertyViewItem}" BasedOn="{StaticResource DefaultPropertyViewItemStyle}" TargetType="{x:Type local:PropertyViewItem}" />
  <Style x:Key="DefaultPropertyCatagoryViewItemStyle" TargetType="{x:Type local:PropertyCatagoryViewItem}">
    <Setter Property="BorderBrush" Value="#FFD3D3D3" />
    <Setter Property="Padding" Value="0,4" />
    <Setter Property="BorderThickness" Value="0 0 0 1" />
    <Setter Property="HeaderTemplate">
      <Setter.Value>
        <DataTemplate>
          <TextBlock VerticalAlignment="Center" Text="{Binding Path=., Converter={StaticResource StringTrimmerConverter}}" />
        </DataTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:PropertyCatagoryViewItem}">
          <Grid Name="outerGrid" Background="{TemplateBinding local:PropertyCatagoryViewItem.LineColor}">
            <Grid.RowDefinitions>
              <RowDefinition Height="5*" />
              <RowDefinition Height="5*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Border Name="CatagoryHeaderBorder" Background="{TemplateBinding local:PropertyCatagoryViewItem.LineColor}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Grid.Column="1" SnapsToDevicePixels="True">
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Name="expanderColumn" Width="25" />
                  <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Border Name="innerBorder" Padding="{TemplateBinding Control.Padding}" SnapsToDevicePixels="True" Background="{TemplateBinding local:PropertyCatagoryViewItem.LineColor}">
                  <ToggleButton Name="PART_Expander" Opacity="1" IsThreeState="False" Width="15" Height="15" VerticalAlignment="Center" HorizontalAlignment="Center" Style="{StaticResource ExpanderButtonStyle}" IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" />
                </Border>
                <ContentControl Name="PART_Header" Padding="{TemplateBinding Control.Padding}" IsTabStop="{TemplateBinding Control.IsTabStop}" Content="{TemplateBinding HeaderedItemsControl.Header}" HorizontalAlignment="Left" VerticalAlignment="Center" ContentTemplate="{TemplateBinding HeaderedItemsControl.HeaderTemplate}" FontWeight="DemiBold" Background="{TemplateBinding local:PropertyCatagoryViewItem.LineColor}" Grid.Column="1" Foreground="{TemplateBinding local:PropertyCatagoryViewItem.CategoryForeground}" FocusVisualStyle="{x:Null}" />
              </Grid>
            </Border>
            <Border Background="{TemplateBinding local:PropertyCatagoryViewItem.LineColor}" Grid.ColumnSpan="2" Grid.Row="1">
              <ItemsPresenter Name="PART_Presenter" Visibility="Collapsed" />
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="local:PropertyCatagoryViewItem.IsExpanded" Value="True">
              <Setter TargetName="PART_Presenter" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="shared:SkinStorage.EnableTouch" Value="True">
              <Setter TargetName="innerBorder" Property="Height" Value="30" />
              <Setter TargetName="PART_Header" Property="Height" Value="30" />
              <Setter TargetName="PART_Header" Property="TextElement.FontSize" Value="18" />
              <Setter TargetName="PART_Header" Property="Margin" Value="1" />
              <Setter TargetName="PART_Expander" Property="Height" Value="24" />
              <Setter TargetName="PART_Expander" Property="Width" Value="24" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition SourceName="PART_Expander" Property="Visibility" Value="Visible" />
                <Condition SourceName="PART_Expander" Property="ToggleButton.IsChecked" Value="False" />
              </MultiTrigger.Conditions>
            </MultiTrigger>
            <Trigger SourceName="PART_Header" Property="UIElement.IsFocused" Value="True">
              <Setter TargetName="innerBorder" Property="Border.Background" Value="{StaticResource SelectedBackground}" />
              <Setter TargetName="CatagoryHeaderBorder" Property="Border.Background" Value="{StaticResource SelectedBackground}" />
              <Setter TargetName="PART_Header" Property="TextElement.Foreground" Value="{StaticResource SelectedForeground}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <VirtualizingStackPanel VirtualizationMode="Recycling" />
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type local:PropertyCatagoryViewItem}" BasedOn="{StaticResource DefaultPropertyCatagoryViewItemStyle}" TargetType="{x:Type local:PropertyCatagoryViewItem}" />
  <Style x:Key="DefaultPropertyViewStyle" TargetType="{x:Type local:PropertyView}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:PropertyView}">
          <Border Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}">
            <local:PropertyGridScrollViewer x:Name="ScrollViewer" VerticalScrollBarVisibility="Auto" CanContentScroll="True">
              <ItemsPresenter Name="PART_Presenter" KeyboardNavigation.DirectionalNavigation="Contained" />
            </local:PropertyGridScrollViewer>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <VirtualizingStackPanel VirtualizationMode="Recycling" />
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type local:PropertyView}" BasedOn="{StaticResource DefaultPropertyViewStyle}" TargetType="{x:Type local:PropertyView}" />
  <Style x:Key="DefaultPropertyGridStyle" TargetType="{x:Type local:PropertyGrid}">
    <Setter Property="local:PropertyGrid.LineColor" Value="{StaticResource LineColor}" />
    <Setter Property="local:PropertyGrid.ViewBackgroundColor" Value="{StaticResource ViewBackgroundColor}" />
    <Setter Property="local:PropertyGrid.CategoryForeground" Value="{StaticResource CategoryForeground}" />
    <Setter Property="local:PropertyGrid.DescriptionPanelHeight" Value="55" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="BorderBrush" Value="#FF000000" />
    <Setter Property="Foreground" Value="{StaticResource ViewForeground}" />
    <Setter Property="local:PropertyGrid.DescriptionTemplate" Value="{StaticResource DescriptionTemplate}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:PropertyGrid}">
          <Border Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}">
            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="{TemplateBinding local:PropertyGrid.DescriptionPanelHeight}" />
              </Grid.RowDefinitions>
              <Grid Name="InnerGrid" Row="0" Background="#FFCED4DF">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <local:ToggleGroupButton x:Name="PART_GroupButton" Visibility="{TemplateBinding local:PropertyGrid.ButtonPanelVisibility}" HorizontalAlignment="Left" VerticalAlignment="Center" Width="21" Height="21" Background="#FFD3D3D3" Margin="5" ToolTip="{local:PropertyGridLocalizationResource ResourceName=Categorized}" IsChecked="{Binding EnableGrouping, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
                <local:ToggleSortButton x:Name="PART_SortButton" Visibility="{TemplateBinding local:PropertyGrid.ButtonPanelVisibility}" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Center" Width="21" Height="21" Background="#FFD3D3D3" Margin="5" ToolTip="{local:PropertyGridLocalizationResource ResourceName=Alphabetical}" IsChecked="{Binding EnableGrouping, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InvertBooleanConverter}}" />
                <Border Grid.Column="2" Background="#FFFFFFFF" BorderBrush="#FF8591A2" BorderThickness="1" Margin="4,3,4,5" Visibility="{TemplateBinding local:PropertyGrid.SearchBoxVisibility}">
                  <Grid>
                    <local:SearchTextBox x:Name="PART_SearchText" Margin=".5" VerticalAlignment="Center" HorizontalAlignment="Stretch" Background="#00FFFFFF" BorderBrush="#00FFFFFF" WatermarkTextIsVisible="True" Cursor="IBeam" WatermarkText="{local:PropertyGridLocalizationResource ResourceName=Search}" />
                    <local:ClearButton x:Name="PART_Clear" IsTabStop="False" Background="#00FFFFFF" BorderBrush="#00FFFFFF" BorderThickness="1" Width="20" Height="20" Visibility="Collapsed" HorizontalAlignment="Right" Margin="1 0" ToolTip="{local:PropertyGridLocalizationResource ResourceName=Clear}">
                      <ContentControl.Content>
                        <Path Name="pathButton" SnapsToDevicePixels="True" Stroke="{TemplateBinding Control.Foreground}" StrokeThickness="1.5" Data="M1,1 L7,7 M1,7 L7,1" HorizontalAlignment="Center" VerticalAlignment="Center" Width="8" Height="8" />
                      </ContentControl.Content>
                    </local:ClearButton>
                  </Grid>
                </Border>
              </Grid>
              <Grid Row="1">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Border Name="Sideborder" Background="#FFF0F0F0" Width="14" Visibility="Collapsed" />
                <local:PropertyView x:Name="PART_PropertyView" Grid.Column="1" EnableGrouping="{TemplateBinding local:PropertyGrid.EnableGrouping}" FocusVisualStyle="{x:Null}" ItemsSource="{Binding Path=Properties, RelativeSource={RelativeSource TemplatedParent}}" ViewBackgroundColor="{Binding Path=ViewBackgroundColor, RelativeSource={RelativeSource TemplatedParent}}" LineColor="{Binding Path=LineColor, RelativeSource={RelativeSource TemplatedParent}}" CategoryForeground="{Binding CategoryForeground, RelativeSource={RelativeSource TemplatedParent}}" EditableBackground="{Binding EditableBackground, RelativeSource={RelativeSource TemplatedParent}}" EditableFontWeight="{Binding EditableFontWeight, RelativeSource={RelativeSource TemplatedParent}}" ReadOnlyBackground="{Binding ReadOnlyBackground, RelativeSource={RelativeSource TemplatedParent}}" ReadOnlyFontWeight="{Binding ReadOnlyFontWeight, RelativeSource={RelativeSource TemplatedParent}}" VirtualizingPanel.IsVirtualizing="{Binding Path=IsVirtualizing, RelativeSource={RelativeSource TemplatedParent}}" />
              </Grid>
              <local:PropertyGridSplitter x:Name="GridSplitter" Grid.Row="2" Visibility="{TemplateBinding local:PropertyGrid.DescriptionPanelVisibility}" VerticalAlignment="Center" BorderBrush="#FF35496A" BorderThickness="0 1 0 0" Background="#FFC2CCDB" HorizontalAlignment="Stretch" Height="3" />
              <local:DescriptionBorder Grid.Row="3" Visibility="{TemplateBinding local:PropertyGrid.DescriptionPanelVisibility}" BorderBrush="#FF35496A" BorderThickness="0 1 0 0" Background="#FFC2CCDB" VerticalAlignment="Stretch">
                <Grid>
                  <ContentPresenter Name="DescriptionTextBlock" DataContext="" Margin="5" Grid.Row="1" ContentTemplate="{Binding Path=SelectedItem, ElementName=PART_PropertyView, ConverterParameter=DescriptionTemplate, Converter={StaticResource NameConverter}}" ContentTemplateSelector="{Binding Path=SelectedItem, ElementName=PART_PropertyView, ConverterParameter=DescriptionTemplateSelector, Converter={StaticResource NameConverter}}" Content="{Binding Path=SelectedItem, ElementName=PART_PropertyView, ConverterParameter=Description, Converter={StaticResource NameConverter}}" />
                </Grid>
              </local:DescriptionBorder>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="local:PropertyGrid.EnableGrouping" Value="True">
              <Setter TargetName="Sideborder" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="local:PropertyGrid.PropertyExpandMode" Value="NestedMode">
              <Setter TargetName="Sideborder" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="shared:SkinStorage.EnableTouch" Value="True">
              <Setter TargetName="InnerGrid" Property="Height" Value="53" />
              <Setter TargetName="PART_GroupButton" Property="Height" Value="35" />
              <Setter TargetName="PART_GroupButton" Property="Width" Value="35" />
              <Setter TargetName="PART_SortButton" Property="Height" Value="35" />
              <Setter TargetName="PART_SortButton" Property="Width" Value="35" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type local:PropertyGrid}" BasedOn="{StaticResource DefaultPropertyGridStyle}" TargetType="{x:Type local:PropertyGrid}" />
  <Style x:Key="{x:Type local:ItemsSourceControl}" TargetType="{x:Type local:ItemsSourceControl}">
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:ItemsSourceControl}">
          <Border Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}">
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <TextBlock Name="Part_Text" Margin="2,0" VerticalAlignment="Center" Grid.Column="0" Text="{local:PropertyGridLocalizationResource ResourceName=CollectionEditorWatermark}" />
              <Button Name="Part_Btn" Grid.Column="1" Content="..." />
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="DefaultMenuButtonStyle" TargetType="{x:Type local:DefaultMenuButton}">
    <Setter Property="Width" Value="7" />
    <Setter Property="Height" Value="7" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:DefaultMenuButton}">
          <Grid>
            <Border Background="#00FFFFFF" BorderBrush="#FF000000">
              <Rectangle Name="rectangle" Stroke="#FFACACAC" />
            </Border>
            <Popup Name="PART_Popup" Placement="Bottom" Focusable="False" PopupAnimation="Fade" AllowsTransparency="True" StaysOpen="False" IsOpen="False">
              <Microsoft_Windows_Themes:SystemDropShadowChrome Microsoft_Windows_Themes:SystemDropShadowChrome.Name="PART_Shadow" UIElement.SnapsToDevicePixels="True">
                <Border MinHeight="14" MinWidth="28" BorderThickness="1" BorderBrush="#FFD3D3D3" Background="{StaticResource ViewBackgroundColor}">
                  <Grid>
                    <StackPanel>
                      <Border BorderThickness="0,0,0,1" Margin="8" Height="22" Width="auto">
                        <TextBlock Margin="3,0,0,0" VerticalAlignment="Center" Width="auto" Text="{Binding DisplayName}" />
                      </Border>
                      <MenuItem Name="Reset_MenuItem" Margin="0,0,0,8" Header="{local:PropertyGridLocalizationResource ResourceName=Reset}" Command="{Binding ResetCommand}" HorizontalContentAlignment="{Binding HorizontalContentAlignment, FallbackValue=Left, RelativeSource={RelativeSource TemplatedParent}}" VerticalContentAlignment="{Binding VerticalContentAlignment, FallbackValue=Center, RelativeSource={RelativeSource TemplatedParent}}" />
                      <Separator Name="TopSeperator" Visibility="Collapsed" Margin="30,0,0,0" Height="2" />
                      <ItemsControl Name="PART_Menu" VerticalContentAlignment="Top" HorizontalContentAlignment="Center" KeyboardNavigation.IsTabStop="False" FocusManager.IsFocusScope="False" />
                    </StackPanel>
                  </Grid>
                </Border>
              </Microsoft_Windows_Themes:SystemDropShadowChrome>
            </Popup>
          </Grid>
          <ControlTemplate.Triggers>
            <DataTrigger Value="True" Binding="{Binding IsDefaultValue}">
              <Setter TargetName="rectangle" Property="Shape.Fill" Value="#FF000000" />
            </DataTrigger>
            <Trigger SourceName="PART_Menu" Property="ItemsControl.HasItems" Value="True">
              <Setter TargetName="TopSeperator" Property="Visibility" Value="Visible" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type local:DefaultMenuButton}" BasedOn="{StaticResource DefaultMenuButtonStyle}" TargetType="{x:Type local:DefaultMenuButton}" />
</ResourceDictionary>