<UserControl x:Class="Qhta.WPF.Controls.LinearGradientBrushParamsEdit"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Qhta.WPF.Controls"
             xmlns:utils="clr-namespace:Qhta.WPF.Utils;assembly=Qhta.WPF.Utils"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             x:Name="ThisControl"
             mc:Ignorable="d" 
             d:DesignHeight="200" d:DesignWidth="300">
  <UserControl.Resources>
    <Image x:Key="LockImage" Source="/Qhta.WPF.Controls;component/Resources/Lock.png" />
    <Image x:Key="UnlockImage" Source="/Qhta.WPF.Controls;component/Resources/Unlock.png" />
    <utils:String2ObjectConverter x:Key="PointEditsVisibilityConverter">
      <utils:String2ObjectDictionary>
        <Visibility x:Key="true">Hidden</Visibility>
        <Visibility x:Key="false">Visible</Visibility>
      </utils:String2ObjectDictionary>
    </utils:String2ObjectConverter>
  </UserControl.Resources>
  <Grid>
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="*" />
      <ColumnDefinition Width="160"/>
    </Grid.ColumnDefinitions>
    <Canvas x:Name="GradientCanvas"
        Margin="20"
        Height="{Binding RelativeSource={RelativeSource Mode=Self}, Path=ActualWidth}"
        VerticalAlignment="Top"
        HorizontalAlignment="Stretch"
        >
      <Rectangle 
          Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Canvas}}, Path=ActualWidth}"
          Height="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Canvas}}, Path=ActualHeight}"
          Fill="{Binding ElementName=ThisControl, Path=EditedBrush, Mode=OneWay}" 
          Stroke="Black" StrokeThickness="1"/>
      <local:GradientLine x:Name="GradientLine"
          Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Canvas}}, Path=ActualWidth}"
          Height="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Canvas}}, Path=ActualHeight}"
          StrokeThickness="2"
          GradientStops="{Binding ElementName=ThisControl, Path=EditedBrush.GradientStops}"
          />
    </Canvas>
    <StackPanel Grid.Column="1" Orientation="Vertical" Margin="0,10,0,0">
      <StackPanel Orientation="Horizontal">
        <Label Content="Angle"/>
        <local:NumericEditBox 
            x:Name="AngleNumBox"
            Minimum="-5"
            Maximum="360"
            PageIncrement="5"
            Width="50"
            Height="20"
            ValueChanged="AngleNumBox_ValueChanged"
            />
        <TextBlock Margin="3">[°]</TextBlock>
        <!--<ToggleButton x:Name="AngleLockButton"
            Width="20"
            Height="20"
            IsChecked="{Binding ElementName=ThisControl, Path=IsAngleLocked}">
          <ToggleButton.Style>
            <Style TargetType="{x:Type ToggleButton}">
              <Setter Property="Template">
                <Setter.Value>
                  <ControlTemplate TargetType="ToggleButton">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Background="{TemplateBinding Background}">
                      <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
              <Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                  <Setter Property="Background" Value="PowderBlue" />
                </Trigger>
              </Style.Triggers>
            </Style>
          </ToggleButton.Style>
          <Image Width="16" Height="16" >
            <Image.Style>
              <Style TargetType="{x:Type Image}">
                <Style.Triggers>
                  <DataTrigger Binding="{Binding ElementName=ThisControl, Path=IsAngleLocked}" Value="true">
                    <Setter Property="Source" Value="/Qhta.WPF.Controls;component/Resources/Lock.png"/>
                  </DataTrigger>
                  <DataTrigger Binding="{Binding ElementName=ThisControl, Path=IsAngleLocked}" Value="false">
                    <Setter Property="Source" Value="/Qhta.WPF.Controls;component/Resources/Unlock.png"/>
                  </DataTrigger>
                </Style.Triggers>
              </Style>
            </Image.Style>
          </Image>
        </ToggleButton>-->
      </StackPanel>
      <StackPanel Orientation="Horizontal" Margin="3">
        <CheckBox 
        Content="Edge locked"
        IsChecked="{Binding ElementName=ThisControl, Path=IsEdgeLocked}"
        HorizontalContentAlignment="Right"
        ToolTip="If this box is checked then start and end points are locked to brush edge during angle edit"
        />
      </StackPanel>
      <StackPanel Orientation="Horizontal" Margin="3">
        <CheckBox 
          Content="Angle locked"
          IsChecked="{Binding ElementName=ThisControl, Path=IsAngleLocked}"
          HorizontalContentAlignment="Right"
          ToolTip="If this box is checked then angle is preserved during start point edit"
          />
      </StackPanel>
      <StackPanel x:Name="PointEdits" Orientation="Vertical" >
        <!--Visibility="{Binding ElementName=ThisControl, Path=IsAngleLocked, Converter={StaticResource PointEditsVisibilityConverter}}">-->
        <Label Content="Start Point" />
        <StackPanel Orientation="Horizontal">
          <Label>X</Label>
          <local:NumericEditBox 
            x:Name="StartXNumBox"
            Minimum="0"
            Maximum="100"
            Width="40"
            Height="20"
            ValueChanged="StartXNumBox_ValueChanged"
            />
          <TextBlock Margin="3">[%]</TextBlock>
          <Label>Y</Label>
          <local:NumericEditBox 
            x:Name="StartYNumBox"
            Minimum="0"
            Maximum="100"
            Width="40"
            Height="20"
            ValueChanged="StartYNumBox_ValueChanged"
            />
          <TextBlock Margin="3">[%]</TextBlock>
        </StackPanel>
        <Label>End Point</Label>
        <StackPanel Orientation="Horizontal">
          <Label>X</Label>
          <local:NumericEditBox 
            x:Name="EndXNumBox"
            Minimum="0"
            Maximum="100"
            Width="40"
            Height="20"
            />
          <TextBlock Margin="3">[%]</TextBlock>
          <Label>Y</Label>
          <local:NumericEditBox 
            x:Name="EndYNumBox"
            Minimum="0"
            Maximum="100"
            Width="40"
            Height="20"
            />
          <TextBlock Margin="3">[%]</TextBlock>
        </StackPanel>
      </StackPanel>
    </StackPanel>
  </Grid>
</UserControl>
