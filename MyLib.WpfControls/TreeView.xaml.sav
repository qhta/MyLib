<ResourceDictionary x:Class="TreeViewExtender"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:expr="clr-namespace:XamlExpress;assembly=XamlExpress"
  xmlns:sys="clr-namespace:System;assembly=mscorlib"
  xmlns:diag="clr-namespace:System.Diagnostics;assembly=WindowsBase"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="Shared.xaml" />
    <ResourceDictionary Source="Expressions.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <!--<SnippetTreeView>-->
  <Style x:Key="{x:Type TreeView}" TargetType="TreeView">
    <Setter Property="OverridesDefaultStyle" Value="True" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="TreeView">
          <Border 
            Name="Border" 
            CornerRadius="1" 
            Background="{StaticResource WindowBackgroundBrush}"
            BorderBrush="{StaticResource SolidBorderBrush}"
            BorderThickness="1" >
            <ScrollViewer 
              Focusable="False"
              CanContentScroll="False"
              Padding="4">
              <ItemsPresenter/>
            </ScrollViewer>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <!--</SnippetTreeView>-->

  <!--<SnippetTreeViewItem>-->
  <!--=================================================================
        TreeViewItem
    ==================================================================-->
  <Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
    <Setter Property="Focusable" Value="False"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ToggleButton">
          <Grid
            Width="8"
            Height="13"
            Background="Transparent">
            <Path x:Name="ExpandPath"
              HorizontalAlignment="Left" 
              VerticalAlignment="Bottom" 
              Margin="0,1,0,1"
              Fill="{StaticResource GlyphBrush}"
              Data="M 4 0 L 8 4 L 4 8 Z"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsChecked"
                 Value="True">
              <Setter Property="Data"
                  TargetName="ExpandPath"
                  Value="M 0 4 L 8 4 L 4 8 Z"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <!-- Frame for focused item -->
  <Style x:Key="TreeViewItemFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Border>
            <Rectangle Margin="0,0,0,0"
                   StrokeThickness="5"
                   Stroke="Black"
                   StrokeDashArray="1 2"
                   Opacity="0"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  
  <!-- TreeViewItem -->
  <Style x:Key="{x:Type TreeViewItem}"  TargetType="{x:Type TreeViewItem}">
      <EventSetter
        Event="Expanded"
        Handler="TreeViewItemExpanded" />
  
    <!-- This property stored item background. Default = "Transparent" -->
    <Setter Property="TreeViewItem.Background"   Value="Yellow"/>
  
    <!-- This property has default horizontal alignment for item content -->
<!--    
    <Setter Property="HorizontalContentAlignment"
        Value="{Binding Path=HorizontalContentAlignment,
                RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
-->    
    <!-- This property has default vertical alignment for item content -->
<!--    
    <Setter Property="VerticalContentAlignment"
        Value="{Binding Path=VerticalContentAlignment,
                RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
-->    
    <!-- The distance from the left item box edge to the left item text edge -->
    <Setter Property="TreeViewItem.Padding" Value="1,0,0,0"/>

    <!-- The color of the item text -->
    <Setter Property="TreeViewItem.Foreground"
        Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
    
    <!-- Default style for focused item -->
    <Setter Property="TreeViewItem.FocusVisualStyle"
        Value="{StaticResource TreeViewItemFocusVisual}"/>
    
    <!-- Start of the TreeViewItem template -->
    <Setter Property="TreeViewItem.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TreeViewItem}">
          <Grid>
            <Grid.ColumnDefinitions>
              <!-- The first two columns are for the "Expander" ToggleButton -->
              <ColumnDefinition Width="8" MaxWidth="8"/>
              <!-- This column is for LinkLines -->
              <ColumnDefinition Width="8" MaxWidth="8"/>
              <!-- This column is for the item text -->
              <ColumnDefinition Width="Auto"/>
              <!-- The last column prevents the text column from too wide horizontal expanding -->
              <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            
            <Grid.RowDefinitions>
              <!-- The first row is for the item header -->
              <RowDefinition Name="GridRow0" Height="13" />
              <!-- This row is for the item children -->
              <RowDefinition Name="GridRow1"/>
            </Grid.RowDefinitions>
            
            <!-- Expander button -->
            <ToggleButton
              x:Name="Expander"
              Grid.Column="0"
              Grid.ColumnSpan="2"
              Style="{StaticResource ExpandCollapseToggleStyle}"
              IsChecked="{Binding Path=IsExpanded,
                                RelativeSource={RelativeSource TemplatedParent}}"
              ClickMode="Press" />
            
            <Line
              x:Name="VerticalLinkLine"
              Grid.Column="0"
              Grid.Row="0"
              Grid.RowSpan="2"
              Stroke="{StaticResource LightBorderBrush}"
              StrokeThickness="1"
              HorizontalAlignment="Left"
              VerticalAlignment="Stretch"
              SnapsToDevicePixels="True"
              Width="2"
              X1="1"
              Y1="0"
              X2="1">
              <Line.Y2>
                <Binding
                  RelativeSource="{x:Static RelativeSource.Self}"
                  Path="ActualHeight"
                  diag:PresentationTraceSources.TraceLevel="High" />
              </Line.Y2>
              <Line.Visibility>
                <Binding
                  RelativeSource="{x:Static RelativeSource.TemplatedParent}"
                  Converter="{StaticResource VisibleIfNotLast}" />
              </Line.Visibility>
            </Line>

            <Line x:Name="VerticalHalfLine"
                  Grid.Column="0"
                  Grid.Row="0"
                  Stroke="{StaticResource LightBorderBrush}"
                  StrokeThickness="1"
                  HorizontalAlignment="Left"
                  VerticalAlignment="Stretch"
                  SnapsToDevicePixels="True"
                  Width="2"
                  X1="1"
                  Y1="0"
                  X2="1">
              <Line.Y2>
                <Binding
                  RelativeSource="{x:Static RelativeSource.Self}"
                  Path="ActualHeight"
                  Converter="{StaticResource ConstSubtractor}"
                  ConverterParameter="5"
                  diag:PresentationTraceSources.TraceLevel="High" />
              </Line.Y2>
              <Line.Visibility>
                <Binding
                  RelativeSource="{x:Static RelativeSource.TemplatedParent}"
                  Converter="{StaticResource VisibleIfLast}" />
              </Line.Visibility>
            </Line>
            
            <Line
              x:Name="HorizontalFullLine"
              Grid.Column="0"
              Grid.ColumnSpan="2"
              Grid.Row="0"
              Stroke="{StaticResource LightBorderBrush}"
              StrokeThickness="1"
              HorizontalAlignment="Stretch"
              VerticalAlignment="Bottom"
              SnapsToDevicePixels="True"
              Visibility="Collapsed"
              Height="10"
              X1="0"
              Y1="5"
              Y2="5">
              <Line.X2>
                <Binding
                  RelativeSource="{x:Static RelativeSource.Self}"
                  Path="ActualWidth"
                  diag:PresentationTraceSources.TraceLevel="High" />
              </Line.X2>
            </Line>

            <Line
              x:Name="HorizontalHalfLine"
              Grid.Column="0"
              Grid.Row="0"
              Stroke="{StaticResource LightBorderBrush}"
              StrokeThickness="1"
              HorizontalAlignment="Stretch"
              VerticalAlignment="Bottom"
              SnapsToDevicePixels="True"
              Height="10"
              X1="0"
              X2="3"
              Y1="5"
              Y2="5">
              <Line.Visibility>
                <Binding
                  RelativeSource="{x:Static RelativeSource.TemplatedParent}"
                  Converter="{StaticResource VisibleIfLast}" />
              </Line.Visibility>
            </Line>
            <Border 
              Name="Bd"
              Grid.Column="2"
              Background="{TemplateBinding Background}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              Padding="{TemplateBinding Padding}">
              <ContentPresenter x:Name="PART_Header"
                        ContentSource="Header"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
            </Border>
            
            <ItemsPresenter x:Name="ItemsHost"
                    Grid.Row="1"
                    Grid.Column="1"
                    Grid.ColumnSpan="3"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded" Value="false">
              <Setter TargetName="ItemsHost"
                  Property="Visibility"
                  Value="Collapsed"/>
            </Trigger>
<!--
            <Trigger  Property="IsExpanded" Value="true">
              <Setter TargetName="VerticalFullLine"
                Property="Visibility"
                Value="Visible" />
              <Setter TargetName="VerticalHalfLine"
                Property="Visibility"
                Value="Hidden" />
            </Trigger>
-->
            <Trigger
              Property="HasItems"
              Value="false">
              <Setter
                TargetName="Expander"
                Property="Visibility"
                Value="Hidden" />
              <!--              
              <Setter TargetName="VerticalHalfLine"
                Property="Visibility"
                Value="Visible" />
-->
              <Setter
                TargetName="HorizontalFullLine"
                Property="Visibility"
                Value="Visible" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="HasHeader"
                       Value="false"/>
              </MultiTrigger.Conditions>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="HasHeader"
                       Value="false"/>
                <Condition Property="Height"
                       Value="Auto"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="PART_Header"
                  Property="MinHeight"
                  Value="19"/>
            </MultiTrigger>
            <Trigger Property="IsSelected"
                 Value="true">
              <Setter TargetName="Bd"
                  Property="Background"
                  Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
              <Setter Property="Foreground"
                  Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsSelected"
                       Value="true"/>
                <Condition Property="IsSelectionActive"
                       Value="false"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="Bd"
                  Property="Background"
                  Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
              <Setter Property="Foreground"
                  Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            </MultiTrigger>
            <Trigger Property="IsEnabled"
                 Value="false">
              <Setter Property="Foreground"
                  Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <!--</SnippetTreeViewItem>-->


</ResourceDictionary>