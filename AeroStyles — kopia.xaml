<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:wpf="clr-namespace:Qhta.WPF.Utils;assembly=Qhta.WPF.Utils"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:globalization="clr-namespace:System.Globalization;assembly=mscorlib"
                    xmlns:ui="clr-namespace:System.Windows.Documents.Serialization;assembly=PresentationFramework"
                    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">
  <Style x:Key="FocusVisualStyleKey">
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Margin="2"
                     StrokeThickness="1"
                     Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                     StrokeDashArray="1 2"
                     SnapsToDevicePixels="True" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <LinearGradientBrush x:Key="Ò"
                       LinearGradientBrush.StartPoint="0,0"
                       LinearGradientBrush.EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#F3F3F3"
                    Offset="0" />
      <GradientStop Color="#EBEBEB"
                    Offset="0.5" />
      <GradientStop Color="#DDDDDD"
                    Offset="0.5" />
      <GradientStop Color="#CDCDCD"
                    Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="Ó"
                   SolidColorBrush.Color="#FF707070" />
  <Style x:Key="Ô"
         TargetType="{x:Type ButtonBase}">
    <Setter Setter.Property="FrameworkElement.FocusVisualStyle"
            Setter.Value="{StaticResource FocusVisualStyleKey}" />
    <Setter Setter.Property="Control.Background"
            Setter.Value="{StaticResource Ò}" />
    <Setter Setter.Property="Control.BorderBrush"
            Setter.Value="{StaticResource Ó}" />
    <Setter Setter.Property="Control.BorderThickness"
            Setter.Value="1" />
    <Setter Setter.Property="Control.Foreground"
            Setter.Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Setter.Property="Control.HorizontalContentAlignment"
            Setter.Value="Center" />
    <Setter Setter.Property="Control.VerticalContentAlignment"
            Setter.Value="Center" />
    <Setter Setter.Property="Control.Padding"
            Setter.Value="1" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ButtonBase}">
          <theme:ButtonChrome x:Name="Chrome"
                              Background="{TemplateBinding Control.Background}"
                              BorderBrush="{TemplateBinding Control.BorderBrush}"
                              RenderDefaulted="{TemplateBinding Button.IsDefaulted}"
                              RenderMouseOver="{TemplateBinding IsMouseOver}"
                              RenderPressed="{TemplateBinding ButtonBase.IsPressed}"
                              SnapsToDevicePixels="True">
            <ContentPresenter Margin="{TemplateBinding Control.Padding}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                              HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              RecognizesAccessKey="True"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
          </theme:ButtonChrome>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="IsKeyboardFocused"
                     Trigger.Value="True">
              <Setter Setter.TargetName="Chrome"
                      Setter.Property="RenderDefaulted"
                      Setter.Value="True" />
            </Trigger>
            <Trigger Trigger.Property="ToggleButton.IsChecked"
                     Trigger.Value="true">
              <Setter Setter.TargetName="Chrome"
                      Setter.Property="RenderPressed"
                      Setter.Value="True" />
            </Trigger>
            <Trigger Trigger.Property="IsEnabled"
                     Trigger.Value="False">
              <Setter Setter.Property="Control.Foreground"
                      Setter.Value="#FFADADAD" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <!--<Style x:Key="{x:Type ToggleButton}"
         BasedOn="{StaticResource Ô}"
         TargetType="{x:Type ToggleButton}" />
  <Style x:Key="{x:Type RepeatButton}"
         BasedOn="{StaticResource Ô}"
         TargetType="{x:Type RepeatButton}">
    <Setter Setter.Property="Stylus.IsPressAndHoldEnabled"
            Setter.Value="False" />
  </Style>-->
  <!--<Style x:Key="{x:Type Button}"
         BasedOn="{StaticResource Ô}"
         TargetType="{x:Type Button}" />-->
  <Style x:Key="{x:Type Calendar}"
         TargetType="{x:Type Calendar}">
    <Setter Setter.Property="Control.Foreground"
            Setter.Value="#FF333333" />
    <Setter Setter.Property="Control.Background">
      <Setter.Value>
        <LinearGradientBrush LinearGradientBrush.StartPoint="0.5,0"
                             LinearGradientBrush.EndPoint="0.5,1">
          <GradientStop Color="#FFE4EAF0"
                        Offset="0" />
          <GradientStop Color="#FFECF0F4"
                        Offset="0.16" />
          <GradientStop Color="#FFFCFCFD"
                        Offset="0.16" />
          <GradientStop Color="#FFFFFFFF"
                        Offset="1" />
        </LinearGradientBrush>
      </Setter.Value>
    </Setter>
    <Setter Setter.Property="Control.BorderBrush">
      <Setter.Value>
        <LinearGradientBrush LinearGradientBrush.EndPoint="0.5,1"
                             LinearGradientBrush.StartPoint="0.5,0">
          <GradientStop Color="#FFA3AEB9"
                        Offset="0" />
          <GradientStop Color="#FF8399A9"
                        Offset="0.375" />
          <GradientStop Color="#FF718597"
                        Offset="0.375" />
          <GradientStop Color="#FF617584"
                        Offset="1" />
        </LinearGradientBrush>
      </Setter.Value>
    </Setter>
    <Setter Setter.Property="Control.BorderThickness"
            Setter.Value="1" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Calendar}">
          <StackPanel Name="PART_Root"
                      HorizontalAlignment="Center">
            <CalendarItem Name="PART_CalendarItem"
                          Style="{TemplateBinding Calendar.CalendarItemStyle}"
                          Control.Background="{TemplateBinding Control.Background}"
                          Control.BorderBrush="{TemplateBinding Control.BorderBrush}"
                          Control.BorderThickness="{TemplateBinding Control.BorderThickness}" />
          </StackPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type CalendarItem}"
         TargetType="{x:Type CalendarItem}">
    <Setter Setter.Property="Margin"
            Setter.Value="0,3,0,3" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type CalendarItem}">
          <FrameworkTemplate.Resources>
            <ResourceDictionary>
              <DataTemplate x:Key="CalendarItem.DayTitleTemplateResourceKey">
                <TextBlock TextBlock.FontWeight="Bold"
                           TextBlock.FontFamily="Verdana"
                           TextBlock.FontSize="9.5"
                           TextBlock.Foreground="#FF333333"
                           HorizontalAlignment="Center"
                           Margin="0,6,0,6"
                           VerticalAlignment="Center"
                           TextBlock.Text="{Binding}" />
              </DataTemplate>
            </ResourceDictionary>
          </FrameworkTemplate.Resources>
          <Grid Name="PART_Root">
            <FrameworkElement.Resources>
              <ResourceDictionary>
                <SolidColorBrush x:Key="Õ"
                                 SolidColorBrush.Color="#A5FFFFFF" />
              </ResourceDictionary>
            </FrameworkElement.Resources>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="PART_DisabledVisual"
                                     Storyboard.TargetProperty="Opacity"
                                     DoubleAnimation.To="1"
                                     Timeline.Duration="0" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border Border.BorderBrush="{TemplateBinding Control.BorderBrush}"
                    Border.BorderThickness="{TemplateBinding Control.BorderThickness}"
                    Border.Background="{TemplateBinding Control.Background}"
                    Border.CornerRadius="1">
              <Border Border.CornerRadius="1"
                      Border.BorderBrush="#FFFFFFFF"
                      Border.BorderThickness="2">
                <Grid>
                  <Grid.RowDefinitions>
                    <RowDefinition RowDefinition.Height="Auto" />
                    <RowDefinition RowDefinition.Height="*" />
                  </Grid.RowDefinitions>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition ColumnDefinition.Width="Auto" />
                    <ColumnDefinition ColumnDefinition.Width="Auto" />
                    <ColumnDefinition ColumnDefinition.Width="Auto" />
                  </Grid.ColumnDefinitions>
                  <FrameworkElement.Resources>
                    <ResourceDictionary>
                      <ControlTemplate x:Key="Ö"
                                       TargetType="{x:Type Button}">
                        <Grid Cursor="Hand">
                          <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                              <VisualState x:Name="Normal" />
                              <VisualState x:Name="MouseOver">
                                <Storyboard>
                                  <ColorAnimation Storyboard.TargetName="path"
                                                  Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)"
                                                  ColorAnimation.To="#FF73A9D8"
                                                  Timeline.Duration="0" />
                                </Storyboard>
                              </VisualState>
                              <VisualState x:Name="Disabled">
                                <Storyboard>
                                  <DoubleAnimation Storyboard.TargetName="path"
                                                   Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Opacity)"
                                                   DoubleAnimation.To=".5"
                                                   Timeline.Duration="0" />
                                </Storyboard>
                              </VisualState>
                            </VisualStateGroup>
                          </VisualStateManager.VisualStateGroups>
                          <Rectangle Shape.Fill="#11E5EBF1"
                                     Shape.Stretch="Fill"
                                     Opacity="1" />
                          <Grid>
                            <Path x:Name="path"
                                  Margin="14,-6,0,0"
                                  Height="10"
                                  Width="6"
                                  VerticalAlignment="Center"
                                  HorizontalAlignment="Left"
                                  Shape.Stretch="Fill"
                                  Path.Data="M288.75,232.25L288.75,240.625 283,236.625z">
                              <Shape.Fill>
                                <SolidColorBrush SolidColorBrush.Color="#FF333333" />
                              </Shape.Fill>
                            </Path>
                          </Grid>
                        </Grid>
                      </ControlTemplate>
                      <ControlTemplate x:Key="×"
                                       TargetType="{x:Type Button}">
                        <Grid Cursor="Hand">
                          <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                              <VisualState x:Name="Normal" />
                              <VisualState x:Name="MouseOver">
                                <Storyboard>
                                  <ColorAnimation Storyboard.TargetName="path"
                                                  Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)"
                                                  ColorAnimation.To="#FF73A9D8"
                                                  Timeline.Duration="0" />
                                </Storyboard>
                              </VisualState>
                              <VisualState x:Name="Disabled">
                                <Storyboard>
                                  <DoubleAnimation Storyboard.TargetName="path"
                                                   Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Opacity)"
                                                   DoubleAnimation.To=".5"
                                                   Timeline.Duration="0" />
                                </Storyboard>
                              </VisualState>
                            </VisualStateGroup>
                          </VisualStateManager.VisualStateGroups>
                          <Rectangle Shape.Fill="#11E5EBF1"
                                     Shape.Stretch="Fill"
                                     Opacity="1" />
                          <Grid>
                            <Path x:Name="path"
                                  Margin="0,-6,14,0"
                                  Height="10"
                                  Width="6"
                                  VerticalAlignment="Center"
                                  HorizontalAlignment="Right"
                                  Shape.Stretch="Fill"
                                  Path.Data="M282.875,231.875L282.875,240.375 288.625,236z">
                              <Shape.Fill>
                                <SolidColorBrush SolidColorBrush.Color="#FF333333" />
                              </Shape.Fill>
                            </Path>
                          </Grid>
                        </Grid>
                      </ControlTemplate>
                      <ControlTemplate x:Key="Ø"
                                       TargetType="{x:Type Button}">
                        <Grid Cursor="Hand">
                          <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                              <VisualState x:Name="Normal" />
                              <VisualState x:Name="MouseOver">
                                <Storyboard>
                                  <ColorAnimation Storyboard.TargetName="buttonContent"
                                                  Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                                  ColorAnimation.To="#FF73A9D8"
                                                  Timeline.Duration="0" />
                                </Storyboard>
                              </VisualState>
                              <VisualState x:Name="Disabled">
                                <Storyboard>
                                  <DoubleAnimation Storyboard.TargetName="buttonContent"
                                                   Storyboard.TargetProperty="Opacity"
                                                   DoubleAnimation.To=".5"
                                                   Timeline.Duration="0" />
                                </Storyboard>
                              </VisualState>
                            </VisualStateGroup>
                          </VisualStateManager.VisualStateGroups>
                          <ContentPresenter Name="buttonContent"
                                            Content="{TemplateBinding ContentControl.Content}"
                                            ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                            Margin="1,4,1,9"
                                            HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                            VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}">
                            <TextElement.Foreground>
                              <SolidColorBrush SolidColorBrush.Color="#FF333333" />
                            </TextElement.Foreground>
                          </ContentPresenter>
                        </Grid>
                      </ControlTemplate>
                    </ResourceDictionary>
                  </FrameworkElement.Resources>
                  <Button x:Name="PART_PreviousButton"
                          Grid.Row="0"
                          Grid.Column="0"
                          Control.Template="{StaticResource Ö}"
                          Height="20"
                          Width="28"
                          HorizontalAlignment="Left"
                          Focusable="False" />
                  <Button x:Name="PART_HeaderButton"
                          Grid.Row="0"
                          Grid.Column="1"
                          Control.Template="{StaticResource Ø}"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Center"
                          Control.FontWeight="Bold"
                          Control.FontSize="10.5"
                          Focusable="False" />
                  <Button x:Name="PART_NextButton"
                          Grid.Row="0"
                          Grid.Column="2"
                          Height="20"
                          Width="28"
                          HorizontalAlignment="Right"
                          Control.Template="{StaticResource ×}"
                          Focusable="False" />
                  <Grid x:Name="PART_MonthView"
                        Grid.Row="1"
                        Grid.ColumnSpan="3"
                        Visibility="Visible"
                        Margin="6,-1,6,6"
                        HorizontalAlignment="Center">
                    <Grid.RowDefinitions>
                      <RowDefinition RowDefinition.Height="Auto" />
                      <RowDefinition RowDefinition.Height="Auto" />
                      <RowDefinition RowDefinition.Height="Auto" />
                      <RowDefinition RowDefinition.Height="Auto" />
                      <RowDefinition RowDefinition.Height="Auto" />
                      <RowDefinition RowDefinition.Height="Auto" />
                      <RowDefinition RowDefinition.Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition ColumnDefinition.Width="Auto" />
                      <ColumnDefinition ColumnDefinition.Width="Auto" />
                      <ColumnDefinition ColumnDefinition.Width="Auto" />
                      <ColumnDefinition ColumnDefinition.Width="Auto" />
                      <ColumnDefinition ColumnDefinition.Width="Auto" />
                      <ColumnDefinition ColumnDefinition.Width="Auto" />
                      <ColumnDefinition ColumnDefinition.Width="Auto" />
                    </Grid.ColumnDefinitions>
                  </Grid>
                  <Grid x:Name="PART_YearView"
                        Grid.Row="1"
                        Grid.ColumnSpan="3"
                        Visibility="Hidden"
                        Margin="6,-3,7,6"
                        HorizontalAlignment="Center">
                    <Grid.RowDefinitions>
                      <RowDefinition RowDefinition.Height="Auto" />
                      <RowDefinition RowDefinition.Height="Auto" />
                      <RowDefinition RowDefinition.Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition ColumnDefinition.Width="Auto" />
                      <ColumnDefinition ColumnDefinition.Width="Auto" />
                      <ColumnDefinition ColumnDefinition.Width="Auto" />
                      <ColumnDefinition ColumnDefinition.Width="Auto" />
                    </Grid.ColumnDefinitions>
                  </Grid>
                </Grid>
              </Border>
            </Border>
            <Rectangle x:Name="PART_DisabledVisual"
                       Opacity="0"
                       Visibility="Collapsed"
                       Shape.Stretch="Fill"
                       Shape.StrokeThickness="1"
                       Rectangle.RadiusX="2"
                       Rectangle.RadiusY="2"
                       Shape.Stroke="{StaticResource Õ}"
                       Shape.Fill="{StaticResource Õ}" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="IsEnabled"
                     Trigger.Value="False">
              <Setter Setter.TargetName="PART_DisabledVisual"
                      Setter.Property="Visibility"
                      Setter.Value="Visible" />
            </Trigger>
            <DataTrigger DataTrigger.Value="Year"
                         DataTrigger.Binding="{Binding Path=DisplayMode,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Calendar}}}">
              <Setter Setter.TargetName="PART_MonthView"
                      Setter.Property="Visibility"
                      Setter.Value="Hidden" />
              <Setter Setter.TargetName="PART_YearView"
                      Setter.Property="Visibility"
                      Setter.Value="Visible" />
            </DataTrigger>
            <DataTrigger DataTrigger.Value="Decade"
                         DataTrigger.Binding="{Binding Path=DisplayMode,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Calendar}}}">
              <Setter Setter.TargetName="PART_MonthView"
                      Setter.Property="Visibility"
                      Setter.Value="Hidden" />
              <Setter Setter.TargetName="PART_YearView"
                      Setter.Property="Visibility"
                      Setter.Value="Visible" />
            </DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type CalendarDayButton}"
         TargetType="{x:Type CalendarDayButton}">
    <Setter Setter.Property="FrameworkElement.MinWidth"
            Setter.Value="5" />
    <Setter Setter.Property="FrameworkElement.MinHeight"
            Setter.Value="5" />
    <Setter Setter.Property="Control.FontSize"
            Setter.Value="10" />
    <Setter Setter.Property="Control.HorizontalContentAlignment"
            Setter.Value="Center" />
    <Setter Setter.Property="Control.VerticalContentAlignment"
            Setter.Value="Center" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type CalendarDayButton}">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition VisualTransition.GeneratedDuration="0:0:0.1" />
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="HighlightBackground"
                                     Storyboard.TargetProperty="Opacity"
                                     DoubleAnimation.To="0.5"
                                     Timeline.Duration="0" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="HighlightBackground"
                                     Storyboard.TargetProperty="Opacity"
                                     DoubleAnimation.To="0.5"
                                     Timeline.Duration="0" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="HighlightBackground"
                                     Storyboard.TargetProperty="Opacity"
                                     DoubleAnimation.To="0"
                                     Timeline.Duration="0" />
                    <DoubleAnimation Storyboard.TargetName="NormalText"
                                     Storyboard.TargetProperty="Opacity"
                                     DoubleAnimation.To=".35"
                                     Timeline.Duration="0" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectionStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition VisualTransition.GeneratedDuration="0" />
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Unselected" />
                <VisualState x:Name="Selected">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="SelectedBackground"
                                     Storyboard.TargetProperty="Opacity"
                                     DoubleAnimation.To=".75"
                                     Timeline.Duration="0" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="CalendarButtonFocusStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition VisualTransition.GeneratedDuration="0" />
                </VisualStateGroup.Transitions>
                <VisualState x:Name="CalendarButtonFocused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DayButtonFocusVisual"
                                                   Storyboard.TargetProperty="Visibility"
                                                   Timeline.Duration="0">
                      <DiscreteObjectKeyFrame ObjectKeyFrame.KeyTime="0">
                        <ObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </ObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="CalendarButtonUnfocused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DayButtonFocusVisual"
                                                   Storyboard.TargetProperty="Visibility"
                                                   Timeline.Duration="0">
                      <DiscreteObjectKeyFrame ObjectKeyFrame.KeyTime="0">
                        <ObjectKeyFrame.Value>
                          <Visibility>
                            Collapsed
                          </Visibility>
                        </ObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ActiveStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition VisualTransition.GeneratedDuration="0" />
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Active" />
                <VisualState x:Name="Inactive">
                  <Storyboard>
                    <ColorAnimation Timeline.Duration="0"
                                    Storyboard.TargetName="NormalText"
                                    Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                    ColorAnimation.To="#FF777777" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="DayStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition VisualTransition.GeneratedDuration="0" />
                </VisualStateGroup.Transitions>
                <VisualState x:Name="RegularDay" />
                <VisualState x:Name="Today">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="TodayBackground"
                                     Storyboard.TargetProperty="Opacity"
                                     DoubleAnimation.To="1"
                                     Timeline.Duration="0" />
                    <ColorAnimation Timeline.Duration="0"
                                    Storyboard.TargetName="NormalText"
                                    Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                    ColorAnimation.To="#FFFFFFFF" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="BlackoutDayStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition VisualTransition.GeneratedDuration="0" />
                </VisualStateGroup.Transitions>
                <VisualState x:Name="NormalDay" />
                <VisualState x:Name="BlackoutDay">
                  <Storyboard>
                    <DoubleAnimation Timeline.Duration="0"
                                     Storyboard.TargetName="Blackout"
                                     Storyboard.TargetProperty="Opacity"
                                     DoubleAnimation.To=".2" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle x:Name="TodayBackground"
                       RadiusX="1"
                       RadiusY="1"
                       Opacity="0"
                       Shape.Fill="#FFAAAAAA" />
            <Rectangle x:Name="SelectedBackground"
                       Rectangle.RadiusX="1"
                       Rectangle.RadiusY="1"
                       Opacity="0"
                       Shape.Fill="#FFBADDE9" />
            <Border Border.Background="{TemplateBinding Control.Background}"
                    Border.BorderThickness="{TemplateBinding Control.BorderThickness}"
                    Border.BorderBrush="{TemplateBinding Control.BorderBrush}" />
            <Rectangle x:Name="HighlightBackground"
                       Rectangle.RadiusX="1"
                       Rectangle.RadiusY="1"
                       Opacity="0"
                       Shape.Fill="#FFBADDE9" />
            <ContentPresenter Name="NormalText"
                              HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                              Margin="5,1,5,1">
              <TextElement.Foreground>
                <SolidColorBrush SolidColorBrush.Color="#FF333333" />
              </TextElement.Foreground>
            </ContentPresenter>
            <Path x:Name="Blackout"
                  Opacity="0"
                  Margin="3"
                  HorizontalAlignment="Stretch"
                  VerticalAlignment="Stretch"
                  RenderTransformOrigin="0.5,0.5"
                  Shape.Fill="#FF000000"
                  Shape.Stretch="Fill"
                  Path.Data="M8.1772461,11.029181L10.433105,11.029181 11.700684,12.801641 12.973633,11.029181 15.191895,11.029181 12.844727,13.999395 15.21875,17.060919 12.962891,17.060919 11.673828,15.256231 10.352539,17.060919 8.1396484,17.060919 10.519043,14.042364z" />
            <Rectangle x:Name="DayButtonFocusVisual"
                       Visibility="Collapsed"
                       IsHitTestVisible="False"
                       Rectangle.RadiusX="1"
                       Rectangle.RadiusY="1"
                       Shape.Stroke="#FF45D6FA" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type CalendarButton}"
         TargetType="{x:Type CalendarButton}">
    <Setter Setter.Property="Control.Background"
            Setter.Value="#FFBADDE9" />
    <Setter Setter.Property="FrameworkElement.MinWidth"
            Setter.Value="40" />
    <Setter Setter.Property="FrameworkElement.MinHeight"
            Setter.Value="42" />
    <Setter Setter.Property="Control.FontSize"
            Setter.Value="10" />
    <Setter Setter.Property="Control.HorizontalContentAlignment"
            Setter.Value="Center" />
    <Setter Setter.Property="Control.VerticalContentAlignment"
            Setter.Value="Center" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type CalendarButton}">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition VisualTransition.GeneratedDuration="0:0:0.1" />
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="Background"
                                     Storyboard.TargetProperty="Opacity"
                                     DoubleAnimation.To=".5"
                                     Timeline.Duration="0" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="Background"
                                     Storyboard.TargetProperty="Opacity"
                                     DoubleAnimation.To=".5"
                                     Timeline.Duration="0" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectionStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition VisualTransition.GeneratedDuration="0" />
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Unselected" />
                <VisualState x:Name="Selected">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="SelectedBackground"
                                     Storyboard.TargetProperty="Opacity"
                                     DoubleAnimation.To=".75"
                                     Timeline.Duration="0" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ActiveStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition VisualTransition.GeneratedDuration="0" />
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Active" />
                <VisualState x:Name="Inactive">
                  <Storyboard>
                    <ColorAnimation Timeline.Duration="0"
                                    Storyboard.TargetName="NormalText"
                                    Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                    ColorAnimation.To="#FF777777" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="CalendarButtonFocusStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition VisualTransition.GeneratedDuration="0" />
                </VisualStateGroup.Transitions>
                <VisualState x:Name="CalendarButtonFocused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CalendarButtonFocusVisual"
                                                   Storyboard.TargetProperty="Visibility"
                                                   Timeline.Duration="0">
                      <DiscreteObjectKeyFrame ObjectKeyFrame.KeyTime="0">
                        <ObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </ObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="CalendarButtonUnfocused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CalendarButtonFocusVisual"
                                                   Storyboard.TargetProperty="Visibility"
                                                   Timeline.Duration="0">
                      <DiscreteObjectKeyFrame ObjectKeyFrame.KeyTime="0">
                        <ObjectKeyFrame.Value>
                          <Visibility>
                            Collapsed
                          </Visibility>
                        </ObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle x:Name="SelectedBackground"
                       Rectangle.RadiusX="1"
                       Rectangle.RadiusY="1"
                       Opacity="0"
                       Shape.Fill="{TemplateBinding Control.Background}" />
            <Rectangle x:Name="Background"
                       Rectangle.RadiusX="1"
                       Rectangle.RadiusY="1"
                       Opacity="0"
                       Shape.Fill="{TemplateBinding Control.Background}" />
            <ContentPresenter Name="NormalText"
                              HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                              Margin="1,0,1,1">
              <TextElement.Foreground>
                <SolidColorBrush SolidColorBrush.Color="#FF333333" />
              </TextElement.Foreground>
            </ContentPresenter>
            <Rectangle x:Name="CalendarButtonFocusVisual"
                       Visibility="Collapsed"
                       IsHitTestVisible="False"
                       Rectangle.RadiusX="1"
                       Rectangle.RadiusY="1"
                       Shape.Stroke="#FF45D6FA" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="IsFocused"
                     Trigger.Value="True">
              <Setter Setter.TargetName="CalendarButtonFocusVisual"
                      Setter.Property="Visibility"
                      Setter.Value="Visible" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="Ù">
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Margin="14,0,0,0"
                     Shape.StrokeThickness="1"
                     Shape.Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                     Shape.StrokeDashArray="1 2"
                     SnapsToDevicePixels="True" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="Ú">
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Margin="1"
                     Shape.StrokeThickness="1"
                     Shape.Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                     Shape.StrokeDashArray="1 2"
                     SnapsToDevicePixels="True" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="Û">
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Margin="13,0,0,0"
                     Shape.StrokeThickness="1"
                     Shape.Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                     Shape.StrokeDashArray="1 2"
                     SnapsToDevicePixels="True" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="Ü">
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Margin="1"
                     Shape.StrokeThickness="1"
                     Shape.Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                     Shape.StrokeDashArray="1 2"
                     SnapsToDevicePixels="True" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <SolidColorBrush x:Key="Ý"
                   SolidColorBrush.Color="#F4F4F4" />
  <SolidColorBrush x:Key="Þ"
                   SolidColorBrush.Color="#8E8F8F" />
  <Style x:Key="{x:Type CheckBox}"
         TargetType="{x:Type CheckBox}">
    <Setter Setter.Property="Control.Foreground"
            Setter.Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Setter.Property="Control.Background"
            Setter.Value="{StaticResource Ý}" />
    <Setter Setter.Property="Control.BorderBrush"
            Setter.Value="{StaticResource Þ}" />
    <Setter Setter.Property="Control.BorderThickness"
            Setter.Value="1" />
    <Setter Setter.Property="FrameworkElement.FocusVisualStyle"
            Setter.Value="{StaticResource Ú}" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type CheckBox}">
          <BulletDecorator BulletDecorator.Background="#00FFFFFF"
                           SnapsToDevicePixels="True">
            <BulletDecorator.Bullet>
              <theme:BulletChrome Background="{TemplateBinding Control.Background}"
                                  BorderBrush="{TemplateBinding Control.BorderBrush}"
                                  RenderMouseOver="{TemplateBinding IsMouseOver}"
                                  RenderPressed="{TemplateBinding ButtonBase.IsPressed}"
                                  IsChecked="{TemplateBinding ToggleButton.IsChecked}" />
            </BulletDecorator.Bullet>
            <ContentPresenter Margin="{TemplateBinding Control.Padding}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                              HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              RecognizesAccessKey="True"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
          </BulletDecorator>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="ContentControl.HasContent"
                     Trigger.Value="True">
              <Setter Setter.Value="{StaticResource Ù}"
                      Setter.Property="FrameworkElement.FocusVisualStyle" />
              <Setter Setter.Property="Control.Padding"
                      Setter.Value="4,0,0,0" />
            </Trigger>
            <Trigger Trigger.Property="IsEnabled"
                     Trigger.Value="False">
              <Setter Setter.Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"
                      Setter.Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <DataTemplate x:Key="{DataTemplateKey {x:Type CollectionViewGroup}}"
                DataTemplate.DataType="{x:Type CollectionViewGroup}">
    <ContentPresenter ContentStringFormat="{TemplateBinding ContentStringFormat}"
                      Content="{Binding Path=Name}" />
  </DataTemplate>
  <Style x:Key="æ">
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Margin="0,1,0,1"
                     Shape.StrokeThickness="1"
                     Shape.Stroke="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"
                     Shape.StrokeDashArray="1 2"
                     SnapsToDevicePixels="True" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type ComboBoxItem}"
         TargetType="{x:Type ComboBoxItem}">
    <Setter Setter.Property="Control.HorizontalContentAlignment"
            Setter.Value="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Setter.Property="Control.VerticalContentAlignment"
            Setter.Value="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Setter.Property="Control.Padding"
            Setter.Value="3,0,3,0" />
    <Setter Setter.Property="Control.Background"
            Setter.Value="#00FFFFFF" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ComboBoxItem}">
          <Border Name="Bd"
                  Border.Background="{TemplateBinding Control.Background}"
                  Border.BorderBrush="{TemplateBinding Control.BorderBrush}"
                  Border.BorderThickness="{TemplateBinding Control.BorderThickness}"
                  Border.Padding="{TemplateBinding Control.Padding}"
                  SnapsToDevicePixels="True">
            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="ComboBoxItem.IsHighlighted"
                     Trigger.Value="True">
              <Setter Setter.TargetName="Bd"
                      Setter.Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                      Setter.Property="Border.Background" />
              <Setter Setter.Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"
                      Setter.Property="Control.Foreground" />
            </Trigger>
            <Trigger Trigger.Property="IsEnabled"
                     Trigger.Value="False">
              <Setter Setter.Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"
                      Setter.Property="Control.Foreground" />
            </Trigger>
            <MultiDataTrigger>
              <!--<MultiDataTrigger.Conditions>
                <Condition  Binding="{Binding Path=(base:AccessibilitySwitches.UseNetFx47CompatibleAccessibilityFeatures)}"
                            Condition.Value="false" />
                <Condition Condition.Binding="{Binding Path=(SystemParameters.HighContrast)}"
                           Condition.Value="true" />
              </MultiDataTrigger.Conditions>-->
              <Setter Setter.Value="{StaticResource æ}"
                      Setter.Property="FrameworkElement.FocusVisualStyle" />
            </MultiDataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type ContentControl}"
         TargetType="{x:Type ContentControl}">
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ContentControl}">
          <ContentPresenter />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type ContextMenu}"
         TargetType="{x:Type ContextMenu}">
    <Setter Setter.Property="Control.Background"
            Setter.Value="#FFF5F5F5" />
    <Setter Setter.Property="Control.FontFamily"
            Setter.Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}" />
    <Setter Setter.Property="Control.FontSize"
            Setter.Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}" />
    <Setter Setter.Property="Control.FontStyle"
            Setter.Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}" />
    <Setter Setter.Property="Control.FontWeight"
            Setter.Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}" />
    <Setter Setter.Property="Control.Foreground"
            Setter.Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
    <Setter Setter.Property="Control.VerticalContentAlignment"
            Setter.Value="Center" />
    <Setter Setter.Property="Control.BorderThickness"
            Setter.Value="1" />
    <Setter Setter.Property="Control.BorderBrush"
            Setter.Value="#FF959595" />
    <Setter Setter.Property="Control.Padding"
            Setter.Value="2" />
    <Setter Setter.Property="Grid.IsSharedSizeScope"
            Setter.Value="True" />
    <Setter Setter.Property="ContextMenu.HasDropShadow"
            Setter.Value="{DynamicResource {x:Static SystemParameters.DropShadowKey}}" />
    <Setter Setter.Property="ScrollViewer.PanningMode"
            Setter.Value="Both" />
    <Setter Setter.Property="Stylus.IsFlicksEnabled"
            Setter.Value="False" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ContextMenu}">
          <theme:SystemDropShadowChrome x:Name="Shdw"
                                        Color="Transparent"
                                        SnapsToDevicePixels="True">
            <Border Name="ContextMenuBorder"
                    Border.Background="{TemplateBinding Control.Background}"
                    Border.BorderBrush="{TemplateBinding Control.BorderBrush}"
                    Border.BorderThickness="{TemplateBinding Control.BorderThickness}">
              <ScrollViewer Name="ContextMenuScrollViewer"
                            Grid.ColumnSpan="2"
                            Margin="1,0"
                            Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement},ResourceId=MenuScrollViewer}}">
                <Grid RenderOptions.ClearTypeHint="Enabled">
                  <Canvas Height="0"
                          Width="0"
                          HorizontalAlignment="Left"
                          VerticalAlignment="Top">
                    <Rectangle Name="OpaqueRect"
                               Height="{Binding ElementName=ContextMenuBorder,Path=ActualHeight}"
                               Width="{Binding ElementName=ContextMenuBorder,Path=ActualWidth}"
                               Shape.Fill="{Binding ElementName=ContextMenuBorder,Path=Background}" />
                  </Canvas>
                  <Rectangle Shape.Fill="#FFF1F1F1"
                             HorizontalAlignment="Left"
                             Width="28"
                             Margin="1,2"
                             Rectangle.RadiusX="2"
                             Rectangle.RadiusY="2" />
                  <Rectangle HorizontalAlignment="Left"
                             Width="1"
                             Margin="29,2,0,2"
                             Shape.Fill="#FFE2E3E3" />
                  <Rectangle HorizontalAlignment="Left"
                             Width="1"
                             Margin="30,2,0,2"
                             Shape.Fill="#FFFFFFFF" />
                  <ItemsPresenter Name="ItemsPresenter"
                                  Margin="{TemplateBinding Control.Padding}"
                                  KeyboardNavigation.DirectionalNavigation="Cycle"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                </Grid>
              </ScrollViewer>
            </Border>
          </theme:SystemDropShadowChrome>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="ContextMenu.HasDropShadow"
                     Trigger.Value="True">
              <Setter Setter.TargetName="Shdw"
                      Setter.Property="Margin"
                      Setter.Value="0,0,5,5" />
              <Setter Setter.TargetName="Shdw"
                      Setter.Property="theme:SystemDropShadowChrome.Color"
                      Setter.Value="#71000000" />
            </Trigger>
            <Trigger Trigger.SourceName="ContextMenuScrollViewer"
                     Trigger.Property="ScrollViewer.CanContentScroll"
                     Trigger.Value="False">
              <Setter Setter.TargetName="OpaqueRect"
                      Setter.Value="{Binding ElementName=ContextMenuScrollViewer,Path=VerticalOffset}"
                      Setter.Property="Canvas.Top" />
              <Setter Setter.TargetName="OpaqueRect"
                      Setter.Value="{Binding ElementName=ContextMenuScrollViewer,Path=HorizontalOffset}"
                      Setter.Property="Canvas.Left" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type FlowDocument}"
         TargetType="{x:Type FlowDocument}">
    <Setter Setter.Property="FlowDocument.TextAlignment"
            Setter.Value="Justify" />
    <Setter Setter.Property="FlowDocument.FontFamily"
            Setter.Value="Georgia" />
    <Setter Setter.Property="FlowDocument.FontSize"
            Setter.Value="16.0" />
  </Style>
  <Style x:Key="{x:Type TextBlock}"
         TargetType="{x:Type TextBlock}">
    <Setter Setter.Property="TextBlock.TextWrapping"
            Setter.Value="NoWrap" />
    <Setter Setter.Property="TextBlock.TextTrimming"
            Setter.Value="None" />
  </Style>
  <Style x:Key="{x:Type Bold}"
         TargetType="{x:Type Bold}">
    <Setter Setter.Property="TextElement.FontWeight"
            Setter.Value="Bold" />
  </Style>
  <Style x:Key="{x:Type Italic}"
         TargetType="{x:Type Italic}">
    <Setter Setter.Property="TextElement.FontStyle"
            Setter.Value="Italic" />
  </Style>
  <Style x:Key="{x:Type Underline}"
         TargetType="{x:Type Underline}">
    <Setter Setter.Property="Inline.TextDecorations"
            Setter.Value="Underline" />
  </Style>
  <Style x:Key="{x:Type Paragraph}"
         TargetType="{x:Type Paragraph}">
    <Setter Setter.Property="Block.Margin"
            Setter.Value="Auto" />
  </Style>
  <Style x:Key="{x:Type List}"
         TargetType="{x:Type List}">
    <Setter Setter.Property="Block.Margin"
            Setter.Value="Auto" />
    <Setter Setter.Property="Block.Padding"
            Setter.Value="Auto" />
  </Style>
  <Style x:Key="{x:Type Floater}"
         TargetType="{x:Type Floater}">
    <Setter Setter.Property="Floater.HorizontalAlignment"
            Setter.Value="Right" />
  </Style>
  <DataTemplate x:Key="{DataTemplateKey {x:Type FlowDocument}}"
                DataTemplate.DataType="{x:Type FlowDocument}">
    <FlowDocumentReader FlowDocumentReader.Document="{Binding}" />
  </DataTemplate>
  <DataTemplate x:Key="{DataTemplateKey {x:Type FixedDocument}}"
                DataTemplate.DataType="{x:Type FixedDocument}">
    <DocumentViewer DocumentViewerBase.Document="{Binding}" />
  </DataTemplate>
  <DataTemplate x:Key="{DataTemplateKey {x:Type FixedDocumentSequence}}"
                DataTemplate.DataType="{x:Type FixedDocumentSequence}">
    <DocumentViewer DocumentViewerBase.Document="{Binding}" />
  </DataTemplate>
  <LinearGradientBrush x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement},ResourceId=DocumentViewerToolBarGradient}"
                       LinearGradientBrush.StartPoint="0,0"
                       LinearGradientBrush.EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="{x:Static SystemColors.InactiveCaptionTextColor}"
                    Offset="0" />
      <GradientStop Color="{x:Static SystemColors.InactiveCaptionColor}"
                    Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ç"
                       LinearGradientBrush.StartPoint="0,0"
                       LinearGradientBrush.EndPoint="1,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="{x:Static SystemColors.InactiveCaptionTextColor}"
                    Offset="1" />
      <GradientStop Color="{x:Static SystemColors.InactiveCaptionColor}"
                    Offset="0" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <Style x:Key="{x:Type DocumentViewer}"
         TargetType="{x:Type DocumentViewer}"
         BasedOn="{x:Null}">
    <Setter Setter.Property="Control.Foreground"
            Setter.Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
    <Setter Setter.Property="Control.Background"
            Setter.Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
    <Setter Setter.Property="FrameworkElement.FocusVisualStyle"
            Setter.Value="{x:Null}" />
    <!--<Setter Setter.Property="FrameworkElement.ContextMenu"
            Setter.Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type ui:PresentationUIStyleResources},ResourceId=PUIDocumentViewerContextMenu}}" />-->
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DocumentViewer}">
          <Border Border.BorderThickness="{TemplateBinding Control.BorderThickness}"
                  Border.BorderBrush="{TemplateBinding Control.BorderBrush}"
                  Focusable="False">
            <Grid Panel.Background="{TemplateBinding Control.Background}"
                  KeyboardNavigation.TabNavigation="Local">
              <Grid.ColumnDefinitions>
                <ColumnDefinition ColumnDefinition.Width="*" />
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition RowDefinition.Height="Auto" />
                <RowDefinition RowDefinition.Height="*" />
                <RowDefinition RowDefinition.Height="Auto" />
              </Grid.RowDefinitions>
              <ContentControl Grid.Row="0"
                              Grid.Column="0"
                              Focusable="{TemplateBinding Focusable}"
                              Control.TabIndex="0" />
              <!--Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type ui:PresentationUIStyleResources},ResourceId=PUIDocumentViewerToolBarStyleKey}}" />-->
              <ScrollViewer x:Name="PART_ContentHost"
                            Grid.Row="1"
                            Grid.Column="0"
                            ScrollViewer.CanContentScroll="True"
                            ScrollViewer.HorizontalScrollBarVisibility="Auto"
                            Focusable="{TemplateBinding Focusable}"
                            Control.IsTabStop="True"
                            Control.TabIndex="1" />
              <DockPanel Grid.Row="1">
                <FrameworkElement DockPanel.Dock="Right"
                                  Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
                <Rectangle Visibility="Visible"
                           VerticalAlignment="top"
                           Height="10">
                  <Shape.Fill>
                    <LinearGradientBrush LinearGradientBrush.StartPoint="0,0"
                                         LinearGradientBrush.EndPoint="0,1">
                      <GradientBrush.GradientStops>
                        <GradientStopCollection>
                          <GradientStop Color="#66000000"
                                        Offset="0" />
                          <GradientStop Color="Transparent"
                                        Offset="1" />
                        </GradientStopCollection>
                      </GradientBrush.GradientStops>
                    </LinearGradientBrush>
                  </Shape.Fill>
                </Rectangle>
              </DockPanel>
              <ContentControl x:Name="PART_FindToolBarHost"
                              Grid.Row="2"
                              Grid.Column="0"
                              Control.TabIndex="2"
                              Focusable="{TemplateBinding Focusable}" />
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="è">
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Grid>
            <Rectangle Margin="1,1,1,1"
                       Shape.StrokeThickness="1"
                       Shape.Stroke="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"
                       SnapsToDevicePixels="True" />
            <Rectangle Margin="1,1,1,1"
                       Shape.StrokeThickness="1"
                       Shape.Stroke="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"
                       Shape.StrokeDashArray="2 2"
                       SnapsToDevicePixels="True" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <BooleanToVisibilityConverter x:Key="é" />
  <Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type DataGrid},ResourceId=DataGridSelectAllButtonStyle}"
         TargetType="{x:Type Button}">
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid>
            <Rectangle x:Name="Border"
                       Shape.Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
                       SnapsToDevicePixels="True" />
            <Polygon x:Name="Arrow"
                     HorizontalAlignment="Right"
                     VerticalAlignment="Bottom"
                     Margin="8,8,3,3"
                     Opacity="0.15"
                     Shape.Fill="#FF000000"
                     Shape.Stretch="Uniform"
                     Polygon.Points="0,10 10,10 10,0" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="IsMouseOver"
                     Trigger.Value="True">
              <Setter Setter.TargetName="Border"
                      Setter.Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"
                      Setter.Property="Shape.Stroke" />
            </Trigger>
            <Trigger Trigger.Property="ButtonBase.IsPressed"
                     Trigger.Value="True">
              <Setter Setter.TargetName="Border"
                      Setter.Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"
                      Setter.Property="Shape.Fill" />
            </Trigger>
            <Trigger Trigger.Property="IsEnabled"
                     Trigger.Value="False">
              <Setter Setter.TargetName="Arrow"
                      Setter.Property="Visibility"
                      Setter.Value="Collapsed" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type DataGrid}"
         TargetType="{x:Type DataGrid}">
    <Setter Setter.Property="Control.Background"
            Setter.Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
    <Setter Setter.Property="Control.Foreground"
            Setter.Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Setter.Property="Control.BorderBrush"
            Setter.Value="#FF688CAF" />
    <Setter Setter.Property="Control.BorderThickness"
            Setter.Value="1" />
    <Setter Setter.Property="DataGrid.RowDetailsVisibilityMode"
            Setter.Value="VisibleWhenSelected" />
    <Setter Setter.Property="ScrollViewer.CanContentScroll"
            Setter.Value="True" />
    <Setter Setter.Property="ScrollViewer.PanningMode"
            Setter.Value="Both" />
    <Setter Setter.Property="Stylus.IsFlicksEnabled"
            Setter.Value="False" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGrid}">
          <Border Border.Background="{TemplateBinding Control.Background}"
                  Border.BorderBrush="{TemplateBinding Control.BorderBrush}"
                  Border.BorderThickness="{TemplateBinding Control.BorderThickness}"
                  SnapsToDevicePixels="True"
                  Border.Padding="{TemplateBinding Control.Padding}">
            <ScrollViewer Name="DG_ScrollViewer"
                          Focusable="False">
              <Control.Template>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                  <Grid>
                    <Grid.RowDefinitions>
                      <RowDefinition RowDefinition.Height="Auto" />
                      <RowDefinition RowDefinition.Height="*" />
                      <RowDefinition RowDefinition.Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition ColumnDefinition.Width="Auto" />
                      <ColumnDefinition ColumnDefinition.Width="*" />
                      <ColumnDefinition ColumnDefinition.Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Button ButtonBase.Command="{x:Static DataGrid.SelectAllCommand}"
                            Focusable="False"
                            Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}},Path=CellsPanelHorizontalOffset}"
                            Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type DataGrid},ResourceId=DataGridSelectAllButtonStyle}}"
                            Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}},Path=HeadersVisibility,Converter={x:Static DataGrid.HeadersVisibilityConverter},ConverterParameter={x:Static DataGridHeadersVisibility.All}}" />
                    <DataGridColumnHeadersPresenter Name="PART_ColumnHeadersPresenter"
                                                    Grid.Column="1"
                                                    Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}},Path=HeadersVisibility,Converter={x:Static DataGrid.HeadersVisibilityConverter},ConverterParameter={x:Static DataGridHeadersVisibility.Column}}" />
                    <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                            Grid.Row="1"
                                            Grid.ColumnSpan="2"
                                            ScrollContentPresenter.CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}" />
                    <ScrollBar Name="PART_VerticalScrollBar"
                               Grid.Row="1"
                               Grid.Column="2"
                               ScrollBar.Orientation="Vertical"
                               RangeBase.Maximum="{TemplateBinding ScrollViewer.ScrollableHeight}"
                               ScrollBar.ViewportSize="{TemplateBinding ScrollViewer.ViewportHeight}"
                               Visibility="{TemplateBinding ScrollViewer.ComputedVerticalScrollBarVisibility}"
                               RangeBase.Value="{Binding Path=VerticalOffset,RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}" />
                    <Grid Grid.Row="2"
                          Grid.Column="1">
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition ColumnDefinition.Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}},Path=NonFrozenColumnsViewportHorizontalOffset}" />
                        <ColumnDefinition ColumnDefinition.Width="*" />
                      </Grid.ColumnDefinitions>
                      <ScrollBar Name="PART_HorizontalScrollBar"
                                 Grid.Column="1"
                                 ScrollBar.Orientation="Horizontal"
                                 RangeBase.Maximum="{TemplateBinding ScrollViewer.ScrollableWidth}"
                                 ScrollBar.ViewportSize="{TemplateBinding ScrollViewer.ViewportWidth}"
                                 Visibility="{TemplateBinding ScrollViewer.ComputedHorizontalScrollBarVisibility}"
                                 RangeBase.Value="{Binding Path=HorizontalOffset,RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}" />
                    </Grid>
                  </Grid>
                </ControlTemplate>
              </Control.Template>
              <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </ScrollViewer>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Condition.Property="ItemsControl.IsGrouping"
                     Condition.Value="True" />
          <Condition Condition.Property="VirtualizingPanel.IsVirtualizingWhenGrouping"
                     Condition.Value="False" />
        </MultiTrigger.Conditions>
        <Setter Setter.Property="ScrollViewer.CanContentScroll"
                Setter.Value="False" />
      </MultiTrigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{x:Type DataGridColumnHeadersPresenter}"
         TargetType="{x:Type DataGridColumnHeadersPresenter}">
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridColumnHeadersPresenter}">
          <Grid>
            <DataGridColumnHeader Name="PART_FillerColumnHeader"
                                  IsHitTestVisible="False" />
            <ItemsPresenter />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ê"
         TargetType="{x:Type Thumb}">
    <Setter Setter.Property="FrameworkElement.Width"
            Setter.Value="8" />
    <Setter Setter.Property="Control.Background"
            Setter.Value="#00FFFFFF" />
    <Setter Setter.Property="FrameworkElement.Cursor"
            Setter.Value="SizeWE" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Border Border.Padding="{TemplateBinding Control.Padding}"
                  Border.Background="{TemplateBinding Control.Background}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ë"
         TargetType="{x:Type Thumb}">
    <Setter Setter.Property="FrameworkElement.Height"
            Setter.Value="8" />
    <Setter Setter.Property="Control.Background"
            Setter.Value="#00FFFFFF" />
    <Setter Setter.Property="FrameworkElement.Cursor"
            Setter.Value="SizeNS" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Border Border.Padding="{TemplateBinding Control.Padding}"
                  Border.Background="{TemplateBinding Control.Background}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Static DataGridColumnHeader.ColumnFloatingHeaderStyleKey}"
         TargetType="{x:Type Control}">
    <Setter Setter.Property="Opacity"
            Setter.Value="0.6" />
    <Setter Setter.Property="Control.BorderBrush"
            Setter.Value="#FF688CAF" />
    <Setter Setter.Property="Control.BorderThickness"
            Setter.Value="1" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Control}">
          <Border Border.BorderThickness="{TemplateBinding Control.BorderThickness}"
                  Border.BorderBrush="{TemplateBinding Control.BorderBrush}"
                  Border.Padding="{TemplateBinding Control.Padding}"
                  Border.Background="{TemplateBinding Control.Background}">
            <Grid>
              <Canvas Name="PART_VisualBrushCanvas"
                      Margin="{TemplateBinding Margin}" />
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Static DataGridColumnHeader.ColumnHeaderDropSeparatorStyleKey}"
         TargetType="{x:Type Separator}">
    <Setter Setter.Property="Control.Background"
            Setter.Value="#FF000080" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Separator}">
          <Border Border.Background="{TemplateBinding Control.Background}"
                  Border.BorderBrush="{TemplateBinding Control.BorderBrush}"
                  Border.BorderThickness="{TemplateBinding Control.BorderThickness}"
                  SnapsToDevicePixels="True" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type DataGridRow}"
         TargetType="{x:Type DataGridRow}">
    <Setter Setter.Property="Control.Background"
            Setter.Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
    <Setter Setter.Property="SnapsToDevicePixels"
            Setter.Value="True" />
    <Setter Setter.Property="Validation.ErrorTemplate"
            Setter.Value="{x:Null}" />
    <Setter Setter.Property="DataGridRow.ValidationErrorTemplate">
      <Setter.Value>
        <ControlTemplate>
          <TextBlock Margin="2,0,0,0"
                     VerticalAlignment="Center"
                     TextBlock.Foreground="#FFFF0000"
                     TextBlock.Text="!" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridRow}">
          <Border x:Name="DGR_Border"
                  Border.Background="{TemplateBinding Control.Background}"
                  Border.BorderBrush="{TemplateBinding Control.BorderBrush}"
                  Border.BorderThickness="{TemplateBinding Control.BorderThickness}"
                  SnapsToDevicePixels="True">
            <SelectiveScrollingGrid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition ColumnDefinition.Width="Auto" />
                <ColumnDefinition ColumnDefinition.Width="*" />
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition RowDefinition.Height="*" />
                <RowDefinition RowDefinition.Height="Auto" />
              </Grid.RowDefinitions>
              <DataGridCellsPresenter Grid.Column="1"
                                      ItemsControl.ItemsPanel="{TemplateBinding DataGridRow.ItemsPanel}"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
              <DataGridDetailsPresenter Grid.Column="1"
                                        Grid.Row="1"
                                        Visibility="{TemplateBinding DataGridRow.DetailsVisibility}"
                                        SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}},Path=AreRowDetailsFrozen,Converter={x:Static DataGrid.RowDetailsScrollingConverter},ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}}" />
              <DataGridRowHeader SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
                                 Grid.RowSpan="2"
                                 Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}},Path=HeadersVisibility,Converter={x:Static DataGrid.HeadersVisibilityConverter},ConverterParameter={x:Static DataGridHeadersVisibility.Row}}" />
            </SelectiveScrollingGrid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Trigger.Property="DataGridRow.IsNewItem"
               Trigger.Value="True">
        <Setter Setter.Property="Margin"
                Setter.Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}},Path=NewItemMargin}" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{x:Type DataGridCellsPresenter}"
         TargetType="{x:Type DataGridCellsPresenter}">
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridCellsPresenter}">
          <ItemsPresenter />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <SolidColorBrush x:Key="{x:Static DataGrid.FocusBorderBrushKey}"
                   SolidColorBrush.Color="#FF000000" />
  <Thickness x:Key="ì">
    1.5
  </Thickness>
  <Style x:Key="{x:Type DataGridCell}"
         TargetType="{x:Type DataGridCell}">
    <Setter Setter.Property="Control.Background"
            Setter.Value="#00FFFFFF" />
    <Setter Setter.Property="Control.BorderBrush"
            Setter.Value="#00FFFFFF" />
    <Setter Setter.Property="Control.BorderThickness"
            Setter.Value="1" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridCell}">
          <Border Name="Bd"
                  Border.Background="{TemplateBinding Control.Background}"
                  Border.BorderBrush="{TemplateBinding Control.BorderBrush}"
                  Border.BorderThickness="{TemplateBinding Control.BorderThickness}"
                  SnapsToDevicePixels="True">
            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
          </Border>
          <ControlTemplate.Triggers>
            <!--<MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Condition.Binding="{Binding Path=(base:AccessibilitySwitches.UseNetFx472CompatibleAccessibilityFeatures)}"
                           Condition.Value="false" />
                <Condition Condition.Binding="{Binding Path=(SystemParameters.HighContrast)}"
                           Condition.Value="true" />
                <Condition Condition.Binding="{Binding Path=IsKeyboardFocused,RelativeSource={RelativeSource Self}}"
                           Condition.Value="true" />
              </MultiDataTrigger.Conditions>
              <Setter Setter.TargetName="Bd"
                      Setter.Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"
                      Setter.Property="Border.BorderBrush" />
              <Setter Setter.TargetName="Bd"
                      Setter.Value="{StaticResource ì}"
                      Setter.Property="Border.BorderThickness" />
            </MultiDataTrigger>-->
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Trigger.Property="DataGridCell.IsSelected"
               Trigger.Value="True">
        <Setter Setter.Property="Control.Background"
                Setter.Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
        <Setter Setter.Property="Control.Foreground"
                Setter.Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
        <Setter Setter.Property="Control.BorderBrush"
                Setter.Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
      </Trigger>
      <Trigger Trigger.Property="IsKeyboardFocusWithin"
               Trigger.Value="True">
        <Setter Setter.Property="Control.BorderBrush"
                Setter.Value="{DynamicResource {x:Static DataGrid.FocusBorderBrushKey}}" />
      </Trigger>
      <!--<MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Condition.Property="DataGridCell.IsSelected"
                     Condition.Value="True" />
          <Condition Condition.Property="Selector.IsSelectionActive"
                     Condition.Value="False" />
        </MultiTrigger.Conditions>
        <Setter Setter.Property="Control.Background"
                Setter.Value="{DynamicResource {x:Static InternalSystemColorsExtendedStart}}" />
        <Setter Setter.Property="Control.BorderBrush"
                Setter.Value="{DynamicResource {x:Static  InternalSystemColorsExtendedStart}}" />
        <Setter Setter.Property="Control.Foreground"
                Setter.Value="{DynamicResource {x:Static  SystemColors.InactiveSelectionHighlightBrush}}" />
      </MultiTrigger>-->
      <Trigger Trigger.Property="IsEnabled"
               Trigger.Value="False">
        <Setter Setter.Property="Control.Foreground"
                Setter.Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
      </Trigger>
      <!--<MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding Path=(base:AccessibilitySwitches.UseNetFx47CompatibleAccessibilityFeatures)}"
                     Condition.Value="false" />
          <Condition Condition.Binding="{Binding Path=(SystemParameters.HighContrast)}"
                     Condition.Value="true" />
        </MultiDataTrigger.Conditions>
        <Setter Setter.Property="FrameworkElement.FocusVisualStyle"
                Setter.Value="{StaticResource è}" />
      </MultiDataTrigger>-->
    </Style.Triggers>
  </Style>
  <Style x:Key="{x:Static DataGridComboBoxColumn.TextBlockComboBoxStyleKey}"
         TargetType="{x:Type ComboBox}">
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ComboBox}">
          <ContentPresenter Margin="1,1,1,1"
                            Content="{TemplateBinding ComboBox.SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemsControl.ItemTemplateSelector}"
                            ContentStringFormat="{TemplateBinding ComboBox.SelectionBoxItemStringFormat}"
                            VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                            HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            IsHitTestVisible="False" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type DataGridColumnHeader}"
         TargetType="{x:Type DataGridColumnHeader}">
    <Setter Setter.Property="Control.VerticalContentAlignment"
            Setter.Value="Center" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
          <Grid>
            <theme:DataGridHeaderBorder SortDirection="{TemplateBinding DataGridColumnHeader.SortDirection}"
                                        IsHovered="{TemplateBinding IsMouseOver}"
                                        IsPressed="{TemplateBinding ButtonBase.IsPressed}"
                                        IsClickable="{TemplateBinding DataGridColumnHeader.CanUserSort}"
                                        Background="{TemplateBinding Control.Background}"
                                        BorderBrush="{TemplateBinding Control.BorderBrush}"
                                        BorderThickness="{TemplateBinding Control.BorderThickness}"
                                        Padding="{TemplateBinding Control.Padding}"
                                        SeparatorVisibility="{TemplateBinding DataGridColumnHeader.SeparatorVisibility}"
                                        SeparatorBrush="{TemplateBinding DataGridColumnHeader.SeparatorBrush}">
              <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                RecognizesAccessKey="True" />
            </theme:DataGridHeaderBorder>
            <Thumb x:Name="PART_LeftHeaderGripper"
                   HorizontalAlignment="Left"
                   Style="{StaticResource ê}" />
            <Thumb x:Name="PART_RightHeaderGripper"
                   HorizontalAlignment="Right"
                   Style="{StaticResource ê}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type DataGridRowHeader}"
         TargetType="{x:Type DataGridRowHeader}">
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridRowHeader}">
          <Grid>
            <theme:DataGridHeaderBorder IsSelected="{TemplateBinding DataGridRowHeader.IsRowSelected}"
                                        IsHovered="{TemplateBinding IsMouseOver}"
                                        IsPressed="{TemplateBinding ButtonBase.IsPressed}"
                                        p8:Border.Background="{TemplateBinding Control.Background}"
                                        p8:Border.BorderBrush="{TemplateBinding Control.BorderBrush}"
                                        p8:Border.BorderThickness="{TemplateBinding Control.BorderThickness}"
                                        p8:Border.Padding="{TemplateBinding Control.Padding}"
                                        Orientation="Horizontal"
                                        SeparatorVisibility="{TemplateBinding DataGridRowHeader.SeparatorVisibility}"
                                        SeparatorBrush="{TemplateBinding DataGridRowHeader.SeparatorBrush}"
                                        xmlns:p8="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
              <StackPanel StackPanel.Orientation="Horizontal">
                <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                  VerticalAlignment="Center"
                                  RecognizesAccessKey="True" />
                <Control SnapsToDevicePixels="False"
                         Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}},Path=(Validation.HasError),Converter={StaticResource é}}"
                         Control.Template="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}},Path=ValidationErrorTemplate}" />
              </StackPanel>
            </theme:DataGridHeaderBorder>
            <Thumb x:Name="PART_TopHeaderGripper"
                   VerticalAlignment="Top"
                   Style="{StaticResource ë}" />
            <Thumb x:Name="PART_BottomHeaderGripper"
                   VerticalAlignment="Bottom"
                   Style="{StaticResource ë}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type DatePicker}"
         TargetType="{x:Type DatePicker}">
    <Setter Setter.Property="Control.Foreground"
            Setter.Value="#FF333333" />
    <Setter Setter.Property="DatePicker.IsTodayHighlighted"
            Setter.Value="True" />
    <Setter Setter.Property="DatePicker.SelectedDateFormat"
            Setter.Value="Short" />
    <Setter Setter.Property="Control.Background"
            Setter.Value="#00FFFFFF" />
    <Setter Setter.Property="Control.Padding"
            Setter.Value="2" />
    <Setter Setter.Property="Control.BorderBrush">
      <Setter.Value>
        <LinearGradientBrush LinearGradientBrush.EndPoint=".5,0"
                             LinearGradientBrush.StartPoint=".5,1">
          <GradientStop Color="#FFA3AEB9"
                        Offset="0" />
          <GradientStop Color="#FF8399A9"
                        Offset="0.375" />
          <GradientStop Color="#FF718597"
                        Offset="0.375" />
          <GradientStop Color="#FF617584"
                        Offset="1" />
        </LinearGradientBrush>
      </Setter.Value>
    </Setter>
    <Setter Setter.Property="Control.BorderThickness"
            Setter.Value="1" />
    <Setter Setter.Property="Control.HorizontalContentAlignment"
            Setter.Value="Stretch" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DatePicker}">
          <Border Border.BorderBrush="{TemplateBinding Control.BorderBrush}"
                  Border.BorderThickness="{TemplateBinding Control.BorderThickness}"
                  Border.Background="{TemplateBinding Control.Background}"
                  Border.Padding="{TemplateBinding Control.Padding}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="PART_DisabledVisual"
                                     Storyboard.TargetProperty="Opacity"
                                     DoubleAnimation.To="1"
                                     Timeline.Duration="0" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Decorator.Child>
              <Grid x:Name="PART_Root"
                    HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                    VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}">
                <FrameworkElement.Resources>
                  <ResourceDictionary>
                    <SolidColorBrush x:Key="í"
                                     SolidColorBrush.Color="#A5FFFFFF" />
                    <ControlTemplate x:Key="î"
                                     TargetType="{x:Type Button}">
                      <Grid>
                        <VisualStateManager.VisualStateGroups>
                          <VisualStateGroup x:Name="CommonStates">
                            <VisualStateGroup.Transitions>
                              <VisualTransition VisualTransition.GeneratedDuration="0" />
                              <VisualTransition VisualTransition.To="MouseOver"
                                                VisualTransition.GeneratedDuration="0:0:0.1" />
                              <VisualTransition VisualTransition.To="Pressed"
                                                VisualTransition.GeneratedDuration="0:0:0.1" />
                            </VisualStateGroup.Transitions>
                            <VisualState x:Name="Normal" />
                            <VisualState x:Name="MouseOver">
                              <Storyboard>
                                <ColorAnimation Timeline.Duration="0"
                                                Storyboard.TargetName="Background"
                                                Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                ColorAnimation.To="#FF448DCA" />
                                <ColorAnimationUsingKeyFrames Timeline.BeginTime="0"
                                                              Timeline.Duration="00:00:00.001"
                                                              Storyboard.TargetName="BackgroundGradient"
                                                              Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(Color)">
                                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="0"
                                                       ColorKeyFrame.Value="#7FFFFFFF" />
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Timeline.BeginTime="0"
                                                              Timeline.Duration="00:00:00.001"
                                                              Storyboard.TargetName="BackgroundGradient"
                                                              Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(Color)">
                                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="0"
                                                       ColorKeyFrame.Value="#CCFFFFFF" />
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Timeline.BeginTime="0"
                                                              Timeline.Duration="00:00:00.001"
                                                              Storyboard.TargetName="BackgroundGradient"
                                                              Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(Color)">
                                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="0"
                                                       ColorKeyFrame.Value="#F2FFFFFF" />
                                </ColorAnimationUsingKeyFrames>
                              </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Pressed">
                              <Storyboard>
                                <ColorAnimationUsingKeyFrames Timeline.BeginTime="0"
                                                              Timeline.Duration="00:00:00.001"
                                                              Storyboard.TargetName="Background"
                                                              Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="0"
                                                       ColorKeyFrame.Value="#FF448DCA" />
                                </ColorAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="0"
                                                               Timeline.Duration="00:00:00.001"
                                                               Storyboard.TargetName="Highlight"
                                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="0"
                                                        DoubleKeyFrame.Value="1" />
                                </DoubleAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Timeline.BeginTime="0"
                                                              Timeline.Duration="00:00:00.001"
                                                              Storyboard.TargetName="BackgroundGradient"
                                                              Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(Color)">
                                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="0"
                                                       ColorKeyFrame.Value="#EAFFFFFF" />
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Timeline.BeginTime="0"
                                                              Timeline.Duration="00:00:00.001"
                                                              Storyboard.TargetName="BackgroundGradient"
                                                              Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(Color)">
                                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="0"
                                                       ColorKeyFrame.Value="#C6FFFFFF" />
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Timeline.BeginTime="0"
                                                              Timeline.Duration="00:00:00.001"
                                                              Storyboard.TargetName="BackgroundGradient"
                                                              Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(Color)">
                                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="0"
                                                       ColorKeyFrame.Value="#6BFFFFFF" />
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Timeline.BeginTime="0"
                                                              Timeline.Duration="00:00:00.001"
                                                              Storyboard.TargetName="BackgroundGradient"
                                                              Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(Color)">
                                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="0"
                                                       ColorKeyFrame.Value="#F4FFFFFF" />
                                </ColorAnimationUsingKeyFrames>
                              </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Disabled" />
                          </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid Height="18"
                              Width="19"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Margin="0"
                              Panel.Background="#11FFFFFF"
                              FlowDirection="LeftToRight">
                          <Grid.ColumnDefinitions>
                            <ColumnDefinition ColumnDefinition.Width="20*" />
                            <ColumnDefinition ColumnDefinition.Width="20*" />
                            <ColumnDefinition ColumnDefinition.Width="20*" />
                            <ColumnDefinition ColumnDefinition.Width="20*" />
                          </Grid.ColumnDefinitions>
                          <Grid.RowDefinitions>
                            <RowDefinition RowDefinition.Height="23*" />
                            <RowDefinition RowDefinition.Height="19*" />
                            <RowDefinition RowDefinition.Height="19*" />
                            <RowDefinition RowDefinition.Height="19*" />
                          </Grid.RowDefinitions>
                          <Border x:Name="Highlight"
                                  Margin="-1"
                                  Grid.ColumnSpan="4"
                                  Grid.Row="0"
                                  Grid.RowSpan="4"
                                  Border.BorderThickness="1"
                                  Border.BorderBrush="#FF45D6FA"
                                  Opacity="0"
                                  Border.CornerRadius="0,0,1,1" />
                          <Border x:Name="Background"
                                  Margin="0,-1,0,0"
                                  Grid.ColumnSpan="4"
                                  Grid.Row="1"
                                  Grid.RowSpan="3"
                                  Border.BorderThickness="1"
                                  Border.BorderBrush="#FFFFFFFF"
                                  Opacity="1"
                                  Border.CornerRadius=".5"
                                  Border.Background="#FF1F3B53" />
                          <Border x:Name="BackgroundGradient"
                                  Margin="0,-1,0,0"
                                  Grid.ColumnSpan="4"
                                  Grid.Row="1"
                                  Grid.RowSpan="3"
                                  Border.BorderThickness="1"
                                  Border.BorderBrush="#BF000000"
                                  Opacity="1"
                                  Border.CornerRadius=".5">
                            <Border.Background>
                              <LinearGradientBrush LinearGradientBrush.StartPoint=".7,0"
                                                   LinearGradientBrush.EndPoint=".7,1">
                                <GradientStop Color="#FFFFFFFF"
                                              Offset="0" />
                                <GradientStop Color="#F9FFFFFF"
                                              Offset="0.375" />
                                <GradientStop Color="#E5FFFFFF"
                                              Offset="0.625" />
                                <GradientStop Color="#C6FFFFFF"
                                              Offset="1" />
                              </LinearGradientBrush>
                            </Border.Background>
                          </Border>
                          <Rectangle Grid.ColumnSpan="4"
                                     Grid.RowSpan="1"
                                     Shape.StrokeThickness="1">
                            <Shape.Stroke>
                              <LinearGradientBrush LinearGradientBrush.EndPoint="0.48,-1"
                                                   LinearGradientBrush.StartPoint="0.48,1.25">
                                <GradientStop Color="#FF494949" />
                                <GradientStop Color="#FF9F9F9F"
                                              Offset="1" />
                              </LinearGradientBrush>
                            </Shape.Stroke>
                            <Shape.Fill>
                              <LinearGradientBrush LinearGradientBrush.EndPoint="0.3,-1.1"
                                                   LinearGradientBrush.StartPoint="0.46,1.6">
                                <GradientStop Color="#FF4084BD" />
                                <GradientStop Color="#FFAFCFEA"
                                              Offset="1" />
                              </LinearGradientBrush>
                            </Shape.Fill>
                          </Rectangle>
                          <Path HorizontalAlignment="Center"
                                Margin="4,3,4,3"
                                VerticalAlignment="Center"
                                RenderTransformOrigin="0.5,0.5"
                                Grid.Column="0"
                                Grid.Row="1"
                                Shape.Fill="#FF2F2F2F"
                                Shape.Stretch="Fill"
                                Path.Data="M11.426758,8.4305077L11.749023,8.4305077 11.749023,16.331387 10.674805,16.331387 10.674805,10.299648 9.0742188,11.298672 9.0742188,10.294277C9.4788408,10.090176 9.9094238,9.8090878 10.365967,9.4510155 10.82251,9.0929432 11.176106,8.7527733 11.426758,8.4305077z M14.65086,8.4305077L18.566387,8.4305077 18.566387,9.3435936 15.671368,9.3435936 15.671368,11.255703C15.936341,11.058764 16.27293,10.960293 16.681133,10.960293 17.411602,10.960293 17.969301,11.178717 18.354229,11.615566 18.739157,12.052416 18.931622,12.673672 18.931622,13.479336 18.931622,15.452317 18.052553,16.438808 16.294415,16.438808 15.560365,16.438808 14.951641,16.234707 14.468243,15.826504L14.881817,14.929531C15.368796,15.326992 15.837872,15.525723 16.289043,15.525723 17.298809,15.525723 17.803692,14.895514 17.803692,13.635098 17.803692,12.460618 17.305971,11.873379 16.310528,11.873379 15.83071,11.873379 15.399232,12.079271 15.016094,12.491055L14.65086,12.238613z"
                                Grid.ColumnSpan="4"
                                Grid.RowSpan="3" />
                          <Ellipse HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   Shape.Fill="#FFFFFFFF"
                                   Shape.StrokeThickness="0"
                                   Grid.ColumnSpan="4"
                                   Width="3"
                                   Height="3" />
                          <Border x:Name="DisabledVisual"
                                  Grid.ColumnSpan="4"
                                  Grid.Row="0"
                                  Grid.RowSpan="4"
                                  Border.BorderThickness="1"
                                  Border.BorderBrush="#B2FFFFFF"
                                  Opacity="0"
                                  Border.CornerRadius="0,0,.5,.5" />
                        </Grid>
                      </Grid>
                    </ControlTemplate>
                  </ResourceDictionary>
                </FrameworkElement.Resources>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition ColumnDefinition.Width="*" />
                  <ColumnDefinition ColumnDefinition.Width="Auto" />
                </Grid.ColumnDefinitions>
                <Button x:Name="PART_Button"
                        Grid.Row="0"
                        Grid.Column="1"
                        Control.Template="{StaticResource î}"
                        Control.Foreground="{TemplateBinding Control.Foreground}"
                        Width="20"
                        Margin="3,0,3,0"
                        Focusable="False"
                        VerticalAlignment="Top"
                        HorizontalAlignment="Left" />
                <DatePickerTextBox x:Name="PART_TextBox"
                                   Grid.Row="0"
                                   Grid.Column="0"
                                   Control.HorizontalContentAlignment="Stretch"
                                   Control.VerticalContentAlignment="Stretch"
                                   Focusable="{TemplateBinding Focusable}" />
                <Grid x:Name="PART_DisabledVisual"
                      Opacity="0"
                      IsHitTestVisible="False"
                      Grid.Row="0"
                      Grid.Column="0"
                      Grid.ColumnSpan="2">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition ColumnDefinition.Width="*" />
                    <ColumnDefinition ColumnDefinition.Width="Auto" />
                  </Grid.ColumnDefinitions>
                  <Rectangle Grid.Row="0"
                             Grid.Column="0"
                             Rectangle.RadiusX="1"
                             Rectangle.RadiusY="1"
                             Shape.Fill="#A5FFFFFF" />
                  <Rectangle Grid.Row="0"
                             Grid.Column="1"
                             Rectangle.RadiusX="1"
                             Rectangle.RadiusY="1"
                             Shape.Fill="#A5FFFFFF"
                             Height="18"
                             Width="19"
                             Margin="3,0,3,0" />
                  <Popup x:Name="PART_Popup"
                         Popup.Placement="Bottom"
                         Popup.StaysOpen="False"
                         Popup.AllowsTransparency="True"
                         Popup.PlacementTarget="{Binding ElementName=PART_TextBox}" />
                </Grid>
              </Grid>
            </Decorator.Child>
          </Border>
          <ControlTemplate.Triggers>
            <DataTrigger DataTrigger.Value="false"
                         DataTrigger.Binding="{Binding Path=(SystemParameters.HighContrast)}">
              <Setter Setter.TargetName="PART_TextBox"
                      Setter.Value="{Binding Path=Foreground,RelativeSource={RelativeSource TemplatedParent}}"
                      Setter.Property="Control.Foreground" />
            </DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type DatePickerTextBox}"
         TargetType="{x:Type DatePickerTextBox}">
    <Style.Triggers>
      <!--<DataTrigger DataTrigger.Binding="{Binding Path=(base:AccessibilitySwitches.UseNetFx472CompatibleAccessibilityFeatures)}"
                   DataTrigger.Value="false">
        <Setter Setter.Property="AutomationProperties.Name"
                Setter.Value="{Binding Path=(AutomationProperties.Name),Mode=OneWay,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type DatePicker}}}" />
        <Setter Setter.Property="AutomationProperties.LabeledBy"
                Setter.Value="{Binding Path=(AutomationProperties.LabeledBy),Mode=OneWay,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type DatePicker}}}" />
        <Setter Setter.Property="AutomationProperties.HelpText"
                Setter.Value="{Binding Path=(AutomationProperties.HelpText),Mode=OneWay,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type DatePicker}}}" />
      </DataTrigger>-->
    </Style.Triggers>
    <Setter Setter.Property="Control.Foreground"
            Setter.Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
    <Setter Setter.Property="Control.Background"
            Setter.Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
    <Setter Setter.Property="ScrollViewer.PanningMode"
            Setter.Value="VerticalFirst" />
    <Setter Setter.Property="Stylus.IsFlicksEnabled"
            Setter.Value="False" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DatePickerTextBox}">
          <Grid>
            <FrameworkElement.Resources>
              <ResourceDictionary>
                <SolidColorBrush x:Key="ï"
                                 SolidColorBrush.Color="#FFAAAAAA" />
              </ResourceDictionary>
            </FrameworkElement.Resources>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition VisualTransition.GeneratedDuration="0" />
                  <VisualTransition VisualTransition.To="MouseOver"
                                    VisualTransition.GeneratedDuration="0:0:0.1" />
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ColorAnimation Storyboard.TargetName="ContentElement"
                                    Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                    ColorAnimation.To="#FF99C1E2"
                                    Timeline.Duration="0" />
                    <ColorAnimation Storyboard.TargetName="watermark_decorator"
                                    Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                    ColorAnimation.To="#FF99C1E2"
                                    Timeline.Duration="0" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="WatermarkStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition VisualTransition.GeneratedDuration="0" />
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Unwatermarked" />
                <VisualState x:Name="Watermarked">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="ContentElement"
                                     Storyboard.TargetProperty="Opacity"
                                     DoubleAnimation.To="0"
                                     Timeline.Duration="0" />
                    <DoubleAnimation Storyboard.TargetName="PART_Watermark"
                                     Storyboard.TargetProperty="Opacity"
                                     DoubleAnimation.To="1"
                                     Timeline.Duration="0" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition VisualTransition.GeneratedDuration="0" />
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Unfocused" />
                <VisualState x:Name="Focused">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="FocusVisual"
                                     Storyboard.TargetProperty="Opacity"
                                     DoubleAnimation.To="1"
                                     Timeline.Duration="0" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="Border"
                    Border.Background="{TemplateBinding Control.Background}"
                    Border.BorderBrush="{TemplateBinding Control.BorderBrush}"
                    Border.BorderThickness="{TemplateBinding Control.BorderThickness}"
                    Border.Padding="{TemplateBinding Control.Padding}"
                    Border.CornerRadius="1"
                    Opacity="1">
              <Grid x:Name="WatermarkContent"
                    HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                    VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}">
                <Border x:Name="ContentElement"
                        Border.BorderThickness="1">
                  <Border.BorderBrush>
                    <SolidColorBrush SolidColorBrush.Color="#FFFFFFFF" />
                  </Border.BorderBrush>
                </Border>
                <Border x:Name="watermark_decorator"
                        Border.BorderThickness="1">
                  <Border.BorderBrush>
                    <SolidColorBrush SolidColorBrush.Color="#FFFFFFFF" />
                  </Border.BorderBrush>
                  <ContentControl x:Name="PART_Watermark"
                                  Opacity="0"
                                  Focusable="False"
                                  IsHitTestVisible="False"
                                  Control.Padding="2" />
                </Border>
                <ScrollViewer x:Name="PART_ContentHost"
                              Margin="0"
                              Control.HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              Control.VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                <Border x:Name="FocusVisual"
                        Border.BorderBrush="#FF45D6FA"
                        Border.CornerRadius="1"
                        Opacity="0"
                        IsHitTestVisible="False" />
              </Grid>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <LinearGradientBrush x:Key="ð"
                       LinearGradientBrush.StartPoint="0,0"
                       LinearGradientBrush.EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="White"
                    Offset="0" />
      <GradientStop Color="#FFBFBFBF"
                    Offset="0.5" />
      <GradientStop Color="#FF878787"
                    Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="FocusVisualStyle"
                       LinearGradientBrush.StartPoint="0,0"
                       LinearGradientBrush.EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FFF0F8FE"
                    Offset="0" />
      <GradientStop Color="#FFE0F3FE"
                    Offset="0.3" />
      <GradientStop Color="#FF6FA7C5"
                    Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ò"
                       LinearGradientBrush.StartPoint="0,0"
                       LinearGradientBrush.EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FFDCF0FA"
                    Offset="0" />
      <GradientStop Color="#FFC5E6F7"
                    Offset="0.2" />
      <GradientStop Color="#FF5690D0"
                    Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="ó"
                   SolidColorBrush.Color="DarkGray" />
  <SolidColorBrush x:Key="ô"
                   SolidColorBrush.Color="Transparent" />
  <SolidColorBrush x:Key="õ"
                   SolidColorBrush.Color="#666" />
  <SolidColorBrush x:Key="ö"
                   SolidColorBrush.Color="#FF3C7FB1" />
  <SolidColorBrush x:Key="÷"
                   SolidColorBrush.Color="Transparent" />
  <SolidColorBrush x:Key="ø"
                   SolidColorBrush.Color="#222" />
  <SolidColorBrush x:Key="ù"
                   SolidColorBrush.Color="#FF526C7B" />
  <SolidColorBrush x:Key="ú"
                   SolidColorBrush.Color="Transparent" />
  <SolidColorBrush x:Key="û"
                   SolidColorBrush.Color="#FF003366" />
  <SolidColorBrush x:Key="ü"
                   SolidColorBrush.Color="DarkGray" />
  <SolidColorBrush x:Key="ý"
                   SolidColorBrush.Color="Transparent" />
  <SolidColorBrush x:Key="þ"
                   SolidColorBrush.Color="#666" />
  <Style x:Key="ÿ">
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Border>
            <Rectangle Margin="0"
                       Shape.StrokeThickness="1"
                       Shape.Stroke="#FF000000"
                       Shape.StrokeDashArray="1 2"
                       SnapsToDevicePixels="True" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="Ā"
         TargetType="{x:Type ToggleButton}">
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Border.Padding="{TemplateBinding Control.Padding}">
            <Grid Panel.Background="#00FFFFFF"
                  SnapsToDevicePixels="False">
              <Grid.ColumnDefinitions>
                <ColumnDefinition ColumnDefinition.Width="19" />
                <ColumnDefinition ColumnDefinition.Width="*" />
              </Grid.ColumnDefinitions>
              <Ellipse x:Name="circle"
                       Width="19"
                       Height="19"
                       Shape.Stroke="{StaticResource ó}"
                       Shape.Fill="{StaticResource ô}"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center" />
              <Path x:Name="arrow"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Shape.Stroke="{StaticResource õ}"
                    Shape.StrokeThickness="2"
                    SnapsToDevicePixels="False"
                    Path.Data="M1,1.5L4.5,5 8,1.5" />
              <ContentPresenter Grid.Column="1"
                                Margin="4,0,0,0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                SnapsToDevicePixels="True"
                                RecognizesAccessKey="True" />
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="ToggleButton.IsChecked"
                     Trigger.Value="true">
              <Setter Setter.TargetName="arrow"
                      Setter.Property="Path.Data"
                      Setter.Value="M1,4.5L4.5,1 8,4.5" />
            </Trigger>
            <Trigger Trigger.Property="IsMouseOver"
                     Trigger.Value="True">
              <Setter Setter.Value="{StaticResource ö}"
                      Setter.TargetName="circle"
                      Setter.Property="Shape.Stroke" />
              <Setter Setter.Value="{StaticResource ÷}"
                      Setter.TargetName="circle"
                      Setter.Property="Shape.Fill" />
              <Setter Setter.Value="{StaticResource ø}"
                      Setter.TargetName="arrow"
                      Setter.Property="Shape.Stroke" />
            </Trigger>
            <Trigger Trigger.Property="ButtonBase.IsPressed"
                     Trigger.Value="True">
              <Setter Setter.Value="{StaticResource ù}"
                      Setter.TargetName="circle"
                      Setter.Property="Shape.Stroke" />
              <Setter Setter.TargetName="circle"
                      Setter.Property="Shape.StrokeThickness"
                      Setter.Value="1.5" />
              <Setter Setter.Value="{StaticResource ú}"
                      Setter.TargetName="circle"
                      Setter.Property="Shape.Fill" />
              <Setter Setter.Value="{StaticResource û}"
                      Setter.TargetName="arrow"
                      Setter.Property="Shape.Stroke" />
            </Trigger>
            <Trigger Trigger.Property="IsEnabled"
                     Trigger.Value="False">
              <Setter Setter.Value="{StaticResource ü}"
                      Setter.TargetName="circle"
                      Setter.Property="Shape.Stroke" />
              <Setter Setter.Value="{StaticResource ý}"
                      Setter.TargetName="circle"
                      Setter.Property="Shape.Fill" />
              <Setter Setter.Value="{StaticResource þ}"
                      Setter.TargetName="arrow"
                      Setter.Property="Shape.Stroke" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ā"
         TargetType="{x:Type ToggleButton}">
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Border.Padding="{TemplateBinding Control.Padding}">
            <Grid Panel.Background="#00FFFFFF"
                  SnapsToDevicePixels="False">
              <Grid.ColumnDefinitions>
                <ColumnDefinition ColumnDefinition.Width="19" />
                <ColumnDefinition ColumnDefinition.Width="*" />
              </Grid.ColumnDefinitions>
              <Grid>
                <FrameworkElement.LayoutTransform>
                  <TransformGroup>
                    <TransformGroup.Children>
                      <TransformCollection>
                        <RotateTransform RotateTransform.Angle="180" />
                      </TransformCollection>
                    </TransformGroup.Children>
                  </TransformGroup>
                </FrameworkElement.LayoutTransform>
                <Ellipse x:Name="circle"
                         Width="19"
                         Height="19"
                         Shape.Stroke="{StaticResource ó}"
                         Shape.Fill="{StaticResource ô}"
                         HorizontalAlignment="Center"
                         VerticalAlignment="Center" />
                <Path x:Name="arrow"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Shape.Stroke="{StaticResource õ}"
                      Shape.StrokeThickness="2"
                      SnapsToDevicePixels="False"
                      Path.Data="M1,1.5L4.5,5 8,1.5" />
              </Grid>
              <ContentPresenter Grid.Column="1"
                                Margin="4,0,0,0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                SnapsToDevicePixels="True"
                                RecognizesAccessKey="True" />
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="ToggleButton.IsChecked"
                     Trigger.Value="true">
              <Setter Setter.TargetName="arrow"
                      Setter.Property="Path.Data"
                      Setter.Value="M1,4.5L4.5,1 8,4.5" />
            </Trigger>
            <Trigger Trigger.Property="IsMouseOver"
                     Trigger.Value="True">
              <Setter Setter.Value="{StaticResource ö}"
                      Setter.TargetName="circle"
                      Setter.Property="Shape.Stroke" />
              <Setter Setter.Value="{StaticResource ÷}"
                      Setter.TargetName="circle"
                      Setter.Property="Shape.Fill" />
              <Setter Setter.Value="{StaticResource ø}"
                      Setter.TargetName="arrow"
                      Setter.Property="Shape.Stroke" />
            </Trigger>
            <Trigger Trigger.Property="ButtonBase.IsPressed"
                     Trigger.Value="True">
              <Setter Setter.Value="{StaticResource ù}"
                      Setter.TargetName="circle"
                      Setter.Property="Shape.Stroke" />
              <Setter Setter.TargetName="circle"
                      Setter.Property="Shape.StrokeThickness"
                      Setter.Value="1.5" />
              <Setter Setter.Value="{StaticResource ú}"
                      Setter.TargetName="circle"
                      Setter.Property="Shape.Fill" />
              <Setter Setter.Value="{StaticResource û}"
                      Setter.TargetName="arrow"
                      Setter.Property="Shape.Stroke" />
            </Trigger>
            <Trigger Trigger.Property="IsEnabled"
                     Trigger.Value="False">
              <Setter Setter.Value="{StaticResource ü}"
                      Setter.TargetName="circle"
                      Setter.Property="Shape.Stroke" />
              <Setter Setter.Value="{StaticResource ý}"
                      Setter.TargetName="circle"
                      Setter.Property="Shape.Fill" />
              <Setter Setter.Value="{StaticResource þ}"
                      Setter.TargetName="arrow"
                      Setter.Property="Shape.Stroke" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="Ă"
         TargetType="{x:Type ToggleButton}">
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Border.Padding="{TemplateBinding Control.Padding}">
            <Grid Panel.Background="#00FFFFFF"
                  SnapsToDevicePixels="False">
              <Grid.RowDefinitions>
                <RowDefinition RowDefinition.Height="19" />
                <RowDefinition RowDefinition.Height="*" />
              </Grid.RowDefinitions>
              <Grid>
                <FrameworkElement.LayoutTransform>
                  <TransformGroup>
                    <TransformGroup.Children>
                      <TransformCollection>
                        <RotateTransform RotateTransform.Angle="90" />
                      </TransformCollection>
                    </TransformGroup.Children>
                  </TransformGroup>
                </FrameworkElement.LayoutTransform>
                <Ellipse x:Name="circle"
                         Width="19"
                         Height="19"
                         Shape.Stroke="{StaticResource ó}"
                         Shape.Fill="{StaticResource ô}"
                         HorizontalAlignment="Center"
                         VerticalAlignment="Center" />
                <Path x:Name="arrow"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Shape.Stroke="{StaticResource õ}"
                      Shape.StrokeThickness="2"
                      SnapsToDevicePixels="False"
                      Path.Data="M1,1.5L4.5,5 8,1.5" />
              </Grid>
              <ContentPresenter Grid.Row="1"
                                Margin="0,4,0,0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Top"
                                SnapsToDevicePixels="True"
                                RecognizesAccessKey="True" />
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="ToggleButton.IsChecked"
                     Trigger.Value="true">
              <Setter Setter.TargetName="arrow"
                      Setter.Property="Path.Data"
                      Setter.Value="M1,4.5L4.5,1 8,4.5" />
            </Trigger>
            <Trigger Trigger.Property="IsMouseOver"
                     Trigger.Value="True">
              <Setter Setter.Value="{StaticResource ö}"
                      Setter.TargetName="circle"
                      Setter.Property="Shape.Stroke" />
              <Setter Setter.Value="{StaticResource ÷}"
                      Setter.TargetName="circle"
                      Setter.Property="Shape.Fill" />
              <Setter Setter.Value="{StaticResource ø}"
                      Setter.TargetName="arrow"
                      Setter.Property="Shape.Stroke" />
            </Trigger>
            <Trigger Trigger.Property="ButtonBase.IsPressed"
                     Trigger.Value="True">
              <Setter Setter.Value="{StaticResource ù}"
                      Setter.TargetName="circle"
                      Setter.Property="Shape.Stroke" />
              <Setter Setter.TargetName="circle"
                      Setter.Property="Shape.StrokeThickness"
                      Setter.Value="1.5" />
              <Setter Setter.Value="{StaticResource ú}"
                      Setter.TargetName="circle"
                      Setter.Property="Shape.Fill" />
              <Setter Setter.Value="{StaticResource û}"
                      Setter.TargetName="arrow"
                      Setter.Property="Shape.Stroke" />
            </Trigger>
            <Trigger Trigger.Property="IsEnabled"
                     Trigger.Value="False">
              <Setter Setter.Value="{StaticResource ü}"
                      Setter.TargetName="circle"
                      Setter.Property="Shape.Stroke" />
              <Setter Setter.Value="{StaticResource ý}"
                      Setter.TargetName="circle"
                      Setter.Property="Shape.Fill" />
              <Setter Setter.Value="{StaticResource þ}"
                      Setter.TargetName="arrow"
                      Setter.Property="Shape.Stroke" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ă"
         TargetType="{x:Type ToggleButton}">
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Border.Padding="{TemplateBinding Control.Padding}">
            <Grid Panel.Background="#00FFFFFF"
                  SnapsToDevicePixels="False">
              <Grid.RowDefinitions>
                <RowDefinition RowDefinition.Height="19" />
                <RowDefinition RowDefinition.Height="*" />
              </Grid.RowDefinitions>
              <Grid>
                <FrameworkElement.LayoutTransform>
                  <TransformGroup>
                    <TransformGroup.Children>
                      <TransformCollection>
                        <RotateTransform RotateTransform.Angle="-90" />
                      </TransformCollection>
                    </TransformGroup.Children>
                  </TransformGroup>
                </FrameworkElement.LayoutTransform>
                <Ellipse x:Name="circle"
                         Width="19"
                         Height="19"
                         Shape.Stroke="{StaticResource ó}"
                         Shape.Fill="{StaticResource ô}"
                         HorizontalAlignment="Center"
                         VerticalAlignment="Center" />
                <Path x:Name="arrow"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Shape.Stroke="{StaticResource õ}"
                      Shape.StrokeThickness="2"
                      SnapsToDevicePixels="False"
                      Path.Data="M1,1.5L4.5,5 8,1.5" />
              </Grid>
              <ContentPresenter Grid.Row="1"
                                Margin="0,4,0,0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Top"
                                SnapsToDevicePixels="True"
                                RecognizesAccessKey="True" />
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="ToggleButton.IsChecked"
                     Trigger.Value="true">
              <Setter Setter.TargetName="arrow"
                      Setter.Property="Path.Data"
                      Setter.Value="M1,4.5L4.5,1 8,4.5" />
            </Trigger>
            <Trigger Trigger.Property="IsMouseOver"
                     Trigger.Value="True">
              <Setter Setter.Value="{StaticResource ö}"
                      Setter.TargetName="circle"
                      Setter.Property="Shape.Stroke" />
              <Setter Setter.Value="{StaticResource ÷}"
                      Setter.TargetName="circle"
                      Setter.Property="Shape.Fill" />
              <Setter Setter.Value="{StaticResource ø}"
                      Setter.TargetName="arrow"
                      Setter.Property="Shape.Stroke" />
            </Trigger>
            <Trigger Trigger.Property="ButtonBase.IsPressed"
                     Trigger.Value="True">
              <Setter Setter.Value="{StaticResource ù}"
                      Setter.TargetName="circle"
                      Setter.Property="Shape.Stroke" />
              <Setter Setter.TargetName="circle"
                      Setter.Property="Shape.StrokeThickness"
                      Setter.Value="1.5" />
              <Setter Setter.Value="{StaticResource ú}"
                      Setter.TargetName="circle"
                      Setter.Property="Shape.Fill" />
              <Setter Setter.Value="{StaticResource û}"
                      Setter.TargetName="arrow"
                      Setter.Property="Shape.Stroke" />
            </Trigger>
            <Trigger Trigger.Property="IsEnabled"
                     Trigger.Value="False">
              <Setter Setter.Value="{StaticResource ü}"
                      Setter.TargetName="circle"
                      Setter.Property="Shape.Stroke" />
              <Setter Setter.Value="{StaticResource ý}"
                      Setter.TargetName="circle"
                      Setter.Property="Shape.Fill" />
              <Setter Setter.Value="{StaticResource þ}"
                      Setter.TargetName="arrow"
                      Setter.Property="Shape.Stroke" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type Expander}"
         TargetType="{x:Type Expander}">
    <Setter Setter.Property="Control.Foreground"
            Setter.Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Setter.Property="Control.Background"
            Setter.Value="#00FFFFFF" />
    <Setter Setter.Property="Control.HorizontalContentAlignment"
            Setter.Value="Stretch" />
    <Setter Setter.Property="Control.VerticalContentAlignment"
            Setter.Value="Stretch" />
    <Setter Setter.Property="Control.BorderBrush"
            Setter.Value="#00FFFFFF" />
    <Setter Setter.Property="Control.BorderThickness"
            Setter.Value="1" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Expander}">
          <Border Border.BorderBrush="{TemplateBinding Control.BorderBrush}"
                  Border.BorderThickness="{TemplateBinding Control.BorderThickness}"
                  Border.Background="{TemplateBinding Control.Background}"
                  Border.CornerRadius="3"
                  SnapsToDevicePixels="True">
            <DockPanel>
              <ToggleButton x:Name="HeaderSite"
                            DockPanel.Dock="Top"
                            Margin="1"
                            MinWidth="0"
                            MinHeight="0"
                            Style="{StaticResource Ā}"
                            FocusVisualStyle="{StaticResource ÿ}"
                            ContentControl.Content="{TemplateBinding HeaderedContentControl.Header}"
                            ContentControl.ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}"
                            ContentControl.ContentTemplateSelector="{TemplateBinding HeaderedContentControl.HeaderTemplateSelector}"
                            Control.Foreground="{TemplateBinding Control.Foreground}"
                            Control.Padding="{TemplateBinding Control.Padding}"
                            Control.FontFamily="{TemplateBinding Control.FontFamily}"
                            Control.FontSize="{TemplateBinding Control.FontSize}"
                            Control.FontStyle="{TemplateBinding Control.FontStyle}"
                            Control.FontStretch="{TemplateBinding Control.FontStretch}"
                            Control.FontWeight="{TemplateBinding Control.FontWeight}"
                            Control.HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                            Control.VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                            ToggleButton.IsChecked="{Binding Path=IsExpanded,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" />
              <ContentPresenter Name="ExpandSite"
                                DockPanel.Dock="Bottom"
                                Visibility="Collapsed"
                                Focusable="False"
                                HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                Margin="{TemplateBinding Control.Padding}" />
            </DockPanel>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="Expander.IsExpanded"
                     Trigger.Value="True">
              <Setter Setter.TargetName="ExpandSite"
                      Setter.Property="Visibility"
                      Setter.Value="Visible" />
            </Trigger>
            <Trigger Trigger.Property="Expander.ExpandDirection"
                     Trigger.Value="Right">
              <Setter Setter.TargetName="ExpandSite"
                      Setter.Property="DockPanel.Dock"
                      Setter.Value="Right" />
              <Setter Setter.TargetName="HeaderSite"
                      Setter.Property="DockPanel.Dock"
                      Setter.Value="Left" />
              <Setter Setter.Value="{StaticResource ă}"
                      Setter.TargetName="HeaderSite"
                      Setter.Property="FrameworkElement.Style" />
            </Trigger>
            <Trigger Trigger.Property="Expander.ExpandDirection"
                     Trigger.Value="Up">
              <Setter Setter.TargetName="ExpandSite"
                      Setter.Property="DockPanel.Dock"
                      Setter.Value="Top" />
              <Setter Setter.TargetName="HeaderSite"
                      Setter.Property="DockPanel.Dock"
                      Setter.Value="Bottom" />
              <Setter Setter.Value="{StaticResource ā}"
                      Setter.TargetName="HeaderSite"
                      Setter.Property="FrameworkElement.Style" />
            </Trigger>
            <Trigger Trigger.Property="Expander.ExpandDirection"
                     Trigger.Value="Left">
              <Setter Setter.TargetName="ExpandSite"
                      Setter.Property="DockPanel.Dock"
                      Setter.Value="Left" />
              <Setter Setter.TargetName="HeaderSite"
                      Setter.Property="DockPanel.Dock"
                      Setter.Value="Right" />
              <Setter Setter.Value="{StaticResource Ă}"
                      Setter.TargetName="HeaderSite"
                      Setter.Property="FrameworkElement.Style" />
            </Trigger>
            <Trigger Trigger.Property="IsEnabled"
                     Trigger.Value="False">
              <Setter Setter.Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"
                      Setter.Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Static SystemParameters.FocusVisualStyleKey}">
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Shape.StrokeThickness="1"
                     Shape.Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                     Shape.StrokeDashArray="1 2"
                     SnapsToDevicePixels="True" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="Ą">
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Grid>
            <Rectangle Margin="13,0,1,1"
                       Shape.StrokeThickness="1"
                       Shape.Stroke="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"
                       SnapsToDevicePixels="True" />
            <Rectangle Margin="13,0,1,1"
                       Shape.StrokeThickness="1"
                       Shape.Stroke="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"
                       Shape.StrokeDashArray="2 2"
                       SnapsToDevicePixels="True" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ą">
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Grid>
            <Rectangle Margin="1,0,1,1"
                       Shape.StrokeThickness="1"
                       Shape.Stroke="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"
                       SnapsToDevicePixels="True" />
            <Rectangle Margin="1,0,1,1"
                       Shape.StrokeThickness="1"
                       Shape.Stroke="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"
                       Shape.StrokeDashArray="2 2"
                       SnapsToDevicePixels="True" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="Ď">
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Shape.Fill="#80000000" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type GridSplitter}"
         TargetType="{x:Type GridSplitter}">
    <Setter Setter.Property="Control.Background"
            Setter.Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
    <Setter Setter.Property="GridSplitter.PreviewStyle"
            Setter.Value="{StaticResource Ď}" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type GridSplitter}">
          <Border Border.BorderBrush="{TemplateBinding Control.BorderBrush}"
                  Border.BorderThickness="{TemplateBinding Control.BorderThickness}"
                  Border.Background="{TemplateBinding Control.Background}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <BorderGapMaskConverter x:Key="ď" />
  <Style x:Key="{x:Type GroupBox}"
         TargetType="{x:Type GroupBox}">
    <Setter Setter.Property="Control.BorderBrush"
            Setter.Value="#FFD5DFE5" />
    <Setter Setter.Property="Control.BorderThickness"
            Setter.Value="1" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type GroupBox}">
          <Grid SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
              <ColumnDefinition ColumnDefinition.Width="6" />
              <ColumnDefinition ColumnDefinition.Width="Auto" />
              <ColumnDefinition ColumnDefinition.Width="*" />
              <ColumnDefinition ColumnDefinition.Width="6" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition RowDefinition.Height="Auto" />
              <RowDefinition RowDefinition.Height="Auto" />
              <RowDefinition RowDefinition.Height="*" />
              <RowDefinition RowDefinition.Height="6" />
            </Grid.RowDefinitions>
            <Border Border.CornerRadius="4"
                    Grid.Row="1"
                    Grid.RowSpan="3"
                    Grid.Column="0"
                    Grid.ColumnSpan="4"
                    Border.BorderThickness="{TemplateBinding Control.BorderThickness}"
                    Border.BorderBrush="#00FFFFFF"
                    Border.Background="{TemplateBinding Control.Background}" />
            <Border Border.CornerRadius="4"
                    Grid.Row="1"
                    Grid.RowSpan="3"
                    Grid.ColumnSpan="4"
                    Border.BorderThickness="{TemplateBinding Control.BorderThickness}"
                    Border.BorderBrush="#FFFFFFFF">
              <UIElement.OpacityMask>
                <MultiBinding MultiBinding.Converter="{StaticResource ď}"
                              MultiBinding.ConverterParameter="7">
                  <Binding Binding.ElementName="Header"
                           Binding.Path="ActualWidth" />
                  <Binding Binding.Path="ActualWidth"
                           Binding.RelativeSource="{RelativeSource Self}" />
                  <Binding Binding.Path="ActualHeight"
                           Binding.RelativeSource="{RelativeSource Self}" />
                </MultiBinding>
              </UIElement.OpacityMask>
              <Border Border.BorderThickness="{TemplateBinding Control.BorderThickness}"
                      Border.BorderBrush="{TemplateBinding Control.BorderBrush}"
                      Border.CornerRadius="3">
                <Border Border.BorderThickness="{TemplateBinding Control.BorderThickness}"
                        Border.BorderBrush="#FFFFFFFF"
                        Border.CornerRadius="2" />
              </Border>
            </Border>
            <Border x:Name="Header"
                    Border.Padding="3,1,3,0"
                    Grid.Row="0"
                    Grid.RowSpan="2"
                    Grid.Column="1">
              <ContentPresenter ContentSource="Header"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </Border>
            <ContentPresenter Grid.Row="2"
                              Grid.Column="1"
                              Grid.ColumnSpan="2"
                              Margin="{TemplateBinding Control.Padding}"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type GroupItem}"
         TargetType="{x:Type GroupItem}">
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type GroupItem}">
          <StackPanel>
            <ContentPresenter Name="PART_Header" />
            <ItemsPresenter x:Name="ItemsPresenter"
                            Margin="5,0,0,0" />
          </StackPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type HeaderedContentControl}"
         TargetType="{x:Type HeaderedContentControl}">
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type HeaderedContentControl}">
          <StackPanel>
            <ContentPresenter ContentSource="Header" />
            <ContentPresenter />
          </StackPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type Hyperlink}"
         TargetType="{x:Type Hyperlink}">
    <Setter Setter.Property="TextElement.Foreground"
            Setter.Value="{DynamicResource {x:Static SystemColors.HotTrackBrushKey}}" />
    <Setter Setter.Property="Inline.TextDecorations"
            Setter.Value="Underline" />
    <Style.Triggers>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Condition.Binding="{Binding Path=(SystemParameters.HighContrast)}"
                     Condition.Value="false" />
          <Condition Condition.Binding="{Binding Path=IsMouseOver,RelativeSource={RelativeSource Self}}"
                     Condition.Value="true" />
        </MultiDataTrigger.Conditions>
        <Setter Setter.Property="TextElement.Foreground"
                Setter.Value="#FFFF0000" />
      </MultiDataTrigger>
      <!--<MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Condition.Binding="{Binding Path=(base:AccessibilitySwitches.UseNetFx47CompatibleAccessibilityFeatures)}"
                     Condition.Value="true" />
          <Condition Condition.Binding="{Binding Path=(SystemParameters.HighContrast)}"
                     Condition.Value="true" />
          <Condition Condition.Binding="{Binding Path=IsMouseOver,RelativeSource={RelativeSource Self}}"
                     Condition.Value="true" />
        </MultiDataTrigger.Conditions>
        <Setter Setter.Property="TextElement.Foreground"
                Setter.Value="#FFFF0000" />
      </MultiDataTrigger>-->
      <Trigger Trigger.Property="ContentElement.IsEnabled"
               Trigger.Value="False">
        <Setter Setter.Property="TextElement.Foreground"
                Setter.Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
      </Trigger>
      <Trigger Trigger.Property="ContentElement.IsEnabled"
               Trigger.Value="True">
        <Setter Setter.Property="FrameworkContentElement.Cursor"
                Setter.Value="Hand" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{x:Type ItemsControl}"
         TargetType="{x:Type ItemsControl}">
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ItemsControl}">
          <Border Border.Background="{TemplateBinding Control.Background}"
                  Border.BorderBrush="{TemplateBinding Control.BorderBrush}"
                  Border.BorderThickness="{TemplateBinding Control.BorderThickness}"
                  Border.Padding="{TemplateBinding Control.Padding}"
                  SnapsToDevicePixels="True">
            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type Label}"
         TargetType="{x:Type Label}">
    <Setter Setter.Property="Control.Foreground"
            Setter.Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Setter.Property="Control.Background"
            Setter.Value="#00FFFFFF" />
    <Setter Setter.Property="Control.Padding"
            Setter.Value="5" />
    <Setter Setter.Property="Control.HorizontalContentAlignment"
            Setter.Value="Left" />
    <Setter Setter.Property="Control.VerticalContentAlignment"
            Setter.Value="Top" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Label}">
          <Border Border.Background="{TemplateBinding Control.Background}"
                  Border.BorderThickness="{TemplateBinding Control.BorderThickness}"
                  Border.BorderBrush="{TemplateBinding Control.BorderBrush}"
                  Border.Padding="{TemplateBinding Control.Padding}"
                  SnapsToDevicePixels="True">
            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                              RecognizesAccessKey="True"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="IsEnabled"
                     Trigger.Value="False">
              <Setter Setter.Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"
                      Setter.Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <SolidColorBrush x:Key="Đ"
                   SolidColorBrush.Color="#828790" />
  <Style x:Key="{x:Type ListBox}"
         TargetType="{x:Type ListBox}">
    <Setter Setter.Property="Control.Background"
            Setter.Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
    <Setter Setter.Property="Control.BorderBrush"
            Setter.Value="{StaticResource Đ}" />
    <Setter Setter.Property="Control.BorderThickness"
            Setter.Value="1" />
    <Setter Setter.Property="Control.Foreground"
            Setter.Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Setter.Property="ScrollViewer.HorizontalScrollBarVisibility"
            Setter.Value="Auto" />
    <Setter Setter.Property="ScrollViewer.VerticalScrollBarVisibility"
            Setter.Value="Auto" />
    <Setter Setter.Property="ScrollViewer.CanContentScroll"
            Setter.Value="True" />
    <Setter Setter.Property="ScrollViewer.PanningMode"
            Setter.Value="Both" />
    <Setter Setter.Property="Stylus.IsFlicksEnabled"
            Setter.Value="False" />
    <Setter Setter.Property="Control.VerticalContentAlignment"
            Setter.Value="Center" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListBox}">
          <Border Name="Bd"
                  Border.Background="{TemplateBinding Control.Background}"
                  Border.BorderBrush="{TemplateBinding Control.BorderBrush}"
                  Border.BorderThickness="{TemplateBinding Control.BorderThickness}"
                  SnapsToDevicePixels="True"
                  Border.Padding="1">
            <ScrollViewer Control.Padding="{TemplateBinding Control.Padding}"
                          Focusable="False">
              <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </ScrollViewer>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="IsEnabled"
                     Trigger.Value="False">
              <Setter Setter.TargetName="Bd"
                      Setter.Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
                      Setter.Property="Border.Background" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Condition.Property="ItemsControl.IsGrouping"
                           Condition.Value="True" />
                <Condition Condition.Property="VirtualizingPanel.IsVirtualizingWhenGrouping"
                           Condition.Value="False" />
              </MultiTrigger.Conditions>
              <Setter Setter.Property="ScrollViewer.CanContentScroll"
                      Setter.Value="False" />
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="đ">
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Margin="0,1,0,1"
                     Shape.StrokeThickness="1"
                     Shape.Stroke="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"
                     Shape.StrokeDashArray="1 2"
                     SnapsToDevicePixels="True" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type ListBoxItem}"
         TargetType="{x:Type ListBoxItem}">
    <Setter Setter.Property="Control.Background"
            Setter.Value="#00FFFFFF" />
    <Setter Setter.Property="Control.HorizontalContentAlignment"
            Setter.Value="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Setter.Property="Control.VerticalContentAlignment"
            Setter.Value="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Setter.Property="Control.Padding"
            Setter.Value="2,0,0,0" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListBoxItem}">
          <Border Name="Bd"
                  Border.Background="{TemplateBinding Control.Background}"
                  Border.BorderBrush="{TemplateBinding Control.BorderBrush}"
                  Border.BorderThickness="{TemplateBinding Control.BorderThickness}"
                  Border.Padding="{TemplateBinding Control.Padding}"
                  SnapsToDevicePixels="True">
            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="ListBoxItem.IsSelected"
                     Trigger.Value="True">
              <Setter Setter.TargetName="Bd"
                      Setter.Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                      Setter.Property="Border.Background" />
              <Setter Setter.Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"
                      Setter.Property="Control.Foreground" />
            </Trigger>
            <!--<MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Condition.Property="ListBoxItem.IsSelected"
                           Condition.Value="True" />
                <Condition Condition.Property="Selector.IsSelectionActive"
                           Condition.Value="False" />
              </MultiTrigger.Conditions>
              <Setter Setter.TargetName="Bd"
                      Setter.Value="{DynamicResource {x:Static  InternalSystemColorsExtendedStart}}"
                      Setter.Property="Border.Background" />
              <Setter Setter.Value="{DynamicResource {x:Static  SystemColors.InactiveSelectionHighlightBrush}}"
                      Setter.Property="Control.Foreground" />
            </MultiTrigger>-->
            <Trigger Trigger.Property="IsEnabled"
                     Trigger.Value="False">
              <Setter Setter.Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"
                      Setter.Property="Control.Foreground" />
            </Trigger>
            <!--<MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Condition.Binding="{Binding Path=(base:AccessibilitySwitches.UseNetFx47CompatibleAccessibilityFeatures)}"
                           Condition.Value="false" />
                <Condition Condition.Binding="{Binding Path=(SystemParameters.HighContrast)}"
                           Condition.Value="true" />
              </MultiDataTrigger.Conditions>
              <Setter Setter.Value="{StaticResource đ}"
                      Setter.Property="FrameworkElement.FocusVisualStyle" />
            </MultiDataTrigger>-->
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Static GridView.GridViewScrollViewerStyleKey}"
         TargetType="{x:Type ScrollViewer}">
    <Setter Setter.Property="Focusable"
            Setter.Value="False" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ScrollViewer}">
          <Grid Panel.Background="{TemplateBinding Control.Background}"
                SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
              <ColumnDefinition ColumnDefinition.Width="*" />
              <ColumnDefinition ColumnDefinition.Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition RowDefinition.Height="*" />
              <RowDefinition RowDefinition.Height="Auto" />
            </Grid.RowDefinitions>
            <DockPanel Margin="{TemplateBinding Control.Padding}">
              <ScrollViewer DockPanel.Dock="Top"
                            ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                            ScrollViewer.VerticalScrollBarVisibility="Hidden"
                            Focusable="False">
                <GridViewHeaderRowPresenter Margin="2,0,2,0"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                  <GridViewRowPresenterBase.Columns>
                    <Binding Binding.Path="TemplatedParent.View.Columns"
                             Binding.RelativeSource="{RelativeSource TemplatedParent}" />
                  </GridViewRowPresenterBase.Columns>
                </GridViewHeaderRowPresenter>
              </ScrollViewer>
              <ScrollContentPresenter Name="PART_ScrollContentPresenter"
                                      KeyboardNavigation.DirectionalNavigation="Local"
                                      Content="{TemplateBinding ContentControl.Content}"
                                      ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                      ScrollContentPresenter.CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </DockPanel>
            <ScrollBar Name="PART_HorizontalScrollBar"
                       ScrollBar.Orientation="Horizontal"
                       Grid.Row="1"
                       RangeBase.Minimum="0.0"
                       RangeBase.Maximum="{TemplateBinding ScrollViewer.ScrollableWidth}"
                       ScrollBar.ViewportSize="{TemplateBinding ScrollViewer.ViewportWidth}"
                       Visibility="{TemplateBinding ScrollViewer.ComputedHorizontalScrollBarVisibility}"
                       Cursor="Arrow"
                       RangeBase.Value="{Binding Path=HorizontalOffset,RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}" />
            <ScrollBar Name="PART_VerticalScrollBar"
                       ScrollBar.Orientation="Vertical"
                       Grid.Column="1"
                       RangeBase.Minimum="0.0"
                       RangeBase.Maximum="{TemplateBinding ScrollViewer.ScrollableHeight}"
                       ScrollBar.ViewportSize="{TemplateBinding ScrollViewer.ViewportHeight}"
                       Visibility="{TemplateBinding ScrollViewer.ComputedVerticalScrollBarVisibility}"
                       Cursor="Arrow"
                       RangeBase.Value="{Binding Path=VerticalOffset,RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}" />
            <DockPanel Grid.Column="1"
                       Grid.Row="1"
                       DockPanel.LastChildFill="False"
                       Panel.Background="{Binding Path=Background,ElementName=PART_VerticalScrollBar}">
              <Rectangle DockPanel.Dock="Left"
                         Width="1"
                         Shape.Fill="#FFFFFFFF"
                         Visibility="{TemplateBinding ScrollViewer.ComputedVerticalScrollBarVisibility}" />
              <Rectangle DockPanel.Dock="Top"
                         Height="1"
                         Shape.Fill="#FFFFFFFF"
                         Visibility="{TemplateBinding ScrollViewer.ComputedHorizontalScrollBarVisibility}" />
            </DockPanel>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <LinearGradientBrush x:Key="Ē"
                       LinearGradientBrush.StartPoint="0,0"
                       LinearGradientBrush.EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FFF2F2F2"
                    Offset="0" />
      <GradientStop Color="#FFD5D5D5"
                    Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ē"
                       LinearGradientBrush.StartPoint="0,0"
                       LinearGradientBrush.EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FFFFFFFF"
                    Offset="0" />
      <GradientStop Color="#FFFFFFFF"
                    Offset="0.4091" />
      <GradientStop Color="#FFF7F8F9"
                    Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="Ĕ"
                       LinearGradientBrush.StartPoint="0,0"
                       LinearGradientBrush.EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FFBDEDFF"
                    Offset="0" />
      <GradientStop Color="#FFB7E7FB"
                    Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ĕ"
                       LinearGradientBrush.StartPoint="0,0"
                       LinearGradientBrush.EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FF8DD6F7"
                    Offset="0" />
      <GradientStop Color="#FF8AD1F5"
                    Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <Style x:Key="Ė"
         TargetType="{x:Type Thumb}">
    <Setter Setter.Property="Canvas.Right"
            Setter.Value="-9" />
    <Setter Setter.Property="FrameworkElement.Width"
            Setter.Value="18" />
    <Setter Setter.Property="FrameworkElement.Height"
            Setter.Value="{Binding Path=ActualHeight,RelativeSource={RelativeSource TemplatedParent}}" />
    <Setter Setter.Property="Control.Padding"
            Setter.Value="0" />
    <Setter Setter.Property="Control.Background"
            Setter.Value="{StaticResource Ē}" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Border Border.Padding="{TemplateBinding Control.Padding}"
                  Border.Background="#00FFFFFF">
            <Rectangle HorizontalAlignment="Center"
                       Width="1"
                       Shape.Fill="{TemplateBinding Control.Background}" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type GridViewColumnHeader}"
         TargetType="{x:Type GridViewColumnHeader}">
    <Setter Setter.Property="Control.HorizontalContentAlignment"
            Setter.Value="Center" />
    <Setter Setter.Property="Control.VerticalContentAlignment"
            Setter.Value="Center" />
    <Setter Setter.Property="Control.Background"
            Setter.Value="{StaticResource ē}" />
    <Setter Setter.Property="Control.BorderBrush"
            Setter.Value="{StaticResource Ē}" />
    <Setter Setter.Property="Control.BorderThickness"
            Setter.Value="0" />
    <Setter Setter.Property="Control.Padding"
            Setter.Value="2,0,2,0" />
    <Setter Setter.Property="Control.Foreground"
            Setter.Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
          <Grid SnapsToDevicePixels="True">
            <Border Name="HeaderBorder"
                    Border.BorderThickness="0,1,0,1"
                    Border.BorderBrush="{TemplateBinding Control.BorderBrush}"
                    Border.Background="{TemplateBinding Control.Background}">
              <Grid>
                <Grid.RowDefinitions>
                  <RowDefinition RowDefinition.MaxHeight="7" />
                  <RowDefinition />
                </Grid.RowDefinitions>
                <Rectangle Name="UpperHighlight"
                           Visibility="Collapsed"
                           Shape.Fill="#FFE3F7FF" />
                <Border Grid.RowSpan="2"
                        Border.Padding="{TemplateBinding Control.Padding}">
                  <ContentPresenter Name="HeaderContent"
                                    Margin="0,0,0,1"
                                    VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                    HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                </Border>
              </Grid>
            </Border>
            <Border Name="HeaderHoverBorder"
                    Border.BorderThickness="1,0,1,1"
                    Margin="1,1,0,0" />
            <Border Name="HeaderPressBorder"
                    Border.BorderThickness="1,1,1,0"
                    Margin="1,0,0,1" />
            <Canvas>
              <Thumb x:Name="PART_HeaderGripper"
                     Style="{StaticResource Ė}" />
            </Canvas>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="IsMouseOver"
                     Trigger.Value="True">
              <Setter Setter.TargetName="HeaderBorder"
                      Setter.Value="{StaticResource Ĕ}"
                      Setter.Property="Border.Background" />
              <Setter Setter.TargetName="HeaderHoverBorder"
                      Setter.Property="Border.BorderBrush"
                      Setter.Value="#FF88CBEB" />
              <Setter Setter.TargetName="UpperHighlight"
                      Setter.Property="Visibility"
                      Setter.Value="Visible" />
              <Setter Setter.TargetName="PART_HeaderGripper"
                      Setter.Property="Control.Background"
                      Setter.Value="#00FFFFFF" />
            </Trigger>
            <Trigger Trigger.Property="ButtonBase.IsPressed"
                     Trigger.Value="True">
              <Setter Setter.TargetName="HeaderBorder"
                      Setter.Value="{StaticResource ĕ}"
                      Setter.Property="Border.Background" />
              <Setter Setter.TargetName="HeaderHoverBorder"
                      Setter.Property="Border.BorderBrush"
                      Setter.Value="#FF95DAF9" />
              <Setter Setter.TargetName="HeaderPressBorder"
                      Setter.Property="Border.BorderBrush"
                      Setter.Value="#FF7A9EB1" />
              <Setter Setter.TargetName="UpperHighlight"
                      Setter.Property="Visibility"
                      Setter.Value="Visible" />
              <Setter Setter.TargetName="UpperHighlight"
                      Setter.Property="Shape.Fill"
                      Setter.Value="#FFBCE4F9" />
              <Setter Setter.TargetName="PART_HeaderGripper"
                      Setter.Property="Visibility"
                      Setter.Value="Hidden" />
              <Setter Setter.TargetName="HeaderContent"
                      Setter.Property="Margin"
                      Setter.Value="1,1,0,0" />
            </Trigger>
            <Trigger Trigger.Property="FrameworkElement.Height"
                     Trigger.Value="Auto">
              <Setter Setter.Property="FrameworkElement.MinHeight"
                      Setter.Value="20" />
            </Trigger>
            <Trigger Trigger.Property="IsEnabled"
                     Trigger.Value="False">
              <Setter Setter.Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"
                      Setter.Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Trigger.Property="GridViewColumnHeader.Role"
               Trigger.Value="Floating">
        <Setter Setter.Property="Opacity"
                Setter.Value="0.4082" />
        <Setter Setter.Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
              <Canvas Name="PART_FloatingHeaderCanvas">
                <Rectangle Opacity="0.4697"
                           Shape.Fill="#FF000000"
                           Width="{TemplateBinding ActualWidth}"
                           Height="{TemplateBinding ActualHeight}" />
              </Canvas>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
      <Trigger Trigger.Property="GridViewColumnHeader.Role"
               Trigger.Value="Padding">
        <Setter Setter.Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
              <Border Name="HeaderBorder"
                      Border.BorderThickness="0,1,0,1"
                      Border.BorderBrush="{TemplateBinding Control.BorderBrush}"
                      Border.Background="{TemplateBinding Control.Background}" />
              <ControlTemplate.Triggers>
                <Trigger Trigger.Property="FrameworkElement.Height"
                         Trigger.Value="Auto">
                  <Setter Setter.Property="FrameworkElement.MinHeight"
                          Setter.Value="20" />
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{x:Static GridView.GridViewStyleKey}"
         TargetType="{x:Type ListView}">
    <Setter Setter.Property="Control.Background"
            Setter.Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
    <Setter Setter.Property="Control.BorderBrush"
            Setter.Value="{StaticResource Đ}" />
    <Setter Setter.Property="Control.BorderThickness"
            Setter.Value="1" />
    <Setter Setter.Property="Control.Foreground"
            Setter.Value="#FF042271" />
    <Setter Setter.Property="ScrollViewer.HorizontalScrollBarVisibility"
            Setter.Value="Auto" />
    <Setter Setter.Property="ScrollViewer.VerticalScrollBarVisibility"
            Setter.Value="Auto" />
    <Setter Setter.Property="ScrollViewer.CanContentScroll"
            Setter.Value="True" />
    <Setter Setter.Property="ScrollViewer.PanningMode"
            Setter.Value="Both" />
    <Setter Setter.Property="Stylus.IsFlicksEnabled"
            Setter.Value="False" />
    <Setter Setter.Property="Control.VerticalContentAlignment"
            Setter.Value="Center" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListView}">
          <theme:ListBoxChrome x:Name="Bd"
                               BorderThickness="{TemplateBinding Control.BorderThickness}"
                               BorderBrush="{TemplateBinding Control.BorderBrush}"
                               Background="{TemplateBinding Control.Background}"
                               RenderMouseOver="{TemplateBinding IsMouseOver}"
                               RenderFocused="{TemplateBinding IsKeyboardFocusWithin}"
                               SnapsToDevicePixels="True">
            <ScrollViewer Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}"
                          Control.Padding="{TemplateBinding Control.Padding}">
              <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </ScrollViewer>
          </theme:ListBoxChrome>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="IsEnabled"
                     Trigger.Value="False">
              <Setter Setter.TargetName="Bd"
                      Setter.Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
                      Setter.Property="Background" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Condition.Property="ItemsControl.IsGrouping"
                           Condition.Value="True" />
                <Condition Condition.Property="VirtualizingPanel.IsVirtualizingWhenGrouping"
                           Condition.Value="False" />
              </MultiTrigger.Conditions>
              <Setter Setter.Property="ScrollViewer.CanContentScroll"
                      Setter.Value="False" />
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ė">
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Shape.StrokeThickness="1"
                     Rectangle.RadiusX="2"
                     Rectangle.RadiusY="2"
                     Shape.Stroke="#8E6EA6F5" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <LinearGradientBrush x:Key="Ę"
                       LinearGradientBrush.StartPoint="0,0"
                       LinearGradientBrush.EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FFF1FBFF"
                    Offset="0" />
      <GradientStop Color="#FFD5F1FE"
                    Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ę"
                       LinearGradientBrush.StartPoint="0,0"
                       LinearGradientBrush.EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FFD9F4FF"
                    Offset="0" />
      <GradientStop Color="#FF9BDDFB"
                    Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="Ě"
                       LinearGradientBrush.StartPoint="0,0"
                       LinearGradientBrush.EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FFEAF9FF"
                    Offset="0" />
      <GradientStop Color="#FFC9EDFD"
                    Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ě"
                       LinearGradientBrush.StartPoint="0,0"
                       LinearGradientBrush.EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FFEEEDED"
                    Offset="0" />
      <GradientStop Color="#FFDDDDDD"
                    Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <Style x:Key="{x:Static GridView.GridViewItemContainerStyleKey}"
         TargetType="{x:Type ListViewItem}">
    <Setter Setter.Property="FrameworkElement.FocusVisualStyle"
            Setter.Value="{StaticResource ė}" />
    <Setter Setter.Property="Control.Background"
            Setter.Value="#00FFFFFF" />
    <Setter Setter.Property="Control.BorderBrush"
            Setter.Value="#00FFFFFF" />
    <Setter Setter.Property="Control.BorderThickness"
            Setter.Value="1" />
    <Setter Setter.Property="Margin"
            Setter.Value="0,0,0,1" />
    <Setter Setter.Property="Control.Padding"
            Setter.Value="5,2,5,2" />
    <Setter Setter.Property="Control.VerticalContentAlignment"
            Setter.Value="Center" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListViewItem}">
          <Border Border.BorderThickness="{TemplateBinding Control.BorderThickness}"
                  Border.BorderBrush="{TemplateBinding Control.BorderBrush}"
                  Border.Background="{TemplateBinding Control.Background}"
                  Border.CornerRadius="2"
                  SnapsToDevicePixels="True">
            <Border Name="InnerBorder"
                    Border.CornerRadius="1"
                    Border.BorderThickness="1">
              <Grid>
                <Grid.RowDefinitions>
                  <RowDefinition RowDefinition.MaxHeight="11" />
                  <RowDefinition />
                </Grid.RowDefinitions>
                <Rectangle Name="UpperHighlight"
                           Visibility="Collapsed"
                           Shape.Fill="#75FFFFFF" />
                <GridViewRowPresenter Grid.RowSpan="2"
                                      VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
              </Grid>
            </Border>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="IsMouseOver"
                     Trigger.Value="True">
              <Setter Setter.Value="{StaticResource Ę}"
                      Setter.Property="Control.Background" />
              <Setter Setter.Property="Control.BorderBrush"
                      Setter.Value="#FFCCF0FF" />
              <Setter Setter.TargetName="UpperHighlight"
                      Setter.Property="Visibility"
                      Setter.Value="Visible" />
            </Trigger>
            <Trigger Trigger.Property="ListBoxItem.IsSelected"
                     Trigger.Value="True">
              <Setter Setter.Value="{StaticResource ę}"
                      Setter.Property="Control.Background" />
              <Setter Setter.Property="Control.BorderBrush"
                      Setter.Value="#FF98DDFB" />
              <Setter Setter.TargetName="InnerBorder"
                      Setter.Property="Border.BorderBrush"
                      Setter.Value="#80FFFFFF" />
              <Setter Setter.TargetName="UpperHighlight"
                      Setter.Property="Visibility"
                      Setter.Value="Visible" />
              <Setter Setter.TargetName="UpperHighlight"
                      Setter.Property="Shape.Fill"
                      Setter.Value="#40FFFFFF" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Condition.Property="ListBoxItem.IsSelected"
                           Condition.Value="True" />
                <Condition Condition.Property="Selector.IsSelectionActive"
                           Condition.Value="False" />
              </MultiTrigger.Conditions>
              <Setter Setter.Value="{StaticResource ě}"
                      Setter.Property="Control.Background" />
              <Setter Setter.Property="Control.BorderBrush"
                      Setter.Value="#FFCFCFCF" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Condition.Property="ListBoxItem.IsSelected"
                           Condition.Value="True" />
                <Condition Condition.Property="IsMouseOver"
                           Condition.Value="True" />
              </MultiTrigger.Conditions>
              <Setter Setter.Value="{StaticResource Ě}"
                      Setter.Property="Control.Background" />
              <Setter Setter.Property="Control.BorderBrush"
                      Setter.Value="#FF98DDFB" />
            </MultiTrigger>
            <Trigger Trigger.Property="IsEnabled"
                     Trigger.Value="False">
              <Setter Setter.Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"
                      Setter.Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <LinearGradientBrush x:Key="Ĝ"
                       LinearGradientBrush.StartPoint="0,0"
                       LinearGradientBrush.EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#F6F6F6"
                    Offset="0.25" />
      <GradientStop Color="#EAE8E8"
                    Offset="0.25" />
      <GradientStop Color="#DCD9D9"
                    Offset="0.8" />
      <GradientStop Color="White"
                    Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <Style x:Key="{x:Type Menu}"
         TargetType="{x:Type Menu}">
    <Setter Setter.Property="Control.Background"
            Setter.Value="{StaticResource Ĝ}" />
    <Setter Setter.Property="Control.FontFamily"
            Setter.Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}" />
    <Setter Setter.Property="Control.FontSize"
            Setter.Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}" />
    <Setter Setter.Property="Control.FontStyle"
            Setter.Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}" />
    <Setter Setter.Property="Control.FontWeight"
            Setter.Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}" />
    <Setter Setter.Property="Control.Foreground"
            Setter.Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Menu}">
          <Border Border.Background="{TemplateBinding Control.Background}"
                  Border.BorderBrush="{TemplateBinding Control.BorderBrush}"
                  Border.BorderThickness="{TemplateBinding Control.BorderThickness}"
                  Border.Padding="{TemplateBinding Control.Padding}"
                  SnapsToDevicePixels="True">
            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <MenuScrollingVisibilityConverter x:Key="ĝ" />
  <Geometry x:Key="Ë">
    M 0,0 L 3.5,4 L 7,0 Z
  </Geometry>
  <Geometry x:Key="Ğ">
    M 0,4 L 3.5,0 L 7,4 Z
  </Geometry>
  <Geometry x:Key="ğ">
    M 0,0 L 4,3.5 L 0,7 Z
  </Geometry>
  <Geometry x:Key="Ġ">
    M 0,5.1 L 1.7,5.2 L 3.4,7.1 L 8,0.4 L 9.2,0 L 3.3,10.8 Z
  </Geometry>
  <SolidColorBrush x:Key="ġ"
                   SolidColorBrush.Color="#FFF5F5F5" />
  <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement},ResourceId=SubmenuContent}"
                   TargetType="{x:Type ContentControl}">
    <Border Border.Background="{StaticResource ġ}"
            Border.BorderBrush="#FF959595"
            Border.BorderThickness="1">
      <Grid>
        <Rectangle Shape.Fill="#FFF1F1F1"
                   HorizontalAlignment="Left"
                   Width="28"
                   Margin="2"
                   Rectangle.RadiusX="2"
                   Rectangle.RadiusY="2" />
        <Rectangle HorizontalAlignment="Left"
                   Width="1"
                   Margin="30,2,0,2"
                   Shape.Fill="#FFE2E3E3" />
        <Rectangle HorizontalAlignment="Left"
                   Width="1"
                   Margin="31,2,0,2"
                   Shape.Fill="#FFFFFFFF" />
        <ContentPresenter Grid.ColumnSpan="2"
                          Margin="1,0" />
      </Grid>
    </Border>
  </ControlTemplate>
  <Style x:Key="Ģ"
         TargetType="{x:Type RepeatButton}"
         BasedOn="{x:Null}">
    <Setter Setter.Property="ButtonBase.ClickMode"
            Setter.Value="Hover" />
    <Setter Setter.Property="FrameworkElement.MinWidth"
            Setter.Value="0" />
    <Setter Setter.Property="FrameworkElement.MinHeight"
            Setter.Value="0" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <DockPanel Panel.Background="#00FFFFFF"
                     SnapsToDevicePixels="True">
            <Rectangle x:Name="R1"
                       DockPanel.Dock="Right"
                       Width="1"
                       Shape.Fill="#00FFFFFF" />
            <Rectangle x:Name="B1"
                       DockPanel.Dock="Bottom"
                       Height="1"
                       Shape.Fill="#00FFFFFF" />
            <Rectangle x:Name="L1"
                       DockPanel.Dock="Left"
                       Width="1"
                       Shape.Fill="#00FFFFFF" />
            <Rectangle x:Name="T1"
                       DockPanel.Dock="Top"
                       Height="1"
                       Shape.Fill="#00FFFFFF" />
            <ContentPresenter Name="ContentContainer"
                              Margin="2,2,2,2"
                              VerticalAlignment="Center"
                              HorizontalAlignment="Center" />
          </DockPanel>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="ButtonBase.IsPressed"
                     Trigger.Value="True">
              <Setter Setter.TargetName="R1"
                      Setter.Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"
                      Setter.Property="Shape.Fill" />
              <Setter Setter.TargetName="B1"
                      Setter.Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"
                      Setter.Property="Shape.Fill" />
              <Setter Setter.TargetName="L1"
                      Setter.Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"
                      Setter.Property="Shape.Fill" />
              <Setter Setter.TargetName="T1"
                      Setter.Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"
                      Setter.Property="Shape.Fill" />
              <Setter Setter.TargetName="ContentContainer"
                      Setter.Property="Margin"
                      Setter.Value="3,3,1,1" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement},ResourceId=MenuScrollViewer}"
         TargetType="{x:Type ScrollViewer}"
         BasedOn="{x:Null}">
    <Setter Setter.Property="ScrollViewer.HorizontalScrollBarVisibility"
            Setter.Value="Hidden" />
    <Setter Setter.Property="ScrollViewer.VerticalScrollBarVisibility"
            Setter.Value="Auto" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ScrollViewer}">
          <Grid SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
              <ColumnDefinition ColumnDefinition.Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition RowDefinition.Height="Auto" />
              <RowDefinition RowDefinition.Height="*" />
              <RowDefinition RowDefinition.Height="Auto" />
            </Grid.RowDefinitions>
            <Border Grid.Row="1"
                    Grid.Column="0">
              <ScrollContentPresenter Margin="{TemplateBinding Control.Padding}"
                                      ScrollContentPresenter.CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}" />
            </Border>
            <RepeatButton Style="{StaticResource Ģ}"
                          Grid.Row="0"
                          Grid.Column="0"
                          ButtonBase.Command="{x:Static ScrollBar.LineUpCommand}"
                          Focusable="False"
                          ButtonBase.CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
              <UIElement.Visibility>
                <MultiBinding BindingBase.FallbackValue="Visibility.Collapsed"
                              MultiBinding.Converter="{StaticResource ĝ}"
                              MultiBinding.ConverterParameter="0">
                  <Binding Binding.Path="ComputedVerticalScrollBarVisibility"
                           Binding.RelativeSource="{RelativeSource TemplatedParent}" />
                  <Binding Binding.Path="VerticalOffset"
                           Binding.RelativeSource="{RelativeSource TemplatedParent}" />
                  <Binding Binding.Path="ExtentHeight"
                           Binding.RelativeSource="{RelativeSource TemplatedParent}" />
                  <Binding Binding.Path="ViewportHeight"
                           Binding.RelativeSource="{RelativeSource TemplatedParent}" />
                </MultiBinding>
              </UIElement.Visibility>
              <Path Shape.Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"
                    Path.Data="{StaticResource Ğ}" />
            </RepeatButton>
            <RepeatButton Style="{StaticResource Ģ}"
                          Grid.Row="2"
                          Grid.Column="0"
                          ButtonBase.Command="{x:Static ScrollBar.LineDownCommand}"
                          Focusable="False"
                          ButtonBase.CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
              <UIElement.Visibility>
                <MultiBinding BindingBase.FallbackValue="Visibility.Collapsed"
                              MultiBinding.Converter="{StaticResource ĝ}"
                              MultiBinding.ConverterParameter="100">
                  <Binding Binding.Path="ComputedVerticalScrollBarVisibility"
                           Binding.RelativeSource="{RelativeSource TemplatedParent}" />
                  <Binding Binding.Path="VerticalOffset"
                           Binding.RelativeSource="{RelativeSource TemplatedParent}" />
                  <Binding Binding.Path="ExtentHeight"
                           Binding.RelativeSource="{RelativeSource TemplatedParent}" />
                  <Binding Binding.Path="ViewportHeight"
                           Binding.RelativeSource="{RelativeSource TemplatedParent}" />
                </MultiBinding>
              </UIElement.Visibility>
              <Path Shape.Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"
                    Path.Data="{StaticResource Ë}" />
            </RepeatButton>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <LinearGradientBrush x:Key="ģ"
                       LinearGradientBrush.StartPoint="0,0"
                       LinearGradientBrush.EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#34C5EBFF"
                    Offset="0" />
      <GradientStop Color="#3481D8FF"
                    Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="Ĥ"
                       LinearGradientBrush.StartPoint="0,0"
                       LinearGradientBrush.EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#28717070"
                    Offset="0" />
      <GradientStop Color="#50717070"
                    Offset="0.75" />
      <GradientStop Color="#90717070"
                    Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}"
         TargetType="{x:Type Separator}">
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Separator}">
          <Grid SnapsToDevicePixels="True"
                UseLayoutRounding="False"
                Margin="0,6,0,4">
            <Rectangle Height="1"
                       Margin="30,0,1,1"
                       Shape.Fill="#FFE0E0E0" />
            <Rectangle Height="1"
                       Margin="30,1,1,0"
                       Shape.Fill="#FFFFFFFF" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem},ResourceId=TopLevelItemTemplateKey}"
                   TargetType="{x:Type MenuItem}">
    <Grid SnapsToDevicePixels="True">
      <Rectangle x:Name="OuterBorder"
                 Rectangle.RadiusX="2"
                 Rectangle.RadiusY="2" />
      <Rectangle Name="Bg"
                 Margin="1"
                 Shape.Fill="{TemplateBinding Control.Background}"
                 Shape.Stroke="{TemplateBinding Control.BorderBrush}"
                 Shape.StrokeThickness="1"
                 Rectangle.RadiusX="1"
                 Rectangle.RadiusY="1" />
      <Rectangle x:Name="InnerBorder"
                 Margin="2" />
      <DockPanel>
        <ContentPresenter Name="Icon"
                          Margin="4,0,6,0"
                          VerticalAlignment="Center"
                          ContentSource="Icon"
                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        <Path x:Name="GlyphPanel"
              Margin="7,0,0,0"
              Visibility="Collapsed"
              VerticalAlignment="Center"
              Shape.Fill="{TemplateBinding Control.Foreground}"
              FlowDirection="LeftToRight"
              Path.Data="{StaticResource Ġ}" />
        <ContentPresenter ContentSource="Header"
                          Margin="{TemplateBinding Control.Padding}"
                          RecognizesAccessKey="True"
                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
      </DockPanel>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Trigger.Value="{x:Null}"
               Trigger.Property="MenuItem.Icon">
        <Setter Setter.TargetName="Icon"
                Setter.Property="Visibility"
                Setter.Value="Collapsed" />
      </Trigger>
      <Trigger Trigger.Property="MenuItem.IsChecked"
               Trigger.Value="True">
        <Setter Setter.TargetName="GlyphPanel"
                Setter.Property="Visibility"
                Setter.Value="Visible" />
        <Setter Setter.TargetName="Icon"
                Setter.Property="Visibility"
                Setter.Value="Collapsed" />
      </Trigger>
      <Trigger Trigger.Property="MenuItem.IsHighlighted"
               Trigger.Value="True">
        <Setter Setter.TargetName="Bg"
                Setter.Property="Shape.Stroke"
                Setter.Value="#90717070" />
        <Setter Setter.TargetName="OuterBorder"
                Setter.Property="Shape.Stroke"
                Setter.Value="#50FFFFFF" />
        <Setter Setter.TargetName="InnerBorder"
                Setter.Property="Shape.Stroke"
                Setter.Value="#50FFFFFF" />
      </Trigger>
      <Trigger Trigger.Property="IsKeyboardFocused"
               Trigger.Value="True">
        <Setter Setter.TargetName="Bg"
                Setter.Property="Shape.Stroke"
                Setter.Value="#E0717070" />
        <Setter Setter.TargetName="Bg"
                Setter.Value="{StaticResource Ĥ}"
                Setter.Property="Shape.Fill" />
        <Setter Setter.TargetName="InnerBorder"
                Setter.Property="Shape.Stroke"
                Setter.Value="#50747272" />
      </Trigger>
      <Trigger Trigger.Property="IsEnabled"
               Trigger.Value="False">
        <Setter Setter.Property="Control.Foreground"
                Setter.Value="#FF9A9A9A" />
        <Setter Setter.TargetName="GlyphPanel"
                Setter.Property="Shape.Fill"
                Setter.Value="#FF848589" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem},ResourceId=TopLevelHeaderTemplateKey}"
                   TargetType="{x:Type MenuItem}">
    <Grid SnapsToDevicePixels="True">
      <Rectangle x:Name="OuterBorder"
                 Rectangle.RadiusX="2"
                 Rectangle.RadiusY="2" />
      <Rectangle Name="Bg"
                 Margin="1"
                 Shape.Fill="{TemplateBinding Control.Background}"
                 Shape.Stroke="{TemplateBinding Control.BorderBrush}"
                 Shape.StrokeThickness="1"
                 Rectangle.RadiusX="1"
                 Rectangle.RadiusY="1" />
      <Rectangle x:Name="InnerBorder"
                 Margin="2" />
      <DockPanel>
        <ContentPresenter Name="Icon"
                          Margin="4,0,6,0"
                          VerticalAlignment="Center"
                          ContentSource="Icon"
                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        <Path x:Name="GlyphPanel"
              Margin="7,0,0,0"
              Visibility="Collapsed"
              VerticalAlignment="Center"
              Shape.Fill="{TemplateBinding Control.Foreground}"
              FlowDirection="LeftToRight"
              Path.Data="{StaticResource Ġ}" />
        <ContentPresenter ContentSource="Header"
                          Margin="{TemplateBinding Control.Padding}"
                          RecognizesAccessKey="True"
                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
      </DockPanel>
      <Popup x:Name="PART_Popup"
             Popup.HorizontalOffset="1"
             Popup.VerticalOffset="-1"
             Popup.AllowsTransparency="True"
             Popup.Placement="Bottom"
             Focusable="False"
             Popup.PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
             Popup.IsOpen="{Binding Path=IsSubmenuOpen,RelativeSource={RelativeSource TemplatedParent}}">
        <theme:SystemDropShadowChrome x:Name="Shdw"
                                      Color="Transparent"
                                      >
          <Border Name="SubMenuBorder"
                  Border.Background="{StaticResource ġ}"
                  Border.BorderBrush="#FF959595"
                  Border.BorderThickness="1">
            <ScrollViewer Name="SubMenuScrollViewer"
                          Margin="1,0"
                          Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement},ResourceId=MenuScrollViewer}}">
              <Grid RenderOptions.ClearTypeHint="Enabled">
                <Canvas Height="0"
                        Width="0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Top">
                  <Rectangle Name="OpaqueRect"
                             Shape.Fill="{StaticResource ġ}"
                             Height="{Binding ElementName=SubMenuBorder,Path=ActualHeight}"
                             Width="{Binding ElementName=SubMenuBorder,Path=ActualWidth}" />
                </Canvas>
                <Rectangle Shape.Fill="#FFF1F1F1"
                           HorizontalAlignment="Left"
                           Width="28"
                           Margin="1,2"
                           Rectangle.RadiusX="2"
                           Rectangle.RadiusY="2" />
                <Rectangle HorizontalAlignment="Left"
                           Width="1"
                           Margin="29,2,0,2"
                           Shape.Fill="#FFE2E3E3" />
                <Rectangle HorizontalAlignment="Left"
                           Width="1"
                           Margin="30,2,0,2"
                           Shape.Fill="#FFFFFFFF" />
                <ItemsPresenter Name="ItemsPresenter"
                                Margin="2"
                                KeyboardNavigation.TabNavigation="Cycle"
                                KeyboardNavigation.DirectionalNavigation="Cycle"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                Grid.IsSharedSizeScope="True" />
              </Grid>
            </ScrollViewer>
          </Border>
        </theme:SystemDropShadowChrome>
      </Popup>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Trigger.Property="MenuItem.IsSuspendingPopupAnimation"
               Trigger.Value="True">
        <Setter Setter.TargetName="PART_Popup"
                Setter.Property="Popup.PopupAnimation"
                Setter.Value="None" />
      </Trigger>
      <Trigger Trigger.Value="{x:Null}"
               Trigger.Property="MenuItem.Icon">
        <Setter Setter.TargetName="Icon"
                Setter.Property="Visibility"
                Setter.Value="Collapsed" />
      </Trigger>
      <Trigger Trigger.Property="MenuItem.IsChecked"
               Trigger.Value="True">
        <Setter Setter.TargetName="GlyphPanel"
                Setter.Property="Visibility"
                Setter.Value="Visible" />
        <Setter Setter.TargetName="Icon"
                Setter.Property="Visibility"
                Setter.Value="Collapsed" />
      </Trigger>
      <Trigger Trigger.SourceName="PART_Popup"
               Trigger.Property="Popup.HasDropShadow"
               Trigger.Value="True">
        <Setter Setter.TargetName="Shdw"
                Setter.Property="Margin"
                Setter.Value="0,0,5,5" />
        <Setter Setter.TargetName="Shdw"
                Setter.Property="theme:SystemDropShadowChrome.Color"
                Setter.Value="#71000000" />
      </Trigger>
      <Trigger Trigger.Property="MenuItem.IsHighlighted"
               Trigger.Value="True">
        <Setter Setter.TargetName="Bg"
                Setter.Property="Shape.Stroke"
                Setter.Value="#90717070" />
        <Setter Setter.TargetName="OuterBorder"
                Setter.Property="Shape.Stroke"
                Setter.Value="#50FFFFFF" />
        <Setter Setter.TargetName="InnerBorder"
                Setter.Property="Shape.Stroke"
                Setter.Value="#50FFFFFF" />
      </Trigger>
      <Trigger Trigger.Property="IsKeyboardFocused"
               Trigger.Value="True">
        <Setter Setter.TargetName="Bg"
                Setter.Property="Shape.Stroke"
                Setter.Value="#E0717070" />
        <Setter Setter.TargetName="Bg"
                Setter.Value="{StaticResource Ĥ}"
                Setter.Property="Shape.Fill" />
        <Setter Setter.TargetName="InnerBorder"
                Setter.Property="Shape.Stroke"
                Setter.Value="#50747272" />
      </Trigger>
      <Trigger Trigger.Property="MenuItem.IsSubmenuOpen"
               Trigger.Value="True">
        <Setter Setter.TargetName="Bg"
                Setter.Property="Shape.Stroke"
                Setter.Value="#E0717070" />
        <Setter Setter.TargetName="Bg"
                Setter.Value="{StaticResource Ĥ}"
                Setter.Property="Shape.Fill" />
        <Setter Setter.TargetName="InnerBorder"
                Setter.Property="Shape.Stroke"
                Setter.Value="#50747272" />
      </Trigger>
      <Trigger Trigger.Property="IsEnabled"
               Trigger.Value="False">
        <Setter Setter.Property="Control.Foreground"
                Setter.Value="#FF9A9A9A" />
        <Setter Setter.TargetName="GlyphPanel"
                Setter.Property="Shape.Fill"
                Setter.Value="#FF848589" />
      </Trigger>
      <Trigger Trigger.SourceName="SubMenuScrollViewer"
               Trigger.Property="ScrollViewer.CanContentScroll"
               Trigger.Value="False">
        <Setter Setter.TargetName="OpaqueRect"
                Setter.Value="{Binding ElementName=SubMenuScrollViewer,Path=VerticalOffset}"
                Setter.Property="Canvas.Top" />
        <Setter Setter.TargetName="OpaqueRect"
                Setter.Value="{Binding ElementName=SubMenuScrollViewer,Path=HorizontalOffset}"
                Setter.Property="Canvas.Left" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem},ResourceId=SubmenuItemTemplateKey}"
                   TargetType="{x:Type MenuItem}">
    <Grid SnapsToDevicePixels="True">
      <Rectangle Name="Bg"
                 Shape.Fill="{TemplateBinding Control.Background}"
                 Shape.Stroke="{TemplateBinding Control.BorderBrush}"
                 Shape.StrokeThickness="1"
                 Rectangle.RadiusX="2"
                 Rectangle.RadiusY="2" />
      <Rectangle x:Name="InnerBorder"
                 Margin="1"
                 Rectangle.RadiusX="2"
                 Rectangle.RadiusY="2" />
      <Grid>
        <Grid.ColumnDefinitions>
          <ColumnDefinition ColumnDefinition.MinWidth="24"
                            ColumnDefinition.Width="Auto"
                            DefinitionBase.SharedSizeGroup="MenuItemIconColumnGroup" />
          <ColumnDefinition ColumnDefinition.Width="4" />
          <ColumnDefinition ColumnDefinition.Width="*" />
          <ColumnDefinition ColumnDefinition.Width="37" />
          <ColumnDefinition ColumnDefinition.Width="Auto"
                            DefinitionBase.SharedSizeGroup="MenuItemIGTColumnGroup" />
          <ColumnDefinition ColumnDefinition.Width="17" />
        </Grid.ColumnDefinitions>
        <ContentPresenter Name="Icon"
                          Margin="1"
                          VerticalAlignment="Center"
                          ContentSource="Icon"
                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        <Border x:Name="GlyphPanel"
                Border.Background="#FFE6EFF4"
                Border.BorderBrush="#FFCDD3E6"
                Border.BorderThickness="1"
                Border.CornerRadius="3"
                Margin="1"
                Visibility="Hidden"
                Width="22"
                Height="22">
          <Path Name="Glyph"
                Width="9"
                Height="11"
                Shape.Fill="#FF0C12A1"
                FlowDirection="LeftToRight"
                Path.Data="{StaticResource Ġ}" />
        </Border>
        <ContentPresenter Grid.Column="2"
                          ContentSource="Header"
                          Margin="{TemplateBinding Control.Padding}"
                          RecognizesAccessKey="True"
                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        <TextBlock Grid.Column="4"
                   TextBlock.Text="{TemplateBinding MenuItem.InputGestureText}"
                   Margin="{TemplateBinding Control.Padding}" />
      </Grid>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Trigger.Value="{x:Null}"
               Trigger.Property="MenuItem.Icon">
        <Setter Setter.TargetName="Icon"
                Setter.Property="Visibility"
                Setter.Value="Collapsed" />
      </Trigger>
      <Trigger Trigger.Property="MenuItem.IsChecked"
               Trigger.Value="True">
        <Setter Setter.TargetName="GlyphPanel"
                Setter.Property="Visibility"
                Setter.Value="Visible" />
        <Setter Setter.TargetName="Icon"
                Setter.Property="Visibility"
                Setter.Value="Collapsed" />
      </Trigger>
      <Trigger Trigger.Property="MenuItem.IsHighlighted"
               Trigger.Value="True">
        <Setter Setter.TargetName="Bg"
                Setter.Value="{StaticResource ģ}"
                Setter.Property="Shape.Fill" />
        <Setter Setter.TargetName="Bg"
                Setter.Property="Shape.Stroke"
                Setter.Value="#8071CBF1" />
        <Setter Setter.TargetName="InnerBorder"
                Setter.Property="Shape.Stroke"
                Setter.Value="#40FFFFFF" />
      </Trigger>
      <Trigger Trigger.Property="IsEnabled"
               Trigger.Value="False">
        <Setter Setter.Property="Control.Foreground"
                Setter.Value="#FF9A9A9A" />
        <Setter Setter.TargetName="GlyphPanel"
                Setter.Property="Border.Background"
                Setter.Value="#FFEEE9E9" />
        <Setter Setter.TargetName="GlyphPanel"
                Setter.Property="Border.BorderBrush"
                Setter.Value="#FFDBD6D6" />
        <Setter Setter.TargetName="Glyph"
                Setter.Property="Shape.Fill"
                Setter.Value="#FF848589" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem},ResourceId=SubmenuHeaderTemplateKey}"
                   TargetType="{x:Type MenuItem}">
    <Grid SnapsToDevicePixels="True">
      <Rectangle Name="Bg"
                 Shape.Fill="{TemplateBinding Control.Background}"
                 Shape.Stroke="{TemplateBinding Control.BorderBrush}"
                 Shape.StrokeThickness="1"
                 Rectangle.RadiusX="2"
                 Rectangle.RadiusY="2" />
      <Rectangle x:Name="InnerBorder"
                 Margin="1"
                 Shape.Stroke="#00FFFFFF"
                 Shape.StrokeThickness="1"
                 Rectangle.RadiusX="2"
                 Rectangle.RadiusY="2" />
      <Grid>
        <Grid.ColumnDefinitions>
          <ColumnDefinition ColumnDefinition.MinWidth="24"
                            ColumnDefinition.Width="Auto"
                            DefinitionBase.SharedSizeGroup="MenuItemIconColumnGroup" />
          <ColumnDefinition ColumnDefinition.Width="4" />
          <ColumnDefinition ColumnDefinition.Width="*" />
          <ColumnDefinition ColumnDefinition.Width="37" />
          <ColumnDefinition ColumnDefinition.Width="Auto"
                            DefinitionBase.SharedSizeGroup="MenuItemIGTColumnGroup" />
          <ColumnDefinition ColumnDefinition.Width="17" />
        </Grid.ColumnDefinitions>
        <ContentPresenter Name="Icon"
                          Margin="1"
                          VerticalAlignment="Center"
                          ContentSource="Icon"
                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        <Border x:Name="GlyphPanel"
                Border.Background="#FFE6EFF4"
                Border.BorderBrush="#FFCDD3E6"
                Border.BorderThickness="1"
                Border.CornerRadius="3"
                Margin="1"
                Visibility="Hidden"
                Width="22"
                Height="22">
          <Path Name="Glyph"
                Width="9"
                Height="11"
                Shape.Fill="#FF0C12A1"
                FlowDirection="LeftToRight"
                Path.Data="{StaticResource Ġ}" />
        </Border>
        <ContentPresenter Grid.Column="2"
                          ContentSource="Header"
                          Margin="{TemplateBinding Control.Padding}"
                          RecognizesAccessKey="True"
                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        <TextBlock Grid.Column="4"
                   TextBlock.Text="{TemplateBinding MenuItem.InputGestureText}"
                   Margin="{TemplateBinding Control.Padding}"
                   Visibility="Collapsed" />
        <Path Grid.Column="5"
              VerticalAlignment="Center"
              Margin="4,0,0,0"
              Shape.Fill="{TemplateBinding Control.Foreground}"
              Path.Data="{StaticResource ğ}" />
      </Grid>
      <Popup x:Name="PART_Popup"
             Popup.AllowsTransparency="True"
             Popup.Placement="Right"
             Popup.VerticalOffset="-3"
             Popup.HorizontalOffset="-2"
             Focusable="False"
             Popup.PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
             Popup.IsOpen="{Binding Path=IsSubmenuOpen,RelativeSource={RelativeSource TemplatedParent}}">
        <theme:SystemDropShadowChrome x:Name="Shdw"
                                      Color="Transparent"
                                      >
          <Border Name="SubMenuBorder"
                  Border.Background="{StaticResource ġ}"
                  Border.BorderBrush="#FF959595"
                  Border.BorderThickness="1">
            <ScrollViewer Name="SubMenuScrollViewer"
                          Margin="1,0"
                          Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement},ResourceId=MenuScrollViewer}}">
              <Grid RenderOptions.ClearTypeHint="Enabled">
                <Canvas Height="0"
                        Width="0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Top">
                  <Rectangle Name="OpaqueRect"
                             Shape.Fill="{StaticResource ġ}"
                             Height="{Binding ElementName=SubMenuBorder,Path=ActualHeight}"
                             Width="{Binding ElementName=SubMenuBorder,Path=ActualWidth}" />
                </Canvas>
                <Rectangle Shape.Fill="#FFF1F1F1"
                           HorizontalAlignment="Left"
                           Width="28"
                           Margin="1,2"
                           Rectangle.RadiusX="2"
                           Rectangle.RadiusY="2" />
                <Rectangle HorizontalAlignment="Left"
                           Width="1"
                           Margin="29,2,0,2"
                           Shape.Fill="#FFE2E3E3" />
                <Rectangle HorizontalAlignment="Left"
                           Width="1"
                           Margin="30,2,0,2"
                           Shape.Fill="#FFFFFFFF" />
                <ItemsPresenter Name="ItemsPresenter"
                                Margin="2"
                                KeyboardNavigation.TabNavigation="Cycle"
                                KeyboardNavigation.DirectionalNavigation="Cycle"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                Grid.IsSharedSizeScope="True" />
              </Grid>
            </ScrollViewer>
          </Border>
        </theme:SystemDropShadowChrome>
      </Popup>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Trigger.Property="MenuItem.IsSuspendingPopupAnimation"
               Trigger.Value="True">
        <Setter Setter.TargetName="PART_Popup"
                Setter.Property="Popup.PopupAnimation"
                Setter.Value="None" />
      </Trigger>
      <Trigger Trigger.Property="MenuItem.IsHighlighted"
               Trigger.Value="True">
        <Setter Setter.TargetName="InnerBorder"
                Setter.Property="Shape.Stroke"
                Setter.Value="#D1DBF4FF" />
      </Trigger>
      <Trigger Trigger.Value="{x:Null}"
               Trigger.Property="MenuItem.Icon">
        <Setter Setter.TargetName="Icon"
                Setter.Property="Visibility"
                Setter.Value="Collapsed" />
      </Trigger>
      <Trigger Trigger.Property="MenuItem.IsChecked"
               Trigger.Value="True">
        <Setter Setter.TargetName="GlyphPanel"
                Setter.Property="Visibility"
                Setter.Value="Visible" />
        <Setter Setter.TargetName="Icon"
                Setter.Property="Visibility"
                Setter.Value="Collapsed" />
      </Trigger>
      <Trigger Trigger.SourceName="PART_Popup"
               Trigger.Property="Popup.HasDropShadow"
               Trigger.Value="True">
        <Setter Setter.TargetName="Shdw"
                Setter.Property="Margin"
                Setter.Value="0,0,5,5" />
        <Setter Setter.TargetName="Shdw"
                Setter.Property="theme:SystemDropShadowChrome.Color"
                Setter.Value="#71000000" />
      </Trigger>
      <Trigger Trigger.Property="MenuItem.IsHighlighted"
               Trigger.Value="True">
        <Setter Setter.TargetName="Bg"
                Setter.Value="{StaticResource ģ}"
                Setter.Property="Shape.Fill" />
        <Setter Setter.TargetName="Bg"
                Setter.Property="Shape.Stroke"
                Setter.Value="#8571CBF1" />
      </Trigger>
      <Trigger Trigger.Property="IsEnabled"
               Trigger.Value="False">
        <Setter Setter.Property="Control.Foreground"
                Setter.Value="#FF9A9A9A" />
        <Setter Setter.TargetName="GlyphPanel"
                Setter.Property="Border.Background"
                Setter.Value="#FFEEE9E9" />
        <Setter Setter.TargetName="GlyphPanel"
                Setter.Property="Border.BorderBrush"
                Setter.Value="#FFDBD6D6" />
        <Setter Setter.TargetName="Glyph"
                Setter.Property="Shape.Fill"
                Setter.Value="#FF848589" />
      </Trigger>
      <Trigger Trigger.SourceName="SubMenuScrollViewer"
               Trigger.Property="ScrollViewer.CanContentScroll"
               Trigger.Value="False">
        <Setter Setter.TargetName="OpaqueRect"
                Setter.Value="{Binding ElementName=SubMenuScrollViewer,Path=VerticalOffset}"
                Setter.Property="Canvas.Top" />
        <Setter Setter.TargetName="OpaqueRect"
                Setter.Value="{Binding ElementName=SubMenuScrollViewer,Path=HorizontalOffset}"
                Setter.Property="Canvas.Left" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="{x:Type MenuItem}"
         TargetType="{x:Type MenuItem}">
    <Setter Setter.Property="Control.HorizontalContentAlignment"
            Setter.Value="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Setter.Property="Control.VerticalContentAlignment"
            Setter.Value="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Setter.Property="Control.Background"
            Setter.Value="#00FFFFFF" />
    <Setter Setter.Property="ScrollViewer.PanningMode"
            Setter.Value="Both" />
    <Setter Setter.Property="Stylus.IsFlicksEnabled"
            Setter.Value="False" />
    <Setter Setter.Property="Control.Template"
            Setter.Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem},ResourceId=SubmenuItemTemplateKey}}" />
    <Style.Triggers>
      <Trigger Trigger.Property="MenuItem.Role"
               Trigger.Value="TopLevelHeader">
        <Setter Setter.Property="Control.Padding"
                Setter.Value="7,2,8,3" />
        <Setter Setter.Property="Control.Template"
                Setter.Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem},ResourceId=TopLevelHeaderTemplateKey}}" />
      </Trigger>
      <Trigger Trigger.Property="MenuItem.Role"
               Trigger.Value="TopLevelItem">
        <Setter Setter.Property="Control.Padding"
                Setter.Value="7,2,8,3" />
        <Setter Setter.Property="Control.Template"
                Setter.Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem},ResourceId=TopLevelItemTemplateKey}}" />
      </Trigger>
      <Trigger Trigger.Property="MenuItem.Role"
               Trigger.Value="SubmenuHeader">
        <Setter Setter.Property="Control.Padding"
                Setter.Value="2,3,2,3" />
        <Setter Setter.Property="Control.Template"
                Setter.Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem},ResourceId=SubmenuHeaderTemplateKey}}" />
      </Trigger>
      <Trigger Trigger.Property="MenuItem.Role"
               Trigger.Value="SubmenuItem">
        <Setter Setter.Property="Control.Padding"
                Setter.Value="2,3,2,3" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <JournalEntryUnifiedViewConverter x:Key="ċ" />
  <LinearGradientBrush x:Key="ĥ"
                       LinearGradientBrush.StartPoint="0.5,0.0"
                       LinearGradientBrush.EndPoint="0.5,1.0">
    <GradientBrush.GradientStops>
      <GradientStopCollection>
        <GradientStop Color="#FFFFFF"
                      Offset="0.0" />
        <GradientStop Color="#CCD4E9"
                      Offset="0.1" />
        <GradientStop Color="#4881D2"
                      Offset="0.47" />
        <GradientStop Color="#001A5A"
                      Offset="0.47" />
        <GradientStop Color="#007BD6"
                      Offset="0.70" />
        <GradientStop Color="#54DAFF"
                      Offset="0.85" />
        <GradientStop Color="#86FFFF"
                      Offset="0.95" />
        <GradientStop Color="#FFFFFF"
                      Offset="1.0" />
      </GradientStopCollection>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="Ħ"
                       LinearGradientBrush.StartPoint="0.5,0.0"
                       LinearGradientBrush.EndPoint="0.5,1.0">
    <GradientBrush.GradientStops>
      <GradientStopCollection>
        <GradientStop Color="#FFFFFF"
                      Offset="0.0" />
        <GradientStop Color="#DFEDF9"
                      Offset="0.1" />
        <GradientStop Color="#3086E1"
                      Offset="0.47" />
        <GradientStop Color="#003B91"
                      Offset="0.47" />
        <GradientStop Color="#1793EF"
                      Offset="0.70" />
        <GradientStop Color="#5AD4FF"
                      Offset="0.85" />
        <GradientStop Color="#BDFFFF"
                      Offset="0.95" />
        <GradientStop Color="#FFFFFF"
                      Offset="1.0" />
      </GradientStopCollection>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ħ"
                       LinearGradientBrush.StartPoint="0.5,0.0"
                       LinearGradientBrush.EndPoint="0.5,1.0">
    <GradientBrush.GradientStops>
      <GradientStopCollection>
        <GradientStop Color="#C0D2F5"
                      Offset="0.0" />
        <GradientStop Color="#5E7A9C"
                      Offset="0.47" />
        <GradientStop Color="#00062D"
                      Offset="0.47" />
        <GradientStop Color="#005F9F"
                      Offset="0.70" />
        <GradientStop Color="#1FA4E2"
                      Offset="0.85" />
        <GradientStop Color="#61DAFF"
                      Offset="0.95" />
        <GradientStop Color="#48CFFF"
                      Offset="1.0" />
      </GradientStopCollection>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="Ĩ"
                       LinearGradientBrush.StartPoint="0.5,0.0"
                       LinearGradientBrush.EndPoint="0.5,1.0">
    <GradientBrush.GradientStops>
      <GradientStopCollection>
        <GradientStop Color="#FFFFFF"
                      Offset="0" />
        <GradientStop Color="#EBEEF5"
                      Offset="0.5" />
        <GradientStop Color="#D8DDEB"
                      Offset="0.5" />
        <GradientStop Color="#DFE2F0"
                      Offset="1.0" />
      </GradientStopCollection>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ĩ"
                       LinearGradientBrush.StartPoint="0,0"
                       LinearGradientBrush.EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStopCollection>
        <GradientStop Color="#6C90C4"
                      Offset="0" />
        <GradientStop Color="#315BB4"
                      Offset="0.5" />
        <GradientStop Color="#002091"
                      Offset="0.5" />
        <GradientStop Color="#08377C"
                      Offset="1" />
      </GradientStopCollection>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="Ī"
                       LinearGradientBrush.StartPoint="0,0"
                       LinearGradientBrush.EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#8AB1FB"
                    Offset="0" />
      <GradientStop Color="#002874"
                    Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ī"
                       LinearGradientBrush.StartPoint="0,0"
                       LinearGradientBrush.EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStopCollection>
        <GradientStop Color="#FFFFFF"
                      Offset="0.5" />
        <GradientStop Color="#EEEEEE"
                      Offset="0.5" />
        <GradientStop Color="#B0B0B0"
                      Offset="1" />
      </GradientStopCollection>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="Ĭ"
                       LinearGradientBrush.StartPoint="0,0"
                       LinearGradientBrush.EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStopCollection>
        <GradientStop Color="#33B5DA"
                      Offset="0" />
        <GradientStop Color="#335799"
                      Offset="1" />
      </GradientStopCollection>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ć"
                       LinearGradientBrush.StartPoint="0,0"
                       LinearGradientBrush.EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FFFFFF"
                    Offset="0" />
      <GradientStop Color="#E3E8F4"
                    Offset="0.5" />
      <GradientStop Color="#CFD7EB"
                    Offset="0.5" />
      <GradientStop Color="#E9ECFA"
                    Offset="1.0" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="ĭ"
                   SolidColorBrush.Color="{StaticResource {x:Static SystemColors.HighlightColorKey}}"
                   Brush.Opacity="0.25" />
  <Style x:Key="Ċ"
         TargetType="{x:Type MenuItem}">
    <Setter Setter.Property="FrameworkElement.OverridesDefaultStyle"
            Setter.Value="True" />
    <Setter Setter.Property="HeaderedItemsControl.Header"
            Setter.Value="{Binding Path=(JournalEntry.Name)}" />
    <Setter Setter.Property="MenuItem.Command"
            Setter.Value="NavigationCommands.NavigateJournal" />
    <Setter Setter.Property="MenuItem.CommandTarget"
            Setter.Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type Menu}},Path=TemplatedParent}" />
    <Setter Setter.Property="MenuItem.CommandParameter"
            Setter.Value="{Binding RelativeSource={RelativeSource Self}}" />
    <Setter Setter.Property="JournalEntryUnifiedViewConverter.JournalEntryPosition"
            Setter.Value="{Binding (JournalEntryUnifiedViewConverter.JournalEntryPosition)}" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type MenuItem}">
          <Grid Name="Panel"
                Panel.Background="#00FFFFFF"
                SnapsToDevicePixels="True">
            <Path Name="Glyph"
                  SnapsToDevicePixels="False"
                  Margin="7,5"
                  Width="10"
                  Height="10"
                  HorizontalAlignment="Left"
                  Shape.StrokeStartLineCap="Triangle"
                  Shape.StrokeEndLineCap="Triangle"
                  Shape.StrokeThickness="2"
                  Shape.Stroke="{TemplateBinding Control.Foreground}" />
            <ContentPresenter ContentSource="Header"
                              Margin="24,5,21,5" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="JournalEntryUnifiedViewConverter.JournalEntryPosition"
                     Trigger.Value="Current">
              <Setter Setter.TargetName="Panel"
                      Setter.Value="{StaticResource ĭ}"
                      Setter.Property="Panel.Background" />
              <Setter Setter.TargetName="Glyph"
                      Setter.Property="Path.Data"
                      Setter.Value="M0,5L2.5,8 7,3" />
              <Setter Setter.TargetName="Glyph"
                      Setter.Property="FrameworkElement.FlowDirection"
                      Setter.Value="LeftToRight" />
              <Setter Setter.TargetName="Glyph"
                      Setter.Property="Shape.StrokeLineJoin"
                      Setter.Value="Miter" />
            </Trigger>
            <Trigger Trigger.Property="MenuItem.IsHighlighted"
                     Trigger.Value="True">
              <Setter Setter.Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"
                      Setter.Property="Control.Foreground" />
              <Setter Setter.TargetName="Panel"
                      Setter.Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                      Setter.Property="Panel.Background" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Condition.Property="MenuItem.IsHighlighted"
                           Condition.Value="True" />
                <Condition Condition.Property="JournalEntryUnifiedViewConverter.JournalEntryPosition"
                           Condition.Value="Forward" />
              </MultiTrigger.Conditions>
              <Setter Setter.TargetName="Glyph"
                      Setter.Property="Shape.Stroke"
                      Setter.Value="#FFFFFFFF" />
              <Setter Setter.TargetName="Glyph"
                      Setter.Property="Path.Data"
                      Setter.Value="M1,5L7,5 M5,1L9,5 5,9" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Condition.Property="MenuItem.IsHighlighted"
                           Condition.Value="True" />
                <Condition Condition.Property="JournalEntryUnifiedViewConverter.JournalEntryPosition"
                           Condition.Value="Back" />
              </MultiTrigger.Conditions>
              <Setter Setter.TargetName="Glyph"
                      Setter.Property="Shape.Stroke"
                      Setter.Value="#FFFFFFFF" />
              <Setter Setter.TargetName="Glyph"
                      Setter.Property="Path.Data"
                      Setter.Value="M9,5L3,5 M5,1L1,5 5,9" />
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ĉ"
         TargetType="{x:Type MenuItem}">
    <Setter Setter.Property="FrameworkElement.OverridesDefaultStyle"
            Setter.Value="True" />
    <Setter Setter.Property="ScrollViewer.PanningMode"
            Setter.Value="Both" />
    <Setter Setter.Property="Stylus.IsFlicksEnabled"
            Setter.Value="False" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type MenuItem}">
          <Grid>
            <Popup x:Name="PART_Popup"
                   Popup.AllowsTransparency="True"
                   Popup.Placement="Bottom"
                   Popup.VerticalOffset="2"
                   Focusable="False"
                   Popup.PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                   Popup.IsOpen="{Binding Path=(MenuItem.IsSubmenuOpen),RelativeSource={RelativeSource TemplatedParent}}">
              <theme:SystemDropShadowChrome x:Name="Shdw"
                                            Color="Transparent"
                                            >
                <Border Name="SubMenuBorder"
                        Border.Background="{DynamicResource {x:Static SystemColors.MenuBrushKey}}"
                        Border.BorderThickness="1"
                        Border.BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}">
                  <ScrollViewer Name="SubMenuScrollViewer"
                                Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement},ResourceId=MenuScrollViewer}}">
                    <Grid RenderOptions.ClearTypeHint="Enabled">
                      <Canvas Height="0"
                              Width="0"
                              HorizontalAlignment="Left"
                              VerticalAlignment="Top">
                        <Rectangle Name="OpaqueRect"
                                   Height="{Binding ElementName=SubMenuBorder,Path=ActualHeight}"
                                   Width="{Binding ElementName=SubMenuBorder,Path=ActualWidth}"
                                   Shape.Fill="{Binding ElementName=SubMenuBorder,Path=Background}" />
                      </Canvas>
                      <ItemsPresenter Name="ItemsPresenter"
                                      Margin="2"
                                      KeyboardNavigation.TabNavigation="Cycle"
                                      KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Grid>
                  </ScrollViewer>
                </Border>
              </theme:SystemDropShadowChrome>
            </Popup>
            <Grid x:Name="Panel"
                  Width="26"
                  Panel.Background="#00FFFFFF"
                  HorizontalAlignment="Right">
              <Border Name="HighlightBorder"
                      SnapsToDevicePixels="True"
                      Visibility="Hidden"
                      Border.BorderThickness="1,1,1,1"
                      Border.BorderBrush="#B0B5BACE"
                      Border.CornerRadius="2">
                <Border.Background>
                  <LinearGradientBrush LinearGradientBrush.StartPoint="0,0"
                                       LinearGradientBrush.EndPoint="0,1">
                    <GradientBrush.GradientStops>
                      <GradientStop Color="#20DDDDDD"
                                    Offset="0" />
                      <GradientStop Color="#80FFFFFF"
                                    Offset="1" />
                    </GradientBrush.GradientStops>
                  </LinearGradientBrush>
                </Border.Background>
                <Border Border.BorderBrush="#A0FFFFFF"
                        Border.CornerRadius="1.5"
                        Border.BorderThickness="1" />
              </Border>
              <Path x:Name="Arrow"
                    SnapsToDevicePixels="False"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    Margin="{TemplateBinding Control.Padding}"
                    Shape.Fill="{StaticResource Ĭ}"
                    Shape.Stroke="#FFFFFFFF"
                    Shape.StrokeThickness="1"
                    Shape.StrokeLineJoin="Round"
                    Path.Data="M0,0L4.5,5 9,0z" />
            </Grid>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="MenuItem.IsHighlighted"
                     Trigger.Value="True">
              <Setter Setter.TargetName="HighlightBorder"
                      Setter.Property="Visibility"
                      Setter.Value="Visible" />
            </Trigger>
            <Trigger Trigger.Property="IsEnabled"
                     Trigger.Value="False">
              <Setter Setter.TargetName="Arrow"
                      Setter.Property="Shape.Fill"
                      Setter.Value="#FFA5AABE" />
            </Trigger>
            <Trigger Trigger.SourceName="PART_Popup"
                     Trigger.Property="Popup.HasDropShadow"
                     Trigger.Value="True">
              <Setter Setter.TargetName="Shdw"
                      Setter.Property="Margin"
                      Setter.Value="0,0,5,5" />
              <Setter Setter.TargetName="Shdw"
                      Setter.Property="SnapsToDevicePixels"
                      Setter.Value="True" />
              <Setter Setter.TargetName="Shdw"
                      Setter.Property="theme:SystemDropShadowChrome.Color"
                      Setter.Value="#71000000" />
            </Trigger>
            <Trigger Trigger.SourceName="SubMenuScrollViewer"
                     Trigger.Property="ScrollViewer.CanContentScroll"
                     Trigger.Value="False">
              <Setter Setter.TargetName="OpaqueRect"
                      Setter.Value="{Binding ElementName=SubMenuScrollViewer,Path=VerticalOffset}"
                      Setter.Property="Canvas.Top" />
              <Setter Setter.TargetName="OpaqueRect"
                      Setter.Value="{Binding ElementName=SubMenuScrollViewer,Path=HorizontalOffset}"
                      Setter.Property="Canvas.Left" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="Ĉ"
         TargetType="{x:Type Menu}">
    <Setter Setter.Property="ItemsControl.ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <DockPanel />
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
    <Setter Setter.Property="FrameworkElement.OverridesDefaultStyle"
            Setter.Value="True" />
    <Setter Setter.Property="KeyboardNavigation.TabNavigation"
            Setter.Value="None" />
    <Setter Setter.Property="Menu.IsMainMenu"
            Setter.Value="False" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Menu}">
          <ItemsPresenter />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="Č"
         TargetType="{x:Type Button}">
    <Setter Setter.Property="FrameworkElement.OverridesDefaultStyle"
            Setter.Value="True" />
    <Setter Setter.Property="ButtonBase.Command"
            Setter.Value="NavigationCommands.BrowseBack" />
    <Setter Setter.Property="Focusable"
            Setter.Value="False" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid Width="24"
                Height="24"
                Panel.Background="#00FFFFFF">
            <Ellipse Name="Circle"
                     Shape.StrokeThickness="1"
                     Shape.Fill="{StaticResource ĥ}"
                     Shape.Stroke="{StaticResource ĩ}" />
            <Path Name="Arrow"
                  VerticalAlignment="Center"
                  HorizontalAlignment="Center"
                  Shape.StrokeThickness="0.75"
                  Path.Data="M0.37,7.69L5.74,14.2A1.5,1.5,0,1,0,10.26,12.27L8.42,10.42 14.9,10.39A1.5,1.5,0,1,0,14.92,5.87L8.44,5.9 10.31,4.03A1.5,1.5,0,1,0,5.79,1.77z"
                  Shape.Stroke="{StaticResource Ī}"
                  Shape.Fill="{StaticResource ī}" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="IsEnabled"
                     Trigger.Value="False">
              <Setter Setter.Value="{StaticResource Ĩ}"
                      Setter.TargetName="Circle"
                      Setter.Property="Shape.Fill" />
              <Setter Setter.TargetName="Circle"
                      Setter.Property="Shape.Stroke"
                      Setter.Value="#FFB5BACE" />
              <Setter Setter.TargetName="Arrow"
                      Setter.Property="Shape.Stroke"
                      Setter.Value="#B0B5BACE" />
              <Setter Setter.TargetName="Arrow"
                      Setter.Property="Shape.Fill"
                      Setter.Value="#D0FFFFFF" />
            </Trigger>
            <Trigger Trigger.Property="IsMouseOver"
                     Trigger.Value="True">
              <Setter Setter.Value="{StaticResource Ħ}"
                      Setter.TargetName="Circle"
                      Setter.Property="Shape.Fill" />
            </Trigger>
            <Trigger Trigger.Property="ButtonBase.IsPressed"
                     Trigger.Value="True">
              <Setter Setter.Value="{StaticResource ħ}"
                      Setter.TargetName="Circle"
                      Setter.Property="Shape.Fill" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="č"
         TargetType="{x:Type Button}">
    <Setter Setter.Property="FrameworkElement.OverridesDefaultStyle"
            Setter.Value="True" />
    <Setter Setter.Property="ButtonBase.Command"
            Setter.Value="NavigationCommands.BrowseForward" />
    <Setter Setter.Property="Focusable"
            Setter.Value="False" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid Width="24"
                Height="24"
                Panel.Background="#00FFFFFF">
            <Ellipse Name="Circle"
                     Grid.Column="0"
                     Shape.StrokeThickness="1"
                     Shape.Fill="{StaticResource ĥ}"
                     Shape.Stroke="{StaticResource ĩ}" />
            <Path Name="Arrow"
                  Grid.Column="0"
                  VerticalAlignment="Center"
                  HorizontalAlignment="Center"
                  Shape.StrokeThickness="0.75"
                  Path.Data="M0.37,7.69L5.74,14.2A1.5,1.5,0,1,0,10.26,12.27L8.42,10.42 14.9,10.39A1.5,1.5,0,1,0,14.92,5.87L8.44,5.9 10.31,4.03A1.5,1.5,0,1,0,5.79,1.77z"
                  Shape.Stroke="{StaticResource Ī}"
                  Shape.Fill="{StaticResource ī}"
                  RenderTransformOrigin="0.5,0">
              <UIElement.RenderTransform>
                <ScaleTransform ScaleTransform.ScaleX="-1" />
              </UIElement.RenderTransform>
            </Path>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="IsEnabled"
                     Trigger.Value="False">
              <Setter Setter.Value="{StaticResource Ĩ}"
                      Setter.TargetName="Circle"
                      Setter.Property="Shape.Fill" />
              <Setter Setter.TargetName="Circle"
                      Setter.Property="Shape.Stroke"
                      Setter.Value="#FFB5BACE" />
              <Setter Setter.TargetName="Arrow"
                      Setter.Property="Shape.Stroke"
                      Setter.Value="#B0B5BACE" />
              <Setter Setter.TargetName="Arrow"
                      Setter.Property="Shape.Fill"
                      Setter.Value="#D0FFFFFF" />
            </Trigger>
            <Trigger Trigger.Property="IsMouseOver"
                     Trigger.Value="True">
              <Setter Setter.Value="{StaticResource Ħ}"
                      Setter.TargetName="Circle"
                      Setter.Property="Shape.Fill" />
            </Trigger>
            <Trigger Trigger.Property="ButtonBase.IsPressed"
                     Trigger.Value="True">
              <Setter Setter.Value="{StaticResource ħ}"
                      Setter.TargetName="Circle"
                      Setter.Property="Shape.Fill" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ControlTemplate x:Key="Į"
                   TargetType="{x:Type NavigationWindow}">
    <Border Border.Background="{TemplateBinding Control.Background}"
            Border.BorderBrush="{TemplateBinding Control.BorderBrush}"
            Border.BorderThickness="{TemplateBinding Control.BorderThickness}">
      <DockPanel>
        <Grid Name="NavChrome"
              Panel.Background="{StaticResource ć}"
              DockPanel.Dock="Top"
              Height="30">
          <Grid.ColumnDefinitions>
            <ColumnDefinition ColumnDefinition.Width="29" />
            <ColumnDefinition ColumnDefinition.Width="26" />
            <ColumnDefinition ColumnDefinition.Width="17" />
            <ColumnDefinition ColumnDefinition.Width="*" />
          </Grid.ColumnDefinitions>
          <Menu Name="NavMenu"
                Grid.ColumnSpan="3"
                Height="23"
                Margin="1,0,0,1"
                VerticalAlignment="Center"
                Style="{StaticResource Ĉ}">
            <MenuItem Control.Padding="0,2,5,0"
                      Style="{StaticResource ĉ}"
                      ItemsControl.ItemContainerStyle="{StaticResource Ċ}"
                      MenuItem.IsSubmenuOpen="{Binding Path=(MenuItem.IsSubmenuOpen),Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}">
              <ItemsControl.ItemsSource>
                <MultiBinding MultiBinding.Converter="{StaticResource ċ}">
                  <MultiBinding.Bindings>
                    <Binding Binding.Path="(NavigationWindow.BackStack)"
                             Binding.RelativeSource="{RelativeSource TemplatedParent}" />
                    <Binding Binding.Path="(NavigationWindow.ForwardStack)"
                             Binding.RelativeSource="{RelativeSource TemplatedParent}" />
                  </MultiBinding.Bindings>
                </MultiBinding>
              </ItemsControl.ItemsSource>
            </MenuItem>
          </Menu>
          <Path Grid.Column="0"
                SnapsToDevicePixels="False"
                IsHitTestVisible="False"
                Margin="2,0,0,0"
                Grid.ColumnSpan="3"
                Shape.StrokeThickness="1"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                Path.Data="M22.5767,21.035Q27,19.37,31.424,21.035A12.5,12.5,0,0,0,53.5,13A12.5,12.5,0,0,0,37.765,0.926Q27,4.93,16.235,0.926A12.5,12.5,0,0,0,0.5,13A12.5,12.5,0,0,0,22.5767,21.035z">
            <Shape.Fill>
              <LinearGradientBrush LinearGradientBrush.StartPoint="0,0"
                                   LinearGradientBrush.EndPoint="0,1">
                <GradientBrush.GradientStops>
                  <GradientStopCollection>
                    <GradientStop Color="#A0C2CCE7"
                                  Offset="0" />
                    <GradientStop Color="#60FFFFFF"
                                  Offset="1" />
                  </GradientStopCollection>
                </GradientBrush.GradientStops>
              </LinearGradientBrush>
            </Shape.Fill>
            <Shape.Stroke>
              <LinearGradientBrush LinearGradientBrush.StartPoint="0,0"
                                   LinearGradientBrush.EndPoint="0,1">
                <GradientBrush.GradientStops>
                  <GradientStopCollection>
                    <GradientStop Color="#FFB7C2E3"
                                  Offset="0.2" />
                    <GradientStop Color="#A0FFFFFF"
                                  Offset="0.9" />
                  </GradientStopCollection>
                </GradientBrush.GradientStops>
              </LinearGradientBrush>
            </Shape.Stroke>
          </Path>
          <Button Style="{StaticResource Č}"
                  Margin="3,0,2,0"
                  Grid.Column="0" />
          <Button Style="{StaticResource č}"
                  Margin="2,0,0,0"
                  Grid.Column="1" />
        </Grid>
        <Grid>
          <AdornerDecorator>
            <ContentPresenter Name="PART_NavWinCP"
                              ClipToBounds="True" />
          </AdornerDecorator>
          <ResizeGrip x:Name="WindowResizeGrip"
                      HorizontalAlignment="Right"
                      VerticalAlignment="Bottom"
                      Visibility="Collapsed"
                      Control.IsTabStop="False" />
        </Grid>
      </DockPanel>
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Trigger.Property="NavigationWindow.ShowsNavigationUI"
               Trigger.Value="False">
        <Setter Setter.TargetName="NavChrome"
                Setter.Property="Visibility"
                Setter.Value="Collapsed" />
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Condition.Property="Window.ResizeMode"
                     Condition.Value="CanResizeWithGrip" />
          <Condition Condition.Property="Window.WindowState"
                     Condition.Value="Normal" />
        </MultiTrigger.Conditions>
        <Setter Setter.TargetName="WindowResizeGrip"
                Setter.Property="Visibility"
                Setter.Value="Visible" />
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Condition.Property="NavigationWindow.CanGoForward"
                     Condition.Value="False" />
          <Condition Condition.Property="NavigationWindow.CanGoBack"
                     Condition.Value="False" />
        </MultiTrigger.Conditions>
        <Setter Setter.TargetName="NavMenu"
                Setter.Property="IsEnabled"
                Setter.Value="False" />
      </MultiTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="{x:Type NavigationWindow}"
         TargetType="{x:Type NavigationWindow}">
    <Setter Setter.Property="Control.Foreground"
            Setter.Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
    <Setter Setter.Property="Control.Background"
            Setter.Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
    <Setter Setter.Property="Control.Template"
            Setter.Value="{StaticResource Į}" />
  </Style>
  <Style x:Key="{x:Type Page}"
         TargetType="{x:Type Page}">
    <Setter Setter.Property="Page.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Page}">
          <Border Border.Background="{TemplateBinding Page.Background}">
            <ContentPresenter Content="{TemplateBinding Page.Content}" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <LinearGradientBrush x:Key="į"
                       LinearGradientBrush.EndPoint="0,1"
                       LinearGradientBrush.StartPoint="0,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="#B2B2B2"
                    Offset="0" />
      <GradientStop Color="#8C8C8C"
                    Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="İ"
                       LinearGradientBrush.EndPoint="1,0"
                       LinearGradientBrush.StartPoint="0,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="#BABABA"
                    Offset="0" />
      <GradientStop Color="#C7C7C7"
                    Offset="0.5" />
      <GradientStop Color="#BABABA"
                    Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ı"
                       LinearGradientBrush.StartPoint="0,0"
                       LinearGradientBrush.EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#80FFFFFF"
                    Offset="0.05" />
      <GradientStop Color="#00FFFFFF"
                    Offset="0.25" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="Ĳ"
                       LinearGradientBrush.StartPoint="0,0"
                       LinearGradientBrush.EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#50FFFFFF"
                    Offset="0.5385" />
      <GradientStop Color="#00FFFFFF"
                    Offset="0.5385" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ĳ"
                       LinearGradientBrush.StartPoint="0,0"
                       LinearGradientBrush.EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#90FFFFFF"
                    Offset="0.5385" />
      <GradientStop Color="#00FFFFFF"
                    Offset="0.5385" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <RadialGradientBrush x:Key="Ĵ"
                       RadialGradientBrush.RadiusX="1"
                       RadialGradientBrush.RadiusY="1"
                       Brush.RelativeTransform="1,0,0,1,0.5,0.5">
    <GradientBrush.GradientStops>
      <GradientStop Color="#60FFFFC4"
                    Offset="0" />
      <GradientStop Color="#00FFFFC4"
                    Offset="1" />
    </GradientBrush.GradientStops>
  </RadialGradientBrush>
  <LinearGradientBrush x:Key="ĵ"
                       LinearGradientBrush.StartPoint="0,1"
                       LinearGradientBrush.EndPoint="0,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="#60FFFFC4"
                    Offset="0" />
      <GradientStop Color="#00FFFFC4"
                    Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <RadialGradientBrush x:Key="Ķ"
                       RadialGradientBrush.RadiusX="1"
                       RadialGradientBrush.RadiusY="1"
                       Brush.RelativeTransform="1,0,0,1,-0.5,0.5">
    <GradientBrush.GradientStops>
      <GradientStop Color="#60FFFFC4"
                    Offset="0" />
      <GradientStop Color="#00FFFFC4"
                    Offset="1" />
    </GradientBrush.GradientStops>
  </RadialGradientBrush>
  <LinearGradientBrush x:Key="ķ"
                       LinearGradientBrush.StartPoint="0,0"
                       LinearGradientBrush.EndPoint="1,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="#0C000000"
                    Offset="0" />
      <GradientStop Color="#20000000"
                    Offset="0.3" />
      <GradientStop Color="#00000000"
                    Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ĸ"
                       LinearGradientBrush.StartPoint="0,0"
                       LinearGradientBrush.EndPoint="1,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="#00000000"
                    Offset="0" />
      <GradientStop Color="#20000000"
                    Offset="0.7" />
      <GradientStop Color="#0C000000"
                    Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="Ĺ"
                       LinearGradientBrush.StartPoint="0,0"
                       LinearGradientBrush.EndPoint="1,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="#00FFFFFF"
                    Offset="0" />
      <GradientStop Color="#60FFFFFF"
                    Offset="0.4" />
      <GradientStop Color="#60FFFFFF"
                    Offset="0.6" />
      <GradientStop Color="#00FFFFFF"
                    Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <Style x:Key="{x:Type ProgressBar}"
         TargetType="{x:Type ProgressBar}">
    <Setter Setter.Property="Control.Foreground"
            Setter.Value="#FF01D328" />
    <Setter Setter.Property="Control.Background"
            Setter.Value="{StaticResource İ}" />
    <Setter Setter.Property="Control.BorderBrush"
            Setter.Value="{StaticResource į}" />
    <Setter Setter.Property="Control.BorderThickness"
            Setter.Value="1" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ProgressBar}">
          <Grid Name="TemplateRoot"
                SnapsToDevicePixels="True">
            <Rectangle Shape.Fill="{TemplateBinding Control.Background}"
                       Rectangle.RadiusX="2"
                       Rectangle.RadiusY="2" />
            <Border Border.Background="{StaticResource Ĳ}"
                    Margin="1"
                    Border.CornerRadius="2" />
            <Border Border.BorderBrush="#80FFFFFF"
                    Border.Background="{StaticResource ı}"
                    Border.BorderThickness="1,0,1,1"
                    Margin="1" />
            <Rectangle Name="PART_Track"
                       Margin="1" />
            <Decorator x:Name="PART_Indicator"
                       HorizontalAlignment="Left"
                       Margin="1">
              <Grid Name="Foreground">
                <Rectangle x:Name="Indicator"
                           Shape.Fill="{TemplateBinding Control.Foreground}" />
                <Grid x:Name="Animation"
                      ClipToBounds="True">
                  <Rectangle x:Name="PART_GlowRect"
                             Width="100"
                             Shape.Fill="{StaticResource Ĺ}"
                             Margin="-100,0,0,0"
                             HorizontalAlignment="Left" />
                </Grid>
                <Grid x:Name="Overlay">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition ColumnDefinition.MaxWidth="15" />
                    <ColumnDefinition ColumnDefinition.Width="0.1*" />
                    <ColumnDefinition ColumnDefinition.MaxWidth="15" />
                  </Grid.ColumnDefinitions>
                  <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                  </Grid.RowDefinitions>
                  <Rectangle x:Name="LeftDark"
                             Grid.RowSpan="2"
                             Shape.Fill="{StaticResource ķ}"
                             Rectangle.RadiusX="1"
                             Rectangle.RadiusY="1"
                             Margin="1,1,0,1" />
                  <Rectangle x:Name="RightDark"
                             Grid.RowSpan="2"
                             Grid.Column="2"
                             Rectangle.RadiusX="1"
                             Rectangle.RadiusY="1"
                             Shape.Fill="{StaticResource ĸ}"
                             Margin="0,1,1,1" />
                  <Rectangle x:Name="LeftLight"
                             Grid.Column="0"
                             Grid.Row="2"
                             Shape.Fill="{StaticResource Ĵ}" />
                  <Rectangle x:Name="CenterLight"
                             Grid.Column="1"
                             Grid.Row="2"
                             Shape.Fill="{StaticResource ĵ}" />
                  <Rectangle x:Name="RightLight"
                             Grid.Column="2"
                             Grid.Row="2"
                             Shape.Fill="{StaticResource Ķ}" />
                  <Border x:Name="Highlight1"
                          Grid.RowSpan="2"
                          Grid.ColumnSpan="3"
                          Border.Background="{StaticResource ĳ}" />
                  <Border x:Name="Highlight2"
                          Grid.RowSpan="2"
                          Grid.ColumnSpan="3"
                          Border.Background="{StaticResource ı}" />
                </Grid>
              </Grid>
            </Decorator>
            <Border Border.BorderThickness="{TemplateBinding Control.BorderThickness}"
                    Border.BorderBrush="{TemplateBinding Control.BorderBrush}"
                    Border.CornerRadius="2" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="ProgressBar.Orientation"
                     Trigger.Value="Vertical">
              <Setter Setter.TargetName="TemplateRoot"
                      Setter.Property="FrameworkElement.LayoutTransform">
                <Setter.Value>
                  <RotateTransform RotateTransform.Angle="-90" />
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Trigger.Property="ProgressBar.IsIndeterminate"
                     Trigger.Value="True">
              <Setter Setter.TargetName="LeftDark"
                      Setter.Property="Visibility"
                      Setter.Value="Collapsed" />
              <Setter Setter.TargetName="RightDark"
                      Setter.Property="Visibility"
                      Setter.Value="Collapsed" />
              <Setter Setter.TargetName="LeftLight"
                      Setter.Property="Visibility"
                      Setter.Value="Collapsed" />
              <Setter Setter.TargetName="CenterLight"
                      Setter.Property="Visibility"
                      Setter.Value="Collapsed" />
              <Setter Setter.TargetName="RightLight"
                      Setter.Property="Visibility"
                      Setter.Value="Collapsed" />
              <Setter Setter.TargetName="Indicator"
                      Setter.Property="Visibility"
                      Setter.Value="Collapsed" />
            </Trigger>
            <Trigger Trigger.Property="ProgressBar.IsIndeterminate"
                     Trigger.Value="False">
              <Setter Setter.TargetName="Animation"
                      Setter.Property="Panel.Background"
                      Setter.Value="#80B5FFA9" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type RadioButton}"
         TargetType="{x:Type RadioButton}">
    <Setter Setter.Property="Control.Foreground"
            Setter.Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Setter.Property="Control.Background"
            Setter.Value="#FFF4F4F4" />
    <Setter Setter.Property="Control.BorderBrush"
            Setter.Value="{StaticResource Þ}" />
    <Setter Setter.Property="Control.BorderThickness"
            Setter.Value="1" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RadioButton}">
          <BulletDecorator BulletDecorator.Background="#00FFFFFF">
            <BulletDecorator.Bullet>
              <theme:BulletChrome Background="{TemplateBinding Control.Background}"
                                  BorderBrush="{TemplateBinding Control.BorderBrush}"
                                  IsRound="True"
                                  RenderMouseOver="{TemplateBinding IsMouseOver}"
                                  RenderPressed="{TemplateBinding ButtonBase.IsPressed}"
                                  IsChecked="{TemplateBinding ToggleButton.IsChecked}" />
            </BulletDecorator.Bullet>
            <ContentPresenter Margin="{TemplateBinding Control.Padding}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                              HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              RecognizesAccessKey="True" />
          </BulletDecorator>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="ContentControl.HasContent"
                     Trigger.Value="True">
              <Setter Setter.Value="{StaticResource Ù}"
                      Setter.Property="FrameworkElement.FocusVisualStyle" />
              <Setter Setter.Property="Control.Padding"
                      Setter.Value="4,0,0,0" />
            </Trigger>
            <Trigger Trigger.Property="IsEnabled"
                     Trigger.Value="False">
              <Setter Setter.Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"
                      Setter.Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <LinearGradientBrush x:Key="ĺ"
                       LinearGradientBrush.StartPoint="0,0.25"
                       LinearGradientBrush.EndPoint="1,0.75">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FFFFFF"
                    Offset="0.3" />
      <GradientStop Color="#BBC5D7"
                    Offset="0.75" />
      <GradientStop Color="#6D83A9"
                    Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <Style x:Key="{x:Type ResizeGrip}"
         TargetType="{x:Type ResizeGrip}">
    <Setter Setter.Property="FrameworkElement.MinWidth"
            Setter.Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
    <Setter Setter.Property="FrameworkElement.MinHeight"
            Setter.Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
    <Setter Setter.Property="Control.Background"
            Setter.Value="#00FFFFFF" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ResizeGrip}">
          <Grid SnapsToDevicePixels="True"
                Panel.Background="{TemplateBinding Control.Background}">
            <Path HorizontalAlignment="Right"
                  VerticalAlignment="Bottom"
                  Margin="0,0,2,2"
                  Path.Data="M9,0L11,0 11,11 0,11 0,9 3,9 3,6 6,6 6,3 9,3z">
              <Shape.Fill>
                <DrawingBrush TileBrush.Viewbox="0,0,3,3"
                              TileBrush.Viewport="0,0,3,3"
                              TileBrush.TileMode="Tile"
                              TileBrush.ViewportUnits="Absolute"
                              TileBrush.ViewboxUnits="Absolute">
                  <DrawingBrush.Drawing>
                    <DrawingGroup>
                      <DrawingGroup.Children>
                        <GeometryDrawing GeometryDrawing.Brush="{StaticResource ĺ}"
                                         GeometryDrawing.Geometry="M0,0L2,0 2,2 0,2z" />
                      </DrawingGroup.Children>
                    </DrawingGroup>
                  </DrawingBrush.Drawing>
                </DrawingBrush>
              </Shape.Fill>
            </Path>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <SolidColorBrush x:Key="Ļ"
                   SolidColorBrush.Color="#F4F4F4" />
  <LinearGradientBrush x:Key="ļ"
                       LinearGradientBrush.StartPoint="0,0"
                       LinearGradientBrush.EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#E1E1E1"
                    Offset="0" />
      <GradientStop Color="#EDEDED"
                    Offset="0.20" />
      <GradientStop Color="#EDEDED"
                    Offset="0.80" />
      <GradientStop Color="#E3E3E3"
                    Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="Ľ"
                       LinearGradientBrush.StartPoint="0,0"
                       LinearGradientBrush.EndPoint="1,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="#E1E1E1"
                    Offset="0" />
      <GradientStop Color="#EDEDED"
                    Offset="0.20" />
      <GradientStop Color="#EDEDED"
                    Offset="0.80" />
      <GradientStop Color="#E3E3E3"
                    Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <Style x:Key="ľ"
         TargetType="{x:Type RepeatButton}">
    <Setter Setter.Property="FrameworkElement.OverridesDefaultStyle"
            Setter.Value="True" />
    <Setter Setter.Property="Focusable"
            Setter.Value="False" />
    <Setter Setter.Property="Control.IsTabStop"
            Setter.Value="False" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <theme:ScrollChrome x:Name="Chrome"
                              ScrollGlyph="{TemplateBinding theme:ScrollChrome.ScrollGlyph}"
                              RenderMouseOver="{TemplateBinding IsMouseOver}"
                              RenderPressed="{TemplateBinding ButtonBase.IsPressed}"
                              SnapsToDevicePixels="True" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="Ŀ"
         TargetType="{x:Type Thumb}">
    <Setter Setter.Property="FrameworkElement.OverridesDefaultStyle"
            Setter.Value="True" />
    <Setter Setter.Property="Control.IsTabStop"
            Setter.Value="False" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <theme:ScrollChrome x:Name="Chrome"
                              ScrollGlyph="{TemplateBinding theme:ScrollChrome.ScrollGlyph}"
                              RenderMouseOver="{TemplateBinding IsMouseOver}"
                              RenderPressed="{TemplateBinding Thumb.IsDragging}"
                              SnapsToDevicePixels="True" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ŀ"
         TargetType="{x:Type RepeatButton}">
    <Setter Setter.Property="FrameworkElement.OverridesDefaultStyle"
            Setter.Value="True" />
    <Setter Setter.Property="Control.Background"
            Setter.Value="#00FFFFFF" />
    <Setter Setter.Property="Focusable"
            Setter.Value="False" />
    <Setter Setter.Property="Control.IsTabStop"
            Setter.Value="False" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Rectangle Shape.Fill="{TemplateBinding Control.Background}"
                     Width="{TemplateBinding Width}"
                     Height="{TemplateBinding Height}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="Ł"
         TargetType="{x:Type RepeatButton}">
    <Setter Setter.Property="FrameworkElement.OverridesDefaultStyle"
            Setter.Value="True" />
    <Setter Setter.Property="Control.Background"
            Setter.Value="#00FFFFFF" />
    <Setter Setter.Property="Focusable"
            Setter.Value="False" />
    <Setter Setter.Property="Control.IsTabStop"
            Setter.Value="False" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Rectangle Shape.Fill="{TemplateBinding Control.Background}"
                     Width="{TemplateBinding Width}"
                     Height="{TemplateBinding Height}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type ScrollBar}"
         TargetType="{x:Type ScrollBar}">
    <Setter Setter.Property="Control.Background"
            Setter.Value="{StaticResource Ľ}" />
    <Setter Setter.Property="Stylus.IsPressAndHoldEnabled"
            Setter.Value="False" />
    <Setter Setter.Property="Stylus.IsFlicksEnabled"
            Setter.Value="False" />
    <Setter Setter.Property="Control.Foreground"
            Setter.Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Setter.Property="FrameworkElement.Width"
            Setter.Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
    <Setter Setter.Property="FrameworkElement.MinWidth"
            Setter.Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ScrollBar}">
          <Grid Name="Bg"
                Panel.Background="{TemplateBinding Control.Background}"
                SnapsToDevicePixels="True">
            <Grid.RowDefinitions>
              <RowDefinition RowDefinition.MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
              <RowDefinition RowDefinition.Height="0.00001*" />
              <RowDefinition RowDefinition.MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
            </Grid.RowDefinitions>
            <RepeatButton Style="{StaticResource ľ}"
                          IsEnabled="{TemplateBinding IsMouseOver}"
                          ButtonBase.Command="{x:Static ScrollBar.LineUpCommand}"
                          theme:ScrollChrome.ScrollGlyph="UpArrow" />
            <Track Name="PART_Track"
                   Grid.Row="1"
                   IsEnabled="{TemplateBinding IsMouseOver}"
                   Track.IsDirectionReversed="True">
              <Track.DecreaseRepeatButton>
                <RepeatButton Style="{StaticResource Ł}"
                              ButtonBase.Command="{x:Static ScrollBar.PageUpCommand}" />
              </Track.DecreaseRepeatButton>
              <Track.IncreaseRepeatButton>
                <RepeatButton Style="{StaticResource Ł}"
                              ButtonBase.Command="{x:Static ScrollBar.PageDownCommand}" />
              </Track.IncreaseRepeatButton>
              <Track.Thumb>
                <Thumb Style="{StaticResource Ŀ}"
                       theme:ScrollChrome.ScrollGlyph="VerticalGripper" />
              </Track.Thumb>
            </Track>
            <RepeatButton Style="{StaticResource ľ}"
                          Grid.Row="2"
                          IsEnabled="{TemplateBinding IsMouseOver}"
                          ButtonBase.Command="{x:Static ScrollBar.LineDownCommand}"
                          theme:ScrollChrome.ScrollGlyph="DownArrow" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="IsEnabled"
                     Trigger.Value="False">
              <Setter Setter.TargetName="Bg"
                      Setter.Value="{StaticResource Ļ}"
                      Setter.Property="Panel.Background" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Trigger.Property="ScrollBar.Orientation"
               Trigger.Value="Horizontal">
        <Setter Setter.Property="FrameworkElement.Width"
                Setter.Value="Auto" />
        <Setter Setter.Property="FrameworkElement.MinWidth"
                Setter.Value="0" />
        <Setter Setter.Property="FrameworkElement.Height"
                Setter.Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
        <Setter Setter.Property="FrameworkElement.MinHeight"
                Setter.Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
        <Setter Setter.Property="Control.Background"
                Setter.Value="{StaticResource ļ}" />
        <Setter Setter.Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ScrollBar}">
              <Grid Name="Bg"
                    Panel.Background="{TemplateBinding Control.Background}"
                    SnapsToDevicePixels="True">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition ColumnDefinition.MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                  <ColumnDefinition ColumnDefinition.Width="0.00001*" />
                  <ColumnDefinition ColumnDefinition.MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                </Grid.ColumnDefinitions>
                <RepeatButton Style="{StaticResource ľ}"
                              IsEnabled="{TemplateBinding IsMouseOver}"
                              ButtonBase.Command="{x:Static ScrollBar.LineLeftCommand}"
                              theme:ScrollChrome.ScrollGlyph="LeftArrow" />
                <Track Name="PART_Track"
                       Grid.Column="1"
                       IsEnabled="{TemplateBinding IsMouseOver}">
                  <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ŀ}"
                                  ButtonBase.Command="{x:Static ScrollBar.PageLeftCommand}" />
                  </Track.DecreaseRepeatButton>
                  <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ŀ}"
                                  ButtonBase.Command="{x:Static ScrollBar.PageRightCommand}" />
                  </Track.IncreaseRepeatButton>
                  <Track.Thumb>
                    <Thumb Style="{StaticResource Ŀ}"
                           theme:ScrollChrome.ScrollGlyph="HorizontalGripper" />
                  </Track.Thumb>
                </Track>
                <RepeatButton Style="{StaticResource ľ}"
                              Grid.Column="2"
                              IsEnabled="{TemplateBinding IsMouseOver}"
                              ButtonBase.Command="{x:Static ScrollBar.LineRightCommand}"
                              theme:ScrollChrome.ScrollGlyph="RightArrow" />
              </Grid>
              <ControlTemplate.Triggers>
                <Trigger Trigger.Property="IsEnabled"
                         Trigger.Value="False">
                  <Setter Setter.TargetName="Bg"
                          Setter.Value="{StaticResource Ļ}"
                          Setter.Property="Panel.Background" />
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{x:Type ScrollViewer}"
         TargetType="{x:Type ScrollViewer}">
    <Style.Triggers>
      <Trigger Trigger.Property="IsEnabled"
               Trigger.Value="False">
        <Setter Setter.Property="Control.Foreground"
                Setter.Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{x:Type Separator}"
         TargetType="{x:Type Separator}">
    <Setter Setter.Property="Control.Background"
            Setter.Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
    <Setter Setter.Property="Margin"
            Setter.Value="0,2,0,2" />
    <Setter Setter.Property="Focusable"
            Setter.Value="False" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Separator}">
          <Border Border.Background="{TemplateBinding Control.Background}"
                  Border.BorderBrush="{TemplateBinding Control.BorderBrush}"
                  Border.BorderThickness="{TemplateBinding Control.BorderThickness}"
                  SnapsToDevicePixels="True"
                  Height="1" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Geometry x:Key="ł">
    M 4.5,-7.5 A 1 1 0 0 0 3.5,-8.5 L -3.5,-8.5 A 1 1 0 0 0 -4.5,-7.5 L -4.5,4.5 L -0.5,8.5 L 0.5,8.5 L 4.5,4.5 Z
  </Geometry>
  <Geometry x:Key="Ń">
    M 3.5,-7.5 L -3.5,-7.5 L -3.5,4.5 L 0,8 L 3.5,4.5 Z
  </Geometry>
  <Geometry x:Key="ń">
    M 2.5,-6.5 L -2.5,-6.5 L -2.5,4.5 L 0,7 L 2.5 4.5 Z
  </Geometry>
  <Geometry x:Key="Ņ">
    M 4.5,-8.5 L -4.5,-8.5 L -4.5,4.5 L -0.5,8.5 L 0.5,8.5 L 4.5,4.5 Z
  </Geometry>
  <Geometry x:Key="ņ">
    M -5,-9.5 A 1 1 0 0 1 -4,-10.5 L 4,-10.5 A 1 1 0 0 1 5,-9.5 L 5,9.5 A 1 1 0 0 1 4,10.5 L -4,10.5 A 1 1 0 0 1 -5,9.5 Z
  </Geometry>
  <Geometry x:Key="Ň">
    M -4,-9.5 L 4,-9.5 L 4,9.5 L -4,9.5 Z
  </Geometry>
  <Geometry x:Key="ň">
    M -5,-10.5 L 5,-10.5 L 5,10.5 L -5,10.5 Z
  </Geometry>
  <LinearGradientBrush x:Key="ŉ"
                       LinearGradientBrush.EndPoint="0,1"
                       LinearGradientBrush.StartPoint="0,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="White"
                    Offset="0" />
      <GradientStop Color="#F0EFEF"
                    Offset="0.4" />
      <GradientStop Color="#D6D5D5"
                    Offset=".8" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="Ŋ"
                       LinearGradientBrush.EndPoint="0,0"
                       LinearGradientBrush.StartPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="White"
                    Offset="0" />
      <GradientStop Color="#F0EFEF"
                    Offset="0.4" />
      <GradientStop Color="#D6D5D5"
                    Offset=".8" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ŋ"
                       LinearGradientBrush.EndPoint="1,0"
                       LinearGradientBrush.StartPoint="0,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="White"
                    Offset="0" />
      <GradientStop Color="#F0EFEF"
                    Offset="0.4" />
      <GradientStop Color="#D6D5D5"
                    Offset=".8" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="Ō"
                       LinearGradientBrush.EndPoint="0,0"
                       LinearGradientBrush.StartPoint="1,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="White"
                    Offset="0" />
      <GradientStop Color="#F0EFEF"
                    Offset="0.4" />
      <GradientStop Color="#D6D5D5"
                    Offset=".8" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ō"
                       LinearGradientBrush.EndPoint="0,1"
                       LinearGradientBrush.StartPoint="0,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="white"
                    Offset="0" />
      <GradientStop Color="#B8E2F9"
                    Offset="0.5" />
      <GradientStop Color="#B0DFF8"
                    Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="Ŏ"
                       LinearGradientBrush.EndPoint="0,0"
                       LinearGradientBrush.StartPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="white"
                    Offset="0" />
      <GradientStop Color="#B8E2F9"
                    Offset="0.5" />
      <GradientStop Color="#B0DFF8"
                    Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ŏ"
                       LinearGradientBrush.EndPoint="1,0"
                       LinearGradientBrush.StartPoint="0,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="white"
                    Offset="0" />
      <GradientStop Color="#B8E2F9"
                    Offset="0.5" />
      <GradientStop Color="#B0DFF8"
                    Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="Ő"
                       LinearGradientBrush.EndPoint="0,0"
                       LinearGradientBrush.StartPoint="1,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="white"
                    Offset="0" />
      <GradientStop Color="#B8E2F9"
                    Offset="0.5" />
      <GradientStop Color="#B0DFF8"
                    Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="ő"
                   SolidColorBrush.Color="#3C7FB1" />
  <LinearGradientBrush x:Key="Œ"
                       LinearGradientBrush.EndPoint="0,1"
                       LinearGradientBrush.StartPoint="0,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="#B8E4FA"
                    Offset="0.25" />
      <GradientStop Color="#5EB4E3"
                    Offset="0.5" />
      <GradientStop Color="#4C8BB4"
                    Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="œ"
                       LinearGradientBrush.EndPoint="0,0"
                       LinearGradientBrush.StartPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#B8E4FA"
                    Offset="0.25" />
      <GradientStop Color="#5EB4E3"
                    Offset="0.5" />
      <GradientStop Color="#4C8BB4"
                    Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="Ŕ"
                       LinearGradientBrush.EndPoint="1,0"
                       LinearGradientBrush.StartPoint="0,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="#B8E4FA"
                    Offset="0.25" />
      <GradientStop Color="#5EB4E3"
                    Offset="0.5" />
      <GradientStop Color="#4C8BB4"
                    Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ŕ"
                       LinearGradientBrush.EndPoint="0,0"
                       LinearGradientBrush.StartPoint="1,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="#B8E4FA"
                    Offset="0.25" />
      <GradientStop Color="#5EB4E3"
                    Offset="0.5" />
      <GradientStop Color="#4C8BB4"
                    Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="Ŗ"
                   SolidColorBrush.Color="#2C628B" />
  <SolidColorBrush x:Key="ŗ"
                   SolidColorBrush.Color="#FFE7EAEA" />
  <LinearGradientBrush x:Key="Ř"
                       LinearGradientBrush.EndPoint="0,1"
                       LinearGradientBrush.StartPoint="0,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FFAEB1AF"
                    Offset="0.1" />
      <GradientStop Color="White"
                    Offset=".9" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <Style x:Key="ř"
         TargetType="{x:Type RepeatButton}">
    <Setter Setter.Property="FrameworkElement.OverridesDefaultStyle"
            Setter.Value="True" />
    <Setter Setter.Property="Control.IsTabStop"
            Setter.Value="False" />
    <Setter Setter.Property="Focusable"
            Setter.Value="False" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Rectangle Shape.Fill="#00FFFFFF" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="Ś"
         TargetType="{x:Type Thumb}">
    <Setter Setter.Property="Focusable"
            Setter.Value="False" />
    <Setter Setter.Property="FrameworkElement.OverridesDefaultStyle"
            Setter.Value="True" />
    <Setter Setter.Property="FrameworkElement.Height"
            Setter.Value="22" />
    <Setter Setter.Property="FrameworkElement.Width"
            Setter.Value="11" />
    <Setter Setter.Property="Control.Foreground"
            Setter.Value="#FF808080" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Canvas SnapsToDevicePixels="True">
            <UIElement.RenderTransform>
              <TranslateTransform TranslateTransform.X="5.5"
                                  TranslateTransform.Y="11" />
            </UIElement.RenderTransform>
            <Path x:Name="Background"
                  Shape.Fill="{StaticResource ŉ}"
                  Path.Data="{StaticResource ņ}" />
            <Path x:Name="InnerBorder"
                  Shape.Stroke="#FFFFFFFF"
                  Path.Data="{StaticResource Ň}" />
            <Path x:Name="OuterBorder"
                  Shape.Stroke="#FF929292"
                  Path.Data="{StaticResource ņ}" />
          </Canvas>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="IsMouseOver"
                     Trigger.Value="True">
              <Setter Setter.TargetName="Background"
                      Setter.Value="{StaticResource ō}"
                      Setter.Property="Shape.Fill" />
              <Setter Setter.TargetName="OuterBorder"
                      Setter.Value="{StaticResource ő}"
                      Setter.Property="Shape.Stroke" />
            </Trigger>
            <Trigger Trigger.Property="Control.Foreground"
                     Trigger.Value="#FF0000FF">
              <Setter Setter.TargetName="Background"
                      Setter.Value="{StaticResource ō}"
                      Setter.Property="Shape.Fill" />
              <Setter Setter.TargetName="OuterBorder"
                      Setter.Value="{StaticResource ő}"
                      Setter.Property="Shape.Stroke" />
            </Trigger>
            <Trigger Trigger.Property="Thumb.IsDragging"
                     Trigger.Value="True">
              <Setter Setter.TargetName="Background"
                      Setter.Value="{StaticResource Œ}"
                      Setter.Property="Shape.Fill" />
              <Setter Setter.TargetName="OuterBorder"
                      Setter.Value="{StaticResource Ŗ}"
                      Setter.Property="Shape.Stroke" />
            </Trigger>
            <Trigger Trigger.Property="IsEnabled"
                     Trigger.Value="False">
              <Setter Setter.TargetName="Background"
                      Setter.Property="Shape.Fill"
                      Setter.Value="#FFF4F4F4" />
              <Setter Setter.TargetName="InnerBorder"
                      Setter.Value="{x:Null}"
                      Setter.Property="Shape.Stroke" />
              <Setter Setter.TargetName="OuterBorder"
                      Setter.Value="{StaticResource ň}"
                      Setter.Property="Path.Data" />
              <Setter Setter.TargetName="OuterBorder"
                      Setter.Property="Shape.Stroke"
                      Setter.Value="#FFAEB1AF" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ś"
         TargetType="{x:Type Thumb}">
    <Setter Setter.Property="Focusable"
            Setter.Value="False" />
    <Setter Setter.Property="FrameworkElement.OverridesDefaultStyle"
            Setter.Value="True" />
    <Setter Setter.Property="FrameworkElement.Height"
            Setter.Value="18" />
    <Setter Setter.Property="FrameworkElement.Width"
            Setter.Value="10" />
    <Setter Setter.Property="Control.Foreground"
            Setter.Value="#FF808080" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Canvas SnapsToDevicePixels="True">
            <UIElement.RenderTransform>
              <TransformGroup>
                <TransformGroup.Children>
                  <TransformCollection>
                    <RotateTransform RotateTransform.Angle="180" />
                    <TranslateTransform TranslateTransform.X="5"
                                        TranslateTransform.Y="9" />
                  </TransformCollection>
                </TransformGroup.Children>
              </TransformGroup>
            </UIElement.RenderTransform>
            <Path x:Name="Background"
                  Shape.Fill="{StaticResource Ŋ}"
                  Path.Data="{StaticResource ł}" />
            <Path x:Name="InnerBorder"
                  Shape.Stroke="#FFFFFFFF"
                  Shape.StrokeThickness="1"
                  Path.Data="{StaticResource Ń}" />
            <Path x:Name="OuterBorder"
                  Shape.Stroke="#FF929292"
                  Shape.StrokeThickness="1"
                  Path.Data="{StaticResource ł}" />
          </Canvas>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="IsMouseOver"
                     Trigger.Value="True">
              <Setter Setter.TargetName="Background"
                      Setter.Value="{StaticResource Ŏ}"
                      Setter.Property="Shape.Fill" />
              <Setter Setter.TargetName="OuterBorder"
                      Setter.Value="{StaticResource ő}"
                      Setter.Property="Shape.Stroke" />
            </Trigger>
            <Trigger Trigger.Property="Control.Foreground"
                     Trigger.Value="#FF0000FF">
              <Setter Setter.TargetName="Background"
                      Setter.Value="{StaticResource Ŏ}"
                      Setter.Property="Shape.Fill" />
              <Setter Setter.TargetName="OuterBorder"
                      Setter.Value="{StaticResource ő}"
                      Setter.Property="Shape.Stroke" />
            </Trigger>
            <Trigger Trigger.Property="Thumb.IsDragging"
                     Trigger.Value="True">
              <Setter Setter.TargetName="Background"
                      Setter.Value="{StaticResource œ}"
                      Setter.Property="Shape.Fill" />
              <Setter Setter.TargetName="OuterBorder"
                      Setter.Value="{StaticResource Ŗ}"
                      Setter.Property="Shape.Stroke" />
            </Trigger>
            <Trigger Trigger.Property="IsEnabled"
                     Trigger.Value="False">
              <Setter Setter.TargetName="Background"
                      Setter.Property="Shape.Fill"
                      Setter.Value="#FFF4F4F4" />
              <Setter Setter.TargetName="InnerBorder"
                      Setter.Value="{x:Null}"
                      Setter.Property="Shape.Stroke" />
              <Setter Setter.TargetName="OuterBorder"
                      Setter.Value="{StaticResource ň}"
                      Setter.Property="Path.Data" />
              <Setter Setter.TargetName="OuterBorder"
                      Setter.Property="Shape.Stroke"
                      Setter.Value="#FFAEB1AF" />
              <Setter Setter.TargetName="OuterBorder"
                      Setter.Value="{StaticResource Ņ}"
                      Setter.Property="Path.Data" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="Ŝ"
         TargetType="{x:Type Thumb}">
    <Setter Setter.Property="Focusable"
            Setter.Value="False" />
    <Setter Setter.Property="FrameworkElement.OverridesDefaultStyle"
            Setter.Value="True" />
    <Setter Setter.Property="FrameworkElement.Height"
            Setter.Value="18" />
    <Setter Setter.Property="FrameworkElement.Width"
            Setter.Value="10" />
    <Setter Setter.Property="Control.Foreground"
            Setter.Value="#FF808080" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Canvas SnapsToDevicePixels="True">
            <UIElement.RenderTransform>
              <TranslateTransform TranslateTransform.X="5"
                                  TranslateTransform.Y="9" />
            </UIElement.RenderTransform>
            <Path x:Name="Background"
                  Shape.Fill="{StaticResource ŉ}"
                  Path.Data="{StaticResource ł}" />
            <Path x:Name="InnerBorder"
                  Shape.Stroke="#FFFFFFFF"
                  Shape.StrokeThickness="1"
                  Path.Data="{StaticResource Ń}" />
            <Path x:Name="OuterBorder"
                  Shape.Stroke="#FF929292"
                  Shape.StrokeThickness="1"
                  Path.Data="{StaticResource ł}" />
          </Canvas>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="IsMouseOver"
                     Trigger.Value="True">
              <Setter Setter.TargetName="Background"
                      Setter.Value="{StaticResource ō}"
                      Setter.Property="Shape.Fill" />
              <Setter Setter.TargetName="OuterBorder"
                      Setter.Value="{StaticResource ő}"
                      Setter.Property="Shape.Stroke" />
            </Trigger>
            <Trigger Trigger.Property="Control.Foreground"
                     Trigger.Value="#FF0000FF">
              <Setter Setter.TargetName="Background"
                      Setter.Value="{StaticResource ō}"
                      Setter.Property="Shape.Fill" />
              <Setter Setter.TargetName="OuterBorder"
                      Setter.Value="{StaticResource ő}"
                      Setter.Property="Shape.Stroke" />
            </Trigger>
            <Trigger Trigger.Property="Thumb.IsDragging"
                     Trigger.Value="True">
              <Setter Setter.TargetName="Background"
                      Setter.Value="{StaticResource Œ}"
                      Setter.Property="Shape.Fill" />
              <Setter Setter.TargetName="OuterBorder"
                      Setter.Value="{StaticResource Ŗ}"
                      Setter.Property="Shape.Stroke" />
            </Trigger>
            <Trigger Trigger.Property="IsEnabled"
                     Trigger.Value="False">
              <Setter Setter.TargetName="Background"
                      Setter.Property="Shape.Fill"
                      Setter.Value="#FFF4F4F4" />
              <Setter Setter.TargetName="InnerBorder"
                      Setter.Value="{x:Null}"
                      Setter.Property="Shape.Stroke" />
              <Setter Setter.TargetName="OuterBorder"
                      Setter.Value="{StaticResource ň}"
                      Setter.Property="Path.Data" />
              <Setter Setter.TargetName="OuterBorder"
                      Setter.Property="Shape.Stroke"
                      Setter.Value="#FFAEB1AF" />
              <Setter Setter.TargetName="OuterBorder"
                      Setter.Value="{StaticResource Ņ}"
                      Setter.Property="Path.Data" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <LinearGradientBrush x:Key="ŝ"
                       LinearGradientBrush.EndPoint="1,0"
                       LinearGradientBrush.StartPoint="0,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FFAEB1AF"
                    Offset="0.1" />
      <GradientStop Color="White"
                    Offset=".9" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <Style x:Key="Ş"
         TargetType="{x:Type Thumb}">
    <Setter Setter.Property="Focusable"
            Setter.Value="False" />
    <Setter Setter.Property="FrameworkElement.OverridesDefaultStyle"
            Setter.Value="True" />
    <Setter Setter.Property="FrameworkElement.Height"
            Setter.Value="11" />
    <Setter Setter.Property="FrameworkElement.Width"
            Setter.Value="22" />
    <Setter Setter.Property="Control.Foreground"
            Setter.Value="#FF808080" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Canvas SnapsToDevicePixels="True">
            <UIElement.RenderTransform>
              <TransformGroup>
                <TransformGroup.Children>
                  <TransformCollection>
                    <RotateTransform RotateTransform.Angle="90" />
                    <TranslateTransform TranslateTransform.X="11"
                                        TranslateTransform.Y="5.5" />
                  </TransformCollection>
                </TransformGroup.Children>
              </TransformGroup>
            </UIElement.RenderTransform>
            <Path x:Name="Background"
                  Shape.Fill="{StaticResource ŋ}"
                  Path.Data="{StaticResource ņ}" />
            <Path x:Name="InnerBorder"
                  Shape.Stroke="#FFFFFFFF"
                  Shape.StrokeThickness="1"
                  Path.Data="{StaticResource Ň}" />
            <Path x:Name="OuterBorder"
                  Shape.Stroke="#FF929292"
                  Shape.StrokeThickness="1"
                  Path.Data="{StaticResource ņ}" />
          </Canvas>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="IsMouseOver"
                     Trigger.Value="True">
              <Setter Setter.TargetName="Background"
                      Setter.Value="{StaticResource ŏ}"
                      Setter.Property="Shape.Fill" />
              <Setter Setter.TargetName="OuterBorder"
                      Setter.Value="{StaticResource ő}"
                      Setter.Property="Shape.Stroke" />
            </Trigger>
            <Trigger Trigger.Property="Control.Foreground"
                     Trigger.Value="#FF0000FF">
              <Setter Setter.TargetName="Background"
                      Setter.Value="{StaticResource ŏ}"
                      Setter.Property="Shape.Fill" />
              <Setter Setter.TargetName="OuterBorder"
                      Setter.Value="{StaticResource ő}"
                      Setter.Property="Shape.Stroke" />
            </Trigger>
            <Trigger Trigger.Property="Thumb.IsDragging"
                     Trigger.Value="True">
              <Setter Setter.TargetName="Background"
                      Setter.Value="{StaticResource Ŕ}"
                      Setter.Property="Shape.Fill" />
              <Setter Setter.TargetName="OuterBorder"
                      Setter.Value="{StaticResource Ŗ}"
                      Setter.Property="Shape.Stroke" />
            </Trigger>
            <Trigger Trigger.Property="IsEnabled"
                     Trigger.Value="False">
              <Setter Setter.TargetName="Background"
                      Setter.Property="Shape.Fill"
                      Setter.Value="#FFF4F4F4" />
              <Setter Setter.TargetName="InnerBorder"
                      Setter.Value="{x:Null}"
                      Setter.Property="Shape.Stroke" />
              <Setter Setter.TargetName="OuterBorder"
                      Setter.Value="{StaticResource ň}"
                      Setter.Property="Path.Data" />
              <Setter Setter.TargetName="OuterBorder"
                      Setter.Property="Shape.Stroke"
                      Setter.Value="#FFAEB1AF" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ş"
         TargetType="{x:Type Thumb}">
    <Setter Setter.Property="Focusable"
            Setter.Value="False" />
    <Setter Setter.Property="FrameworkElement.OverridesDefaultStyle"
            Setter.Value="True" />
    <Setter Setter.Property="FrameworkElement.Height"
            Setter.Value="10" />
    <Setter Setter.Property="FrameworkElement.Width"
            Setter.Value="18" />
    <Setter Setter.Property="Control.Foreground"
            Setter.Value="#FF808080" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Canvas SnapsToDevicePixels="True">
            <UIElement.RenderTransform>
              <TransformGroup>
                <TransformGroup.Children>
                  <TransformCollection>
                    <RotateTransform RotateTransform.Angle="90" />
                    <TranslateTransform TranslateTransform.X="9"
                                        TranslateTransform.Y="5" />
                  </TransformCollection>
                </TransformGroup.Children>
              </TransformGroup>
            </UIElement.RenderTransform>
            <Path x:Name="Background"
                  Shape.Fill="{StaticResource ŋ}"
                  Path.Data="{StaticResource ł}" />
            <Path x:Name="InnerBorder"
                  Shape.Stroke="#FFFFFFFF"
                  Shape.StrokeThickness="1"
                  Path.Data="{StaticResource Ń}" />
            <Path x:Name="OuterBorder"
                  Shape.Stroke="#FF929292"
                  Shape.StrokeThickness="1"
                  Path.Data="{StaticResource ł}" />
          </Canvas>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="IsMouseOver"
                     Trigger.Value="True">
              <Setter Setter.TargetName="Background"
                      Setter.Value="{StaticResource ŏ}"
                      Setter.Property="Shape.Fill" />
              <Setter Setter.TargetName="OuterBorder"
                      Setter.Value="{StaticResource ő}"
                      Setter.Property="Shape.Stroke" />
            </Trigger>
            <Trigger Trigger.Property="Control.Foreground"
                     Trigger.Value="#FF0000FF">
              <Setter Setter.TargetName="Background"
                      Setter.Value="{StaticResource ŏ}"
                      Setter.Property="Shape.Fill" />
              <Setter Setter.TargetName="OuterBorder"
                      Setter.Value="{StaticResource ő}"
                      Setter.Property="Shape.Stroke" />
            </Trigger>
            <Trigger Trigger.Property="Thumb.IsDragging"
                     Trigger.Value="True">
              <Setter Setter.TargetName="Background"
                      Setter.Value="{StaticResource Ŕ}"
                      Setter.Property="Shape.Fill" />
              <Setter Setter.TargetName="OuterBorder"
                      Setter.Value="{StaticResource Ŗ}"
                      Setter.Property="Shape.Stroke" />
            </Trigger>
            <Trigger Trigger.Property="IsEnabled"
                     Trigger.Value="False">
              <Setter Setter.TargetName="Background"
                      Setter.Property="Shape.Fill"
                      Setter.Value="#FFF4F4F4" />
              <Setter Setter.TargetName="InnerBorder"
                      Setter.Value="{x:Null}"
                      Setter.Property="Shape.Stroke" />
              <Setter Setter.TargetName="OuterBorder"
                      Setter.Value="{StaticResource Ņ}"
                      Setter.Property="Path.Data" />
              <Setter Setter.TargetName="OuterBorder"
                      Setter.Property="Shape.Stroke"
                      Setter.Value="#FFAEB1AF" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="Š"
         TargetType="{x:Type Thumb}">
    <Setter Setter.Property="Focusable"
            Setter.Value="False" />
    <Setter Setter.Property="FrameworkElement.OverridesDefaultStyle"
            Setter.Value="True" />
    <Setter Setter.Property="FrameworkElement.Height"
            Setter.Value="10" />
    <Setter Setter.Property="FrameworkElement.Width"
            Setter.Value="18" />
    <Setter Setter.Property="Control.Foreground"
            Setter.Value="#FF808080" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Canvas SnapsToDevicePixels="True">
            <UIElement.RenderTransform>
              <TransformGroup>
                <TransformGroup.Children>
                  <TransformCollection>
                    <RotateTransform RotateTransform.Angle="-90" />
                    <TranslateTransform TranslateTransform.X="9"
                                        TranslateTransform.Y="5" />
                  </TransformCollection>
                </TransformGroup.Children>
              </TransformGroup>
            </UIElement.RenderTransform>
            <Path x:Name="Background"
                  Shape.Fill="{StaticResource Ō}"
                  Path.Data="{StaticResource ł}" />
            <Path x:Name="InnerBorder"
                  Shape.Stroke="#FFFFFFFF"
                  Shape.StrokeThickness="1"
                  Path.Data="{StaticResource Ń}" />
            <Path x:Name="OuterBorder"
                  Shape.Stroke="#FF929292"
                  Shape.StrokeThickness="1"
                  Path.Data="{StaticResource ł}" />
          </Canvas>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="IsMouseOver"
                     Trigger.Value="True">
              <Setter Setter.TargetName="Background"
                      Setter.Value="{StaticResource Ő}"
                      Setter.Property="Shape.Fill" />
              <Setter Setter.TargetName="OuterBorder"
                      Setter.Value="{StaticResource ő}"
                      Setter.Property="Shape.Stroke" />
            </Trigger>
            <Trigger Trigger.Property="Control.Foreground"
                     Trigger.Value="#FF0000FF">
              <Setter Setter.TargetName="Background"
                      Setter.Value="{StaticResource Ő}"
                      Setter.Property="Shape.Fill" />
              <Setter Setter.TargetName="OuterBorder"
                      Setter.Value="{StaticResource ő}"
                      Setter.Property="Shape.Stroke" />
            </Trigger>
            <Trigger Trigger.Property="Thumb.IsDragging"
                     Trigger.Value="True">
              <Setter Setter.TargetName="Background"
                      Setter.Value="{StaticResource ŕ}"
                      Setter.Property="Shape.Fill" />
              <Setter Setter.TargetName="OuterBorder"
                      Setter.Value="{StaticResource Ŗ}"
                      Setter.Property="Shape.Stroke" />
            </Trigger>
            <Trigger Trigger.Property="IsEnabled"
                     Trigger.Value="False">
              <Setter Setter.TargetName="Background"
                      Setter.Property="Shape.Fill"
                      Setter.Value="#FFF4F4F4" />
              <Setter Setter.TargetName="InnerBorder"
                      Setter.Value="{x:Null}"
                      Setter.Property="Shape.Stroke" />
              <Setter Setter.TargetName="OuterBorder"
                      Setter.Value="{StaticResource Ņ}"
                      Setter.Property="Path.Data" />
              <Setter Setter.TargetName="OuterBorder"
                      Setter.Property="Shape.Stroke"
                      Setter.Value="#FFAEB1AF" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type Slider}"
         TargetType="{x:Type Slider}">
    <Setter Setter.Property="Stylus.IsPressAndHoldEnabled"
            Setter.Value="False" />
    <Setter Setter.Property="Control.Background"
            Setter.Value="#00FFFFFF" />
    <Setter Setter.Property="Control.Foreground"
            Setter.Value="#FFC4C4C4" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Slider}">
          <Border Border.Background="{TemplateBinding Control.Background}"
                  Border.BorderBrush="{TemplateBinding Control.BorderBrush}"
                  Border.BorderThickness="{TemplateBinding Control.BorderThickness}"
                  SnapsToDevicePixels="True">
            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition RowDefinition.Height="Auto" />
                <RowDefinition RowDefinition.Height="Auto"
                               RowDefinition.MinHeight="{TemplateBinding MinHeight}" />
                <RowDefinition RowDefinition.Height="Auto" />
              </Grid.RowDefinitions>
              <TickBar x:Name="TopTick"
                       Grid.Row="0"
                       Visibility="Collapsed"
                       TickBar.Placement="Top"
                       TickBar.Fill="{TemplateBinding Control.Foreground}"
                       Height="4" />
              <TickBar x:Name="BottomTick"
                       Grid.Row="2"
                       Visibility="Collapsed"
                       TickBar.Placement="Bottom"
                       TickBar.Fill="{TemplateBinding Control.Foreground}"
                       Height="4" />
              <Border x:Name="TrackBackground"
                      Grid.Row="1"
                      Margin="5,0"
                      VerticalAlignment="center"
                      Border.BorderBrush="{StaticResource Ř}"
                      Border.BorderThickness="1"
                      Border.CornerRadius="1"
                      Border.Background="{StaticResource ŗ}"
                      Height="4.0">
                <Canvas Margin="-6,-1">
                  <Rectangle x:Name="PART_SelectionRange"
                             Shape.Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                             Height="4.0"
                             Visibility="Hidden"
                             Shape.StrokeThickness="1.0"
                             Shape.Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
                </Canvas>
              </Border>
              <Track Name="PART_Track"
                     Grid.Row="1">
                <Track.DecreaseRepeatButton>
                  <RepeatButton Style="{StaticResource ř}"
                                ButtonBase.Command="{x:Static Slider.DecreaseLarge}" />
                </Track.DecreaseRepeatButton>
                <Track.IncreaseRepeatButton>
                  <RepeatButton Style="{StaticResource ř}"
                                ButtonBase.Command="{x:Static Slider.IncreaseLarge}" />
                </Track.IncreaseRepeatButton>
                <Track.Thumb>
                  <Thumb x:Name="Thumb"
                         Style="{StaticResource Ś}" />
                </Track.Thumb>
              </Track>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="Slider.TickPlacement"
                     Trigger.Value="TopLeft">
              <Setter Setter.TargetName="TopTick"
                      Setter.Property="Visibility"
                      Setter.Value="Visible" />
              <Setter Setter.TargetName="Thumb"
                      Setter.Value="{StaticResource ś}"
                      Setter.Property="FrameworkElement.Style" />
              <Setter Setter.TargetName="TrackBackground"
                      Setter.Property="Margin"
                      Setter.Value="5,2,5,0" />
            </Trigger>
            <Trigger Trigger.Property="Slider.TickPlacement"
                     Trigger.Value="BottomRight">
              <Setter Setter.TargetName="BottomTick"
                      Setter.Property="Visibility"
                      Setter.Value="Visible" />
              <Setter Setter.TargetName="Thumb"
                      Setter.Value="{StaticResource Ŝ}"
                      Setter.Property="FrameworkElement.Style" />
              <Setter Setter.TargetName="TrackBackground"
                      Setter.Property="Margin"
                      Setter.Value="5,0,5,2" />
            </Trigger>
            <Trigger Trigger.Property="Slider.TickPlacement"
                     Trigger.Value="Both">
              <Setter Setter.TargetName="TopTick"
                      Setter.Property="Visibility"
                      Setter.Value="Visible" />
              <Setter Setter.TargetName="BottomTick"
                      Setter.Property="Visibility"
                      Setter.Value="Visible" />
            </Trigger>
            <Trigger Trigger.Property="Slider.IsSelectionRangeEnabled"
                     Trigger.Value="True">
              <Setter Setter.TargetName="PART_SelectionRange"
                      Setter.Property="Visibility"
                      Setter.Value="Visible" />
            </Trigger>
            <Trigger Trigger.Property="IsKeyboardFocused"
                     Trigger.Value="True">
              <Setter Setter.TargetName="Thumb"
                      Setter.Property="Control.Foreground"
                      Setter.Value="#FF0000FF" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Trigger.Property="Slider.Orientation"
               Trigger.Value="Vertical">
        <Setter Setter.Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type Slider}">
              <Border Border.Background="{TemplateBinding Control.Background}"
                      Border.BorderBrush="{TemplateBinding Control.BorderBrush}"
                      Border.BorderThickness="{TemplateBinding Control.BorderThickness}"
                      SnapsToDevicePixels="True">
                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition ColumnDefinition.Width="Auto" />
                    <ColumnDefinition ColumnDefinition.Width="Auto"
                                      ColumnDefinition.MinWidth="{TemplateBinding MinWidth}" />
                    <ColumnDefinition ColumnDefinition.Width="Auto" />
                  </Grid.ColumnDefinitions>
                  <TickBar x:Name="TopTick"
                           Grid.Column="0"
                           Visibility="Collapsed"
                           TickBar.Placement="Left"
                           TickBar.Fill="{TemplateBinding Control.Foreground}"
                           Width="4" />
                  <TickBar x:Name="BottomTick"
                           Grid.Column="2"
                           Visibility="Collapsed"
                           TickBar.Placement="Right"
                           TickBar.Fill="{TemplateBinding Control.Foreground}"
                           Width="4" />
                  <Border Name="TrackBackground"
                          Grid.Column="1"
                          Margin="0,5"
                          HorizontalAlignment="center"
                          Border.BorderBrush="{StaticResource ŝ}"
                          Border.BorderThickness="1"
                          Border.CornerRadius="1"
                          Border.Background="{StaticResource ŗ}"
                          Width="4.0">
                    <Canvas Margin="-1,-6">
                      <Rectangle x:Name="PART_SelectionRange"
                                 Shape.Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                                 Width="4.0"
                                 Visibility="Hidden"
                                 Shape.StrokeThickness="1.0"
                                 Shape.Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
                    </Canvas>
                  </Border>
                  <Track Name="PART_Track"
                         Grid.Column="1">
                    <Track.DecreaseRepeatButton>
                      <RepeatButton Style="{StaticResource ř}"
                                    ButtonBase.Command="{x:Static Slider.DecreaseLarge}" />
                    </Track.DecreaseRepeatButton>
                    <Track.IncreaseRepeatButton>
                      <RepeatButton Style="{StaticResource ř}"
                                    ButtonBase.Command="{x:Static Slider.IncreaseLarge}" />
                    </Track.IncreaseRepeatButton>
                    <Track.Thumb>
                      <Thumb x:Name="Thumb"
                             Style="{StaticResource Ş}" />
                    </Track.Thumb>
                  </Track>
                </Grid>
              </Border>
              <ControlTemplate.Triggers>
                <Trigger Trigger.Property="Slider.TickPlacement"
                         Trigger.Value="TopLeft">
                  <Setter Setter.TargetName="TopTick"
                          Setter.Property="Visibility"
                          Setter.Value="Visible" />
                  <Setter Setter.TargetName="Thumb"
                          Setter.Value="{StaticResource ş}"
                          Setter.Property="FrameworkElement.Style" />
                  <Setter Setter.TargetName="TrackBackground"
                          Setter.Property="Margin"
                          Setter.Value="2,5,0,5" />
                </Trigger>
                <Trigger Trigger.Property="Slider.TickPlacement"
                         Trigger.Value="BottomRight">
                  <Setter Setter.TargetName="BottomTick"
                          Setter.Property="Visibility"
                          Setter.Value="Visible" />
                  <Setter Setter.TargetName="Thumb"
                          Setter.Value="{StaticResource Š}"
                          Setter.Property="FrameworkElement.Style" />
                  <Setter Setter.TargetName="TrackBackground"
                          Setter.Property="Margin"
                          Setter.Value="0,5,2,5" />
                </Trigger>
                <Trigger Trigger.Property="Slider.TickPlacement"
                         Trigger.Value="Both">
                  <Setter Setter.TargetName="TopTick"
                          Setter.Property="Visibility"
                          Setter.Value="Visible" />
                  <Setter Setter.TargetName="BottomTick"
                          Setter.Property="Visibility"
                          Setter.Value="Visible" />
                </Trigger>
                <Trigger Trigger.Property="Slider.IsSelectionRangeEnabled"
                         Trigger.Value="True">
                  <Setter Setter.TargetName="PART_SelectionRange"
                          Setter.Property="Visibility"
                          Setter.Value="Visible" />
                </Trigger>
                <Trigger Trigger.Property="IsKeyboardFocused"
                         Trigger.Value="True">
                  <Setter Setter.TargetName="Thumb"
                          Setter.Property="Control.Foreground"
                          Setter.Value="#FF0000FF" />
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{x:Type StatusBar}"
         TargetType="{x:Type StatusBar}">
    <Setter Setter.Property="Control.Background"
            Setter.Value="#FFF1EDED" />
    <Setter Setter.Property="Control.Foreground"
            Setter.Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Setter.Property="Control.FontFamily"
            Setter.Value="{DynamicResource {x:Static SystemFonts.StatusFontFamilyKey}}" />
    <Setter Setter.Property="Control.FontSize"
            Setter.Value="{DynamicResource {x:Static SystemFonts.StatusFontSizeKey}}" />
    <Setter Setter.Property="Control.FontStyle"
            Setter.Value="{DynamicResource {x:Static SystemFonts.StatusFontStyleKey}}" />
    <Setter Setter.Property="Control.FontWeight"
            Setter.Value="{DynamicResource {x:Static SystemFonts.StatusFontWeightKey}}" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type StatusBar}">
          <Border Border.Background="{TemplateBinding Control.Background}"
                  Border.BorderBrush="{TemplateBinding Control.BorderBrush}"
                  Border.BorderThickness="{TemplateBinding Control.BorderThickness}"
                  Border.Padding="{TemplateBinding Control.Padding}"
                  SnapsToDevicePixels="True">
            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Static StatusBar.SeparatorStyleKey}"
         TargetType="{x:Type Separator}">
    <Setter Setter.Property="Control.Background"
            Setter.Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
    <Setter Setter.Property="FrameworkElement.MinWidth"
            Setter.Value="1" />
    <Setter Setter.Property="FrameworkElement.MinHeight"
            Setter.Value="1" />
    <Setter Setter.Property="Margin"
            Setter.Value="2" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Separator}">
          <Border Border.Background="{TemplateBinding Control.Background}"
                  Border.BorderBrush="{TemplateBinding Control.BorderBrush}"
                  Border.BorderThickness="{TemplateBinding Control.BorderThickness}"
                  SnapsToDevicePixels="True" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type StatusBarItem}"
         TargetType="{x:Type StatusBarItem}">
    <Setter Setter.Property="Control.Padding"
            Setter.Value="3" />
    <Setter Setter.Property="Control.Background"
            Setter.Value="#00FFFFFF" />
    <Setter Setter.Property="Control.HorizontalContentAlignment"
            Setter.Value="Left" />
    <Setter Setter.Property="Control.VerticalContentAlignment"
            Setter.Value="Center" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type StatusBarItem}">
          <Border Border.Background="{TemplateBinding Control.Background}"
                  Border.BorderBrush="{TemplateBinding Control.BorderBrush}"
                  Border.BorderThickness="{TemplateBinding Control.BorderThickness}"
                  Border.Padding="{TemplateBinding Control.Padding}"
                  SnapsToDevicePixels="True">
            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="IsEnabled"
                     Trigger.Value="False">
              <Setter Setter.Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"
                      Setter.Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <SolidColorBrush x:Key="š"
                   SolidColorBrush.Color="#8C8E94" />
  <Style x:Key="{x:Type TabControl}"
         TargetType="{x:Type TabControl}">
    <Setter Setter.Property="Control.Foreground"
            Setter.Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Setter.Property="Control.Padding"
            Setter.Value="4,4,4,4" />
    <Setter Setter.Property="Control.BorderThickness"
            Setter.Value="1" />
    <Setter Setter.Property="Control.BorderBrush"
            Setter.Value="{StaticResource š}" />
    <Setter Setter.Property="Control.Background"
            Setter.Value="#FFF9F9F9" />
    <Setter Setter.Property="Control.HorizontalContentAlignment"
            Setter.Value="Center" />
    <Setter Setter.Property="Control.VerticalContentAlignment"
            Setter.Value="Center" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TabControl}">
          <Grid KeyboardNavigation.TabNavigation="Local"
                SnapsToDevicePixels="True"
                ClipToBounds="True">
            <Grid.ColumnDefinitions>
              <ColumnDefinition x:Name="ColumnDefinition0" />
              <ColumnDefinition x:Name="ColumnDefinition1"
                                ColumnDefinition.Width="0" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition x:Name="RowDefinition0"
                             RowDefinition.Height="Auto" />
              <RowDefinition x:Name="RowDefinition1"
                             RowDefinition.Height="*" />
            </Grid.RowDefinitions>
            <TabPanel x:Name="HeaderPanel"
                      Panel.ZIndex="1"
                      KeyboardNavigation.TabIndex="1"
                      Grid.Column="0"
                      Grid.Row="0"
                      Margin="2,2,2,0"
                      Panel.IsItemsHost="True" />
            <Border x:Name="ContentPanel"
                    Border.Background="{TemplateBinding Control.Background}"
                    Border.BorderThickness="{TemplateBinding Control.BorderThickness}"
                    Border.BorderBrush="{TemplateBinding Control.BorderBrush}"
                    KeyboardNavigation.TabNavigation="Local"
                    KeyboardNavigation.DirectionalNavigation="Contained"
                    KeyboardNavigation.TabIndex="2"
                    Grid.Column="0"
                    Grid.Row="1">
              <ContentPresenter Name="PART_SelectedContentHost"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                Margin="{TemplateBinding Control.Padding}"
                                ContentSource="SelectedContent" />
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="TabControl.TabStripPlacement"
                     Trigger.Value="Bottom">
              <Setter Setter.TargetName="HeaderPanel"
                      Setter.Property="Grid.Row"
                      Setter.Value="1" />
              <Setter Setter.TargetName="ContentPanel"
                      Setter.Property="Grid.Row"
                      Setter.Value="0" />
              <Setter Setter.TargetName="RowDefinition0"
                      Setter.Property="RowDefinition.Height"
                      Setter.Value="*" />
              <Setter Setter.TargetName="RowDefinition1"
                      Setter.Property="RowDefinition.Height"
                      Setter.Value="Auto" />
              <Setter Setter.TargetName="HeaderPanel"
                      Setter.Property="Margin"
                      Setter.Value="2,0,2,2" />
            </Trigger>
            <Trigger Trigger.Property="TabControl.TabStripPlacement"
                     Trigger.Value="Left">
              <Setter Setter.TargetName="HeaderPanel"
                      Setter.Property="Grid.Row"
                      Setter.Value="0" />
              <Setter Setter.TargetName="ContentPanel"
                      Setter.Property="Grid.Row"
                      Setter.Value="0" />
              <Setter Setter.TargetName="HeaderPanel"
                      Setter.Property="Grid.Column"
                      Setter.Value="0" />
              <Setter Setter.TargetName="ContentPanel"
                      Setter.Property="Grid.Column"
                      Setter.Value="1" />
              <Setter Setter.TargetName="ColumnDefinition0"
                      Setter.Property="ColumnDefinition.Width"
                      Setter.Value="Auto" />
              <Setter Setter.TargetName="ColumnDefinition1"
                      Setter.Property="ColumnDefinition.Width"
                      Setter.Value="*" />
              <Setter Setter.TargetName="RowDefinition0"
                      Setter.Property="RowDefinition.Height"
                      Setter.Value="*" />
              <Setter Setter.TargetName="RowDefinition1"
                      Setter.Property="RowDefinition.Height"
                      Setter.Value="0" />
              <Setter Setter.TargetName="HeaderPanel"
                      Setter.Property="Margin"
                      Setter.Value="2,2,0,2" />
            </Trigger>
            <Trigger Trigger.Property="TabControl.TabStripPlacement"
                     Trigger.Value="Right">
              <Setter Setter.TargetName="HeaderPanel"
                      Setter.Property="Grid.Row"
                      Setter.Value="0" />
              <Setter Setter.TargetName="ContentPanel"
                      Setter.Property="Grid.Row"
                      Setter.Value="0" />
              <Setter Setter.TargetName="HeaderPanel"
                      Setter.Property="Grid.Column"
                      Setter.Value="1" />
              <Setter Setter.TargetName="ContentPanel"
                      Setter.Property="Grid.Column"
                      Setter.Value="0" />
              <Setter Setter.TargetName="ColumnDefinition0"
                      Setter.Property="ColumnDefinition.Width"
                      Setter.Value="*" />
              <Setter Setter.TargetName="ColumnDefinition1"
                      Setter.Property="ColumnDefinition.Width"
                      Setter.Value="Auto" />
              <Setter Setter.TargetName="RowDefinition0"
                      Setter.Property="RowDefinition.Height"
                      Setter.Value="*" />
              <Setter Setter.TargetName="RowDefinition1"
                      Setter.Property="RowDefinition.Height"
                      Setter.Value="0" />
              <Setter Setter.TargetName="HeaderPanel"
                      Setter.Property="Margin"
                      Setter.Value="0,2,2,2" />
            </Trigger>
            <Trigger Trigger.Property="IsEnabled"
                     Trigger.Value="False">
              <Setter Setter.Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"
                      Setter.Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="Ţ">
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Margin="3,3,3,1"
                     Shape.StrokeThickness="1"
                     Shape.Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                     Shape.StrokeDashArray="1 2"
                     SnapsToDevicePixels="True" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <LinearGradientBrush x:Key="ţ"
                       LinearGradientBrush.StartPoint="0,0"
                       LinearGradientBrush.EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#EAF6FD"
                    Offset="0.15" />
      <GradientStop Color="#D9F0FC"
                    Offset=".5" />
      <GradientStop Color="#BEE6FD"
                    Offset=".5" />
      <GradientStop Color="#A7D9F5"
                    Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="Ť"
                   SolidColorBrush.Color="#F9F9F9" />
  <SolidColorBrush x:Key="ť"
                   SolidColorBrush.Color="#F4F4F4" />
  <SolidColorBrush x:Key="Ŧ"
                   SolidColorBrush.Color="#3C7FB1" />
  <SolidColorBrush x:Key="ŧ"
                   SolidColorBrush.Color="#FFC9C7BA" />
  <Style x:Key="{x:Type TabItem}"
         TargetType="{x:Type TabItem}">
    <Setter Setter.Property="FrameworkElement.FocusVisualStyle"
            Setter.Value="{StaticResource Ţ}" />
    <Setter Setter.Property="Control.Foreground"
            Setter.Value="#FF000000" />
    <Setter Setter.Property="Control.Padding"
            Setter.Value="6,1,6,1" />
    <Setter Setter.Property="Control.BorderBrush"
            Setter.Value="{StaticResource š}" />
    <Setter Setter.Property="Control.Background"
            Setter.Value="{StaticResource Ò}" />
    <Setter Setter.Property="Control.HorizontalContentAlignment"
            Setter.Value="Stretch" />
    <Setter Setter.Property="Control.VerticalContentAlignment"
            Setter.Value="Stretch" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TabItem}">
          <Grid SnapsToDevicePixels="True">
            <Border Name="Bd"
                    Border.Padding="{TemplateBinding Control.Padding}"
                    Border.BorderBrush="{TemplateBinding Control.BorderBrush}"
                    Border.Background="{TemplateBinding Control.Background}"
                    Border.BorderThickness="1,1,1,0">
              <ContentPresenter Name="Content"
                                ContentSource="Header"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                RecognizesAccessKey="True"
                                HorizontalAlignment="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                VerticalAlignment="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="IsMouseOver"
                     Trigger.Value="True">
              <Setter Setter.TargetName="Bd"
                      Setter.Value="{StaticResource ţ}"
                      Setter.Property="Border.Background" />
            </Trigger>
            <Trigger Trigger.Property="TabItem.IsSelected"
                     Trigger.Value="True">
              <Setter Setter.Property="Panel.ZIndex"
                      Setter.Value="1" />
              <Setter Setter.TargetName="Bd"
                      Setter.Value="{StaticResource Ť}"
                      Setter.Property="Border.Background" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Condition.Property="TabItem.IsSelected"
                           Condition.Value="False" />
                <Condition Condition.Property="IsMouseOver"
                           Condition.Value="True" />
              </MultiTrigger.Conditions>
              <Setter Setter.TargetName="Bd"
                      Setter.Value="{StaticResource Ŧ}"
                      Setter.Property="Border.BorderBrush" />
            </MultiTrigger>
            <Trigger Trigger.Property="TabItem.TabStripPlacement"
                     Trigger.Value="Bottom">
              <Setter Setter.TargetName="Bd"
                      Setter.Property="Border.BorderThickness"
                      Setter.Value="1,0,1,1" />
            </Trigger>
            <Trigger Trigger.Property="TabItem.TabStripPlacement"
                     Trigger.Value="Left">
              <Setter Setter.TargetName="Bd"
                      Setter.Property="Border.BorderThickness"
                      Setter.Value="1,1,0,1" />
            </Trigger>
            <Trigger Trigger.Property="TabItem.TabStripPlacement"
                     Trigger.Value="Right">
              <Setter Setter.TargetName="Bd"
                      Setter.Property="Border.BorderThickness"
                      Setter.Value="0,1,1,1" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Condition.Property="TabItem.IsSelected"
                           Condition.Value="True" />
                <Condition Condition.Property="TabItem.TabStripPlacement"
                           Condition.Value="Top" />
              </MultiTrigger.Conditions>
              <Setter Setter.Property="Margin"
                      Setter.Value="-2,-2,-2,-1" />
              <Setter Setter.TargetName="Content"
                      Setter.Property="Margin"
                      Setter.Value="0,0,0,1" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Condition.Property="TabItem.IsSelected"
                           Condition.Value="True" />
                <Condition Condition.Property="TabItem.TabStripPlacement"
                           Condition.Value="Bottom" />
              </MultiTrigger.Conditions>
              <Setter Setter.Property="Margin"
                      Setter.Value="-2,-1,-2,-2" />
              <Setter Setter.TargetName="Content"
                      Setter.Property="Margin"
                      Setter.Value="0,1,0,0" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Condition.Property="TabItem.IsSelected"
                           Condition.Value="True" />
                <Condition Condition.Property="TabItem.TabStripPlacement"
                           Condition.Value="Left" />
              </MultiTrigger.Conditions>
              <Setter Setter.Property="Margin"
                      Setter.Value="-2,-2,-1,-2" />
              <Setter Setter.TargetName="Content"
                      Setter.Property="Margin"
                      Setter.Value="0,0,1,0" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Condition.Property="TabItem.IsSelected"
                           Condition.Value="True" />
                <Condition Condition.Property="TabItem.TabStripPlacement"
                           Condition.Value="Right" />
              </MultiTrigger.Conditions>
              <Setter Setter.Property="Margin"
                      Setter.Value="-1,-2,-2,-2" />
              <Setter Setter.TargetName="Content"
                      Setter.Property="Margin"
                      Setter.Value="1,0,0,0" />
            </MultiTrigger>
            <Trigger Trigger.Property="IsEnabled"
                     Trigger.Value="False">
              <Setter Setter.TargetName="Bd"
                      Setter.Value="{StaticResource ť}"
                      Setter.Property="Border.Background" />
              <Setter Setter.TargetName="Bd"
                      Setter.Value="{StaticResource ŧ}"
                      Setter.Property="Border.BorderBrush" />
              <Setter Setter.Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"
                      Setter.Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <LinearGradientBrush x:Key="å"
                       LinearGradientBrush.StartPoint="0,0"
                       LinearGradientBrush.EndPoint="0,20"
                       GradientBrush.MappingMode="Absolute">
    <GradientBrush.GradientStops>
      <GradientStop Color="#ABADB3"
                    Offset="0.05" />
      <GradientStop Color="#E2E3EA"
                    Offset="0.07" />
      <GradientStop Color="#E3E9EF"
                    Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <Style x:Key="{x:Type TextBoxBase}"
         TargetType="{x:Type TextBoxBase}"
         BasedOn="{x:Null}">
    <Setter Setter.Property="Control.Foreground"
            Setter.Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Setter.Property="Control.Background"
            Setter.Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
    <Setter Setter.Property="Control.BorderBrush"
            Setter.Value="{StaticResource å}" />
    <Setter Setter.Property="Control.BorderThickness"
            Setter.Value="1" />
    <Setter Setter.Property="Control.Padding"
            Setter.Value="1" />
    <Setter Setter.Property="AllowDrop"
            Setter.Value="True" />
    <Setter Setter.Property="FrameworkElement.FocusVisualStyle"
            Setter.Value="{x:Null}" />
    <Setter Setter.Property="ScrollViewer.PanningMode"
            Setter.Value="VerticalFirst" />
    <Setter Setter.Property="Stylus.IsFlicksEnabled"
            Setter.Value="False" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TextBoxBase}">
          <theme:ListBoxChrome x:Name="Bd"
                               BorderThickness="{TemplateBinding Control.BorderThickness}"
                               BorderBrush="{TemplateBinding Control.BorderBrush}"
                               Background="{TemplateBinding Control.Background}"
                               RenderMouseOver="{TemplateBinding IsMouseOver}"
                               RenderFocused="{TemplateBinding IsKeyboardFocusWithin}"
                               SnapsToDevicePixels="True">
            <ScrollViewer x:Name="PART_ContentHost"
                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
          </theme:ListBoxChrome>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="IsEnabled"
                     Trigger.Value="False">
              <Setter Setter.TargetName="Bd"
                      Setter.Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
                      Setter.Property="Background" />
              <Setter Setter.Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"
                      Setter.Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <!--<DataTrigger Binding="{Binding Path=(framework:FrameworkAppContextSwitches.UseAdornerForTextboxSelectionRendering)}"
                   DataTrigger.Value="false">
        <Setter Setter.Property="TextBoxBase.SelectionBrush"
                Setter.Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
        <Setter Setter.Property="TextBoxBase.SelectionBrush"
                Setter.Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
      </DataTrigger>-->
      <!--<MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Condition.Property="TextBoxBase.IsInactiveSelectionHighlightEnabled"
                     Condition.Value="True" />
          <Condition Condition.Property="TextBoxBase.IsSelectionActive"
                     Condition.Value="False" />
        </MultiTrigger.Conditions>
        <Setter Setter.Property="TextBoxBase.SelectionBrush"
                Setter.Value="{DynamicResource {x:Static  InternalSystemColorsExtendedStart}}" />
        <Setter Setter.Property="TextBoxBase.SelectionBrush"
                Setter.Value="{DynamicResource {x:Static  SystemColors.InactiveSelectionHighlightBrush}}" />
      </MultiTrigger>-->
    </Style.Triggers>
  </Style>
  <Style x:Key="{x:Type TextBox}"
         BasedOn="{StaticResource {x:Type TextBoxBase}}"
         TargetType="{x:Type TextBox}" />
  <Style x:Key="{x:Type RichTextBox}"
         BasedOn="{StaticResource {x:Type TextBoxBase}}"
         TargetType="{x:Type RichTextBox}">
    <Style.Resources>
      <ResourceDictionary>
        <Style TargetType="{x:Type FlowDocument}">
          <Setter Setter.Property="FrameworkContentElement.OverridesDefaultStyle"
                  Setter.Value="True" />
        </Style>
        <Style BasedOn="{StaticResource {x:Type Hyperlink}}"
               TargetType="{x:Type Hyperlink}">
          <Style.Triggers>
            <Trigger Trigger.Property="ContentElement.IsMouseOver"
                     Trigger.Value="True">
              <Setter Setter.Property="TextElement.Foreground"
                      Setter.Value="#FF0000FF" />
            </Trigger>
            <Trigger Trigger.Property="ContentElement.IsEnabled"
                     Trigger.Value="False">
              <Setter Setter.Property="TextElement.Foreground"
                      Setter.Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>
          </Style.Triggers>
        </Style>
      </ResourceDictionary>
    </Style.Resources>
    <Setter Setter.Property="FrameworkElement.MinWidth"
            Setter.Value="10" />
  </Style>
  <Style x:Key="{x:Type PasswordBox}"
         TargetType="{x:Type PasswordBox}">
    <Setter Setter.Property="Control.Background"
            Setter.Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
    <Setter Setter.Property="Control.BorderBrush"
            Setter.Value="{StaticResource å}" />
    <Setter Setter.Property="Control.FontFamily"
            Setter.Value="Times New Roman" />
    <Setter Setter.Property="PasswordBox.PasswordChar"
            Setter.Value="●" />
    <Setter Setter.Property="Control.Foreground"
            Setter.Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Setter.Property="KeyboardNavigation.TabNavigation"
            Setter.Value="None" />
    <Setter Setter.Property="Control.BorderThickness"
            Setter.Value="1" />
    <Setter Setter.Property="Control.HorizontalContentAlignment"
            Setter.Value="Left" />
    <Setter Setter.Property="Control.Padding"
            Setter.Value="1" />
    <Setter Setter.Property="FrameworkElement.FocusVisualStyle"
            Setter.Value="{x:Null}" />
    <Setter Setter.Property="AllowDrop"
            Setter.Value="True" />
    <Setter Setter.Property="ScrollViewer.PanningMode"
            Setter.Value="VerticalFirst" />
    <Setter Setter.Property="Stylus.IsFlicksEnabled"
            Setter.Value="False" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type PasswordBox}">
          <theme:ListBoxChrome Name="Bd"
                               BorderThickness="{TemplateBinding Control.BorderThickness}"
                               BorderBrush="{TemplateBinding Control.BorderBrush}"
                               Background="{TemplateBinding Control.Background}"
                               RenderMouseOver="{TemplateBinding IsMouseOver}"
                               RenderFocused="{TemplateBinding IsKeyboardFocusWithin}"
                               SnapsToDevicePixels="True">
            <ScrollViewer x:Name="PART_ContentHost"
                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
          </theme:ListBoxChrome>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="IsEnabled"
                     Trigger.Value="False">
              <Setter Setter.TargetName="Bd"
                      Setter.Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
                      Setter.Property="Background" />
              <Setter Setter.Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"
                      Setter.Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <!--<DataTrigger DataTrigger.Binding="{Binding Path=(framework:FrameworkAppContextSwitches.UseAdornerForTextboxSelectionRendering)}"
                   DataTrigger.Value="false">
        <Setter Setter.Property="PasswordBox.SelectionBrush"
                Setter.Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
        <Setter Setter.Property="PasswordBox.SelectionBrush"
                Setter.Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
      </DataTrigger>-->
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Condition.Property="PasswordBox.IsInactiveSelectionHighlightEnabled"
                     Condition.Value="True" />
          <Condition Condition.Property="PasswordBox.IsSelectionActive"
                     Condition.Value="False" />
        </MultiTrigger.Conditions>
        <!--<Setter Setter.Property="PasswordBox.SelectionBrush"
                Setter.Value="{DynamicResource {x:Static  InternalSystemColorsExtendedStart}}" />-->
        <Setter Setter.Property="PasswordBox.SelectionBrush"
                Setter.Value="{DynamicResource {x:Static  SystemColors.InactiveSelectionHighlightBrush}}" />
      </MultiTrigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{x:Type Thumb}"
         TargetType="{x:Type Thumb}">
    <Setter Setter.Property="Stylus.IsPressAndHoldEnabled"
            Setter.Value="False" />
    <Setter Setter.Property="Control.Background"
            Setter.Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
    <Setter Setter.Property="Control.Foreground"
            Setter.Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Border Border.Background="{TemplateBinding Control.Background}"
                  Border.BorderBrush="{TemplateBinding Control.BorderBrush}"
                  Border.BorderThickness="{TemplateBinding Control.BorderThickness}">
            <Grid>
              <Border Border.BorderThickness="0,0,1,1"
                      Border.Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
                      Border.BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
              <Border Border.BorderThickness="0,0,1,1"
                      Margin="1"
                      Border.Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"
                      Border.BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
              <Border Margin="2"
                      Border.Background="{TemplateBinding Control.Background}" />
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <LinearGradientBrush x:Key="Ɓ"
                       LinearGradientBrush.StartPoint="0,0"
                       LinearGradientBrush.EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FFFFFF"
                    Offset="0" />
      <GradientStop Color="#E4E5F0"
                    Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <Style x:Key="{x:Type ToolTip}"
         TargetType="{x:Type ToolTip}">
    <Setter Setter.Property="Control.BorderThickness"
            Setter.Value="1" />
    <Setter Setter.Property="Control.BorderBrush"
            Setter.Value="#FF767676" />
    <Setter Setter.Property="Control.Background"
            Setter.Value="{StaticResource Ɓ}" />
    <Setter Setter.Property="Control.Foreground"
            Setter.Value="#FF575757" />
    <Setter Setter.Property="Control.FontFamily"
            Setter.Value="{DynamicResource {x:Static SystemFonts.StatusFontFamilyKey}}" />
    <Setter Setter.Property="Control.FontSize"
            Setter.Value="{DynamicResource {x:Static SystemFonts.StatusFontSizeKey}}" />
    <Setter Setter.Property="Control.FontStyle"
            Setter.Value="{DynamicResource {x:Static SystemFonts.StatusFontStyleKey}}" />
    <Setter Setter.Property="Control.FontWeight"
            Setter.Value="{DynamicResource {x:Static SystemFonts.StatusFontWeightKey}}" />
    <Setter Setter.Property="Control.Padding"
            Setter.Value="5,1,5,4" />
    <Setter Setter.Property="Control.HorizontalContentAlignment"
            Setter.Value="Left" />
    <Setter Setter.Property="Control.VerticalContentAlignment"
            Setter.Value="Center" />
    <Setter Setter.Property="ToolTip.HasDropShadow"
            Setter.Value="{DynamicResource {x:Static SystemParameters.DropShadowKey}}" />
    <Setter Setter.Property="RenderOptions.ClearTypeHint"
            Setter.Value="Enabled" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToolTip}">
          <theme:SystemDropShadowChrome x:Name="Shdw"
                                        Color="Transparent"
                                        SnapsToDevicePixels="True"
                                        CornerRadius="2">
            <Border Border.Background="{TemplateBinding Control.Background}"
                    Border.BorderThickness="{TemplateBinding Control.BorderThickness}"
                    Border.BorderBrush="{TemplateBinding Control.BorderBrush}"
                    Border.Padding="{TemplateBinding Control.Padding}"
                    Border.CornerRadius="2">
              <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </Border>
          </theme:SystemDropShadowChrome>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="ToolTip.HasDropShadow"
                     Trigger.Value="True">
              <Setter Setter.TargetName="Shdw"
                      Setter.Property="Margin"
                      Setter.Value="0,0,5,5" />
              <Setter Setter.TargetName="Shdw"
                      Setter.Property="theme:SystemDropShadowChrome.Color"
                      Setter.Value="#71000000" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type TreeView}"
         TargetType="{x:Type TreeView}">
    <Setter Setter.Property="Control.Background"
            Setter.Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
    <Setter Setter.Property="Control.BorderBrush"
            Setter.Value="{StaticResource Đ}" />
    <Setter Setter.Property="Control.BorderThickness"
            Setter.Value="1" />
    <Setter Setter.Property="Control.Padding"
            Setter.Value="1" />
    <Setter Setter.Property="Control.Foreground"
            Setter.Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Setter.Property="ScrollViewer.HorizontalScrollBarVisibility"
            Setter.Value="Auto" />
    <Setter Setter.Property="ScrollViewer.VerticalScrollBarVisibility"
            Setter.Value="Auto" />
    <Setter Setter.Property="ScrollViewer.PanningMode"
            Setter.Value="Both" />
    <Setter Setter.Property="Stylus.IsFlicksEnabled"
            Setter.Value="False" />
    <Setter Setter.Property="Control.VerticalContentAlignment"
            Setter.Value="Center" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TreeView}">
          <Border Name="Bd"
                  Border.BorderBrush="{TemplateBinding Control.BorderBrush}"
                  Border.BorderThickness="{TemplateBinding Control.BorderThickness}"
                  SnapsToDevicePixels="True">
            <ScrollViewer Name="_tv_scrollviewer_"
                          Control.Background="{TemplateBinding Control.Background}"
                          Focusable="False"
                          ScrollViewer.CanContentScroll="False"
                          ScrollViewer.HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                          ScrollViewer.VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                          Control.Padding="{TemplateBinding Control.Padding}"
                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
              <ItemsPresenter />
            </ScrollViewer>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="IsEnabled"
                     Trigger.Value="False">
              <Setter Setter.TargetName="Bd"
                      Setter.Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
                      Setter.Property="Border.Background" />
            </Trigger>
            <Trigger Trigger.Property="VirtualizingPanel.IsVirtualizing"
                     Trigger.Value="True">
              <Setter Setter.TargetName="_tv_scrollviewer_"
                      Setter.Property="ScrollViewer.CanContentScroll"
                      Setter.Value="True" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Trigger.Property="VirtualizingPanel.IsVirtualizing"
               Trigger.Value="True">
        <Setter Setter.Property="ItemsControl.ItemsPanel">
          <Setter.Value>
            <ItemsPanelTemplate>
              <VirtualizingStackPanel />
            </ItemsPanelTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>
  <SolidColorBrush x:Key="Ƃ"
                   SolidColorBrush.Color="#FF989898" />
  <SolidColorBrush x:Key="ƃ"
                   SolidColorBrush.Color="Transparent" />
  <SolidColorBrush x:Key="Ƅ"
                   SolidColorBrush.Color="#FF1BBBFA" />
  <SolidColorBrush x:Key="ƅ"
                   SolidColorBrush.Color="Transparent" />
  <SolidColorBrush x:Key="Ɔ"
                   SolidColorBrush.Color="#FF262626" />
  <SolidColorBrush x:Key="Ƈ"
                   SolidColorBrush.Color="#FF595959" />
  <SolidColorBrush x:Key="ƈ"
                   SolidColorBrush.Color="#FF262626" />
  <SolidColorBrush x:Key="Ɖ"
                   SolidColorBrush.Color="#FF595959" />
  <PathGeometry x:Key="Ɗ">
    <PathGeometry.Figures>
      <PathFigureCollection>
        <PathFigure PathFigure.IsFilled="True"
                    PathFigure.StartPoint="0 0"
                    PathFigure.IsClosed="True">
          <PathFigure.Segments>
            <PathSegmentCollection>
              <LineSegment LineSegment.Point="0 6" />
              <LineSegment LineSegment.Point="6 0" />
            </PathSegmentCollection>
          </PathFigure.Segments>
        </PathFigure>
      </PathFigureCollection>
    </PathGeometry.Figures>
  </PathGeometry>
  <Style x:Key="Ƌ"
         TargetType="{x:Type ToggleButton}">
    <Setter Setter.Property="Focusable"
            Setter.Value="False" />
    <Setter Setter.Property="FrameworkElement.Width"
            Setter.Value="16" />
    <Setter Setter.Property="FrameworkElement.Height"
            Setter.Value="16" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Width="16"
                  Height="16"
                  Border.Background="#00FFFFFF"
                  Border.Padding="5,5,5,5">
            <Path x:Name="ExpandPath"
                  Shape.Fill="{StaticResource ƃ}"
                  Shape.Stroke="{StaticResource Ƃ}"
                  Path.Data="{StaticResource Ɗ}">
              <UIElement.RenderTransform>
                <RotateTransform RotateTransform.Angle="135"
                                 RotateTransform.CenterX="3"
                                 RotateTransform.CenterY="3" />
              </UIElement.RenderTransform>
            </Path>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="ToggleButton.IsChecked"
                     Trigger.Value="True">
              <Setter Setter.TargetName="ExpandPath"
                      Setter.Property="RenderTransform">
                <Setter.Value>
                  <RotateTransform RotateTransform.Angle="180"
                                   RotateTransform.CenterX="3"
                                   RotateTransform.CenterY="3" />
                </Setter.Value>
              </Setter>
              <Setter Setter.TargetName="ExpandPath"
                      Setter.Value="{StaticResource Ƈ}"
                      Setter.Property="Shape.Fill" />
              <Setter Setter.TargetName="ExpandPath"
                      Setter.Value="{StaticResource Ɔ}"
                      Setter.Property="Shape.Stroke" />
            </Trigger>
            <Trigger Trigger.Property="IsMouseOver"
                     Trigger.Value="True">
              <Setter Setter.TargetName="ExpandPath"
                      Setter.Value="{StaticResource Ƅ}"
                      Setter.Property="Shape.Stroke" />
              <Setter Setter.TargetName="ExpandPath"
                      Setter.Value="{StaticResource ƅ}"
                      Setter.Property="Shape.Fill" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Condition.Property="IsMouseOver"
                           Condition.Value="True" />
                <Condition Condition.Property="ToggleButton.IsChecked"
                           Condition.Value="True" />
              </MultiTrigger.Conditions>
              <Setter Setter.TargetName="ExpandPath"
                      Setter.Value="{StaticResource ƈ}"
                      Setter.Property="Shape.Stroke" />
              <Setter Setter.TargetName="ExpandPath"
                      Setter.Value="{StaticResource Ɖ}"
                      Setter.Property="Shape.Fill" />
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ƌ">
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type TreeViewItem}"
         TargetType="{x:Type TreeViewItem}">
    <Setter Setter.Property="Control.Background"
            Setter.Value="#00FFFFFF" />
    <Setter Setter.Property="Control.HorizontalContentAlignment"
            Setter.Value="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Setter.Property="Control.VerticalContentAlignment"
            Setter.Value="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Setter.Property="Control.Padding"
            Setter.Value="1,0,0,0" />
    <Setter Setter.Property="Control.Foreground"
            Setter.Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Setter.Property="FrameworkElement.FocusVisualStyle"
            Setter.Value="{StaticResource ƌ}" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TreeViewItem}">
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition ColumnDefinition.MinWidth="19"
                                ColumnDefinition.Width="Auto" />
              <ColumnDefinition ColumnDefinition.Width="Auto" />
              <ColumnDefinition ColumnDefinition.Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition RowDefinition.Height="Auto" />
              <RowDefinition />
            </Grid.RowDefinitions>
            <ToggleButton x:Name="Expander"
                          Style="{StaticResource Ƌ}"
                          ButtonBase.ClickMode="Press"
                          ToggleButton.IsChecked="{Binding Path=IsExpanded,RelativeSource={RelativeSource TemplatedParent}}" />
            <Border Name="Bd"
                    Grid.Column="1"
                    Border.Background="{TemplateBinding Control.Background}"
                    Border.BorderBrush="{TemplateBinding Control.BorderBrush}"
                    Border.BorderThickness="{TemplateBinding Control.BorderThickness}"
                    Border.Padding="{TemplateBinding Control.Padding}"
                    SnapsToDevicePixels="True">
              <ContentPresenter Name="PART_Header"
                                ContentSource="Header"
                                HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </Border>
            <ItemsPresenter x:Name="ItemsHost"
                            Grid.Row="1"
                            Grid.Column="1"
                            Grid.ColumnSpan="2" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="TreeViewItem.IsExpanded"
                     Trigger.Value="False">
              <Setter Setter.TargetName="ItemsHost"
                      Setter.Property="Visibility"
                      Setter.Value="Collapsed" />
            </Trigger>
            <Trigger Trigger.Property="ItemsControl.HasItems"
                     Trigger.Value="False">
              <Setter Setter.TargetName="Expander"
                      Setter.Property="Visibility"
                      Setter.Value="Hidden" />
            </Trigger>
            <Trigger Trigger.Property="TreeViewItem.IsSelected"
                     Trigger.Value="True">
              <Setter Setter.TargetName="Bd"
                      Setter.Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                      Setter.Property="Border.Background" />
              <Setter Setter.Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"
                      Setter.Property="Control.Foreground" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Condition.Property="TreeViewItem.IsSelected"
                           Condition.Value="True" />
                <Condition Condition.Property="TreeViewItem.IsSelectionActive"
                           Condition.Value="False" />
              </MultiTrigger.Conditions>
              <!--<Setter Setter.TargetName="Bd"
                      Setter.Value="{DynamicResource {x:Static  InternalSystemColorsExtendedStart}}"
                      Setter.Property="Border.Background" />-->
              <Setter Setter.Value="{DynamicResource {x:Static  SystemColors.InactiveSelectionHighlightBrush}}"
                      Setter.Property="Control.Foreground" />
            </MultiTrigger>
            <Trigger Trigger.Property="IsEnabled"
                     Trigger.Value="False">
              <Setter Setter.Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"
                      Setter.Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Trigger.Property="VirtualizingPanel.IsVirtualizing"
               Trigger.Value="True">
        <Setter Setter.Property="ItemsControl.ItemsPanel">
          <Setter.Value>
            <ItemsPanelTemplate>
              <VirtualizingStackPanel />
            </ItemsPanelTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{x:Type UserControl}"
         TargetType="{x:Type UserControl}">
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type UserControl}">
          <Border Border.Background="{TemplateBinding Control.Background}"
                  Border.BorderBrush="{TemplateBinding Control.BorderBrush}"
                  Border.BorderThickness="{TemplateBinding Control.BorderThickness}"
                  Border.Padding="{TemplateBinding Control.Padding}"
                  SnapsToDevicePixels="True">
            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ControlTemplate x:Key="ƍ"
                   TargetType="{x:Type Window}">
    <Border Border.Background="{TemplateBinding Control.Background}"
            Border.BorderBrush="{TemplateBinding Control.BorderBrush}"
            Border.BorderThickness="{TemplateBinding Control.BorderThickness}">
      <Grid>
        <AdornerDecorator>
          <ContentPresenter />
        </AdornerDecorator>
        <ResizeGrip x:Name="WindowResizeGrip"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Bottom"
                    Visibility="Collapsed"
                    Control.IsTabStop="False" />
      </Grid>
    </Border>
    <ControlTemplate.Triggers>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Condition.Property="Window.ResizeMode"
                     Condition.Value="CanResizeWithGrip" />
          <Condition Condition.Property="Window.WindowState"
                     Condition.Value="Normal" />
        </MultiTrigger.Conditions>
        <Setter Setter.TargetName="WindowResizeGrip"
                Setter.Property="Visibility"
                Setter.Value="Visible" />
      </MultiTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="{x:Type Window}"
         TargetType="{x:Type Window}">
    <Setter Setter.Property="Control.Foreground"
            Setter.Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
    <Setter Setter.Property="Control.Background"
            Setter.Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Window}">
          <Border Border.Background="{TemplateBinding Control.Background}"
                  Border.BorderBrush="{TemplateBinding Control.BorderBrush}"
                  Border.BorderThickness="{TemplateBinding Control.BorderThickness}">
            <AdornerDecorator>
              <ContentPresenter />
            </AdornerDecorator>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Trigger.Property="Window.ResizeMode"
               Trigger.Value="CanResizeWithGrip">
        <Setter Setter.Property="Control.Template"
                Setter.Value="{StaticResource ƍ}" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <JournalEntryListConverter x:Key="È" />
  <Style x:Key="É"
         TargetType="{x:Type MenuItem}">
    <Setter Setter.Property="HeaderedItemsControl.Header"
            Setter.Value="{Binding Path=Name}" />
    <Setter Setter.Property="MenuItem.Command"
            Setter.Value="NavigationCommands.NavigateJournal" />
    <Setter Setter.Property="MenuItem.CommandTarget"
            Setter.Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type NavigationWindow}}}" />
    <Setter Setter.Property="MenuItem.CommandParameter"
            Setter.Value="{Binding RelativeSource={RelativeSource Self}}" />
  </Style>
  <Style x:Key="Ê"
         TargetType="{x:Type MenuItem}">
    <Setter Setter.Property="Margin"
            Setter.Value="0" />
    <Setter Setter.Property="ScrollViewer.PanningMode"
            Setter.Value="Both" />
    <Setter Setter.Property="Stylus.IsFlicksEnabled"
            Setter.Value="False" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type MenuItem}">
          <DockPanel x:Name="Panel"
                     Panel.Background="#00FFFFFF">
            <Popup x:Name="PART_Popup"
                   Popup.AllowsTransparency="True"
                   Popup.Placement="Bottom"
                   Focusable="False"
                   Popup.PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                   Popup.IsOpen="{Binding Path=IsSubmenuOpen,RelativeSource={RelativeSource TemplatedParent}}">
              <theme:SystemDropShadowChrome x:Name="Shdw"
                                            Color="Transparent"
                                            >
                <Border Name="SubMenuBorder"
                        Border.Background="{DynamicResource {x:Static SystemColors.MenuBrushKey}}"
                        Border.BorderThickness="1"
                        Border.BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}">
                  <ScrollViewer Name="SubMenuScrollViewer"
                                Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement},ResourceId=MenuScrollViewer}}">
                    <Grid RenderOptions.ClearTypeHint="Enabled">
                      <Canvas Height="0"
                              Width="0"
                              HorizontalAlignment="Left"
                              VerticalAlignment="Top">
                        <Rectangle Name="OpaqueRect"
                                   Height="{Binding ElementName=SubMenuBorder,Path=ActualHeight}"
                                   Width="{Binding ElementName=SubMenuBorder,Path=ActualWidth}"
                                   Shape.Fill="{Binding ElementName=SubMenuBorder,Path=Background}" />
                      </Canvas>
                      <ItemsPresenter Name="ItemsPresenter"
                                      Margin="2"
                                      KeyboardNavigation.TabNavigation="Cycle"
                                      KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Grid>
                  </ScrollViewer>
                </Border>
              </theme:SystemDropShadowChrome>
            </Popup>
            <Path x:Name="Arrow"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Margin="0 2 0 0"
                  Shape.Fill="#FFFFFFFF"
                  Shape.Stroke="#FFAAAAAA"
                  Shape.StrokeThickness="1"
                  Path.Data="{StaticResource Ë}" />
          </DockPanel>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="MenuItem.IsSuspendingPopupAnimation"
                     Trigger.Value="True">
              <Setter Setter.TargetName="PART_Popup"
                      Setter.Property="Popup.PopupAnimation"
                      Setter.Value="None" />
            </Trigger>
            <Trigger Trigger.Property="MenuItem.IsHighlighted"
                     Trigger.Value="True">
              <Setter Setter.TargetName="Arrow"
                      Setter.Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"
                      Setter.Property="Shape.Fill" />
              <Setter Setter.TargetName="Panel"
                      Setter.Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                      Setter.Property="Panel.Background" />
            </Trigger>
            <Trigger Trigger.Property="IsEnabled"
                     Trigger.Value="False">
              <Setter Setter.TargetName="Arrow"
                      Setter.Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"
                      Setter.Property="Shape.Fill" />
            </Trigger>
            <Trigger Trigger.SourceName="PART_Popup"
                     Trigger.Property="Popup.HasDropShadow"
                     Trigger.Value="True">
              <Setter Setter.TargetName="Shdw"
                      Setter.Property="Margin"
                      Setter.Value="0,0,5,5" />
              <Setter Setter.TargetName="Shdw"
                      Setter.Property="SnapsToDevicePixels"
                      Setter.Value="True" />
              <Setter Setter.TargetName="Shdw"
                      Setter.Property="theme:SystemDropShadowChrome.Color"
                      Setter.Value="#71000000" />
            </Trigger>
            <Trigger Trigger.SourceName="SubMenuScrollViewer"
                     Trigger.Property="ScrollViewer.CanContentScroll"
                     Trigger.Value="False">
              <Setter Setter.TargetName="OpaqueRect"
                      Setter.Value="{Binding ElementName=SubMenuScrollViewer,Path=VerticalOffset}"
                      Setter.Property="Canvas.Top" />
              <Setter Setter.TargetName="OpaqueRect"
                      Setter.Value="{Binding ElementName=SubMenuScrollViewer,Path=HorizontalOffset}"
                      Setter.Property="Canvas.Left" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="Ì"
         TargetType="{x:Type Menu}">
    <Setter Setter.Property="ItemsControl.ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <DockPanel />
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
    <Setter Setter.Property="Control.Padding"
            Setter.Value="0,0,0,0" />
    <Setter Setter.Property="KeyboardNavigation.TabNavigation"
            Setter.Value="None" />
    <Setter Setter.Property="Menu.IsMainMenu"
            Setter.Value="False" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Menu}">
          <ItemsPresenter />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="Í"
         TargetType="{x:Type Button}">
    <Setter Setter.Property="Margin"
            Setter.Value="0,0,0,0" />
    <Setter Setter.Property="IsEnabled"
            Setter.Value="False" />
    <Setter Setter.Property="ButtonBase.Command"
            Setter.Value="NavigationCommands.BrowseBack" />
    <Setter Setter.Property="Focusable"
            Setter.Value="False" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <DockPanel>
            <Rectangle x:Name="R1"
                       DockPanel.Dock="Right"
                       Width="1"
                       Visibility="Hidden"
                       Shape.Fill="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
            <Rectangle x:Name="B1"
                       DockPanel.Dock="Bottom"
                       Height="1"
                       Visibility="Hidden"
                       Shape.Fill="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
            <Rectangle x:Name="L1"
                       DockPanel.Dock="Left"
                       Width="1"
                       Visibility="Hidden"
                       Shape.Fill="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
            <Rectangle x:Name="T1"
                       DockPanel.Dock="Top"
                       Height="1"
                       Visibility="Hidden"
                       Shape.Fill="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition ColumnDefinition.Width="*" />
                <ColumnDefinition ColumnDefinition.Width="Auto" />
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition RowDefinition.Height="*" />
              </Grid.RowDefinitions>
              <Viewbox Grid.Column="0"
                       Grid.Row="0">
                <Grid Width="50"
                      Height="50"
                      Margin="15,0,0,0">
                  <Ellipse x:Name="EllipseBackground"
                           Opacity="1"
                           Shape.StrokeThickness="2">
                    <Shape.Fill>
                      <LinearGradientBrush LinearGradientBrush.StartPoint="0,0"
                                           LinearGradientBrush.EndPoint="0,1">
                        <GradientBrush.GradientStops>
                          <GradientStopCollection>
                            <GradientStop Color="#B3E2A2"
                                          Offset="0" />
                            <GradientStop Color="#25B40E"
                                          Offset="1" />
                          </GradientStopCollection>
                        </GradientBrush.GradientStops>
                      </LinearGradientBrush>
                    </Shape.Fill>
                    <Shape.Stroke>
                      <LinearGradientBrush LinearGradientBrush.StartPoint="0,0"
                                           LinearGradientBrush.EndPoint="0,1">
                        <GradientBrush.GradientStops>
                          <GradientStopCollection>
                            <GradientStop Color="black"
                                          Offset="0" />
                            <GradientStop Color="#ccffffff"
                                          Offset="1" />
                          </GradientStopCollection>
                        </GradientBrush.GradientStops>
                      </LinearGradientBrush>
                    </Shape.Stroke>
                  </Ellipse>
                  <Ellipse x:Name="EllipseShine"
                           Shape.Stroke="#00FFFFFF"
                           Margin="5,5,5,15">
                    <Shape.Fill>
                      <LinearGradientBrush LinearGradientBrush.StartPoint="0,0"
                                           LinearGradientBrush.EndPoint="0,1">
                        <GradientBrush.GradientStops>
                          <GradientStopCollection>
                            <GradientStop Color="#aaffffff"
                                          Offset="0" />
                            <GradientStop Color="transparent"
                                          Offset="1" />
                          </GradientStopCollection>
                        </GradientBrush.GradientStops>
                      </LinearGradientBrush>
                    </Shape.Fill>
                  </Ellipse>
                  <Path x:Name="Arrow"
                        Shape.Fill="#FFFFFFFF"
                        Shape.Stroke="#FF086403"
                        Path.Data="M0.5,20.468C0.502,20.808 0.536,21.147 0.602,21.481 0.634,21.643 0.694,21.793 0.741,21.949 0.793,22.125 0.833,22.304 0.904,22.476 0.98,22.659 1.084,22.825 1.178,22.997 1.251,23.129 1.309,23.267 1.394,23.394 1.59,23.688 1.812,23.962 2.061,24.211L16.672,38.822C18.755,40.905 22.131,40.905 24.214,38.822 26.297,36.739 26.297,33.363 24.214,31.28L18.705,25.771 42.496,25.771C45.441,25.771 47.829,23.383 47.829,20.438 47.829,17.492 45.441,15.105 42.496,15.105L18.732,15.105 24.241,9.596C26.324,7.513 26.324,4.137 24.241,2.054 22.158,-0.0289999999999981 18.782,-0.0289999999999981 16.699,2.054L2.203,16.549C2.16,16.589 2.108,16.619 2.067,16.66 2.065,16.662 2.062,16.663 2.06,16.666 2.058,16.668 2.057,16.67 2.055,16.672 1.809,16.919 1.59,17.189 1.396,17.479 1.308,17.611 1.247,17.754 1.172,17.892 1.08,18.059 0.98,18.22 0.906,18.397 0.834,18.572 0.792,18.754 0.739,18.935 0.694,19.088 0.635,19.234 0.604,19.393 0.536,19.732 0.5,20.075 0.5,20.419 0.5,20.425 0.498,20.431 0.498,20.438 0.498,20.448 0.5,20.458 0.5,20.468z">
                    <UIElement.RenderTransform>
                      <TransformGroup>
                        <TransformGroup.Children>
                          <TransformCollection>
                            <ScaleTransform ScaleTransform.ScaleX="0.65"
                                            ScaleTransform.ScaleY="0.65" />
                            <TranslateTransform TranslateTransform.X="11.5"
                                                TranslateTransform.Y="10" />
                          </TransformCollection>
                        </TransformGroup.Children>
                      </TransformGroup>
                    </UIElement.RenderTransform>
                  </Path>
                </Grid>
              </Viewbox>
              <DockPanel Grid.Column="1"
                         Grid.Row="0">
                <Rectangle x:Name="R2"
                           DockPanel.Dock="Right"
                           Width="1"
                           Visibility="Hidden"
                           Shape.Fill="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
                <Rectangle x:Name="B2"
                           DockPanel.Dock="Bottom"
                           Height="1"
                           Visibility="Hidden"
                           Shape.Fill="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
                <Rectangle x:Name="L2"
                           DockPanel.Dock="Left"
                           Width="1"
                           Visibility="Hidden"
                           Shape.Fill="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
                <Rectangle x:Name="T2"
                           DockPanel.Dock="Top"
                           Height="1"
                           Visibility="Hidden"
                           Shape.Fill="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
                <Grid Width="10">
                  <Menu Style="{StaticResource Ì}">
                    <MenuItem x:Name="NavWinMenu"
                              Style="{StaticResource Ê}"
                              ItemsControl.ItemContainerStyle="{StaticResource É}"
                              ItemsControl.ItemsSource="{Binding Path=BackStack,Converter={StaticResource È},Mode=OneTime,RelativeSource={RelativeSource AncestorType={x:Type NavigationWindow}}}"
                              MenuItem.IsSubmenuOpen="{Binding Path=(MenuItem.IsSubmenuOpen),Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" />
                  </Menu>
                </Grid>
              </DockPanel>
            </Grid>
          </DockPanel>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="IsEnabled"
                     Trigger.Value="False">
              <Setter Setter.TargetName="EllipseBackground"
                      Setter.Property="Shape.Fill">
                <Setter.Value>
                  <LinearGradientBrush LinearGradientBrush.StartPoint="0,0"
                                       LinearGradientBrush.EndPoint="0,1">
                    <GradientBrush.GradientStops>
                      <GradientStopCollection>
                        <GradientStop Color="white"
                                      Offset="0" />
                        <GradientStop Color="gray"
                                      Offset="1" />
                      </GradientStopCollection>
                    </GradientBrush.GradientStops>
                  </LinearGradientBrush>
                </Setter.Value>
              </Setter>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Condition.Property="IsMouseOver"
                           Condition.Value="True" />
                <Condition Condition.Property="IsEnabled"
                           Condition.Value="True" />
              </MultiTrigger.Conditions>
              <Setter Setter.TargetName="EllipseBackground"
                      Setter.Property="Shape.Fill">
                <Setter.Value>
                  <LinearGradientBrush LinearGradientBrush.StartPoint="0,0"
                                       LinearGradientBrush.EndPoint="0,1">
                    <GradientBrush.GradientStops>
                      <GradientStopCollection>
                        <GradientStop Color="#25B40E"
                                      Offset="0" />
                        <GradientStop Color="#086403"
                                      Offset="1" />
                      </GradientStopCollection>
                    </GradientBrush.GradientStops>
                  </LinearGradientBrush>
                </Setter.Value>
              </Setter>
              <Setter Setter.TargetName="NavWinMenu"
                      Setter.Property="Control.Background"
                      Setter.Value="#00FFFFFF" />
              <Setter Setter.TargetName="L1"
                      Setter.Property="Visibility"
                      Setter.Value="Visible" />
              <Setter Setter.TargetName="R1"
                      Setter.Property="Visibility"
                      Setter.Value="Visible" />
              <Setter Setter.TargetName="T1"
                      Setter.Property="Visibility"
                      Setter.Value="Visible" />
              <Setter Setter.TargetName="B1"
                      Setter.Property="Visibility"
                      Setter.Value="Visible" />
            </MultiTrigger>
            <Trigger Trigger.Property="ButtonBase.IsPressed"
                     Trigger.Value="True">
              <Setter Setter.TargetName="EllipseBackground"
                      Setter.Property="Shape.Fill">
                <Setter.Value>
                  <LinearGradientBrush LinearGradientBrush.StartPoint="0,0"
                                       LinearGradientBrush.EndPoint="0,1">
                    <GradientBrush.GradientStops>
                      <GradientStopCollection>
                        <GradientStop Color="#25B40E"
                                      Offset="0" />
                        <GradientStop Color="#086403"
                                      Offset="1" />
                      </GradientStopCollection>
                    </GradientBrush.GradientStops>
                  </LinearGradientBrush>
                </Setter.Value>
              </Setter>
              <Setter Setter.TargetName="Arrow"
                      Setter.Property="RenderTransform">
                <Setter.Value>
                  <TransformGroup>
                    <TransformGroup.Children>
                      <TransformCollection>
                        <ScaleTransform ScaleTransform.ScaleX="0.65"
                                        ScaleTransform.ScaleY="0.65" />
                        <TranslateTransform TranslateTransform.X="10"
                                            TranslateTransform.Y="12" />
                      </TransformCollection>
                    </TransformGroup.Children>
                  </TransformGroup>
                </Setter.Value>
              </Setter>
              <Setter Setter.TargetName="EllipseShine"
                      Setter.Property="RenderTransform">
                <Setter.Value>
                  <TranslateTransform TranslateTransform.X="0"
                                      TranslateTransform.Y="2" />
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Trigger.Property="MenuItem.IsSubmenuOpen"
                     Trigger.Value="True">
              <Setter Setter.TargetName="L2"
                      Setter.Property="Visibility"
                      Setter.Value="Visible" />
              <Setter Setter.TargetName="R2"
                      Setter.Property="Visibility"
                      Setter.Value="Visible" />
              <Setter Setter.TargetName="T2"
                      Setter.Property="Visibility"
                      Setter.Value="Visible" />
              <Setter Setter.TargetName="B2"
                      Setter.Property="Visibility"
                      Setter.Value="Visible" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="Î"
         TargetType="{x:Type Button}">
    <Setter Setter.Property="Margin"
            Setter.Value="0,0,0,0" />
    <Setter Setter.Property="IsEnabled"
            Setter.Value="False" />
    <Setter Setter.Property="ButtonBase.Command"
            Setter.Value="NavigationCommands.BrowseForward" />
    <Setter Setter.Property="Focusable"
            Setter.Value="False" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <DockPanel>
            <Rectangle x:Name="R1"
                       DockPanel.Dock="Right"
                       Width="1"
                       Visibility="Hidden"
                       Shape.Fill="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
            <Rectangle x:Name="B1"
                       DockPanel.Dock="Bottom"
                       Height="1"
                       Visibility="Hidden"
                       Shape.Fill="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
            <Rectangle x:Name="L1"
                       DockPanel.Dock="Left"
                       Width="1"
                       Visibility="Hidden"
                       Shape.Fill="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
            <Rectangle x:Name="T1"
                       DockPanel.Dock="Top"
                       Height="1"
                       Visibility="Hidden"
                       Shape.Fill="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition ColumnDefinition.Width="*" />
                <ColumnDefinition ColumnDefinition.Width="Auto" />
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition RowDefinition.Height="*" />
              </Grid.RowDefinitions>
              <Viewbox Grid.Column="0"
                       Grid.Row="0">
                <Grid Width="50"
                      Height="50"
                      Margin="15,0,0,0">
                  <Ellipse x:Name="EllipseBackground"
                           Opacity="1"
                           Shape.StrokeThickness="2">
                    <Shape.Fill>
                      <LinearGradientBrush LinearGradientBrush.StartPoint="0,0"
                                           LinearGradientBrush.EndPoint="0,1">
                        <GradientBrush.GradientStops>
                          <GradientStopCollection>
                            <GradientStop Color="#B3E2A2"
                                          Offset="0" />
                            <GradientStop Color="#25B40E"
                                          Offset="1" />
                          </GradientStopCollection>
                        </GradientBrush.GradientStops>
                      </LinearGradientBrush>
                    </Shape.Fill>
                    <Shape.Stroke>
                      <LinearGradientBrush LinearGradientBrush.StartPoint="0,0"
                                           LinearGradientBrush.EndPoint="0,1">
                        <GradientBrush.GradientStops>
                          <GradientStopCollection>
                            <GradientStop Color="black"
                                          Offset="0" />
                            <GradientStop Color="#ccffffff"
                                          Offset="1" />
                          </GradientStopCollection>
                        </GradientBrush.GradientStops>
                      </LinearGradientBrush>
                    </Shape.Stroke>
                  </Ellipse>
                  <Ellipse x:Name="EllipseShine"
                           Shape.Stroke="#00FFFFFF"
                           Margin="5,3,5,15">
                    <Shape.Fill>
                      <LinearGradientBrush LinearGradientBrush.StartPoint="0,0"
                                           LinearGradientBrush.EndPoint="0,1">
                        <GradientBrush.GradientStops>
                          <GradientStopCollection>
                            <GradientStop Color="#aaffffff"
                                          Offset="0" />
                            <GradientStop Color="transparent"
                                          Offset="1" />
                          </GradientStopCollection>
                        </GradientBrush.GradientStops>
                      </LinearGradientBrush>
                    </Shape.Fill>
                  </Ellipse>
                  <Path x:Name="Arrow"
                        Shape.Fill="#FFFFFFFF"
                        Shape.Stroke="#FF086403"
                        Path.Data="M47.82,20.407C47.818,20.067 47.784,19.728 47.718,19.394 47.686,19.232 47.626,19.082 47.579,18.926 47.527,18.75 47.487,18.571 47.416,18.399 47.34,18.216 47.236,18.05 47.142,17.878 47.069,17.746 47.011,17.608 46.926,17.481 46.73,17.187 46.508,16.913 46.259,16.664L31.647,2.053C29.564,-0.0300000000000002 26.188,-0.0300000000000002 24.105,2.053 22.022,4.136 22.022,7.512 24.105,9.595L29.614,15.104 5.823,15.104C2.878,15.104 0.49,17.492 0.49,20.437 0.49,23.383 2.878,25.77 5.823,25.77L29.588,25.77 24.079,31.279C21.996,33.362 21.996,36.738 24.079,38.821 26.162,40.904 29.538,40.904 31.621,38.821L46.118,24.324C46.161,24.284 46.213,24.254 46.254,24.213 46.256,24.211 46.259,24.21 46.261,24.207 46.263,24.205 46.264,24.203 46.266,24.201 46.512,23.954 46.731,23.684 46.925,23.394 47.013,23.262 47.074,23.119 47.149,22.981 47.241,22.814 47.341,22.653 47.415,22.476 47.487,22.301 47.529,22.119 47.582,21.938 47.627,21.785 47.686,21.639 47.717,21.48 47.784,21.141 47.82,20.798 47.821,20.454 47.821,20.448 47.823,20.442 47.823,20.435 47.823,20.427 47.82,20.417 47.82,20.407z">
                    <UIElement.RenderTransform>
                      <TransformGroup>
                        <TransformGroup.Children>
                          <TransformCollection>
                            <ScaleTransform ScaleTransform.ScaleX="0.65"
                                            ScaleTransform.ScaleY="0.65" />
                            <TranslateTransform TranslateTransform.X="8.5"
                                                TranslateTransform.Y="10" />
                          </TransformCollection>
                        </TransformGroup.Children>
                      </TransformGroup>
                    </UIElement.RenderTransform>
                  </Path>
                </Grid>
              </Viewbox>
              <DockPanel Grid.Column="1"
                         Grid.Row="0">
                <Rectangle x:Name="R2"
                           DockPanel.Dock="Right"
                           Width="1"
                           Visibility="Hidden"
                           Shape.Fill="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
                <Rectangle x:Name="B2"
                           DockPanel.Dock="Bottom"
                           Height="1"
                           Visibility="Hidden"
                           Shape.Fill="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
                <Rectangle x:Name="L2"
                           DockPanel.Dock="Left"
                           Width="1"
                           Visibility="Hidden"
                           Shape.Fill="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
                <Rectangle x:Name="T2"
                           DockPanel.Dock="Top"
                           Height="1"
                           Visibility="Hidden"
                           Shape.Fill="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
                <Grid Width="10">
                  <Menu Style="{StaticResource Ì}">
                    <MenuItem x:Name="NavWinMenu"
                              Style="{StaticResource Ê}"
                              ItemsControl.ItemContainerStyle="{StaticResource É}"
                              ItemsControl.ItemsSource="{Binding Path=ForwardStack,Converter={StaticResource È},Mode=OneTime,RelativeSource={RelativeSource AncestorType={x:Type NavigationWindow}}}"
                              MenuItem.IsSubmenuOpen="{Binding Path=(MenuItem.IsSubmenuOpen),Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" />
                  </Menu>
                </Grid>
              </DockPanel>
            </Grid>
          </DockPanel>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="IsEnabled"
                     Trigger.Value="False">
              <Setter Setter.TargetName="EllipseBackground"
                      Setter.Property="Shape.Fill">
                <Setter.Value>
                  <LinearGradientBrush LinearGradientBrush.StartPoint="0,0"
                                       LinearGradientBrush.EndPoint="0,1">
                    <GradientBrush.GradientStops>
                      <GradientStopCollection>
                        <GradientStop Color="white"
                                      Offset="0" />
                        <GradientStop Color="gray"
                                      Offset="1" />
                      </GradientStopCollection>
                    </GradientBrush.GradientStops>
                  </LinearGradientBrush>
                </Setter.Value>
              </Setter>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Condition.Property="IsMouseOver"
                           Condition.Value="True" />
                <Condition Condition.Property="IsEnabled"
                           Condition.Value="True" />
              </MultiTrigger.Conditions>
              <Setter Setter.TargetName="EllipseBackground"
                      Setter.Property="Shape.Fill">
                <Setter.Value>
                  <LinearGradientBrush LinearGradientBrush.StartPoint="0,0"
                                       LinearGradientBrush.EndPoint="0,1">
                    <GradientBrush.GradientStops>
                      <GradientStopCollection>
                        <GradientStop Color="#25B40E"
                                      Offset="0" />
                        <GradientStop Color="#086403"
                                      Offset="1" />
                      </GradientStopCollection>
                    </GradientBrush.GradientStops>
                  </LinearGradientBrush>
                </Setter.Value>
              </Setter>
              <Setter Setter.TargetName="NavWinMenu"
                      Setter.Property="Control.Background"
                      Setter.Value="#00FFFFFF" />
              <Setter Setter.TargetName="L1"
                      Setter.Property="Visibility"
                      Setter.Value="Visible" />
              <Setter Setter.TargetName="R1"
                      Setter.Property="Visibility"
                      Setter.Value="Visible" />
              <Setter Setter.TargetName="T1"
                      Setter.Property="Visibility"
                      Setter.Value="Visible" />
              <Setter Setter.TargetName="B1"
                      Setter.Property="Visibility"
                      Setter.Value="Visible" />
            </MultiTrigger>
            <Trigger Trigger.Property="ButtonBase.IsPressed"
                     Trigger.Value="True">
              <Setter Setter.TargetName="EllipseBackground"
                      Setter.Property="Shape.Fill">
                <Setter.Value>
                  <LinearGradientBrush LinearGradientBrush.StartPoint="0,0"
                                       LinearGradientBrush.EndPoint="0,1">
                    <GradientBrush.GradientStops>
                      <GradientStopCollection>
                        <GradientStop Color="#25B40E"
                                      Offset="0" />
                        <GradientStop Color="#086403"
                                      Offset="1" />
                      </GradientStopCollection>
                    </GradientBrush.GradientStops>
                  </LinearGradientBrush>
                </Setter.Value>
              </Setter>
              <Setter Setter.TargetName="Arrow"
                      Setter.Property="RenderTransform">
                <Setter.Value>
                  <TransformGroup>
                    <TransformGroup.Children>
                      <TransformCollection>
                        <ScaleTransform ScaleTransform.ScaleX="0.65"
                                        ScaleTransform.ScaleY="0.65" />
                        <TranslateTransform TranslateTransform.X="10"
                                            TranslateTransform.Y="12" />
                      </TransformCollection>
                    </TransformGroup.Children>
                  </TransformGroup>
                </Setter.Value>
              </Setter>
              <Setter Setter.TargetName="EllipseShine"
                      Setter.Property="RenderTransform">
                <Setter.Value>
                  <TranslateTransform TranslateTransform.X="0"
                                      TranslateTransform.Y="2" />
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Trigger.Property="MenuItem.IsSubmenuOpen"
                     Trigger.Value="True">
              <Setter Setter.TargetName="L2"
                      Setter.Property="Visibility"
                      Setter.Value="Visible" />
              <Setter Setter.TargetName="R2"
                      Setter.Property="Visibility"
                      Setter.Value="Visible" />
              <Setter Setter.TargetName="T2"
                      Setter.Property="Visibility"
                      Setter.Value="Visible" />
              <Setter Setter.TargetName="B2"
                      Setter.Property="Visibility"
                      Setter.Value="Visible" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ControlTemplate x:Key="Ï"
                   TargetType="{x:Type NavigationWindow}">
    <Border Border.Background="{TemplateBinding Control.Background}"
            Border.BorderBrush="{TemplateBinding Control.BorderBrush}"
            Border.BorderThickness="{TemplateBinding Control.BorderThickness}">
      <AdornerDecorator>
        <ContentPresenter Name="PART_NavWinCP"
                          ClipToBounds="True" />
      </AdornerDecorator>
    </Border>
  </ControlTemplate>
  <Style x:Key="{x:Static SystemParameters.NavigationChromeStyleKey}"
         TargetType="{x:Type NavigationWindow}">
    <Setter Setter.Property="Control.Foreground"
            Setter.Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
    <Setter Setter.Property="Control.Background"
            Setter.Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
    <Setter Setter.Property="Control.Template"
            Setter.Value="{StaticResource Ï}" />
  </Style>
  <ControlTemplate x:Key="Ð"
                   TargetType="{x:Type NavigationWindow}">
    <Border Border.Background="{TemplateBinding Control.Background}"
            Border.BorderBrush="{TemplateBinding Control.BorderBrush}"
            Border.BorderThickness="{TemplateBinding Control.BorderThickness}">
      <DockPanel>
        <Grid FlowDirection="{x:Static theme:PlatformCulture.FlowDirection}"
              DockPanel.Dock="Top"
              Height="30">
          <Panel.Background>
            <LinearGradientBrush LinearGradientBrush.StartPoint="0,0"
                                 LinearGradientBrush.EndPoint="1,0">
              <GradientBrush.GradientStops>
                <GradientStopCollection>
                  <GradientStop Color="silver"
                                Offset="0" />
                  <GradientStop Color="white"
                                Offset="1" />
                </GradientStopCollection>
              </GradientBrush.GradientStops>
            </LinearGradientBrush>
          </Panel.Background>
          <DockPanel DockPanel.LastChildFill="False">
            <Button Style="{StaticResource Í}"
                    DockPanel.Dock="left"
                    Width="40"
                    IsEnabled="{TemplateBinding NavigationWindow.CanGoBack}" />
            <Button Style="{StaticResource Î}"
                    DockPanel.Dock="left"
                    Width="40"
                    IsEnabled="{TemplateBinding NavigationWindow.CanGoForward}" />
          </DockPanel>
        </Grid>
        <Border>
          <AdornerDecorator>
            <ContentPresenter Name="PART_NavWinCP"
                              ClipToBounds="True" />
          </AdornerDecorator>
        </Border>
      </DockPanel>
    </Border>
  </ControlTemplate>
  <Style x:Key="{x:Static SystemParameters.NavigationChromeDownLevelStyleKey}"
         TargetType="{x:Type NavigationWindow}">
    <Setter Setter.Property="Control.Foreground"
            Setter.Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
    <Setter Setter.Property="Control.Background"
            Setter.Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
    <Setter Setter.Property="Control.Template"
            Setter.Value="{StaticResource Ð}" />
    <Style.Triggers>
      <Trigger Trigger.Property="NavigationWindow.ShowsNavigationUI"
               Trigger.Value="False">
        <Setter Setter.Property="Control.Template"
                Setter.Value="{StaticResource Ï}" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="ß">
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Margin="4,4,21,4"
                     Shape.StrokeThickness="1"
                     Shape.Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                     Shape.StrokeDashArray="1 2"
                     SnapsToDevicePixels="True" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="à"
         TargetType="{x:Type TextBox}">
    <Style.Triggers>
      <!--<DataTrigger DataTrigger.Binding="{Binding Path=(base:AccessibilitySwitches.UseNetFx47CompatibleAccessibilityFeatures)}"
                   DataTrigger.Value="false">
        <Setter Setter.Property="AutomationProperties.Name"
                Setter.Value="{Binding Path=(AutomationProperties.Name),Mode=OneWay,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ComboBox}}}" />
        <Setter Setter.Property="AutomationProperties.LabeledBy"
                Setter.Value="{Binding Path=(AutomationProperties.LabeledBy),Mode=OneWay,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ComboBox}}}" />
        <Setter Setter.Property="AutomationProperties.HelpText"
                Setter.Value="{Binding Path=(AutomationProperties.HelpText),Mode=OneWay,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ComboBox}}}" />
      </DataTrigger>-->
      <!--<DataTrigger DataTrigger.Binding="{Binding Path=(framework:FrameworkAppContextSwitches.UseAdornerForTextboxSelectionRendering)}"
                   DataTrigger.Value="false">
        <Setter Setter.Property="TextBoxBase.SelectionBrush"
                Setter.Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
        <Setter Setter.Property="TextBoxBase.SelectionBrush"
                Setter.Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
      </DataTrigger>-->
    </Style.Triggers>
    <Setter Setter.Property="FrameworkElement.OverridesDefaultStyle"
            Setter.Value="True" />
    <Setter Setter.Property="AllowDrop"
            Setter.Value="True" />
    <Setter Setter.Property="FrameworkElement.MinWidth"
            Setter.Value="0" />
    <Setter Setter.Property="FrameworkElement.MinHeight"
            Setter.Value="0" />
    <Setter Setter.Property="FrameworkElement.FocusVisualStyle"
            Setter.Value="{x:Null}" />
    <Setter Setter.Property="ScrollViewer.PanningMode"
            Setter.Value="VerticalFirst" />
    <Setter Setter.Property="Stylus.IsFlicksEnabled"
            Setter.Value="False" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TextBox}">
          <ScrollViewer x:Name="PART_ContentHost"
                        Focusable="False"
                        ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                        ScrollViewer.VerticalScrollBarVisibility="Hidden"
                        Control.Background="#00FFFFFF" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Geometry x:Key="á">
    M 0 0 L 3.5 4 L 7 0 Z
  </Geometry>
  <Style x:Key="â"
         TargetType="{x:Type ToggleButton}">
    <Setter Setter.Property="FrameworkElement.OverridesDefaultStyle"
            Setter.Value="True" />
    <Setter Setter.Property="Control.IsTabStop"
            Setter.Value="False" />
    <Setter Setter.Property="Focusable"
            Setter.Value="False" />
    <Setter Setter.Property="ButtonBase.ClickMode"
            Setter.Value="Press" />
    <Setter Setter.Property="Control.Background"
            Setter.Value="#00FFFFFF" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <theme:ButtonChrome x:Name="Chrome"
                              Background="{TemplateBinding Control.Background}"
                              BorderBrush="{TemplateBinding Control.BorderBrush}"
                              RenderMouseOver="{TemplateBinding IsMouseOver}"
                              RenderPressed="{TemplateBinding ButtonBase.IsPressed}"
                              SnapsToDevicePixels="True">
            <Grid Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                  HorizontalAlignment="Right">
              <Path Name="Arrow"
                    Margin="3,1,0,0"
                    Shape.Fill="#FF000000"
                    Path.Data="{StaticResource á}"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center" />
            </Grid>
          </theme:ButtonChrome>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="ToggleButton.IsChecked"
                     Trigger.Value="true">
              <Setter Setter.TargetName="Chrome"
                      Setter.Property="RenderPressed"
                      Setter.Value="True" />
            </Trigger>
            <Trigger Trigger.Property="IsEnabled"
                     Trigger.Value="False">
              <Setter Setter.TargetName="Arrow"
                      Setter.Property="Shape.Fill"
                      Setter.Value="#FFAFAFAF" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ã"
         TargetType="{x:Type ToggleButton}">
    <Setter Setter.Property="FrameworkElement.OverridesDefaultStyle"
            Setter.Value="True" />
    <Setter Setter.Property="Control.IsTabStop"
            Setter.Value="False" />
    <Setter Setter.Property="Focusable"
            Setter.Value="False" />
    <Setter Setter.Property="ButtonBase.ClickMode"
            Setter.Value="Press" />
    <Setter Setter.Property="Control.Background"
            Setter.Value="#00FFFFFF" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <theme:ButtonChrome x:Name="Chrome"
                              Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                              Background="{TemplateBinding Control.Background}"
                              BorderBrush="{TemplateBinding Control.BorderBrush}"
                              RenderMouseOver="{TemplateBinding IsMouseOver}"
                              RenderPressed="{TemplateBinding ButtonBase.IsPressed}"
                              RoundCorners="False"
                              SnapsToDevicePixels="True">
            <Path Name="Arrow"
                  Margin="0,1,0,0"
                  Shape.Fill="#FF000000"
                  Path.Data="{StaticResource á}"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center" />
          </theme:ButtonChrome>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="ToggleButton.IsChecked"
                     Trigger.Value="true">
              <Setter Setter.TargetName="Chrome"
                      Setter.Property="RenderPressed"
                      Setter.Value="True" />
            </Trigger>
            <Trigger Trigger.Property="IsEnabled"
                     Trigger.Value="False">
              <Setter Setter.TargetName="Arrow"
                      Setter.Property="Shape.Fill"
                      Setter.Value="#FFAFAFAF" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ControlTemplate x:Key="ä"
                   TargetType="{x:Type ComboBox}">
    <Grid Name="Placement"
          SnapsToDevicePixels="True">
      <Grid.ColumnDefinitions>
        <ColumnDefinition ColumnDefinition.Width="*" />
        <ColumnDefinition ColumnDefinition.Width="Auto" />
      </Grid.ColumnDefinitions>
      <Popup Name="PART_Popup"
             Grid.ColumnSpan="2"
             Popup.AllowsTransparency="True"
             Popup.Placement="Bottom"
             Popup.PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
             Popup.IsOpen="{Binding Path=IsDropDownOpen,RelativeSource={RelativeSource TemplatedParent}}">
        <theme:SystemDropShadowChrome x:Name="Shdw"
                                      Color="Transparent"
                                      MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}"
                                      MinWidth="{Binding ElementName=Placement,Path=ActualWidth}"
                                      >
          <Border x:Name="DropDownBorder"
                  Border.BorderThickness="1"
                  Border.BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
                  Border.Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
            <ScrollViewer Name="DropDownScrollViewer">
              <Grid RenderOptions.ClearTypeHint="Enabled">
                <Canvas Height="0"
                        Width="0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Top">
                  <Rectangle Name="OpaqueRect"
                             Height="{Binding ElementName=DropDownBorder,Path=ActualHeight}"
                             Width="{Binding ElementName=DropDownBorder,Path=ActualWidth}"
                             Shape.Fill="{Binding ElementName=DropDownBorder,Path=Background}" />
                </Canvas>
                <ItemsPresenter Name="ItemsPresenter"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
              </Grid>
            </ScrollViewer>
          </Border>
        </theme:SystemDropShadowChrome>
      </Popup>
      <theme:ListBoxChrome x:Name="Border"
                           Grid.ColumnSpan="2"
                           BorderThickness="{TemplateBinding Control.BorderThickness}"
                           BorderBrush="{TemplateBinding Control.BorderBrush}"
                           Background="{TemplateBinding Control.Background}"
                           RenderMouseOver="{TemplateBinding IsMouseOver}"
                           RenderFocused="{TemplateBinding IsKeyboardFocusWithin}" />
      <TextBox Name="PART_EditableTextBox"
               Margin="{TemplateBinding Control.Padding}"
               Style="{StaticResource à}"
               Control.HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
               Control.VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}"
               TextBoxBase.IsReadOnly="{Binding Path=IsReadOnly,RelativeSource={RelativeSource TemplatedParent}}" />
      <ToggleButton Grid.Column="1"
                    Style="{StaticResource ã}"
                    ToggleButton.IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Trigger.Property="IsKeyboardFocusWithin"
               Trigger.Value="True">
        <Setter Setter.Property="Control.Foreground"
                Setter.Value="#FF000000" />
      </Trigger>
      <Trigger Trigger.Property="ComboBox.IsDropDownOpen"
               Trigger.Value="True">
        <Setter Setter.TargetName="Border"
                Setter.Property="RenderFocused"
                Setter.Value="True" />
      </Trigger>
      <Trigger Trigger.Property="ItemsControl.HasItems"
               Trigger.Value="False">
        <Setter Setter.TargetName="DropDownBorder"
                Setter.Property="FrameworkElement.Height"
                Setter.Value="95" />
      </Trigger>
      <Trigger Trigger.Property="IsEnabled"
               Trigger.Value="False">
        <Setter Setter.Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"
                Setter.Property="Control.Foreground" />
        <Setter Setter.Property="Control.Background"
                Setter.Value="#FFF4F4F4" />
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Condition.Property="ItemsControl.IsGrouping"
                     Condition.Value="True" />
          <Condition Condition.Property="VirtualizingPanel.IsVirtualizingWhenGrouping"
                     Condition.Value="False" />
        </MultiTrigger.Conditions>
        <Setter Setter.Property="ScrollViewer.CanContentScroll"
                Setter.Value="False" />
      </MultiTrigger>
      <Trigger Trigger.SourceName="PART_Popup"
               Trigger.Property="Popup.HasDropShadow"
               Trigger.Value="True">
        <Setter Setter.TargetName="Shdw"
                Setter.Property="Margin"
                Setter.Value="0,0,5,5" />
        <Setter Setter.TargetName="Shdw"
                Setter.Property="theme:SystemDropShadowChrome.Color"
                Setter.Value="#71000000" />
      </Trigger>
      <Trigger Trigger.SourceName="DropDownScrollViewer"
               Trigger.Property="ScrollViewer.CanContentScroll"
               Trigger.Value="False">
        <Setter Setter.TargetName="OpaqueRect"
                Setter.Value="{Binding ElementName=DropDownScrollViewer,Path=VerticalOffset}"
                Setter.Property="Canvas.Top" />
        <Setter Setter.TargetName="OpaqueRect"
                Setter.Value="{Binding ElementName=DropDownScrollViewer,Path=HorizontalOffset}"
                Setter.Property="Canvas.Left" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="{x:Type ComboBox}"
         TargetType="{x:Type ComboBox}">
    <Setter Setter.Property="FrameworkElement.FocusVisualStyle"
            Setter.Value="{StaticResource ß}" />
    <Setter Setter.Property="Control.Foreground"
            Setter.Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
    <Setter Setter.Property="Control.Background"
            Setter.Value="{StaticResource Ò}" />
    <Setter Setter.Property="Control.BorderBrush"
            Setter.Value="{StaticResource Ó}" />
    <Setter Setter.Property="Control.BorderThickness"
            Setter.Value="1" />
    <Setter Setter.Property="ScrollViewer.HorizontalScrollBarVisibility"
            Setter.Value="Auto" />
    <Setter Setter.Property="ScrollViewer.VerticalScrollBarVisibility"
            Setter.Value="Auto" />
    <Setter Setter.Property="Control.Padding"
            Setter.Value="4,3" />
    <Setter Setter.Property="ScrollViewer.CanContentScroll"
            Setter.Value="True" />
    <Setter Setter.Property="ScrollViewer.PanningMode"
            Setter.Value="Both" />
    <Setter Setter.Property="Stylus.IsFlicksEnabled"
            Setter.Value="False" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ComboBox}">
          <Grid Name="MainGrid"
                SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
              <ColumnDefinition ColumnDefinition.Width="*" />
              <ColumnDefinition ColumnDefinition.MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                                ColumnDefinition.Width="0" />
            </Grid.ColumnDefinitions>
            <Popup Name="PART_Popup"
                   Popup.AllowsTransparency="True"
                   Grid.ColumnSpan="2"
                   Popup.Placement="Bottom"
                   Margin="1"
                   Popup.PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                   Popup.IsOpen="{Binding Path=IsDropDownOpen,RelativeSource={RelativeSource TemplatedParent}}">
              <theme:SystemDropShadowChrome x:Name="Shdw"
                                            Color="Transparent"
                                            MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}"
                                            MinWidth="{Binding ElementName=MainGrid,Path=ActualWidth}"
                                            >
                <Border x:Name="DropDownBorder"
                        Border.BorderThickness="1"
                        Border.BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
                        Border.Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                  <ScrollViewer Name="DropDownScrollViewer">
                    <Grid RenderOptions.ClearTypeHint="Enabled">
                      <Canvas Height="0"
                              Width="0"
                              HorizontalAlignment="Left"
                              VerticalAlignment="Top">
                        <Rectangle Name="OpaqueRect"
                                   Height="{Binding ElementName=DropDownBorder,Path=ActualHeight}"
                                   Width="{Binding ElementName=DropDownBorder,Path=ActualWidth}"
                                   Shape.Fill="{Binding ElementName=DropDownBorder,Path=Background}" />
                      </Canvas>
                      <ItemsPresenter Name="ItemsPresenter"
                                      KeyboardNavigation.DirectionalNavigation="Contained"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                  </ScrollViewer>
                </Border>
              </theme:SystemDropShadowChrome>
            </Popup>
            <ToggleButton Grid.ColumnSpan="2"
                          Control.Background="{TemplateBinding Control.Background}"
                          Control.BorderBrush="{TemplateBinding Control.BorderBrush}"
                          Style="{StaticResource â}"
                          ToggleButton.IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" />
            <ContentPresenter IsHitTestVisible="False"
                              Margin="{TemplateBinding Control.Padding}"
                              Content="{TemplateBinding ComboBox.SelectionBoxItem}"
                              ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                              ContentTemplateSelector="{TemplateBinding ItemsControl.ItemTemplateSelector}"
                              ContentStringFormat="{TemplateBinding ComboBox.SelectionBoxItemStringFormat}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                              HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Trigger.SourceName="PART_Popup"
                     Trigger.Property="Popup.HasDropShadow"
                     Trigger.Value="True">
              <Setter Setter.TargetName="Shdw"
                      Setter.Property="Margin"
                      Setter.Value="0,0,5,5" />
              <Setter Setter.TargetName="Shdw"
                      Setter.Property="theme:SystemDropShadowChrome.Color"
                      Setter.Value="#71000000" />
            </Trigger>
            <Trigger Trigger.Property="ItemsControl.HasItems"
                     Trigger.Value="False">
              <Setter Setter.TargetName="DropDownBorder"
                      Setter.Property="FrameworkElement.Height"
                      Setter.Value="95" />
            </Trigger>
            <Trigger Trigger.Property="IsEnabled"
                     Trigger.Value="False">
              <Setter Setter.Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"
                      Setter.Property="Control.Foreground" />
              <Setter Setter.Property="Control.Background"
                      Setter.Value="#FFF4F4F4" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Condition.Property="ItemsControl.IsGrouping"
                           Condition.Value="True" />
                <Condition Condition.Property="VirtualizingPanel.IsVirtualizingWhenGrouping"
                           Condition.Value="False" />
              </MultiTrigger.Conditions>
              <Setter Setter.Property="ScrollViewer.CanContentScroll"
                      Setter.Value="False" />
            </MultiTrigger>
            <Trigger Trigger.SourceName="DropDownScrollViewer"
                     Trigger.Property="ScrollViewer.CanContentScroll"
                     Trigger.Value="False">
              <Setter Setter.TargetName="OpaqueRect"
                      Setter.Value="{Binding ElementName=DropDownScrollViewer,Path=VerticalOffset}"
                      Setter.Property="Canvas.Top" />
              <Setter Setter.TargetName="OpaqueRect"
                      Setter.Value="{Binding ElementName=DropDownScrollViewer,Path=HorizontalOffset}"
                      Setter.Property="Canvas.Left" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Trigger.Property="ComboBox.IsEditable"
               Trigger.Value="True">
        <Setter Setter.Property="Control.BorderBrush"
                Setter.Value="{StaticResource å}" />
        <Setter Setter.Property="Control.Background"
                Setter.Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
        <Setter Setter.Property="Control.IsTabStop"
                Setter.Value="False" />
        <Setter Setter.Property="Control.Padding"
                Setter.Value="3" />
        <Setter Setter.Property="Control.Template"
                Setter.Value="{StaticResource ä}" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <ControlTemplate x:Key="Ć"
                   TargetType="{x:Type Frame}">
    <Border Border.Background="{TemplateBinding Control.Background}"
            Border.BorderBrush="{TemplateBinding Control.BorderBrush}"
            Border.BorderThickness="{TemplateBinding Control.BorderThickness}"
            Border.Padding="{TemplateBinding Control.Padding}">
      <DockPanel>
        <Grid Panel.Background="{StaticResource ć}"
              DockPanel.Dock="Top"
              Height="22">
          <Grid.ColumnDefinitions>
            <ColumnDefinition ColumnDefinition.Width="Auto" />
            <ColumnDefinition ColumnDefinition.Width="Auto" />
            <ColumnDefinition ColumnDefinition.Width="16" />
            <ColumnDefinition ColumnDefinition.Width="*" />
          </Grid.ColumnDefinitions>
          <Menu Name="NavMenu"
                Grid.ColumnSpan="3"
                Height="16"
                Margin="1,0,0,0"
                VerticalAlignment="Center"
                Style="{StaticResource Ĉ}">
            <MenuItem Control.Padding="0,2,4,0"
                      Style="{StaticResource ĉ}"
                      ItemsControl.ItemContainerStyle="{StaticResource Ċ}"
                      MenuItem.IsSubmenuOpen="{Binding Path=(MenuItem.IsSubmenuOpen),Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}">
              <ItemsControl.ItemsSource>
                <MultiBinding MultiBinding.Converter="{StaticResource ċ}">
                  <MultiBinding.Bindings>
                    <Binding Binding.Path="BackStack"
                             Binding.RelativeSource="{RelativeSource TemplatedParent}" />
                    <Binding Binding.Path="ForwardStack"
                             Binding.RelativeSource="{RelativeSource TemplatedParent}" />
                  </MultiBinding.Bindings>
                </MultiBinding>
              </ItemsControl.ItemsSource>
            </MenuItem>
          </Menu>
          <Path Grid.Column="0"
                SnapsToDevicePixels="False"
                IsHitTestVisible="False"
                Margin="2,0,0,0"
                Grid.ColumnSpan="3"
                Shape.StrokeThickness="1"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                Path.Data="M22.5767,21.035Q27,19.37,31.424,21.035A12.5,12.5,0,0,0,53.5,13A12.5,12.5,0,0,0,37.765,0.926Q27,4.93,16.235,0.926A12.5,12.5,0,0,0,0.5,13A12.5,12.5,0,0,0,22.5767,21.035z">
            <Shape.Fill>
              <LinearGradientBrush LinearGradientBrush.StartPoint="0,0"
                                   LinearGradientBrush.EndPoint="0,1">
                <GradientBrush.GradientStops>
                  <GradientStopCollection>
                    <GradientStop Color="#A0C2CCE7"
                                  Offset="0" />
                    <GradientStop Color="#60FFFFFF"
                                  Offset="1" />
                  </GradientStopCollection>
                </GradientBrush.GradientStops>
              </LinearGradientBrush>
            </Shape.Fill>
            <Shape.Stroke>
              <LinearGradientBrush LinearGradientBrush.StartPoint="0,0"
                                   LinearGradientBrush.EndPoint="0,1">
                <GradientBrush.GradientStops>
                  <GradientStopCollection>
                    <GradientStop Color="#FFB7C2E3"
                                  Offset="0.2" />
                    <GradientStop Color="#A0FFFFFF"
                                  Offset="0.9" />
                  </GradientStopCollection>
                </GradientBrush.GradientStops>
              </LinearGradientBrush>
            </Shape.Stroke>
            <FrameworkElement.LayoutTransform>
              <ScaleTransform ScaleTransform.ScaleX="0.667"
                              ScaleTransform.ScaleY="0.667" />
            </FrameworkElement.LayoutTransform>
          </Path>
          <Button Style="{StaticResource Č}"
                  Margin="3,0,1,0"
                  Grid.Column="0">
            <FrameworkElement.LayoutTransform>
              <ScaleTransform ScaleTransform.ScaleX="0.667"
                              ScaleTransform.ScaleY="0.667" />
            </FrameworkElement.LayoutTransform>
          </Button>
          <Button Style="{StaticResource č}"
                  Margin="1,0,0,0"
                  Grid.Column="1">
            <FrameworkElement.LayoutTransform>
              <ScaleTransform ScaleTransform.ScaleX="0.667"
                              ScaleTransform.ScaleY="0.667" />
            </FrameworkElement.LayoutTransform>
          </Button>
        </Grid>
        <ContentPresenter Name="PART_FrameCP" />
      </DockPanel>
    </Border>
    <ControlTemplate.Triggers>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Condition.Property="Frame.CanGoForward"
                     Condition.Value="False" />
          <Condition Condition.Property="Frame.CanGoBack"
                     Condition.Value="False" />
        </MultiTrigger.Conditions>
        <Setter Setter.TargetName="NavMenu"
                Setter.Property="IsEnabled"
                Setter.Value="False" />
      </MultiTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="{x:Type Frame}"
         TargetType="{x:Type Frame}">
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Frame}">
          <Border Border.Background="{TemplateBinding Control.Background}"
                  Border.BorderBrush="{TemplateBinding Control.BorderBrush}"
                  Border.BorderThickness="{TemplateBinding Control.BorderThickness}"
                  Border.Padding="{TemplateBinding Control.Padding}">
            <ContentPresenter Name="PART_FrameCP" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Trigger.Property="Frame.NavigationUIVisibility"
               Trigger.Value="Visible">
        <Setter Setter.Property="Control.Template"
                Setter.Value="{StaticResource Ć}" />
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Condition.Property="Frame.JournalOwnership"
                     Condition.Value="OwnsJournal" />
          <Condition Condition.Property="Frame.NavigationUIVisibility"
                     Condition.Value="Automatic" />
        </MultiTrigger.Conditions>
        <Setter Setter.Property="Control.Template"
                Setter.Value="{StaticResource Ć}" />
      </MultiTrigger>
    </Style.Triggers>
  </Style>
  <SolidColorBrush x:Key="Ũ"
                   SolidColorBrush.Color="#99CCFF" />
  <SolidColorBrush x:Key="ũ"
                   SolidColorBrush.Color="#F7F7F7" />
  <SolidColorBrush x:Key="Ū"
                   SolidColorBrush.Color="#B5B2B5" />
  <SolidColorBrush x:Key="ū"
                   SolidColorBrush.Color="#C6C7C6" />
  <SolidColorBrush x:Key="Ŭ"
                   SolidColorBrush.Color="#C2E0FF" />
  <SolidColorBrush x:Key="ŭ"
                   SolidColorBrush.Color="#3399FF" />
  <SolidColorBrush x:Key="Ů"
                   SolidColorBrush.Color="#E6F0FA" />
  <SolidColorBrush x:Key="ů"
                   SolidColorBrush.Color="#99CCFF" />
  <SolidColorBrush x:Key="Ű"
                   SolidColorBrush.Color="#3399FF" />
  <SolidColorBrush x:Key="ű"
                   SolidColorBrush.Color="#808080" />
  <SolidColorBrush x:Key="Ų"
                   SolidColorBrush.Color="#FDFDFD" />
  <SolidColorBrush x:Key="ų"
                   SolidColorBrush.Color="#E6F0FA" />
  <LinearGradientBrush x:Key="Ŵ"
                       LinearGradientBrush.StartPoint="0,0"
                       LinearGradientBrush.EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FFFFFF"
                    Offset="0" />
      <GradientStop Color="#FFFBFF"
                    Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ŵ"
                       LinearGradientBrush.StartPoint="0,0"
                       LinearGradientBrush.EndPoint="688,0"
                       GradientBrush.MappingMode="Absolute">
    <GradientBrush.GradientStops>
      <GradientStop Color="#F4F4F4"
                    Offset="0" />
      <GradientStop Color="#FDFDFD"
                    Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="Ŷ"
                       LinearGradientBrush.StartPoint="0,0"
                       LinearGradientBrush.EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FFFFFF"
                    Offset="0" />
      <GradientStop Color="#FFFBFF"
                    Offset="0.5" />
      <GradientStop Color="#F7F7F7"
                    Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ŷ"
                       LinearGradientBrush.StartPoint="0,0"
                       LinearGradientBrush.EndPoint="1,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FFFFFF"
                    Offset="0" />
      <GradientStop Color="#FFFBFF"
                    Offset="0.5" />
      <GradientStop Color="#F7F7F7"
                    Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="Ÿ"
                   SolidColorBrush.Color="#C6C3C6" />
  <LinearGradientBrush x:Key="Ź"
                       LinearGradientBrush.StartPoint="0,0"
                       LinearGradientBrush.EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#ECECEC"
                    Offset="0" />
      <GradientStop Color="#DDDDDD"
                    Offset="0.5" />
      <GradientStop Color="#A0A0A0"
                    Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ź"
                       LinearGradientBrush.StartPoint="0,0"
                       LinearGradientBrush.EndPoint="1,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="#ECECEC"
                    Offset="0" />
      <GradientStop Color="#DDDDDD"
                    Offset="0.5" />
      <GradientStop Color="#A0A0A0"
                    Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <Geometry x:Key="Ż">
    M 0,2.5 L 2.5,5 L 7,0.5
  </Geometry>
  <Style x:Key="ż"
         TargetType="{x:Type Border}">
    <Style.Triggers>
      <DataTrigger DataTrigger.Binding="{Binding Source={x:Static SystemParameters.HighContrast}}"
                   DataTrigger.Value="true">
        <Setter Setter.Property="Border.CornerRadius"
                Setter.Value="0,0,0,0" />
      </DataTrigger>
    </Style.Triggers>
    <Setter Setter.Property="Margin"
            Setter.Value="0,0,11,0" />
    <Setter Setter.Property="Border.CornerRadius"
            Setter.Value="3,3,3,3" />
  </Style>
  <Style x:Key="{x:Static ToolBar.SeparatorStyleKey}"
         TargetType="{x:Type Separator}">
    <Setter Setter.Property="Control.Background"
            Setter.Value="{StaticResource ū}" />
    <Setter Setter.Property="FrameworkElement.MinWidth"
            Setter.Value="1" />
    <Setter Setter.Property="FrameworkElement.MinHeight"
            Setter.Value="1" />
    <Setter Setter.Property="Margin"
            Setter.Value="2,2,2,2" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Separator}">
          <Border Border.Background="{TemplateBinding Control.Background}"
                  Border.BorderBrush="{TemplateBinding Control.BorderBrush}"
                  Border.BorderThickness="{TemplateBinding Control.BorderThickness}"
                  SnapsToDevicePixels="True" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Static ToolBar.ButtonStyleKey}"
         TargetType="{x:Type Button}">
    <Setter Setter.Property="Control.Foreground"
            Setter.Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Setter.Property="Control.Padding"
            Setter.Value="2" />
    <Setter Setter.Property="Control.BorderThickness"
            Setter.Value="1" />
    <Setter Setter.Property="Control.Background"
            Setter.Value="#00FFFFFF" />
    <Setter Setter.Property="Control.BorderBrush"
            Setter.Value="#00FFFFFF" />
    <Setter Setter.Property="FrameworkElement.HorizontalAlignment"
            Setter.Value="Center" />
    <Setter Setter.Property="FrameworkElement.VerticalAlignment"
            Setter.Value="Center" />
    <Setter Setter.Property="Control.HorizontalContentAlignment"
            Setter.Value="Center" />
    <Setter Setter.Property="Control.VerticalContentAlignment"
            Setter.Value="Center" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Border Name="Bd"
                  Border.Background="{TemplateBinding Control.Background}"
                  Border.BorderBrush="{TemplateBinding Control.BorderBrush}"
                  Border.BorderThickness="{TemplateBinding Control.BorderThickness}"
                  Border.Padding="{TemplateBinding Control.Padding}"
                  SnapsToDevicePixels="True">
            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="IsMouseOver"
                     Trigger.Value="True">
              <Setter Setter.TargetName="Bd"
                      Setter.Value="{StaticResource ŭ}"
                      Setter.Property="Border.BorderBrush" />
              <Setter Setter.TargetName="Bd"
                      Setter.Value="{StaticResource Ŭ}"
                      Setter.Property="Border.Background" />
            </Trigger>
            <Trigger Trigger.Property="IsKeyboardFocused"
                     Trigger.Value="True">
              <Setter Setter.TargetName="Bd"
                      Setter.Value="{StaticResource ŭ}"
                      Setter.Property="Border.BorderBrush" />
              <Setter Setter.TargetName="Bd"
                      Setter.Value="{StaticResource Ŭ}"
                      Setter.Property="Border.Background" />
            </Trigger>
            <Trigger Trigger.Property="ButtonBase.IsPressed"
                     Trigger.Value="True">
              <Setter Setter.TargetName="Bd"
                      Setter.Value="{StaticResource Ű}"
                      Setter.Property="Border.BorderBrush" />
              <Setter Setter.TargetName="Bd"
                      Setter.Value="{StaticResource ů}"
                      Setter.Property="Border.Background" />
            </Trigger>
            <Trigger Trigger.Property="IsEnabled"
                     Trigger.Value="False">
              <Setter Setter.Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"
                      Setter.Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Static ToolBar.ToggleButtonStyleKey}"
         TargetType="{x:Type ToggleButton}">
    <Setter Setter.Property="Control.Foreground"
            Setter.Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Setter.Property="Control.Padding"
            Setter.Value="2" />
    <Setter Setter.Property="Control.BorderThickness"
            Setter.Value="1" />
    <Setter Setter.Property="Control.Background"
            Setter.Value="#00FFFFFF" />
    <Setter Setter.Property="Control.BorderBrush"
            Setter.Value="#00FFFFFF" />
    <Setter Setter.Property="FrameworkElement.HorizontalAlignment"
            Setter.Value="Center" />
    <Setter Setter.Property="FrameworkElement.VerticalAlignment"
            Setter.Value="Center" />
    <Setter Setter.Property="Control.HorizontalContentAlignment"
            Setter.Value="Center" />
    <Setter Setter.Property="Control.VerticalContentAlignment"
            Setter.Value="Center" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Border.Background="{TemplateBinding Control.Background}"
                  Border.BorderBrush="{TemplateBinding Control.BorderBrush}"
                  Border.BorderThickness="{TemplateBinding Control.BorderThickness}"
                  Border.Padding="{TemplateBinding Control.Padding}"
                  SnapsToDevicePixels="True">
            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="ToggleButton.IsChecked"
                     Trigger.Value="true">
              <Setter Setter.Value="{StaticResource ŭ}"
                      Setter.Property="Control.BorderBrush" />
              <Setter Setter.Value="{StaticResource Ů}"
                      Setter.Property="Control.Background" />
            </Trigger>
            <Trigger Trigger.Property="IsMouseOver"
                     Trigger.Value="True">
              <Setter Setter.Value="{StaticResource ŭ}"
                      Setter.Property="Control.BorderBrush" />
              <Setter Setter.Value="{StaticResource Ŭ}"
                      Setter.Property="Control.Background" />
            </Trigger>
            <Trigger Trigger.Property="IsKeyboardFocused"
                     Trigger.Value="True">
              <Setter Setter.Value="{StaticResource ŭ}"
                      Setter.Property="Control.BorderBrush" />
              <Setter Setter.Value="{StaticResource Ŭ}"
                      Setter.Property="Control.Background" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Condition.Property="IsMouseOver"
                           Condition.Value="True" />
                <Condition Condition.Property="ToggleButton.IsChecked"
                           Condition.Value="true" />
              </MultiTrigger.Conditions>
              <Setter Setter.Value="{StaticResource Ű}"
                      Setter.Property="Control.BorderBrush" />
              <Setter Setter.Value="{StaticResource ů}"
                      Setter.Property="Control.Background" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Condition.Property="IsKeyboardFocused"
                           Condition.Value="True" />
                <Condition Condition.Property="ToggleButton.IsChecked"
                           Condition.Value="true" />
              </MultiTrigger.Conditions>
              <Setter Setter.Value="{StaticResource Ű}"
                      Setter.Property="Control.BorderBrush" />
              <Setter Setter.Value="{StaticResource ů}"
                      Setter.Property="Control.Background" />
            </MultiTrigger>
            <Trigger Trigger.Property="ButtonBase.IsPressed"
                     Trigger.Value="True">
              <Setter Setter.Value="{StaticResource Ű}"
                      Setter.Property="Control.BorderBrush" />
              <Setter Setter.Value="{StaticResource ů}"
                      Setter.Property="Control.Background" />
            </Trigger>
            <Trigger Trigger.Property="IsEnabled"
                     Trigger.Value="False">
              <Setter Setter.Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"
                      Setter.Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Static ToolBar.CheckBoxStyleKey}"
         BasedOn="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}"
         TargetType="{x:Type CheckBox}" />
  <Style x:Key="{x:Static ToolBar.RadioButtonStyleKey}"
         BasedOn="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}"
         TargetType="{x:Type RadioButton}" />
  <Style x:Key="Ž"
         TargetType="{x:Type ToggleButton}">
    <Setter Setter.Property="FrameworkElement.MinWidth"
            Setter.Value="0" />
    <Setter Setter.Property="FrameworkElement.MinHeight"
            Setter.Value="0" />
    <Setter Setter.Property="FrameworkElement.Width"
            Setter.Value="Auto" />
    <Setter Setter.Property="Control.Background"
            Setter.Value="#00FFFFFF" />
    <Setter Setter.Property="Focusable"
            Setter.Value="False" />
    <Setter Setter.Property="ButtonBase.ClickMode"
            Setter.Value="Press" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Grid Panel.Background="#00FFFFFF">
            <Grid.ColumnDefinitions>
              <ColumnDefinition ColumnDefinition.Width="*" />
              <ColumnDefinition ColumnDefinition.Width="Auto"
                                DefinitionBase.SharedSizeGroup="ComboBoxButton" />
            </Grid.ColumnDefinitions>
            <Border x:Name="Chrome"
                    Grid.Column="1"
                    Width="13"
                    Border.Background="{TemplateBinding Control.Background}"
                    Border.BorderBrush="{TemplateBinding Control.BorderBrush}"
                    Border.BorderThickness="{TemplateBinding Control.BorderThickness}"
                    SnapsToDevicePixels="True">
              <Path x:Name="ArrowDownPath"
                    Path.Data="M2.5,0L8.5,0 5.5,3z"
                    Shape.Fill="#FF000000"
                    VerticalAlignment="Center" />
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="IsEnabled"
                     Trigger.Value="False">
              <Setter Setter.TargetName="Chrome"
                      Setter.Value="{x:Null}"
                      Setter.Property="Border.BorderBrush" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Condition.Property="IsMouseOver"
                           Condition.Value="True" />
                <Condition Condition.Property="ToggleButton.IsChecked"
                           Condition.Value="false" />
              </MultiTrigger.Conditions>
              <Setter Setter.TargetName="Chrome"
                      Setter.Value="{StaticResource Ŭ}"
                      Setter.Property="Border.Background" />
            </MultiTrigger>
            <Trigger Trigger.Property="ToggleButton.IsChecked"
                     Trigger.Value="true">
              <Setter Setter.TargetName="Chrome"
                      Setter.Value="{StaticResource Ű}"
                      Setter.Property="Border.BorderBrush" />
            </Trigger>
            <Trigger Trigger.Property="ButtonBase.IsPressed"
                     Trigger.Value="True">
              <Setter Setter.TargetName="Chrome"
                      Setter.Value="{StaticResource ů}"
                      Setter.Property="Border.Background" />
            </Trigger>
            <Trigger Trigger.Property="IsEnabled"
                     Trigger.Value="False">
              <Setter Setter.TargetName="ArrowDownPath"
                      Setter.Value="{StaticResource Ū}"
                      Setter.Property="Shape.Fill" />
            </Trigger>
            <!--<MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Condition.Binding="{Binding Path=(base:AccessibilitySwitches.UseNetFx47CompatibleAccessibilityFeatures)}"
                           Condition.Value="false" />
                <Condition Condition.Binding="{Binding Path=(SystemParameters.HighContrast)}"
                           Condition.Value="true" />
                <Condition Condition.Binding="{Binding Path=IsEnabled,RelativeSource={x:Static RelativeSource.Self}}"
                           Condition.Value="true" />
              </MultiDataTrigger.Conditions>
              <Setter Setter.TargetName="ArrowDownPath"
                      Setter.Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                      Setter.Property="Shape.Fill" />
              <Setter Setter.TargetName="Chrome"
                      Setter.Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                      Setter.Property="Border.BorderBrush" />
            </MultiDataTrigger>-->
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Static ToolBar.ComboBoxStyleKey}"
         TargetType="{x:Type ComboBox}">
    <Setter Setter.Property="FrameworkElement.FocusVisualStyle"
            Setter.Value="{x:Null}" />
    <Setter Setter.Property="Control.Foreground"
            Setter.Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
    <Setter Setter.Property="Control.Background"
            Setter.Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
    <Setter Setter.Property="Control.BorderBrush"
            Setter.Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
    <Setter Setter.Property="Control.BorderThickness"
            Setter.Value="1" />
    <Setter Setter.Property="Margin"
            Setter.Value="1,0" />
    <Setter Setter.Property="Control.Padding"
            Setter.Value="0" />
    <Setter Setter.Property="ScrollViewer.HorizontalScrollBarVisibility"
            Setter.Value="Auto" />
    <Setter Setter.Property="ScrollViewer.VerticalScrollBarVisibility"
            Setter.Value="Auto" />
    <Setter Setter.Property="ScrollViewer.CanContentScroll"
            Setter.Value="True" />
    <Setter Setter.Property="ScrollViewer.PanningMode"
            Setter.Value="Both" />
    <Setter Setter.Property="Stylus.IsFlicksEnabled"
            Setter.Value="False" />
    <Setter Setter.Property="FrameworkElement.HorizontalAlignment"
            Setter.Value="Center" />
    <Setter Setter.Property="FrameworkElement.VerticalAlignment"
            Setter.Value="Center" />
    <Setter Setter.Property="FrameworkElement.MinHeight"
            Setter.Value="18" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ComboBox}">
          <Grid SnapsToDevicePixels="True">
            <Grid Grid.IsSharedSizeScope="True">
              <Grid.ColumnDefinitions>
                <ColumnDefinition ColumnDefinition.Width="*" />
                <ColumnDefinition ColumnDefinition.Width="Auto"
                                  DefinitionBase.SharedSizeGroup="ComboBoxButton" />
              </Grid.ColumnDefinitions>
              <Border Name="Background"
                      Border.Background="{TemplateBinding Control.Background}" />
              <Border Name="SelectedContentBorder"
                      Margin="2,2,1,2">
                <ContentPresenter Name="ContentSite"
                                  Content="{TemplateBinding ComboBox.SelectionBoxItem}"
                                  ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                                  ContentTemplateSelector="{TemplateBinding ItemsControl.ItemTemplateSelector}"
                                  Margin="{TemplateBinding Control.Padding}"
                                  VerticalAlignment="Center"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
              </Border>
              <Border Name="Border"
                      Grid.ColumnSpan="2"
                      Border.BorderThickness="{TemplateBinding Control.BorderThickness}"
                      Border.BorderBrush="{TemplateBinding Control.BorderBrush}" />
              <ToggleButton x:Name="DropDownButton"
                            Control.BorderBrush="#FFFFFFFF"
                            Control.BorderThickness="1"
                            Grid.ColumnSpan="2"
                            Style="{StaticResource Ž}"
                            ToggleButton.IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" />
              <TextBox x:Name="PART_EditableTextBox"
                       Control.Padding="{TemplateBinding Control.Padding}"
                       Margin="1,1,0,1"
                       MinHeight="18"
                       Style="{StaticResource à}"
                       Visibility="Collapsed"
                       VerticalAlignment="Center"
                       TextBoxBase.IsReadOnly="{Binding Path=IsReadOnly,RelativeSource={RelativeSource TemplatedParent}}" />
            </Grid>
            <Popup Name="PART_Popup"
                   Popup.AllowsTransparency="True"
                   Popup.Placement="Bottom"
                   Focusable="False"
                   Popup.PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                   Popup.IsOpen="{Binding Path=IsDropDownOpen,RelativeSource={RelativeSource TemplatedParent}}">
              <theme:SystemDropShadowChrome x:Name="Shdw"
                                            Color="Transparent"
                                            MinWidth="{TemplateBinding ActualWidth}"
                                            MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}"
                                            >
                <Border x:Name="DropDownBorder"
                        Border.Background="{TemplateBinding Control.Background}"
                        Border.BorderThickness="1"
                        Border.BorderBrush="{StaticResource ű}">
                  <ScrollViewer Name="DropDownScrollViewer">
                    <Grid RenderOptions.ClearTypeHint="Enabled">
                      <Canvas Height="0"
                              Width="0"
                              HorizontalAlignment="Left"
                              VerticalAlignment="Top">
                        <Rectangle Name="OpaqueRect"
                                   Height="{Binding ElementName=DropDownBorder,Path=ActualHeight}"
                                   Width="{Binding ElementName=DropDownBorder,Path=ActualWidth}"
                                   Shape.Fill="{Binding ElementName=DropDownBorder,Path=Background}" />
                      </Canvas>
                      <ItemsPresenter Name="ItemsPresenter"
                                      KeyboardNavigation.DirectionalNavigation="Contained" />
                    </Grid>
                  </ScrollViewer>
                </Border>
              </theme:SystemDropShadowChrome>
            </Popup>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="IsEnabled"
                     Trigger.Value="False">
              <Setter Setter.Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"
                      Setter.Property="Control.Foreground" />
              <Setter Setter.TargetName="Background"
                      Setter.Value="{StaticResource ũ}"
                      Setter.Property="Border.Background" />
              <Setter Setter.TargetName="Background"
                      Setter.Property="Grid.ColumnSpan"
                      Setter.Value="2" />
              <Setter Setter.TargetName="Border"
                      Setter.Value="{StaticResource Ū}"
                      Setter.Property="Border.BorderBrush" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Condition.Property="IsKeyboardFocusWithin"
                           Condition.Value="True" />
                <Condition Condition.Property="ComboBox.IsDropDownOpen"
                           Condition.Value="False" />
                <Condition Condition.Property="ComboBox.IsEditable"
                           Condition.Value="False" />
              </MultiTrigger.Conditions>
              <Setter Setter.TargetName="SelectedContentBorder"
                      Setter.Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                      Setter.Property="Border.Background" />
            </MultiTrigger>
            <Trigger Trigger.Property="ComboBox.IsEditable"
                     Trigger.Value="True">
              <Setter Setter.TargetName="DropDownButton"
                      Setter.Value="{x:Null}"
                      Setter.Property="Control.Background" />
              <Setter Setter.TargetName="ContentSite"
                      Setter.Property="Visibility"
                      Setter.Value="Collapsed" />
              <Setter Setter.TargetName="PART_EditableTextBox"
                      Setter.Property="Visibility"
                      Setter.Value="Visible" />
            </Trigger>
            <Trigger Trigger.Property="IsMouseOver"
                     Trigger.Value="True">
              <Setter Setter.TargetName="DropDownButton"
                      Setter.Value="{StaticResource ŭ}"
                      Setter.Property="Control.BorderBrush" />
              <Setter Setter.TargetName="DropDownButton"
                      Setter.Value="{StaticResource Ŭ}"
                      Setter.Property="Control.Background" />
              <Setter Setter.TargetName="Border"
                      Setter.Value="{StaticResource ŭ}"
                      Setter.Property="Border.BorderBrush" />
            </Trigger>
            <Trigger Trigger.Property="IsKeyboardFocusWithin"
                     Trigger.Value="True">
              <Setter Setter.TargetName="DropDownButton"
                      Setter.Value="{StaticResource ŭ}"
                      Setter.Property="Control.BorderBrush" />
              <Setter Setter.TargetName="DropDownButton"
                      Setter.Value="{StaticResource Ŭ}"
                      Setter.Property="Control.Background" />
              <Setter Setter.TargetName="Border"
                      Setter.Value="{StaticResource ŭ}"
                      Setter.Property="Border.BorderBrush" />
            </Trigger>
            <Trigger Trigger.SourceName="PART_Popup"
                     Trigger.Property="Popup.HasDropShadow"
                     Trigger.Value="True">
              <Setter Setter.TargetName="Shdw"
                      Setter.Property="Margin"
                      Setter.Value="0,0,5,5" />
              <Setter Setter.TargetName="Shdw"
                      Setter.Property="SnapsToDevicePixels"
                      Setter.Value="True" />
              <Setter Setter.TargetName="Shdw"
                      Setter.Property="theme:SystemDropShadowChrome.Color"
                      Setter.Value="#71000000" />
            </Trigger>
            <Trigger Trigger.Property="ItemsControl.HasItems"
                     Trigger.Value="False">
              <Setter Setter.TargetName="DropDownBorder"
                      Setter.Property="FrameworkElement.MinHeight"
                      Setter.Value="95" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Condition.Property="ItemsControl.IsGrouping"
                           Condition.Value="True" />
                <Condition Condition.Property="VirtualizingPanel.IsVirtualizingWhenGrouping"
                           Condition.Value="False" />
              </MultiTrigger.Conditions>
              <Setter Setter.Property="ScrollViewer.CanContentScroll"
                      Setter.Value="False" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Condition.Property="IsKeyboardFocusWithin"
                           Condition.Value="True" />
                <Condition Condition.Property="ComboBox.IsDropDownOpen"
                           Condition.Value="False" />
                <Condition Condition.Property="ComboBox.IsEditable"
                           Condition.Value="False" />
              </MultiTrigger.Conditions>
              <Setter Setter.Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"
                      Setter.Property="Control.Foreground" />
            </MultiTrigger>
            <Trigger Trigger.Property="ComboBox.IsEditable"
                     Trigger.Value="True">
              <Setter Setter.Property="Control.Padding"
                      Setter.Value="2" />
              <Setter Setter.Property="Control.IsTabStop"
                      Setter.Value="False" />
            </Trigger>
            <Trigger Trigger.SourceName="DropDownScrollViewer"
                     Trigger.Property="ScrollViewer.CanContentScroll"
                     Trigger.Value="False">
              <Setter Setter.TargetName="OpaqueRect"
                      Setter.Value="{Binding ElementName=DropDownScrollViewer,Path=VerticalOffset}"
                      Setter.Property="Canvas.Top" />
              <Setter Setter.TargetName="OpaqueRect"
                      Setter.Value="{Binding ElementName=DropDownScrollViewer,Path=HorizontalOffset}"
                      Setter.Property="Canvas.Left" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Static ToolBar.TextBoxStyleKey}"
         TargetType="{x:Type TextBox}">
    <Setter Setter.Property="FrameworkElement.FocusVisualStyle"
            Setter.Value="{x:Null}" />
    <Setter Setter.Property="Control.Foreground"
            Setter.Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
    <Setter Setter.Property="Control.Background"
            Setter.Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
    <Setter Setter.Property="Control.BorderBrush"
            Setter.Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
    <Setter Setter.Property="Control.BorderThickness"
            Setter.Value="1" />
    <Setter Setter.Property="Margin"
            Setter.Value="1,0" />
    <Setter Setter.Property="Control.Padding"
            Setter.Value="2" />
    <Setter Setter.Property="FrameworkElement.HorizontalAlignment"
            Setter.Value="Center" />
    <Setter Setter.Property="FrameworkElement.VerticalAlignment"
            Setter.Value="Center" />
    <Setter Setter.Property="FrameworkElement.MinHeight"
            Setter.Value="18" />
    <Setter Setter.Property="ScrollViewer.PanningMode"
            Setter.Value="VerticalFirst" />
    <Setter Setter.Property="Stylus.IsFlicksEnabled"
            Setter.Value="False" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TextBox}">
          <Border Name="Border"
                  Border.Background="{TemplateBinding Control.Background}"
                  Border.BorderThickness="{TemplateBinding Control.BorderThickness}"
                  Border.BorderBrush="{TemplateBinding Control.BorderBrush}"
                  SnapsToDevicePixels="True">
            <ScrollViewer x:Name="PART_ContentHost"
                          VerticalAlignment="Center"
                          MinHeight="18" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="IsEnabled"
                     Trigger.Value="False">
              <Setter Setter.Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"
                      Setter.Property="Control.Foreground" />
              <Setter Setter.TargetName="Border"
                      Setter.Value="{StaticResource ũ}"
                      Setter.Property="Border.Background" />
              <Setter Setter.TargetName="Border"
                      Setter.Value="{StaticResource Ū}"
                      Setter.Property="Border.BorderBrush" />
            </Trigger>
            <Trigger Trigger.Property="IsMouseOver"
                     Trigger.Value="True">
              <Setter Setter.TargetName="Border"
                      Setter.Value="{StaticResource ŭ}"
                      Setter.Property="Border.BorderBrush" />
            </Trigger>
            <Trigger Trigger.Property="IsKeyboardFocusWithin"
                     Trigger.Value="True">
              <Setter Setter.TargetName="Border"
                      Setter.Value="{StaticResource ŭ}"
                      Setter.Property="Border.BorderBrush" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Static ToolBar.MenuStyleKey}"
         TargetType="{x:Type Menu}">
    <Setter Setter.Property="Control.FontFamily"
            Setter.Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}" />
    <Setter Setter.Property="Control.FontSize"
            Setter.Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}" />
    <Setter Setter.Property="Control.FontStyle"
            Setter.Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}" />
    <Setter Setter.Property="Control.FontWeight"
            Setter.Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}" />
    <Setter Setter.Property="Control.Foreground"
            Setter.Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
    <Setter Setter.Property="Control.VerticalContentAlignment"
            Setter.Value="Center" />
    <Setter Setter.Property="KeyboardNavigation.TabNavigation"
            Setter.Value="Continue" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Menu}">
          <Border Border.Background="{TemplateBinding Control.Background}"
                  Border.BorderBrush="{TemplateBinding Control.BorderBrush}"
                  Border.BorderThickness="{TemplateBinding Control.BorderThickness}"
                  Border.Padding="{TemplateBinding Control.Padding}"
                  SnapsToDevicePixels="True">
            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Resources>
      <ResourceDictionary>
        <Style TargetType="{x:Type Separator}">
          <Setter Setter.Property="FrameworkElement.OverridesDefaultStyle"
                  Setter.Value="True" />
          <Setter Setter.Property="Control.Background"
                  Setter.Value="{StaticResource ū}" />
          <Setter Setter.Property="FrameworkElement.Height"
                  Setter.Value="1" />
          <Setter Setter.Property="Margin"
                  Setter.Value="0,1,0,0" />
          <Setter Setter.Property="Control.Template">
            <Setter.Value>
              <ControlTemplate TargetType="{x:Type Separator}">
                <Grid SnapsToDevicePixels="True">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition ColumnDefinition.MinWidth="24"
                                      ColumnDefinition.Width="Auto"
                                      DefinitionBase.SharedSizeGroup="MenuItemIconColumnGroup" />
                    <ColumnDefinition ColumnDefinition.Width="*" />
                  </Grid.ColumnDefinitions>
                  <Border Grid.Column="1"
                          Margin="8,0,0,0"
                          Border.Background="{TemplateBinding Control.Background}"
                          Border.BorderBrush="{TemplateBinding Control.BorderBrush}"
                          Border.BorderThickness="{TemplateBinding Control.BorderThickness}" />
                </Grid>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>
        <Style TargetType="{x:Type MenuItem}">
          <Setter Setter.Property="FrameworkElement.OverridesDefaultStyle"
                  Setter.Value="True" />
          <Setter Setter.Property="Control.HorizontalContentAlignment"
                  Setter.Value="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
          <Setter Setter.Property="Control.VerticalContentAlignment"
                  Setter.Value="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
          <Setter Setter.Property="Control.Background"
                  Setter.Value="#00FFFFFF" />
          <Setter Setter.Property="Control.Foreground"
                  Setter.Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
          <Setter Setter.Property="Control.BorderThickness"
                  Setter.Value="1" />
          <Setter Setter.Property="Margin"
                  Setter.Value="0,1,0,0" />
          <Setter Setter.Property="Control.Padding"
                  Setter.Value="8,3,8,3" />
          <Setter Setter.Property="DockPanel.Dock"
                  Setter.Value="Top" />
          <Setter Setter.Property="ScrollViewer.PanningMode"
                  Setter.Value="Both" />
          <Setter Setter.Property="Stylus.IsFlicksEnabled"
                  Setter.Value="False" />
          <Setter Setter.Property="Control.Template">
            <Setter.Value>
              <ControlTemplate TargetType="{x:Type MenuItem}">
                <Grid Panel.Background="#00FFFFFF"
                      SnapsToDevicePixels="True">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition ColumnDefinition.MinWidth="24"
                                      ColumnDefinition.Width="Auto"
                                      DefinitionBase.SharedSizeGroup="MenuItemIconColumnGroup" />
                    <ColumnDefinition ColumnDefinition.Width="*" />
                    <ColumnDefinition ColumnDefinition.Width="Auto"
                                      DefinitionBase.SharedSizeGroup="MenuItemIGTColumnGroup" />
                    <ColumnDefinition ColumnDefinition.Width="14" />
                  </Grid.ColumnDefinitions>
                  <Border Name="Border"
                          Border.Background="{TemplateBinding Control.Background}"
                          Border.BorderThickness="{TemplateBinding Control.BorderThickness}"
                          Border.BorderBrush="{TemplateBinding Control.BorderBrush}"
                          Grid.ColumnSpan="4"
                          Margin="1,0" />
                  <ContentPresenter Name="Icon"
                                    Margin="0"
                                    VerticalAlignment="Center"
                                    ContentSource="Icon"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                  <Border Name="GlyphPanel"
                          Margin="0,1"
                          Width="20"
                          Height="20"
                          Visibility="Hidden"
                          Border.BorderBrush="{StaticResource ŭ}"
                          Border.Background="{StaticResource ų}"
                          Border.BorderThickness="1">
                    <Path VerticalAlignment="Center"
                          HorizontalAlignment="Center"
                          FlowDirection="LeftToRight"
                          Shape.Stroke="{TemplateBinding Control.Foreground}"
                          Shape.StrokeThickness="1.2"
                          Path.Data="{StaticResource Ż}" />
                  </Border>
                  <ContentPresenter Grid.Column="1"
                                    ContentSource="Header"
                                    Margin="{TemplateBinding Control.Padding}"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                  <TextBlock Grid.Column="2"
                             TextBlock.Text="{TemplateBinding MenuItem.InputGestureText}"
                             Margin="4,3,2,3"
                             HorizontalAlignment="Right" />
                </Grid>
                <ControlTemplate.Triggers>
                  <Trigger Trigger.Value="{x:Null}"
                           Trigger.Property="MenuItem.Icon">
                    <Setter Setter.TargetName="Icon"
                            Setter.Property="Visibility"
                            Setter.Value="Collapsed" />
                  </Trigger>
                  <Trigger Trigger.Property="MenuItem.IsChecked"
                           Trigger.Value="True">
                    <Setter Setter.TargetName="GlyphPanel"
                            Setter.Property="Visibility"
                            Setter.Value="Visible" />
                    <Setter Setter.TargetName="Icon"
                            Setter.Property="Visibility"
                            Setter.Value="Collapsed" />
                  </Trigger>
                  <Trigger Trigger.Property="MenuItem.IsHighlighted"
                           Trigger.Value="True">
                    <Setter Setter.TargetName="Border"
                            Setter.Value="{StaticResource ŭ}"
                            Setter.Property="Border.BorderBrush" />
                    <Setter Setter.TargetName="Border"
                            Setter.Value="{StaticResource Ŭ}"
                            Setter.Property="Border.Background" />
                    <Setter Setter.TargetName="GlyphPanel"
                            Setter.Value="{StaticResource Ű}"
                            Setter.Property="Border.BorderBrush" />
                    <Setter Setter.TargetName="GlyphPanel"
                            Setter.Value="{StaticResource Ũ}"
                            Setter.Property="Border.Background" />
                  </Trigger>
                  <Trigger Trigger.Property="IsEnabled"
                           Trigger.Value="False">
                    <Setter Setter.Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"
                            Setter.Property="Control.Foreground" />
                  </Trigger>
                </ControlTemplate.Triggers>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
          <Style.Triggers>
            <Trigger Trigger.Property="MenuItem.Role"
                     Trigger.Value="TopLevelHeader">
              <Setter Setter.Property="Control.Padding"
                      Setter.Value="6,2,7,2" />
              <Setter Setter.Property="Grid.IsSharedSizeScope"
                      Setter.Value="True" />
              <Setter Setter.Property="Control.Template">
                <Setter.Value>
                  <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border Name="Border"
                            Border.Background="{TemplateBinding Control.Background}"
                            Border.BorderBrush="{TemplateBinding Control.BorderBrush}"
                            Border.BorderThickness="1"
                            SnapsToDevicePixels="True">
                      <DockPanel Name="Header">
                        <ContentPresenter Name="Icon"
                                          Margin="4,0,6,0"
                                          VerticalAlignment="Center"
                                          ContentSource="Icon"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Path x:Name="GlyphPanel"
                              Margin="4,0,6,0"
                              Visibility="Collapsed"
                              VerticalAlignment="Center"
                              FlowDirection="LeftToRight"
                              Shape.Stroke="{TemplateBinding Control.Foreground}"
                              Shape.StrokeThickness="1.2"
                              Path.Data="{StaticResource Ż}" />
                        <ContentPresenter ContentSource="Header"
                                          Margin="{TemplateBinding Control.Padding}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Popup x:Name="PART_Popup"
                               Popup.Placement="Bottom"
                               Popup.HorizontalOffset="-1"
                               Focusable="False"
                               Popup.PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                               Popup.AllowsTransparency="True"
                               Popup.IsOpen="{Binding Path=IsSubmenuOpen,RelativeSource={RelativeSource TemplatedParent}}">
                          <theme:SystemDropShadowChrome x:Name="Shdw"
                                                        Color="Transparent"
                                                        >
                            <Border Name="SubMenuBorder"
                                    Border.Background="{StaticResource Ų}"
                                    Border.BorderBrush="{StaticResource ű}"
                                    Border.BorderThickness="1">
                              <Grid>
                                <Rectangle Shape.Fill="{StaticResource Ų}"
                                           Margin="0,-1,0,0"
                                           VerticalAlignment="Top"
                                           HorizontalAlignment="Left"
                                           Height="1"
                                           Width="{Binding ElementName=Header,Path=ActualWidth}" />
                                <ScrollViewer Name="SubMenuScrollViewer"
                                              Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement},ResourceId=MenuScrollViewer}}">
                                  <Grid RenderOptions.ClearTypeHint="Enabled"
                                        Grid.IsSharedSizeScope="True">
                                    <Grid.ColumnDefinitions>
                                      <ColumnDefinition ColumnDefinition.MinWidth="24"
                                                        ColumnDefinition.Width="Auto"
                                                        DefinitionBase.SharedSizeGroup="MenuItemIconColumnGroup" />
                                      <ColumnDefinition ColumnDefinition.Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Canvas Height="0"
                                            Width="0"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Top">
                                      <Rectangle Name="OpaqueRect"
                                                 Height="{Binding ElementName=SubMenuBorder,Path=ActualHeight}"
                                                 Width="{Binding ElementName=SubMenuBorder,Path=ActualWidth}"
                                                 Shape.Fill="{Binding ElementName=SubMenuBorder,Path=Background}" />
                                    </Canvas>
                                    <Rectangle Shape.Fill="{StaticResource ŷ}"
                                               Margin="0,1" />
                                    <ItemsPresenter Name="ItemsPresenter"
                                                    KeyboardNavigation.DirectionalNavigation="Cycle"
                                                    Grid.ColumnSpan="2"
                                                    KeyboardNavigation.TabNavigation="Cycle"
                                                    Margin="0,0,0,1"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                  </Grid>
                                </ScrollViewer>
                              </Grid>
                            </Border>
                          </theme:SystemDropShadowChrome>
                        </Popup>
                      </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                      <Trigger Trigger.Property="MenuItem.IsSuspendingPopupAnimation"
                               Trigger.Value="True">
                        <Setter Setter.TargetName="PART_Popup"
                                Setter.Property="Popup.PopupAnimation"
                                Setter.Value="None" />
                      </Trigger>
                      <Trigger Trigger.Value="{x:Null}"
                               Trigger.Property="MenuItem.Icon">
                        <Setter Setter.TargetName="Icon"
                                Setter.Property="Visibility"
                                Setter.Value="Collapsed" />
                      </Trigger>
                      <Trigger Trigger.Property="MenuItem.IsChecked"
                               Trigger.Value="True">
                        <Setter Setter.TargetName="GlyphPanel"
                                Setter.Property="Visibility"
                                Setter.Value="Visible" />
                        <Setter Setter.TargetName="Icon"
                                Setter.Property="Visibility"
                                Setter.Value="Collapsed" />
                      </Trigger>
                      <Trigger Trigger.Property="MenuItem.IsHighlighted"
                               Trigger.Value="True">
                        <Setter Setter.TargetName="Border"
                                Setter.Value="{StaticResource ŭ}"
                                Setter.Property="Border.BorderBrush" />
                        <Setter Setter.TargetName="Border"
                                Setter.Value="{StaticResource Ŭ}"
                                Setter.Property="Border.Background" />
                      </Trigger>
                      <Trigger Trigger.Property="MenuItem.IsSubmenuOpen"
                               Trigger.Value="True">
                        <Setter Setter.TargetName="Border"
                                Setter.Value="{StaticResource ű}"
                                Setter.Property="Border.BorderBrush" />
                        <Setter Setter.TargetName="Border"
                                Setter.Value="{StaticResource Ŵ}"
                                Setter.Property="Border.Background" />
                      </Trigger>
                      <Trigger Trigger.SourceName="PART_Popup"
                               Trigger.Property="Popup.HasDropShadow"
                               Trigger.Value="True">
                        <Setter Setter.TargetName="Shdw"
                                Setter.Property="Margin"
                                Setter.Value="0,0,5,5" />
                        <Setter Setter.TargetName="Shdw"
                                Setter.Property="SnapsToDevicePixels"
                                Setter.Value="True" />
                        <Setter Setter.TargetName="Shdw"
                                Setter.Property="theme:SystemDropShadowChrome.Color"
                                Setter.Value="#71000000" />
                      </Trigger>
                      <Trigger Trigger.Property="IsEnabled"
                               Trigger.Value="False">
                        <Setter Setter.Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"
                                Setter.Property="Control.Foreground" />
                      </Trigger>
                      <Trigger Trigger.SourceName="SubMenuScrollViewer"
                               Trigger.Property="ScrollViewer.CanContentScroll"
                               Trigger.Value="False">
                        <Setter Setter.TargetName="OpaqueRect"
                                Setter.Value="{Binding ElementName=SubMenuScrollViewer,Path=VerticalOffset}"
                                Setter.Property="Canvas.Top" />
                        <Setter Setter.TargetName="OpaqueRect"
                                Setter.Value="{Binding ElementName=SubMenuScrollViewer,Path=HorizontalOffset}"
                                Setter.Property="Canvas.Left" />
                      </Trigger>
                    </ControlTemplate.Triggers>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Trigger.Property="MenuItem.Role"
                     Trigger.Value="TopLevelItem">
              <Setter Setter.Property="Margin"
                      Setter.Value="0,1,0,1" />
              <Setter Setter.Property="Control.Padding"
                      Setter.Value="7,1,8,2" />
              <Setter Setter.Property="Control.Template">
                <Setter.Value>
                  <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border Name="Border"
                            Border.Background="{TemplateBinding Control.Background}"
                            Border.BorderBrush="{TemplateBinding Control.BorderBrush}"
                            Border.BorderThickness="1"
                            SnapsToDevicePixels="True">
                      <DockPanel>
                        <ContentPresenter Name="Icon"
                                          Margin="4,0,6,0"
                                          VerticalAlignment="Center"
                                          ContentSource="Icon"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Path x:Name="GlyphPanel"
                              Margin="4,0,6,0"
                              Visibility="Collapsed"
                              VerticalAlignment="Center"
                              FlowDirection="LeftToRight"
                              Shape.Stroke="{TemplateBinding Control.Foreground}"
                              Shape.StrokeThickness="1.2"
                              Path.Data="{StaticResource Ż}" />
                        <ContentPresenter ContentSource="Header"
                                          Margin="{TemplateBinding Control.Padding}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                      </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                      <Trigger Trigger.Value="{x:Null}"
                               Trigger.Property="MenuItem.Icon">
                        <Setter Setter.TargetName="Icon"
                                Setter.Property="Visibility"
                                Setter.Value="Collapsed" />
                      </Trigger>
                      <Trigger Trigger.Property="MenuItem.IsChecked"
                               Trigger.Value="True">
                        <Setter Setter.TargetName="GlyphPanel"
                                Setter.Property="Visibility"
                                Setter.Value="Visible" />
                        <Setter Setter.TargetName="Icon"
                                Setter.Property="Visibility"
                                Setter.Value="Collapsed" />
                      </Trigger>
                      <Trigger Trigger.Property="MenuItem.IsHighlighted"
                               Trigger.Value="True">
                        <Setter Setter.TargetName="Border"
                                Setter.Value="{StaticResource ŭ}"
                                Setter.Property="Border.BorderBrush" />
                        <Setter Setter.TargetName="Border"
                                Setter.Value="{StaticResource Ŭ}"
                                Setter.Property="Border.Background" />
                      </Trigger>
                      <Trigger Trigger.Property="IsEnabled"
                               Trigger.Value="False">
                        <Setter Setter.Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"
                                Setter.Property="Control.Foreground" />
                      </Trigger>
                    </ControlTemplate.Triggers>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Trigger.Property="MenuItem.Role"
                     Trigger.Value="SubmenuHeader">
              <Setter Setter.Property="DockPanel.Dock"
                      Setter.Value="Top" />
              <Setter Setter.Property="Control.Padding"
                      Setter.Value="8,3,8,3" />
              <Setter Setter.Property="Grid.IsSharedSizeScope"
                      Setter.Value="True" />
              <Setter Setter.Property="Control.Template">
                <Setter.Value>
                  <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Grid Panel.Background="#00FFFFFF"
                          SnapsToDevicePixels="True">
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition ColumnDefinition.MinWidth="24"
                                          ColumnDefinition.Width="Auto"
                                          DefinitionBase.SharedSizeGroup="MenuItemIconColumnGroup" />
                        <ColumnDefinition ColumnDefinition.Width="*" />
                        <ColumnDefinition ColumnDefinition.Width="Auto"
                                          DefinitionBase.SharedSizeGroup="MenuItemIGTColumnGroup" />
                        <ColumnDefinition ColumnDefinition.Width="14" />
                      </Grid.ColumnDefinitions>
                      <Border Name="Border"
                              Border.Background="{TemplateBinding Control.Background}"
                              Border.BorderThickness="{TemplateBinding Control.BorderThickness}"
                              Border.BorderBrush="{TemplateBinding Control.BorderBrush}"
                              Grid.ColumnSpan="4"
                              Margin="1,0" />
                      <ContentPresenter Name="Icon"
                                        Margin="3"
                                        VerticalAlignment="Center"
                                        ContentSource="Icon"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                      <Border Name="GlyphPanel"
                              Margin="0,1"
                              Width="20"
                              Height="20"
                              Visibility="Hidden"
                              Border.BorderBrush="{StaticResource ŭ}"
                              Border.Background="{StaticResource ų}"
                              Border.BorderThickness="1">
                        <Path VerticalAlignment="Center"
                              HorizontalAlignment="Center"
                              FlowDirection="LeftToRight"
                              Shape.Stroke="{TemplateBinding Control.Foreground}"
                              Shape.StrokeThickness="1.2"
                              Path.Data="{StaticResource Ż}" />
                      </Border>
                      <ContentPresenter Grid.Column="1"
                                        ContentSource="Header"
                                        Margin="{TemplateBinding Control.Padding}"
                                        RecognizesAccessKey="True"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                      <Path Grid.Column="3"
                            DockPanel.Dock="Right"
                            VerticalAlignment="Center"
                            Margin="4,0,6,0"
                            Shape.Fill="{TemplateBinding Control.Foreground}"
                            Path.Data="{StaticResource ğ}" />
                      <Popup x:Name="PART_Popup"
                             Popup.Placement="Right"
                             Focusable="False"
                             Popup.PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                             Popup.AllowsTransparency="True"
                             Popup.IsOpen="{Binding Path=IsSubmenuOpen,RelativeSource={RelativeSource TemplatedParent}}">
                        <theme:SystemDropShadowChrome x:Name="Shdw"
                                                      Color="Transparent"
                                                      >
                          <Border Name="SubMenuBorder"
                                  Border.Background="{StaticResource Ų}"
                                  Border.BorderBrush="{StaticResource ű}"
                                  Border.BorderThickness="1"
                                  Grid.IsSharedSizeScope="True">
                            <ScrollViewer Name="SubMenuScrollViewer"
                                          Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement},ResourceId=MenuScrollViewer}}">
                              <Grid RenderOptions.ClearTypeHint="Enabled">
                                <Grid.ColumnDefinitions>
                                  <ColumnDefinition ColumnDefinition.MinWidth="24"
                                                    ColumnDefinition.Width="Auto"
                                                    DefinitionBase.SharedSizeGroup="MenuItemIconColumnGroup" />
                                  <ColumnDefinition ColumnDefinition.Width="*" />
                                </Grid.ColumnDefinitions>
                                <Canvas Height="0"
                                        Width="0"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top">
                                  <Rectangle Name="OpaqueRect"
                                             Height="{Binding ElementName=SubMenuBorder,Path=ActualHeight}"
                                             Width="{Binding ElementName=SubMenuBorder,Path=ActualWidth}"
                                             Shape.Fill="{Binding ElementName=SubMenuBorder,Path=Background}" />
                                </Canvas>
                                <Rectangle Shape.Fill="{StaticResource ŷ}"
                                           Margin="0,1" />
                                <ItemsPresenter Name="ItemsPresenter"
                                                KeyboardNavigation.DirectionalNavigation="Cycle"
                                                Grid.ColumnSpan="2"
                                                KeyboardNavigation.TabNavigation="Cycle"
                                                Margin="0,0,0,1"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                              </Grid>
                            </ScrollViewer>
                          </Border>
                        </theme:SystemDropShadowChrome>
                      </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                      <Trigger Trigger.Property="MenuItem.IsSuspendingPopupAnimation"
                               Trigger.Value="True">
                        <Setter Setter.TargetName="PART_Popup"
                                Setter.Property="Popup.PopupAnimation"
                                Setter.Value="None" />
                      </Trigger>
                      <Trigger Trigger.Value="{x:Null}"
                               Trigger.Property="MenuItem.Icon">
                        <Setter Setter.TargetName="Icon"
                                Setter.Property="Visibility"
                                Setter.Value="Collapsed" />
                      </Trigger>
                      <Trigger Trigger.Property="MenuItem.IsChecked"
                               Trigger.Value="True">
                        <Setter Setter.TargetName="GlyphPanel"
                                Setter.Property="Visibility"
                                Setter.Value="Visible" />
                        <Setter Setter.TargetName="Icon"
                                Setter.Property="Visibility"
                                Setter.Value="Collapsed" />
                      </Trigger>
                      <Trigger Trigger.Property="MenuItem.IsHighlighted"
                               Trigger.Value="True">
                        <Setter Setter.TargetName="Border"
                                Setter.Value="{StaticResource ŭ}"
                                Setter.Property="Border.BorderBrush" />
                        <Setter Setter.TargetName="Border"
                                Setter.Value="{StaticResource Ŭ}"
                                Setter.Property="Border.Background" />
                        <Setter Setter.TargetName="GlyphPanel"
                                Setter.Value="{StaticResource Ű}"
                                Setter.Property="Border.BorderBrush" />
                        <Setter Setter.TargetName="GlyphPanel"
                                Setter.Value="{StaticResource Ũ}"
                                Setter.Property="Border.Background" />
                      </Trigger>
                      <Trigger Trigger.SourceName="PART_Popup"
                               Trigger.Property="Popup.HasDropShadow"
                               Trigger.Value="True">
                        <Setter Setter.TargetName="Shdw"
                                Setter.Property="Margin"
                                Setter.Value="0,0,5,5" />
                        <Setter Setter.TargetName="Shdw"
                                Setter.Property="SnapsToDevicePixels"
                                Setter.Value="True" />
                        <Setter Setter.TargetName="Shdw"
                                Setter.Property="theme:SystemDropShadowChrome.Color"
                                Setter.Value="#71000000" />
                      </Trigger>
                      <Trigger Trigger.Property="IsEnabled"
                               Trigger.Value="False">
                        <Setter Setter.Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"
                                Setter.Property="Control.Foreground" />
                      </Trigger>
                      <Trigger Trigger.SourceName="SubMenuScrollViewer"
                               Trigger.Property="ScrollViewer.CanContentScroll"
                               Trigger.Value="False">
                        <Setter Setter.TargetName="OpaqueRect"
                                Setter.Value="{Binding ElementName=SubMenuScrollViewer,Path=VerticalOffset}"
                                Setter.Property="Canvas.Top" />
                        <Setter Setter.TargetName="OpaqueRect"
                                Setter.Value="{Binding ElementName=SubMenuScrollViewer,Path=HorizontalOffset}"
                                Setter.Property="Canvas.Left" />
                      </Trigger>
                    </ControlTemplate.Triggers>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
            </Trigger>
          </Style.Triggers>
        </Style>
      </ResourceDictionary>
    </Style.Resources>
  </Style>
  <Style x:Key="ž"
         TargetType="{x:Type Thumb}">
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Border Border.Padding="{TemplateBinding Control.Padding}"
                  Border.Background="#00FFFFFF"
                  SnapsToDevicePixels="True">
            <Rectangle>
              <Shape.Fill>
                <DrawingBrush TileBrush.Viewbox="0,0,4,4"
                              TileBrush.Viewport="0,0,4,4"
                              TileBrush.TileMode="Tile"
                              TileBrush.ViewportUnits="Absolute"
                              TileBrush.ViewboxUnits="Absolute">
                  <DrawingBrush.Drawing>
                    <DrawingGroup>
                      <DrawingGroup.Children>
                        <GeometryDrawing GeometryDrawing.Brush="#FFFFFFFF"
                                         GeometryDrawing.Geometry="M1,1L1,3 3,3 3,1z" />
                        <GeometryDrawing GeometryDrawing.Brush="{StaticResource Ÿ}"
                                         GeometryDrawing.Geometry="M0,0L0,2 2,2 2,0z" />
                      </DrawingGroup.Children>
                    </DrawingGroup>
                  </DrawingBrush.Drawing>
                </DrawingBrush>
              </Shape.Fill>
            </Rectangle>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="IsMouseOver"
                     Trigger.Value="True">
              <Setter Setter.Property="FrameworkElement.Cursor"
                      Setter.Value="SizeAll" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ſ"
         TargetType="{x:Type ToggleButton}">
    <Style.Triggers>
      <DataTrigger DataTrigger.Binding="{Binding Source={x:Static SystemParameters.HighContrast}}"
                   DataTrigger.Value="true">
        <Setter Setter.Property="Control.Background"
                Setter.Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
      </DataTrigger>
    </Style.Triggers>
    <Setter Setter.Property="Control.Background"
            Setter.Value="{StaticResource Ź}" />
    <Setter Setter.Property="FrameworkElement.MinHeight"
            Setter.Value="0" />
    <Setter Setter.Property="FrameworkElement.MinWidth"
            Setter.Value="0" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Name="Bd"
                  Border.CornerRadius="0,3,3,0"
                  Border.Background="{TemplateBinding Control.Background}"
                  SnapsToDevicePixels="True">
            <Canvas Width="6"
                    Height="7"
                    Margin="7,2,2,2"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Bottom"
                    SnapsToDevicePixels="True">
              <Path Shape.Stroke="#FFFFFFFF"
                    Path.Data="M1,1.5L6,1.5" />
              <Path Shape.Stroke="{TemplateBinding Control.Foreground}"
                    Path.Data="M0,0.5L5,0.5" />
              <Path Shape.Fill="#FFFFFFFF"
                    Path.Data="M0.5,4L6.5,4 3.5,7z" />
              <Path Shape.Fill="{TemplateBinding Control.Foreground}"
                    Path.Data="M-0.5,3L5.5,3 2.5,6z" />
            </Canvas>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="IsMouseOver"
                     Trigger.Value="True">
              <Setter Setter.TargetName="Bd"
                      Setter.Value="{StaticResource Ŭ}"
                      Setter.Property="Border.Background" />
            </Trigger>
            <Trigger Trigger.Property="IsKeyboardFocused"
                     Trigger.Value="True">
              <Setter Setter.TargetName="Bd"
                      Setter.Value="{StaticResource Ŭ}"
                      Setter.Property="Border.Background" />
            </Trigger>
            <Trigger Trigger.Property="IsEnabled"
                     Trigger.Value="False">
              <Setter Setter.Value="{StaticResource Ÿ}"
                      Setter.Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ƀ"
         TargetType="{x:Type ToggleButton}">
    <Style.Triggers>
      <DataTrigger DataTrigger.Binding="{Binding Source={x:Static SystemParameters.HighContrast}}"
                   DataTrigger.Value="true">
        <Setter Setter.Property="Control.Background"
                Setter.Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
      </DataTrigger>
    </Style.Triggers>
    <Setter Setter.Property="Control.Background"
            Setter.Value="{StaticResource ź}" />
    <Setter Setter.Property="FrameworkElement.MinHeight"
            Setter.Value="0" />
    <Setter Setter.Property="FrameworkElement.MinWidth"
            Setter.Value="0" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Name="Bd"
                  Border.CornerRadius="0,0,3,3"
                  Border.Background="{TemplateBinding Control.Background}"
                  SnapsToDevicePixels="True">
            <Canvas Width="7"
                    Height="6"
                    Margin="2,7,2,2"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Bottom"
                    SnapsToDevicePixels="True">
              <Path Shape.Stroke="#FFFFFFFF"
                    Path.Data="M1.5,1L1.5,6" />
              <Path Shape.Stroke="{TemplateBinding Control.Foreground}"
                    Path.Data="M0.5,0L0.5,5" />
              <Path Shape.Fill="#FFFFFFFF"
                    Path.Data="M3.5,0.5L7,3.5 4,6.5z" />
              <Path Shape.Fill="{TemplateBinding Control.Foreground}"
                    Path.Data="M3,-0.5L6,2.5 3,5.5z" />
            </Canvas>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="IsMouseOver"
                     Trigger.Value="True">
              <Setter Setter.TargetName="Bd"
                      Setter.Value="{StaticResource Ŭ}"
                      Setter.Property="Border.Background" />
            </Trigger>
            <Trigger Trigger.Property="IsKeyboardFocused"
                     Trigger.Value="True">
              <Setter Setter.TargetName="Bd"
                      Setter.Value="{StaticResource Ŭ}"
                      Setter.Property="Border.Background" />
            </Trigger>
            <Trigger Trigger.Property="IsEnabled"
                     Trigger.Value="False">
              <Setter Setter.Value="{StaticResource Ÿ}"
                      Setter.Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type ToolBar}"
         TargetType="{x:Type ToolBar}">
    <Style.Triggers>
      <DataTrigger DataTrigger.Binding="{Binding Source={x:Static SystemParameters.HighContrast}}"
                   DataTrigger.Value="true">
        <Setter Setter.Property="Control.Background"
                Setter.Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
      </DataTrigger>
    </Style.Triggers>
    <Setter Setter.Property="Control.Background"
            Setter.Value="{StaticResource Ŷ}" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToolBar}">
          <Grid Name="Grid"
                Margin="3,1,1,1"
                SnapsToDevicePixels="True">
            <Grid x:Name="OverflowGrid"
                  HorizontalAlignment="Right">
              <ToggleButton x:Name="OverflowButton"
                            IsEnabled="{TemplateBinding ToolBar.HasOverflowItems}"
                            Style="{StaticResource ſ}"
                            ButtonBase.ClickMode="Press"
                            FocusVisualStyle="{x:Null}"
                            ToggleButton.IsChecked="{Binding Path=IsOverflowOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" />
              <Popup x:Name="OverflowPopup"
                     Popup.AllowsTransparency="True"
                     Popup.Placement="Bottom"
                     Popup.StaysOpen="False"
                     Focusable="False"
                     Popup.PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                     Popup.IsOpen="{Binding Path=IsOverflowOpen,RelativeSource={RelativeSource TemplatedParent}}">
                <theme:SystemDropShadowChrome x:Name="Shdw"
                                              Color="Transparent"
                                              >
                  <Border x:Name="ToolBarSubMenuBorder"
                          Border.Background="{StaticResource Ų}"
                          Border.BorderBrush="{StaticResource ű}"
                          Border.BorderThickness="1"
                          RenderOptions.ClearTypeHint="Enabled">
                    <ToolBarOverflowPanel x:Name="PART_ToolBarOverflowPanel"
                                          Margin="2"
                                          ToolBarOverflowPanel.WrapWidth="200"
                                          Focusable="True"
                                          KeyboardNavigation.TabNavigation="Cycle"
                                          KeyboardNavigation.DirectionalNavigation="Cycle"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          FocusVisualStyle="{x:Null}" />
                  </Border>
                </theme:SystemDropShadowChrome>
              </Popup>
            </Grid>
            <Border x:Name="MainPanelBorder"
                    Border.Background="{TemplateBinding Control.Background}"
                    Border.BorderBrush="{TemplateBinding Control.BorderBrush}"
                    Border.BorderThickness="{TemplateBinding Control.BorderThickness}"
                    Border.Padding="{TemplateBinding Control.Padding}"
                    Style="{StaticResource ż}">
              <DockPanel KeyboardNavigation.TabIndex="1"
                         KeyboardNavigation.TabNavigation="Local">
                <Thumb x:Name="ToolBarThumb"
                       Style="{StaticResource ž}"
                       Margin="-3,-1,0,0"
                       Width="10"
                       Control.Padding="6,5,1,6" />
                <ContentPresenter Name="ToolBarHeader"
                                  ContentSource="Header"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Margin="4,0,4,0"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                <ToolBarPanel x:Name="PART_ToolBarPanel"
                              Panel.IsItemsHost="True"
                              Margin="0,1,2,2"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
              </DockPanel>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="ToolBar.IsOverflowOpen"
                     Trigger.Value="True">
              <Setter Setter.TargetName="ToolBarThumb"
                      Setter.Property="IsEnabled"
                      Setter.Value="False" />
            </Trigger>
            <Trigger Trigger.Value="{x:Null}"
                     Trigger.Property="HeaderedItemsControl.Header">
              <Setter Setter.TargetName="ToolBarHeader"
                      Setter.Property="Visibility"
                      Setter.Value="Collapsed" />
            </Trigger>
            <Trigger Trigger.Property="ToolBarTray.IsLocked"
                     Trigger.Value="True">
              <Setter Setter.TargetName="ToolBarThumb"
                      Setter.Property="Visibility"
                      Setter.Value="Collapsed" />
            </Trigger>
            <Trigger Trigger.SourceName="OverflowPopup"
                     Trigger.Property="Popup.HasDropShadow"
                     Trigger.Value="True">
              <Setter Setter.TargetName="Shdw"
                      Setter.Property="Margin"
                      Setter.Value="0,0,5,5" />
              <Setter Setter.TargetName="Shdw"
                      Setter.Property="SnapsToDevicePixels"
                      Setter.Value="True" />
              <Setter Setter.TargetName="Shdw"
                      Setter.Property="theme:SystemDropShadowChrome.Color"
                      Setter.Value="#71000000" />
            </Trigger>
            <Trigger Trigger.Property="ToolBar.Orientation"
                     Trigger.Value="Vertical">
              <Setter Setter.TargetName="Grid"
                      Setter.Property="Margin"
                      Setter.Value="1,3,1,1" />
              <Setter Setter.TargetName="OverflowButton"
                      Setter.Value="{StaticResource ƀ}"
                      Setter.Property="FrameworkElement.Style" />
              <Setter Setter.TargetName="ToolBarThumb"
                      Setter.Property="FrameworkElement.Height"
                      Setter.Value="10" />
              <Setter Setter.TargetName="ToolBarThumb"
                      Setter.Property="FrameworkElement.Width"
                      Setter.Value="Auto" />
              <Setter Setter.TargetName="ToolBarThumb"
                      Setter.Property="Margin"
                      Setter.Value="-1,-3,0,0" />
              <Setter Setter.TargetName="ToolBarThumb"
                      Setter.Property="Control.Padding"
                      Setter.Value="5,6,6,1" />
              <Setter Setter.TargetName="ToolBarHeader"
                      Setter.Property="Margin"
                      Setter.Value="0,0,0,4" />
              <Setter Setter.TargetName="PART_ToolBarPanel"
                      Setter.Property="Margin"
                      Setter.Value="1,0,2,2" />
              <Setter Setter.TargetName="ToolBarThumb"
                      Setter.Property="DockPanel.Dock"
                      Setter.Value="Top" />
              <Setter Setter.TargetName="ToolBarHeader"
                      Setter.Property="DockPanel.Dock"
                      Setter.Value="Top" />
              <Setter Setter.TargetName="OverflowGrid"
                      Setter.Property="FrameworkElement.HorizontalAlignment"
                      Setter.Value="Stretch" />
              <Setter Setter.TargetName="OverflowGrid"
                      Setter.Property="FrameworkElement.VerticalAlignment"
                      Setter.Value="Bottom" />
              <Setter Setter.TargetName="OverflowPopup"
                      Setter.Property="Popup.Placement"
                      Setter.Value="Right" />
              <Setter Setter.TargetName="MainPanelBorder"
                      Setter.Property="Margin"
                      Setter.Value="0,0,0,11" />
              <Setter Setter.Value="{StaticResource ŷ}"
                      Setter.Property="Control.Background" />
            </Trigger>
            <Trigger Trigger.Property="IsEnabled"
                     Trigger.Value="False">
              <Setter Setter.Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"
                      Setter.Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type ToolBarTray}"
         TargetType="{x:Type ToolBarTray}">
    <Setter Setter.Property="ToolBarTray.Background"
            Setter.Value="{StaticResource ŵ}" />
    <Style.Triggers>
      <DataTrigger DataTrigger.Binding="{Binding Source={x:Static SystemParameters.HighContrast}}"
                   DataTrigger.Value="true">
        <Setter Setter.Property="ToolBarTray.Background"
                Setter.Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
      </DataTrigger>
    </Style.Triggers>
  </Style>


</ResourceDictionary>