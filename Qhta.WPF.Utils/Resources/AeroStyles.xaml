<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">
  <Style x:Key="Ñ">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Margin="2" StrokeThickness="1"
              Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeDashArray="1 2"
              SnapsToDevicePixels="True" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <LinearGradientBrush x:Key="Ò" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#F3F3F3" Offset="0" />
      <GradientStop Color="#EBEBEB" Offset="0.5" />
      <GradientStop Color="#DDDDDD" Offset="0.5" />
      <GradientStop Color="#CDCDCD" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="Ó" Color="#FF707070" />
  <Style x:Key="Ô" TargetType="{x:Type ButtonBase}">
    <Setter Property="FocusVisualStyle" Value="{StaticResource Ñ}" />
    <Setter Property="Background" Value="{StaticResource Ò}" />
    <Setter Property="BorderBrush" Value="{StaticResource Ó}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Padding" Value="1" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ButtonBase}">
          <theme:ButtonChrome x:Name="Chrome" Background="{TemplateBinding Background}"
              BorderBrush="{TemplateBinding BorderBrush}" RenderDefaulted="{TemplateBinding Button.IsDefaulted}"
              RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding ButtonBase.IsPressed}"
              SnapsToDevicePixels="True">
            <ContentPresenter Margin="{TemplateBinding Padding}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
          </theme:ButtonChrome>
          <ControlTemplate.Triggers>
            <Trigger Property="IsKeyboardFocused" Value="True">
              <Setter TargetName="Chrome" Property="RenderDefaulted" Value="True" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <Setter TargetName="Chrome" Property="RenderPressed" Value="True" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Foreground" Value="#FFADADAD" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type ToggleButton}" BasedOn="{StaticResource Ô}" TargetType="{x:Type ToggleButton}" />
  <Style x:Key="{x:Type RepeatButton}" BasedOn="{StaticResource Ô}" TargetType="{x:Type RepeatButton}">
    <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False" />
  </Style>
  <Style x:Key="{x:Type Button}" BasedOn="{StaticResource Ô}" TargetType="{x:Type Button}" />
  <Style x:Key="{x:Type Calendar}" TargetType="{x:Type Calendar}">
    <Setter Property="Foreground" Value="#FF333333" />
    <Setter Property="Background">
      <Setter.Value>
        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
          <GradientStop Color="#FFE4EAF0" Offset="0" />
          <GradientStop Color="#FFECF0F4" Offset="0.16" />
          <GradientStop Color="#FFFCFCFD" Offset="0.16" />
          <GradientStop Color="#FFFFFFFF" Offset="1" />
        </LinearGradientBrush>
      </Setter.Value>
    </Setter>
    <Setter Property="BorderBrush">
      <Setter.Value>
        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
          <GradientStop Color="#FFA3AEB9" Offset="0" />
          <GradientStop Color="#FF8399A9" Offset="0.375" />
          <GradientStop Color="#FF718597" Offset="0.375" />
          <GradientStop Color="#FF617584" Offset="1" />
        </LinearGradientBrush>
      </Setter.Value>
    </Setter>
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Calendar}">
          <StackPanel Name="PART_Root" HorizontalAlignment="Center">
            <CalendarItem Name="PART_CalendarItem" Style="{TemplateBinding Calendar.CalendarItemStyle}"
                Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}" />
          </StackPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type CalendarItem}" TargetType="{x:Type CalendarItem}">
    <Setter Property="Margin" Value="0,3,0,3" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type CalendarItem}">
          <FrameworkTemplate.Resources>
            <ResourceDictionary>
              <DataTemplate x:Key="CalendarItem.DayTitleTemplateResourceKey">
                <TextBlock FontWeight="Bold" FontFamily="Verdana" FontSize="9.5" Foreground="#FF333333"
                    HorizontalAlignment="Center" Margin="0,6,0,6" VerticalAlignment="Center" Text="{Binding}" />
              </DataTemplate>
            </ResourceDictionary>
          </FrameworkTemplate.Resources>
          <Grid Name="PART_Root">
            <FrameworkElement.Resources>
              <ResourceDictionary>
                <SolidColorBrush x:Key="Õ" Color="#A5FFFFFF" />
              </ResourceDictionary>
            </FrameworkElement.Resources>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="PART_DisabledVisual" Storyboard.TargetProperty="Opacity"
                        DoubleAnimation.To="1" Timeline.Duration="0" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                Background="{TemplateBinding Background}" CornerRadius="1">
              <Border CornerRadius="1" BorderBrush="#FFFFFFFF" BorderThickness="2">
                <Grid>
                  <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                  </Grid.RowDefinitions>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                  </Grid.ColumnDefinitions>
                  <FrameworkElement.Resources>
                    <ResourceDictionary>
                      <ControlTemplate x:Key="Ö" TargetType="{x:Type Button}">
                        <Grid Cursor="Hand">
                          <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                              <VisualState x:Name="Normal" />
                              <VisualState x:Name="MouseOver">
                                <Storyboard>
                                  <ColorAnimation Storyboard.TargetName="path"
                                      Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)"
                                      ColorAnimation.To="#FF73A9D8" Timeline.Duration="0" />
                                </Storyboard>
                              </VisualState>
                              <VisualState x:Name="Disabled">
                                <Storyboard>
                                  <DoubleAnimation Storyboard.TargetName="path"
                                      Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Opacity)"
                                      DoubleAnimation.To=".5" Timeline.Duration="0" />
                                </Storyboard>
                              </VisualState>
                            </VisualStateGroup>
                          </VisualStateManager.VisualStateGroups>
                          <Rectangle Fill="#11E5EBF1" Stretch="Fill" Opacity="1" />
                          <Grid>
                            <Path x:Name="path" Margin="14,-6,0,0" Height="10" Width="6" VerticalAlignment="Center"
                                HorizontalAlignment="Left" Stretch="Fill"
                                Data="M288.75,232.25L288.75,240.625 283,236.625z">
                              <Shape.Fill>
                                <SolidColorBrush Color="#FF333333" />
                              </Shape.Fill>
                            </Path>
                          </Grid>
                        </Grid>
                      </ControlTemplate>
                      <ControlTemplate x:Key="×" TargetType="{x:Type Button}">
                        <Grid Cursor="Hand">
                          <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                              <VisualState x:Name="Normal" />
                              <VisualState x:Name="MouseOver">
                                <Storyboard>
                                  <ColorAnimation Storyboard.TargetName="path"
                                      Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)"
                                      ColorAnimation.To="#FF73A9D8" Timeline.Duration="0" />
                                </Storyboard>
                              </VisualState>
                              <VisualState x:Name="Disabled">
                                <Storyboard>
                                  <DoubleAnimation Storyboard.TargetName="path"
                                      Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Opacity)"
                                      DoubleAnimation.To=".5" Timeline.Duration="0" />
                                </Storyboard>
                              </VisualState>
                            </VisualStateGroup>
                          </VisualStateManager.VisualStateGroups>
                          <Rectangle Fill="#11E5EBF1" Stretch="Fill" Opacity="1" />
                          <Grid>
                            <Path x:Name="path" Margin="0,-6,14,0" Height="10" Width="6" VerticalAlignment="Center"
                                HorizontalAlignment="Right" Stretch="Fill"
                                Data="M282.875,231.875L282.875,240.375 288.625,236z">
                              <Shape.Fill>
                                <SolidColorBrush Color="#FF333333" />
                              </Shape.Fill>
                            </Path>
                          </Grid>
                        </Grid>
                      </ControlTemplate>
                      <ControlTemplate x:Key="Ø" TargetType="{x:Type Button}">
                        <Grid Cursor="Hand">
                          <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                              <VisualState x:Name="Normal" />
                              <VisualState x:Name="MouseOver">
                                <Storyboard>
                                  <ColorAnimation Storyboard.TargetName="buttonContent"
                                      Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                      ColorAnimation.To="#FF73A9D8" Timeline.Duration="0" />
                                </Storyboard>
                              </VisualState>
                              <VisualState x:Name="Disabled">
                                <Storyboard>
                                  <DoubleAnimation Storyboard.TargetName="buttonContent"
                                      Storyboard.TargetProperty="Opacity" DoubleAnimation.To=".5" Timeline.Duration="0" />
                                </Storyboard>
                              </VisualState>
                            </VisualStateGroup>
                          </VisualStateManager.VisualStateGroups>
                          <ContentPresenter Name="buttonContent" Content="{TemplateBinding ContentControl.Content}"
                              ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" Margin="1,4,1,9"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <TextElement.Foreground>
                              <SolidColorBrush Color="#FF333333" />
                            </TextElement.Foreground>
                          </ContentPresenter>
                        </Grid>
                      </ControlTemplate>
                    </ResourceDictionary>
                  </FrameworkElement.Resources>
                  <Button x:Name="PART_PreviousButton" Grid.Row="0" Grid.Column="0" Template="{StaticResource Ö}"
                      Height="20" Width="28" HorizontalAlignment="Left" Focusable="False" />
                  <Button x:Name="PART_HeaderButton" Grid.Row="0" Grid.Column="1" Template="{StaticResource Ø}"
                      HorizontalAlignment="Center" VerticalAlignment="Center" FontWeight="Bold" FontSize="10.5"
                      Focusable="False" />
                  <Button x:Name="PART_NextButton" Grid.Row="0" Grid.Column="2" Height="20" Width="28"
                      HorizontalAlignment="Right" Template="{StaticResource ×}" Focusable="False" />
                  <Grid x:Name="PART_MonthView" Grid.Row="1" Grid.ColumnSpan="3" Visibility="Visible" Margin="6,-1,6,6"
                      HorizontalAlignment="Center">
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                  </Grid>
                  <Grid x:Name="PART_YearView" Grid.Row="1" Grid.ColumnSpan="3" Visibility="Hidden" Margin="6,-3,7,6"
                      HorizontalAlignment="Center">
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                  </Grid>
                </Grid>
              </Border>
            </Border>
            <Rectangle x:Name="PART_DisabledVisual" Opacity="0" Visibility="Collapsed" Stretch="Fill"
                StrokeThickness="1" RadiusX="2" RadiusY="2" Stroke="{StaticResource Õ}"
                Fill="{StaticResource Õ}" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="PART_DisabledVisual" Property="Visibility" Value="Visible" />
            </Trigger>
            <DataTrigger Value="Year"
                Binding="{Binding Path=DisplayMode,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Calendar}}}">
              <Setter TargetName="PART_MonthView" Property="Visibility" Value="Hidden" />
              <Setter TargetName="PART_YearView" Property="Visibility" Value="Visible" />
            </DataTrigger>
            <DataTrigger Value="Decade"
                Binding="{Binding Path=DisplayMode,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Calendar}}}">
              <Setter TargetName="PART_MonthView" Property="Visibility" Value="Hidden" />
              <Setter TargetName="PART_YearView" Property="Visibility" Value="Visible" />
            </DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type CalendarDayButton}" TargetType="{x:Type CalendarDayButton}">
    <Setter Property="MinWidth" Value="5" />
    <Setter Property="MinHeight" Value="5" />
    <Setter Property="FontSize" Value="10" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type CalendarDayButton}">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition VisualTransition.GeneratedDuration="0:0:0.1" />
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="HighlightBackground" Storyboard.TargetProperty="Opacity"
                        DoubleAnimation.To="0.5" Timeline.Duration="0" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="HighlightBackground" Storyboard.TargetProperty="Opacity"
                        DoubleAnimation.To="0.5" Timeline.Duration="0" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="HighlightBackground" Storyboard.TargetProperty="Opacity"
                        DoubleAnimation.To="0" Timeline.Duration="0" />
                    <DoubleAnimation Storyboard.TargetName="NormalText" Storyboard.TargetProperty="Opacity"
                        DoubleAnimation.To=".35" Timeline.Duration="0" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectionStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition VisualTransition.GeneratedDuration="0" />
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Unselected" />
                <VisualState x:Name="Selected">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="SelectedBackground" Storyboard.TargetProperty="Opacity"
                        DoubleAnimation.To=".75" Timeline.Duration="0" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="CalendarButtonFocusStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition VisualTransition.GeneratedDuration="0" />
                </VisualStateGroup.Transitions>
                <VisualState x:Name="CalendarButtonFocused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DayButtonFocusVisual"
                        Storyboard.TargetProperty="Visibility" Timeline.Duration="0">
                      <DiscreteObjectKeyFrame ObjectKeyFrame.KeyTime="0">
                        <ObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </ObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="CalendarButtonUnfocused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DayButtonFocusVisual"
                        Storyboard.TargetProperty="Visibility" Timeline.Duration="0">
                      <DiscreteObjectKeyFrame ObjectKeyFrame.KeyTime="0">
                        <ObjectKeyFrame.Value>
                          <Visibility>
                            Collapsed
                          </Visibility>
                        </ObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ActiveStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition VisualTransition.GeneratedDuration="0" />
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Active" />
                <VisualState x:Name="Inactive">
                  <Storyboard>
                    <ColorAnimation Timeline.Duration="0" Storyboard.TargetName="NormalText"
                        Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                        ColorAnimation.To="#FF777777" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="DayStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition VisualTransition.GeneratedDuration="0" />
                </VisualStateGroup.Transitions>
                <VisualState x:Name="RegularDay" />
                <VisualState x:Name="Today">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="TodayBackground" Storyboard.TargetProperty="Opacity"
                        DoubleAnimation.To="1" Timeline.Duration="0" />
                    <ColorAnimation Timeline.Duration="0" Storyboard.TargetName="NormalText"
                        Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                        ColorAnimation.To="#FFFFFFFF" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="BlackoutDayStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition VisualTransition.GeneratedDuration="0" />
                </VisualStateGroup.Transitions>
                <VisualState x:Name="NormalDay" />
                <VisualState x:Name="BlackoutDay">
                  <Storyboard>
                    <DoubleAnimation Timeline.Duration="0" Storyboard.TargetName="Blackout"
                        Storyboard.TargetProperty="Opacity" DoubleAnimation.To=".2" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle x:Name="TodayBackground" RadiusX="1" RadiusY="1" Opacity="0" Fill="#FFAAAAAA" />
            <Rectangle x:Name="SelectedBackground" RadiusX="1" RadiusY="1" Opacity="0"
                Fill="#FFBADDE9" />
            <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}"
                BorderBrush="{TemplateBinding BorderBrush}" />
            <Rectangle x:Name="HighlightBackground" RadiusX="1" RadiusY="1" Opacity="0"
                Fill="#FFBADDE9" />
            <ContentPresenter Name="NormalText" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="5,1,5,1">
              <TextElement.Foreground>
                <SolidColorBrush Color="#FF333333" />
              </TextElement.Foreground>
            </ContentPresenter>
            <Path x:Name="Blackout" Opacity="0" Margin="3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                RenderTransformOrigin="0.5,0.5" Fill="#FF000000" Stretch="Fill"
                Data="M8.1772461,11.029181L10.433105,11.029181 11.700684,12.801641 12.973633,11.029181 15.191895,11.029181 12.844727,13.999395 15.21875,17.060919 12.962891,17.060919 11.673828,15.256231 10.352539,17.060919 8.1396484,17.060919 10.519043,14.042364z" />
            <Rectangle x:Name="DayButtonFocusVisual" Visibility="Collapsed" IsHitTestVisible="False"
                RadiusX="1" RadiusY="1" Stroke="#FF45D6FA" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type CalendarButton}" TargetType="{x:Type CalendarButton}">
    <Setter Property="Background" Value="#FFBADDE9" />
    <Setter Property="MinWidth" Value="40" />
    <Setter Property="MinHeight" Value="42" />
    <Setter Property="FontSize" Value="10" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type CalendarButton}">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition VisualTransition.GeneratedDuration="0:0:0.1" />
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="Background" Storyboard.TargetProperty="Opacity"
                        DoubleAnimation.To=".5" Timeline.Duration="0" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="Background" Storyboard.TargetProperty="Opacity"
                        DoubleAnimation.To=".5" Timeline.Duration="0" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectionStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition VisualTransition.GeneratedDuration="0" />
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Unselected" />
                <VisualState x:Name="Selected">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="SelectedBackground" Storyboard.TargetProperty="Opacity"
                        DoubleAnimation.To=".75" Timeline.Duration="0" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ActiveStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition VisualTransition.GeneratedDuration="0" />
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Active" />
                <VisualState x:Name="Inactive">
                  <Storyboard>
                    <ColorAnimation Timeline.Duration="0" Storyboard.TargetName="NormalText"
                        Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                        ColorAnimation.To="#FF777777" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="CalendarButtonFocusStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition VisualTransition.GeneratedDuration="0" />
                </VisualStateGroup.Transitions>
                <VisualState x:Name="CalendarButtonFocused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CalendarButtonFocusVisual"
                        Storyboard.TargetProperty="Visibility" Timeline.Duration="0">
                      <DiscreteObjectKeyFrame ObjectKeyFrame.KeyTime="0">
                        <ObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </ObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="CalendarButtonUnfocused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CalendarButtonFocusVisual"
                        Storyboard.TargetProperty="Visibility" Timeline.Duration="0">
                      <DiscreteObjectKeyFrame ObjectKeyFrame.KeyTime="0">
                        <ObjectKeyFrame.Value>
                          <Visibility>
                            Collapsed
                          </Visibility>
                        </ObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle x:Name="SelectedBackground" RadiusX="1" RadiusY="1" Opacity="0"
                Fill="{TemplateBinding Background}" />
            <Rectangle x:Name="Background" RadiusX="1" RadiusY="1" Opacity="0"
                Fill="{TemplateBinding Background}" />
            <ContentPresenter Name="NormalText" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="1,0,1,1">
              <TextElement.Foreground>
                <SolidColorBrush Color="#FF333333" />
              </TextElement.Foreground>
            </ContentPresenter>
            <Rectangle x:Name="CalendarButtonFocusVisual" Visibility="Collapsed" IsHitTestVisible="False"
                RadiusX="1" RadiusY="1" Stroke="#FF45D6FA" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsFocused" Value="True">
              <Setter TargetName="CalendarButtonFocusVisual" Property="Visibility" Value="Visible" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="Ù">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Margin="14,0,0,0" StrokeThickness="1"
              Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeDashArray="1 2"
              SnapsToDevicePixels="True" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="Ú">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Margin="1" StrokeThickness="1"
              Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeDashArray="1 2"
              SnapsToDevicePixels="True" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="Û">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Margin="13,0,0,0" StrokeThickness="1"
              Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeDashArray="1 2"
              SnapsToDevicePixels="True" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="Ü">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Margin="1" StrokeThickness="1"
              Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeDashArray="1 2"
              SnapsToDevicePixels="True" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <SolidColorBrush x:Key="Ý" Color="#F4F4F4" />
  <SolidColorBrush x:Key="Þ" Color="#8E8F8F" />
  <Style x:Key="{x:Type CheckBox}" TargetType="{x:Type CheckBox}">
    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Property="Background" Value="{StaticResource Ý}" />
    <Setter Property="BorderBrush" Value="{StaticResource Þ}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="FocusVisualStyle" Value="{StaticResource Ú}" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type CheckBox}">
          <BulletDecorator BulletDecorator.Background="#00FFFFFF" SnapsToDevicePixels="True">
            <BulletDecorator.Bullet>
              <theme:BulletChrome Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                  RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding ButtonBase.IsPressed}"
                  IsChecked="{TemplateBinding ToggleButton.IsChecked}" />
            </BulletDecorator.Bullet>
            <ContentPresenter Margin="{TemplateBinding Padding}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
          </BulletDecorator>
          <ControlTemplate.Triggers>
            <Trigger Property="ContentControl.HasContent" Value="True">
              <Setter Value="{StaticResource Ù}" Property="FocusVisualStyle" />
              <Setter Property="Padding" Value="4,0,0,0" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <DataTemplate x:Key="{DataTemplateKey {x:Type CollectionViewGroup}}"
      DataTemplate.DataType="{x:Type CollectionViewGroup}">
    <ContentPresenter ContentStringFormat="{TemplateBinding ContentStringFormat}" Content="{Binding Path=Name}" />
  </DataTemplate>
  <Style x:Key="æ">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Margin="0,1,0,1" StrokeThickness="1"
              Stroke="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" StrokeDashArray="1 2"
              SnapsToDevicePixels="True" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
    <Setter Property="HorizontalContentAlignment"
        Value="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Property="VerticalContentAlignment"
        Value="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Property="Padding" Value="3,0,3,0" />
    <Setter Property="Background" Value="#00FFFFFF" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ComboBoxItem}">
          <Border Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}"
              SnapsToDevicePixels="True">
            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="ComboBoxItem.IsHighlighted" Value="True">
              <Setter TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                  Property="Background" />
              <Setter Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Foreground" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Foreground" />
            </Trigger>
            <MultiDataTrigger>
              <!--<MultiDataTrigger.Conditions>
                <Condition  Binding="{Binding Path=(base:AccessibilitySwitches.UseNetFx47CompatibleAccessibilityFeatures)}"
                            Value="false" />
                <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}"
                           Value="true" />
              </MultiDataTrigger.Conditions>-->
              <Setter Value="{StaticResource æ}" Property="FocusVisualStyle" />
            </MultiDataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type ContentControl}" TargetType="{x:Type ContentControl}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ContentControl}">
          <ContentPresenter />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type ContextMenu}" TargetType="{x:Type ContextMenu}">
    <Setter Property="Background" Value="#FFF5F5F5" />
    <Setter Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}" />
    <Setter Property="FontSize" Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}" />
    <Setter Property="FontStyle" Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}" />
    <Setter Property="FontWeight" Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}" />
    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="BorderBrush" Value="#FF959595" />
    <Setter Property="Padding" Value="2" />
    <Setter Property="Grid.IsSharedSizeScope" Value="True" />
    <Setter Property="ContextMenu.HasDropShadow" Value="{DynamicResource {x:Static SystemParameters.DropShadowKey}}" />
    <Setter Property="ScrollViewer.PanningMode" Value="Both" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ContextMenu}">
          <theme:SystemDropShadowChrome x:Name="Shdw" Color="Transparent" SnapsToDevicePixels="True">
            <Border Name="ContextMenuBorder" Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
              <ScrollViewer Name="ContextMenuScrollViewer" Grid.ColumnSpan="2" Margin="1,0"
                  Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement},ResourceId=MenuScrollViewer}}">
                <Grid RenderOptions.ClearTypeHint="Enabled">
                  <Canvas Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                    <Rectangle Name="OpaqueRect" Height="{Binding ElementName=ContextMenuBorder,Path=ActualHeight}"
                        Width="{Binding ElementName=ContextMenuBorder,Path=ActualWidth}"
                        Fill="{Binding ElementName=ContextMenuBorder,Path=Background}" />
                  </Canvas>
                  <Rectangle Fill="#FFF1F1F1" HorizontalAlignment="Left" Width="28" Margin="1,2" RadiusX="2"
                      RadiusY="2" />
                  <Rectangle HorizontalAlignment="Left" Width="1" Margin="29,2,0,2" Fill="#FFE2E3E3" />
                  <Rectangle HorizontalAlignment="Left" Width="1" Margin="30,2,0,2" Fill="#FFFFFFFF" />
                  <ItemsPresenter Name="ItemsPresenter" Margin="{TemplateBinding Padding}"
                      KeyboardNavigation.DirectionalNavigation="Cycle"
                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                </Grid>
              </ScrollViewer>
            </Border>
          </theme:SystemDropShadowChrome>
          <ControlTemplate.Triggers>
            <Trigger Property="ContextMenu.HasDropShadow" Value="True">
              <Setter TargetName="Shdw" Property="Margin" Value="0,0,5,5" />
              <Setter TargetName="Shdw" Property="theme:SystemDropShadowChrome.Color" Value="#71000000" />
            </Trigger>
            <Trigger SourceName="ContextMenuScrollViewer" Property="ScrollViewer.CanContentScroll" Value="False">
              <Setter TargetName="OpaqueRect" Value="{Binding ElementName=ContextMenuScrollViewer,Path=VerticalOffset}"
                  Property="Canvas.Top" />
              <Setter TargetName="OpaqueRect"
                  Value="{Binding ElementName=ContextMenuScrollViewer,Path=HorizontalOffset}" Property="Canvas.Left" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type FlowDocument}" TargetType="{x:Type FlowDocument}">
    <Setter Property="FlowDocument.TextAlignment" Value="Justify" />
    <Setter Property="FlowDocument.FontFamily" Value="Georgia" />
    <Setter Property="FlowDocument.FontSize" Value="16.0" />
  </Style>
  <Style x:Key="{x:Type TextBlock}" TargetType="{x:Type TextBlock}">
    <Setter Property="TextBlock.TextWrapping" Value="NoWrap" />
    <Setter Property="TextBlock.TextTrimming" Value="None" />
  </Style>
  <Style x:Key="{x:Type Bold}" TargetType="{x:Type Bold}">
    <Setter Property="TextElement.FontWeight" Value="Bold" />
  </Style>
  <Style x:Key="{x:Type Italic}" TargetType="{x:Type Italic}">
    <Setter Property="TextElement.FontStyle" Value="Italic" />
  </Style>
  <Style x:Key="{x:Type Underline}" TargetType="{x:Type Underline}">
    <Setter Property="Inline.TextDecorations" Value="Underline" />
  </Style>
  <Style x:Key="{x:Type Paragraph}" TargetType="{x:Type Paragraph}">
    <Setter Property="Block.Margin" Value="Auto" />
  </Style>
  <Style x:Key="{x:Type List}" TargetType="{x:Type List}">
    <Setter Property="Block.Margin" Value="Auto" />
    <Setter Property="Block.Padding" Value="Auto" />
  </Style>
  <Style x:Key="{x:Type Floater}" TargetType="{x:Type Floater}">
    <Setter Property="Floater.HorizontalAlignment" Value="Right" />
  </Style>
  <DataTemplate x:Key="{DataTemplateKey {x:Type FlowDocument}}" DataTemplate.DataType="{x:Type FlowDocument}">
    <FlowDocumentReader FlowDocumentReader.Document="{Binding}" />
  </DataTemplate>
  <DataTemplate x:Key="{DataTemplateKey {x:Type FixedDocument}}" DataTemplate.DataType="{x:Type FixedDocument}">
    <DocumentViewer DocumentViewerBase.Document="{Binding}" />
  </DataTemplate>
  <DataTemplate x:Key="{DataTemplateKey {x:Type FixedDocumentSequence}}"
      DataTemplate.DataType="{x:Type FixedDocumentSequence}">
    <DocumentViewer DocumentViewerBase.Document="{Binding}" />
  </DataTemplate>
  <LinearGradientBrush
      x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement},ResourceId=DocumentViewerToolBarGradient}"
      StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="{x:Static SystemColors.InactiveCaptionTextColor}" Offset="0" />
      <GradientStop Color="{x:Static SystemColors.InactiveCaptionColor}" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ç" StartPoint="0,0" EndPoint="1,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="{x:Static SystemColors.InactiveCaptionTextColor}" Offset="1" />
      <GradientStop Color="{x:Static SystemColors.InactiveCaptionColor}" Offset="0" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <Style x:Key="{x:Type DocumentViewer}" TargetType="{x:Type DocumentViewer}" BasedOn="{x:Null}">
    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <!--<Setter Property="ContextMenu"
            Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type ui:PresentationUIStyleResources},ResourceId=PUIDocumentViewerContextMenu}}" />-->
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DocumentViewer}">
          <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"
              Focusable="False">
            <Grid Panel.Background="{TemplateBinding Background}" KeyboardNavigation.TabNavigation="Local">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
              </Grid.RowDefinitions>
              <ContentControl Grid.Row="0" Grid.Column="0" Focusable="{TemplateBinding Focusable}" TabIndex="0" />
              <!--Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type ui:PresentationUIStyleResources},ResourceId=PUIDocumentViewerToolBarStyleKey}}" />-->
              <ScrollViewer x:Name="PART_ContentHost" Grid.Row="1" Grid.Column="0" ScrollViewer.CanContentScroll="True"
                  ScrollViewer.HorizontalScrollBarVisibility="Auto" Focusable="{TemplateBinding Focusable}"
                  IsTabStop="True" TabIndex="1" />
              <DockPanel Grid.Row="1">
                <FrameworkElement DockPanel.Dock="Right"
                    Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
                <Rectangle Visibility="Visible" VerticalAlignment="top" Height="10">
                  <Shape.Fill>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                      <GradientBrush.GradientStops>
                        <GradientStopCollection>
                          <GradientStop Color="#66000000" Offset="0" />
                          <GradientStop Color="Transparent" Offset="1" />
                        </GradientStopCollection>
                      </GradientBrush.GradientStops>
                    </LinearGradientBrush>
                  </Shape.Fill>
                </Rectangle>
              </DockPanel>
              <ContentControl x:Name="PART_FindToolBarHost" Grid.Row="2" Grid.Column="0" TabIndex="2"
                  Focusable="{TemplateBinding Focusable}" />
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="è">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Grid>
            <Rectangle Margin="1,1,1,1" StrokeThickness="1"
                Stroke="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" SnapsToDevicePixels="True" />
            <Rectangle Margin="1,1,1,1" StrokeThickness="1"
                Stroke="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" StrokeDashArray="2 2"
                SnapsToDevicePixels="True" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <BooleanToVisibilityConverter x:Key="é" />
  <Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type DataGrid},ResourceId=DataGridSelectAllButtonStyle}"
      TargetType="{x:Type Button}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid>
            <Rectangle x:Name="Border" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
                SnapsToDevicePixels="True" />
            <Polygon x:Name="Arrow" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="8,8,3,3"
                Opacity="0.15" Fill="#FF000000" Stretch="Uniform" Polygon.Points="0,10 10,10 10,0" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="Border" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"
                  Property="Shape.Stroke" />
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
              <Setter TargetName="Border" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"
                  Property="Shape.Fill" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="Arrow" Property="Visibility" Value="Collapsed" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type DataGrid}" TargetType="{x:Type DataGrid}">
    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Property="BorderBrush" Value="#FF688CAF" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="DataGrid.RowDetailsVisibilityMode" Value="VisibleWhenSelected" />
    <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
    <Setter Property="ScrollViewer.PanningMode" Value="Both" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGrid}">
          <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True"
              Padding="{TemplateBinding Padding}">
            <ScrollViewer Name="DG_ScrollViewer" Focusable="False">
              <Control.Template>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                  <Grid>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="*" />
                      <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="*" />
                      <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Button ButtonBase.Command="{x:Static DataGrid.SelectAllCommand}" Focusable="False"
                        Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}},Path=CellsPanelHorizontalOffset}"
                        Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type DataGrid},ResourceId=DataGridSelectAllButtonStyle}}"
                        Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}},Path=HeadersVisibility,Converter={x:Static DataGrid.HeadersVisibilityConverter},ConverterParameter={x:Static DataGridHeadersVisibility.All}}" />
                    <DataGridColumnHeadersPresenter Name="PART_ColumnHeadersPresenter" Grid.Column="1"
                        Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}},Path=HeadersVisibility,Converter={x:Static DataGrid.HeadersVisibilityConverter},ConverterParameter={x:Static DataGridHeadersVisibility.Column}}" />
                    <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Grid.Row="1" Grid.ColumnSpan="2"
                        ScrollContentPresenter.CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}" />
                    <ScrollBar Name="PART_VerticalScrollBar" Grid.Row="1" Grid.Column="2"
                        ScrollBar.Orientation="Vertical"
                        RangeBase.Maximum="{TemplateBinding ScrollViewer.ScrollableHeight}"
                        ScrollBar.ViewportSize="{TemplateBinding ScrollViewer.ViewportHeight}"
                        Visibility="{TemplateBinding ScrollViewer.ComputedVerticalScrollBarVisibility}"
                        RangeBase.Value="{Binding Path=VerticalOffset,RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}" />
                    <Grid Grid.Row="2" Grid.Column="1">
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition
                            Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}},Path=NonFrozenColumnsViewportHorizontalOffset}" />
                        <ColumnDefinition Width="*" />
                      </Grid.ColumnDefinitions>
                      <ScrollBar Name="PART_HorizontalScrollBar" Grid.Column="1" ScrollBar.Orientation="Horizontal"
                          RangeBase.Maximum="{TemplateBinding ScrollViewer.ScrollableWidth}"
                          ScrollBar.ViewportSize="{TemplateBinding ScrollViewer.ViewportWidth}"
                          Visibility="{TemplateBinding ScrollViewer.ComputedHorizontalScrollBarVisibility}"
                          RangeBase.Value="{Binding Path=HorizontalOffset,RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}" />
                    </Grid>
                  </Grid>
                </ControlTemplate>
              </Control.Template>
              <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </ScrollViewer>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="ItemsControl.IsGrouping" Value="True" />
          <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False" />
        </MultiTrigger.Conditions>
        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
      </MultiTrigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{x:Type DataGridColumnHeadersPresenter}" TargetType="{x:Type DataGridColumnHeadersPresenter}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridColumnHeadersPresenter}">
          <Grid>
            <DataGridColumnHeader Name="PART_FillerColumnHeader" IsHitTestVisible="False" />
            <ItemsPresenter />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ê" TargetType="{x:Type Thumb}">
    <Setter Property="Width" Value="8" />
    <Setter Property="Background" Value="#00FFFFFF" />
    <Setter Property="Cursor" Value="SizeWE" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ë" TargetType="{x:Type Thumb}">
    <Setter Property="Height" Value="8" />
    <Setter Property="Background" Value="#00FFFFFF" />
    <Setter Property="Cursor" Value="SizeNS" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Static DataGridColumnHeader.ColumnFloatingHeaderStyleKey}" TargetType="{x:Type Control}">
    <Setter Property="Opacity" Value="0.6" />
    <Setter Property="BorderBrush" Value="#FF688CAF" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Control}">
          <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"
              Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
            <Grid>
              <Canvas Name="PART_VisualBrushCanvas" Margin="{TemplateBinding Margin}" />
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Static DataGridColumnHeader.ColumnHeaderDropSeparatorStyleKey}" TargetType="{x:Type Separator}">
    <Setter Property="Background" Value="#FF000080" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Separator}">
          <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type DataGridRow}" TargetType="{x:Type DataGridRow}">
    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
    <Setter Property="DataGridRow.ValidationErrorTemplate">
      <Setter.Value>
        <ControlTemplate>
          <TextBlock Margin="2,0,0,0" VerticalAlignment="Center" Foreground="#FFFF0000" Text="!" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridRow}">
          <Border x:Name="DGR_Border" Background="{TemplateBinding Background}"
              BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
              SnapsToDevicePixels="True">
            <SelectiveScrollingGrid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
              </Grid.RowDefinitions>
              <DataGridCellsPresenter Grid.Column="1" ItemsControl.ItemsPanel="{TemplateBinding DataGridRow.ItemsPanel}"
                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
              <DataGridDetailsPresenter Grid.Column="1" Grid.Row="1"
                  Visibility="{TemplateBinding DataGridRow.DetailsVisibility}"
                  SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}},Path=AreRowDetailsFrozen,Converter={x:Static DataGrid.RowDetailsScrollingConverter},ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}}" />
              <DataGridRowHeader SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical" Grid.RowSpan="2"
                  Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}},Path=HeadersVisibility,Converter={x:Static DataGrid.HeadersVisibilityConverter},ConverterParameter={x:Static DataGridHeadersVisibility.Row}}" />
            </SelectiveScrollingGrid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="DataGridRow.IsNewItem" Value="True">
        <Setter Property="Margin"
            Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}},Path=NewItemMargin}" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{x:Type DataGridCellsPresenter}" TargetType="{x:Type DataGridCellsPresenter}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridCellsPresenter}">
          <ItemsPresenter />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <SolidColorBrush x:Key="{x:Static DataGrid.FocusBorderBrushKey}" Color="#FF000000" />
  <Thickness x:Key="ì">
    1.5
  </Thickness>
  <Style x:Key="{x:Type DataGridCell}" TargetType="{x:Type DataGridCell}">
    <Setter Property="Background" Value="#00FFFFFF" />
    <Setter Property="BorderBrush" Value="#00FFFFFF" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridCell}">
          <Border Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
          </Border>
          <ControlTemplate.Triggers>
            <!--<MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding Path=(base:AccessibilitySwitches.UseNetFx472CompatibleAccessibilityFeatures)}"
                           Value="false" />
                <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}"
                           Value="true" />
                <Condition Binding="{Binding Path=IsKeyboardFocused,RelativeSource={RelativeSource Self}}"
                           Value="true" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="Bd"
                      Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"
                      Property="BorderBrush" />
              <Setter TargetName="Bd"
                      Value="{StaticResource ì}"
                      Property="BorderThickness" />
            </MultiDataTrigger>-->
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="DataGridCell.IsSelected" Value="True">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
      </Trigger>
      <Trigger Property="IsKeyboardFocusWithin" Value="True">
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static DataGrid.FocusBorderBrushKey}}" />
      </Trigger>
      <!--<MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="DataGridCell.IsSelected"
                     Value="True" />
          <Condition Property="Selector.IsSelectionActive"
                     Value="False" />
        </MultiTrigger.Conditions>
        <Setter Property="Background"
                Value="{DynamicResource {x:Static InternalSystemColorsExtendedStart}}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource {x:Static  InternalSystemColorsExtendedStart}}" />
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static  SystemColors.InactiveSelectionHighlightBrush}}" />
      </MultiTrigger>-->
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
      </Trigger>
      <!--<MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding Path=(base:AccessibilitySwitches.UseNetFx47CompatibleAccessibilityFeatures)}"
                     Value="false" />
          <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}"
                     Value="true" />
        </MultiDataTrigger.Conditions>
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource è}" />
      </MultiDataTrigger>-->
    </Style.Triggers>
  </Style>
  <Style x:Key="{x:Static DataGridComboBoxColumn.TextBlockComboBoxStyleKey}" TargetType="{x:Type ComboBox}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ComboBox}">
          <ContentPresenter Margin="1,1,1,1" Content="{TemplateBinding ComboBox.SelectionBoxItem}"
              ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
              ContentTemplateSelector="{TemplateBinding ItemsControl.ItemTemplateSelector}"
              ContentStringFormat="{TemplateBinding ComboBox.SelectionBoxItemStringFormat}"
              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" IsHitTestVisible="False" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type DataGridColumnHeader}" TargetType="{x:Type DataGridColumnHeader}">
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
          <Grid>
            <theme:DataGridHeaderBorder SortDirection="{TemplateBinding DataGridColumnHeader.SortDirection}"
                IsHovered="{TemplateBinding IsMouseOver}" IsPressed="{TemplateBinding ButtonBase.IsPressed}"
                IsClickable="{TemplateBinding DataGridColumnHeader.CanUserSort}"
                Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}"
                SeparatorVisibility="{TemplateBinding DataGridColumnHeader.SeparatorVisibility}"
                SeparatorBrush="{TemplateBinding DataGridColumnHeader.SeparatorBrush}">
              <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" />
            </theme:DataGridHeaderBorder>
            <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Style="{StaticResource ê}" />
            <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Style="{StaticResource ê}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type DataGridRowHeader}" TargetType="{x:Type DataGridRowHeader}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridRowHeader}">
          <Grid>
            <theme:DataGridHeaderBorder IsSelected="{TemplateBinding DataGridRowHeader.IsRowSelected}"
                IsHovered="{TemplateBinding IsMouseOver}" IsPressed="{TemplateBinding ButtonBase.IsPressed}"
                p8:Border.Background="{TemplateBinding Background}"
                p8:Border.BorderBrush="{TemplateBinding BorderBrush}"
                p8:Border.BorderThickness="{TemplateBinding BorderThickness}"
                p8:Border.Padding="{TemplateBinding Padding}" Orientation="Horizontal"
                SeparatorVisibility="{TemplateBinding DataGridRowHeader.SeparatorVisibility}"
                SeparatorBrush="{TemplateBinding DataGridRowHeader.SeparatorBrush}"
                xmlns:p8="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
              <StackPanel StackPanel.Orientation="Horizontal">
                <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"
                    RecognizesAccessKey="True" />
                <Control SnapsToDevicePixels="False"
                    Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}},Path=Validation.HasError,Converter={StaticResource é}}"
                    Template="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}},Path=ValidationErrorTemplate}" />
              </StackPanel>
            </theme:DataGridHeaderBorder>
            <Thumb x:Name="PART_TopHeaderGripper" VerticalAlignment="Top" Style="{StaticResource ë}" />
            <Thumb x:Name="PART_BottomHeaderGripper" VerticalAlignment="Bottom" Style="{StaticResource ë}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type DatePicker}" TargetType="{x:Type DatePicker}">
    <Setter Property="Foreground" Value="#FF333333" />
    <Setter Property="DatePicker.IsTodayHighlighted" Value="True" />
    <Setter Property="DatePicker.SelectedDateFormat" Value="Short" />
    <Setter Property="Background" Value="#00FFFFFF" />
    <Setter Property="Padding" Value="2" />
    <Setter Property="BorderBrush">
      <Setter.Value>
        <LinearGradientBrush EndPoint=".5,0" StartPoint=".5,1">
          <GradientStop Color="#FFA3AEB9" Offset="0" />
          <GradientStop Color="#FF8399A9" Offset="0.375" />
          <GradientStop Color="#FF718597" Offset="0.375" />
          <GradientStop Color="#FF617584" Offset="1" />
        </LinearGradientBrush>
      </Setter.Value>
    </Setter>
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DatePicker}">
          <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
              Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="PART_DisabledVisual" Storyboard.TargetProperty="Opacity"
                        DoubleAnimation.To="1" Timeline.Duration="0" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Decorator.Child>
              <Grid x:Name="PART_Root" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                <FrameworkElement.Resources>
                  <ResourceDictionary>
                    <SolidColorBrush x:Key="í" Color="#A5FFFFFF" />
                    <ControlTemplate x:Key="î" TargetType="{x:Type Button}">
                      <Grid>
                        <VisualStateManager.VisualStateGroups>
                          <VisualStateGroup x:Name="CommonStates">
                            <VisualStateGroup.Transitions>
                              <VisualTransition VisualTransition.GeneratedDuration="0" />
                              <VisualTransition VisualTransition.To="MouseOver"
                                  VisualTransition.GeneratedDuration="0:0:0.1" />
                              <VisualTransition VisualTransition.To="Pressed"
                                  VisualTransition.GeneratedDuration="0:0:0.1" />
                            </VisualStateGroup.Transitions>
                            <VisualState x:Name="Normal" />
                            <VisualState x:Name="MouseOver">
                              <Storyboard>
                                <ColorAnimation Timeline.Duration="0" Storyboard.TargetName="Background"
                                    Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                    ColorAnimation.To="#FF448DCA" />
                                <ColorAnimationUsingKeyFrames Timeline.BeginTime="0" Timeline.Duration="00:00:00.001"
                                    Storyboard.TargetName="BackgroundGradient"
                                    Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(Color)">
                                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="0" ColorKeyFrame.Value="#7FFFFFFF" />
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Timeline.BeginTime="0" Timeline.Duration="00:00:00.001"
                                    Storyboard.TargetName="BackgroundGradient"
                                    Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(Color)">
                                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="0" ColorKeyFrame.Value="#CCFFFFFF" />
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Timeline.BeginTime="0" Timeline.Duration="00:00:00.001"
                                    Storyboard.TargetName="BackgroundGradient"
                                    Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(Color)">
                                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="0" ColorKeyFrame.Value="#F2FFFFFF" />
                                </ColorAnimationUsingKeyFrames>
                              </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Pressed">
                              <Storyboard>
                                <ColorAnimationUsingKeyFrames Timeline.BeginTime="0" Timeline.Duration="00:00:00.001"
                                    Storyboard.TargetName="Background"
                                    Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="0" ColorKeyFrame.Value="#FF448DCA" />
                                </ColorAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="0" Timeline.Duration="00:00:00.001"
                                    Storyboard.TargetName="Highlight" Storyboard.TargetProperty="(UIElement.Opacity)">
                                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="0" DoubleKeyFrame.Value="1" />
                                </DoubleAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Timeline.BeginTime="0" Timeline.Duration="00:00:00.001"
                                    Storyboard.TargetName="BackgroundGradient"
                                    Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(Color)">
                                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="0" ColorKeyFrame.Value="#EAFFFFFF" />
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Timeline.BeginTime="0" Timeline.Duration="00:00:00.001"
                                    Storyboard.TargetName="BackgroundGradient"
                                    Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(Color)">
                                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="0" ColorKeyFrame.Value="#C6FFFFFF" />
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Timeline.BeginTime="0" Timeline.Duration="00:00:00.001"
                                    Storyboard.TargetName="BackgroundGradient"
                                    Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(Color)">
                                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="0" ColorKeyFrame.Value="#6BFFFFFF" />
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Timeline.BeginTime="0" Timeline.Duration="00:00:00.001"
                                    Storyboard.TargetName="BackgroundGradient"
                                    Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(Color)">
                                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="0" ColorKeyFrame.Value="#F4FFFFFF" />
                                </ColorAnimationUsingKeyFrames>
                              </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Disabled" />
                          </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid Height="18" Width="19" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0"
                            Panel.Background="#11FFFFFF" FlowDirection="LeftToRight">
                          <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="20*" />
                            <ColumnDefinition Width="20*" />
                            <ColumnDefinition Width="20*" />
                            <ColumnDefinition Width="20*" />
                          </Grid.ColumnDefinitions>
                          <Grid.RowDefinitions>
                            <RowDefinition Height="23*" />
                            <RowDefinition Height="19*" />
                            <RowDefinition Height="19*" />
                            <RowDefinition Height="19*" />
                          </Grid.RowDefinitions>
                          <Border x:Name="Highlight" Margin="-1" Grid.ColumnSpan="4" Grid.Row="0" Grid.RowSpan="4"
                              BorderThickness="1" BorderBrush="#FF45D6FA" Opacity="0" CornerRadius="0,0,1,1" />
                          <Border x:Name="Background" Margin="0,-1,0,0" Grid.ColumnSpan="4" Grid.Row="1"
                              Grid.RowSpan="3" BorderThickness="1" BorderBrush="#FFFFFFFF" Opacity="1" CornerRadius=".5"
                              Background="#FF1F3B53" />
                          <Border x:Name="BackgroundGradient" Margin="0,-1,0,0" Grid.ColumnSpan="4" Grid.Row="1"
                              Grid.RowSpan="3" BorderThickness="1" BorderBrush="#BF000000" Opacity="1" CornerRadius=".5">
                            <Border.Background>
                              <LinearGradientBrush StartPoint=".7,0" EndPoint=".7,1">
                                <GradientStop Color="#FFFFFFFF" Offset="0" />
                                <GradientStop Color="#F9FFFFFF" Offset="0.375" />
                                <GradientStop Color="#E5FFFFFF" Offset="0.625" />
                                <GradientStop Color="#C6FFFFFF" Offset="1" />
                              </LinearGradientBrush>
                            </Border.Background>
                          </Border>
                          <Rectangle Grid.ColumnSpan="4" Grid.RowSpan="1" StrokeThickness="1">
                            <Shape.Stroke>
                              <LinearGradientBrush EndPoint="0.48,-1" StartPoint="0.48,1.25">
                                <GradientStop Color="#FF494949" />
                                <GradientStop Color="#FF9F9F9F" Offset="1" />
                              </LinearGradientBrush>
                            </Shape.Stroke>
                            <Shape.Fill>
                              <LinearGradientBrush EndPoint="0.3,-1.1" StartPoint="0.46,1.6">
                                <GradientStop Color="#FF4084BD" />
                                <GradientStop Color="#FFAFCFEA" Offset="1" />
                              </LinearGradientBrush>
                            </Shape.Fill>
                          </Rectangle>
                          <Path HorizontalAlignment="Center" Margin="4,3,4,3" VerticalAlignment="Center"
                              RenderTransformOrigin="0.5,0.5" Grid.Column="0" Grid.Row="1" Fill="#FF2F2F2F"
                              Stretch="Fill"
                              Data="M11.426758,8.4305077L11.749023,8.4305077 11.749023,16.331387 10.674805,16.331387 10.674805,10.299648 9.0742188,11.298672 9.0742188,10.294277C9.4788408,10.090176 9.9094238,9.8090878 10.365967,9.4510155 10.82251,9.0929432 11.176106,8.7527733 11.426758,8.4305077z M14.65086,8.4305077L18.566387,8.4305077 18.566387,9.3435936 15.671368,9.3435936 15.671368,11.255703C15.936341,11.058764 16.27293,10.960293 16.681133,10.960293 17.411602,10.960293 17.969301,11.178717 18.354229,11.615566 18.739157,12.052416 18.931622,12.673672 18.931622,13.479336 18.931622,15.452317 18.052553,16.438808 16.294415,16.438808 15.560365,16.438808 14.951641,16.234707 14.468243,15.826504L14.881817,14.929531C15.368796,15.326992 15.837872,15.525723 16.289043,15.525723 17.298809,15.525723 17.803692,14.895514 17.803692,13.635098 17.803692,12.460618 17.305971,11.873379 16.310528,11.873379 15.83071,11.873379 15.399232,12.079271 15.016094,12.491055L14.65086,12.238613z"
                              Grid.ColumnSpan="4" Grid.RowSpan="3" />
                          <Ellipse HorizontalAlignment="Center" VerticalAlignment="Center" Fill="#FFFFFFFF"
                              StrokeThickness="0" Grid.ColumnSpan="4" Width="3" Height="3" />
                          <Border x:Name="DisabledVisual" Grid.ColumnSpan="4" Grid.Row="0" Grid.RowSpan="4"
                              BorderThickness="1" BorderBrush="#B2FFFFFF" Opacity="0" CornerRadius="0,0,.5,.5" />
                        </Grid>
                      </Grid>
                    </ControlTemplate>
                  </ResourceDictionary>
                </FrameworkElement.Resources>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Button x:Name="PART_Button" Grid.Row="0" Grid.Column="1" Template="{StaticResource î}"
                    Foreground="{TemplateBinding Foreground}" Width="20" Margin="3,0,3,0" Focusable="False"
                    VerticalAlignment="Top" HorizontalAlignment="Left" />
                <DatePickerTextBox x:Name="PART_TextBox" Grid.Row="0" Grid.Column="0"
                    HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"
                    Focusable="{TemplateBinding Focusable}" />
                <Grid x:Name="PART_DisabledVisual" Opacity="0" IsHitTestVisible="False" Grid.Row="0" Grid.Column="0"
                    Grid.ColumnSpan="2">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                  </Grid.ColumnDefinitions>
                  <Rectangle Grid.Row="0" Grid.Column="0" RadiusX="1" RadiusY="1" Fill="#A5FFFFFF" />
                  <Rectangle Grid.Row="0" Grid.Column="1" RadiusX="1" RadiusY="1" Fill="#A5FFFFFF"
                      Height="18" Width="19" Margin="3,0,3,0" />
                  <Popup x:Name="PART_Popup" Placement="Bottom" StaysOpen="False"
                      AllowsTransparency="True" PlacementTarget="{Binding ElementName=PART_TextBox}" />
                </Grid>
              </Grid>
            </Decorator.Child>
          </Border>
          <ControlTemplate.Triggers>
            <DataTrigger Value="false" Binding="{Binding Path=(SystemParameters.HighContrast)}">
              <Setter TargetName="PART_TextBox"
                  Value="{Binding Path=Foreground,RelativeSource={RelativeSource TemplatedParent}}"
                  Property="Foreground" />
            </DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type DatePickerTextBox}" TargetType="{x:Type DatePickerTextBox}">
    <Style.Triggers>
      <!--<DataTrigger Binding="{Binding Path=(base:AccessibilitySwitches.UseNetFx472CompatibleAccessibilityFeatures)}"
                   Value="false">
        <Setter Property="AutomationProperties.Name"
                Value="{Binding Path=(AutomationProperties.Name),Mode=OneWay,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type DatePicker}}}" />
        <Setter Property="AutomationProperties.LabeledBy"
                Value="{Binding Path=(AutomationProperties.LabeledBy),Mode=OneWay,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type DatePicker}}}" />
        <Setter Property="AutomationProperties.HelpText"
                Value="{Binding Path=(AutomationProperties.HelpText),Mode=OneWay,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type DatePicker}}}" />
      </DataTrigger>-->
    </Style.Triggers>
    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
    <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DatePickerTextBox}">
          <Grid>
            <FrameworkElement.Resources>
              <ResourceDictionary>
                <SolidColorBrush x:Key="ï" Color="#FFAAAAAA" />
              </ResourceDictionary>
            </FrameworkElement.Resources>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition VisualTransition.GeneratedDuration="0" />
                  <VisualTransition VisualTransition.To="MouseOver" VisualTransition.GeneratedDuration="0:0:0.1" />
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ColorAnimation Storyboard.TargetName="ContentElement"
                        Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                        ColorAnimation.To="#FF99C1E2" Timeline.Duration="0" />
                    <ColorAnimation Storyboard.TargetName="watermark_decorator"
                        Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                        ColorAnimation.To="#FF99C1E2" Timeline.Duration="0" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="WatermarkStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition VisualTransition.GeneratedDuration="0" />
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Unwatermarked" />
                <VisualState x:Name="Watermarked">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="ContentElement" Storyboard.TargetProperty="Opacity"
                        DoubleAnimation.To="0" Timeline.Duration="0" />
                    <DoubleAnimation Storyboard.TargetName="PART_Watermark" Storyboard.TargetProperty="Opacity"
                        DoubleAnimation.To="1" Timeline.Duration="0" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition VisualTransition.GeneratedDuration="0" />
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Unfocused" />
                <VisualState x:Name="Focused">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Opacity"
                        DoubleAnimation.To="1" Timeline.Duration="0" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="Border" Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                Padding="{TemplateBinding Padding}" CornerRadius="1" Opacity="1">
              <Grid x:Name="WatermarkContent" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                <Border x:Name="ContentElement" BorderThickness="1">
                  <Border.BorderBrush>
                    <SolidColorBrush Color="#FFFFFFFF" />
                  </Border.BorderBrush>
                </Border>
                <Border x:Name="watermark_decorator" BorderThickness="1">
                  <Border.BorderBrush>
                    <SolidColorBrush Color="#FFFFFFFF" />
                  </Border.BorderBrush>
                  <ContentControl x:Name="PART_Watermark" Opacity="0" Focusable="False" IsHitTestVisible="False"
                      Padding="2" />
                </Border>
                <ScrollViewer x:Name="PART_ContentHost" Margin="0"
                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                <Border x:Name="FocusVisual" BorderBrush="#FF45D6FA" CornerRadius="1" Opacity="0"
                    IsHitTestVisible="False" />
              </Grid>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <LinearGradientBrush x:Key="ð" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="White" Offset="0" />
      <GradientStop Color="#FFBFBFBF" Offset="0.5" />
      <GradientStop Color="#FF878787" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="FocusVisualStyle" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FFF0F8FE" Offset="0" />
      <GradientStop Color="#FFE0F3FE" Offset="0.3" />
      <GradientStop Color="#FF6FA7C5" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ò" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FFDCF0FA" Offset="0" />
      <GradientStop Color="#FFC5E6F7" Offset="0.2" />
      <GradientStop Color="#FF5690D0" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="ó" Color="DarkGray" />
  <SolidColorBrush x:Key="ô" Color="Transparent" />
  <SolidColorBrush x:Key="õ" Color="#666" />
  <SolidColorBrush x:Key="ö" Color="#FF3C7FB1" />
  <SolidColorBrush x:Key="÷" Color="Transparent" />
  <SolidColorBrush x:Key="ø" Color="#222" />
  <SolidColorBrush x:Key="ù" Color="#FF526C7B" />
  <SolidColorBrush x:Key="ú" Color="Transparent" />
  <SolidColorBrush x:Key="û" Color="#FF003366" />
  <SolidColorBrush x:Key="ü" Color="DarkGray" />
  <SolidColorBrush x:Key="ý" Color="Transparent" />
  <SolidColorBrush x:Key="þ" Color="#666" />
  <Style x:Key="ÿ">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Border>
            <Rectangle Margin="0" StrokeThickness="1" Stroke="#FF000000" StrokeDashArray="1 2"
                SnapsToDevicePixels="True" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="Ā" TargetType="{x:Type ToggleButton}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Padding="{TemplateBinding Padding}">
            <Grid Panel.Background="#00FFFFFF" SnapsToDevicePixels="False">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="19" />
                <ColumnDefinition Width="*" />
              </Grid.ColumnDefinitions>
              <Ellipse x:Name="circle" Width="19" Height="19" Stroke="{StaticResource ó}" Fill="{StaticResource ô}"
                  HorizontalAlignment="Center" VerticalAlignment="Center" />
              <Path x:Name="arrow" HorizontalAlignment="Center" VerticalAlignment="Center" Stroke="{StaticResource õ}"
                  StrokeThickness="2" SnapsToDevicePixels="False" Data="M1,1.5L4.5,5 8,1.5" />
              <ContentPresenter Grid.Column="1" Margin="4,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center"
                  SnapsToDevicePixels="True" RecognizesAccessKey="True" />
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <Setter TargetName="arrow" Property="Path.Data" Value="M1,4.5L4.5,1 8,4.5" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Value="{StaticResource ö}" TargetName="circle" Property="Shape.Stroke" />
              <Setter Value="{StaticResource ÷}" TargetName="circle" Property="Shape.Fill" />
              <Setter Value="{StaticResource ø}" TargetName="arrow" Property="Shape.Stroke" />
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
              <Setter Value="{StaticResource ù}" TargetName="circle" Property="Shape.Stroke" />
              <Setter TargetName="circle" Property="Shape.StrokeThickness" Value="1.5" />
              <Setter Value="{StaticResource ú}" TargetName="circle" Property="Shape.Fill" />
              <Setter Value="{StaticResource û}" TargetName="arrow" Property="Shape.Stroke" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Value="{StaticResource ü}" TargetName="circle" Property="Shape.Stroke" />
              <Setter Value="{StaticResource ý}" TargetName="circle" Property="Shape.Fill" />
              <Setter Value="{StaticResource þ}" TargetName="arrow" Property="Shape.Stroke" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ā" TargetType="{x:Type ToggleButton}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Padding="{TemplateBinding Padding}">
            <Grid Panel.Background="#00FFFFFF" SnapsToDevicePixels="False">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="19" />
                <ColumnDefinition Width="*" />
              </Grid.ColumnDefinitions>
              <Grid>
                <FrameworkElement.LayoutTransform>
                  <TransformGroup>
                    <TransformGroup.Children>
                      <TransformCollection>
                        <RotateTransform RotateTransform.Angle="180" />
                      </TransformCollection>
                    </TransformGroup.Children>
                  </TransformGroup>
                </FrameworkElement.LayoutTransform>
                <Ellipse x:Name="circle" Width="19" Height="19" Stroke="{StaticResource ó}" Fill="{StaticResource ô}"
                    HorizontalAlignment="Center" VerticalAlignment="Center" />
                <Path x:Name="arrow" HorizontalAlignment="Center" VerticalAlignment="Center" Stroke="{StaticResource õ}"
                    StrokeThickness="2" SnapsToDevicePixels="False" Data="M1,1.5L4.5,5 8,1.5" />
              </Grid>
              <ContentPresenter Grid.Column="1" Margin="4,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center"
                  SnapsToDevicePixels="True" RecognizesAccessKey="True" />
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <Setter TargetName="arrow" Property="Path.Data" Value="M1,4.5L4.5,1 8,4.5" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Value="{StaticResource ö}" TargetName="circle" Property="Shape.Stroke" />
              <Setter Value="{StaticResource ÷}" TargetName="circle" Property="Shape.Fill" />
              <Setter Value="{StaticResource ø}" TargetName="arrow" Property="Shape.Stroke" />
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
              <Setter Value="{StaticResource ù}" TargetName="circle" Property="Shape.Stroke" />
              <Setter TargetName="circle" Property="Shape.StrokeThickness" Value="1.5" />
              <Setter Value="{StaticResource ú}" TargetName="circle" Property="Shape.Fill" />
              <Setter Value="{StaticResource û}" TargetName="arrow" Property="Shape.Stroke" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Value="{StaticResource ü}" TargetName="circle" Property="Shape.Stroke" />
              <Setter Value="{StaticResource ý}" TargetName="circle" Property="Shape.Fill" />
              <Setter Value="{StaticResource þ}" TargetName="arrow" Property="Shape.Stroke" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="Ă" TargetType="{x:Type ToggleButton}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Padding="{TemplateBinding Padding}">
            <Grid Panel.Background="#00FFFFFF" SnapsToDevicePixels="False">
              <Grid.RowDefinitions>
                <RowDefinition Height="19" />
                <RowDefinition Height="*" />
              </Grid.RowDefinitions>
              <Grid>
                <FrameworkElement.LayoutTransform>
                  <TransformGroup>
                    <TransformGroup.Children>
                      <TransformCollection>
                        <RotateTransform RotateTransform.Angle="90" />
                      </TransformCollection>
                    </TransformGroup.Children>
                  </TransformGroup>
                </FrameworkElement.LayoutTransform>
                <Ellipse x:Name="circle" Width="19" Height="19" Stroke="{StaticResource ó}" Fill="{StaticResource ô}"
                    HorizontalAlignment="Center" VerticalAlignment="Center" />
                <Path x:Name="arrow" HorizontalAlignment="Center" VerticalAlignment="Center" Stroke="{StaticResource õ}"
                    StrokeThickness="2" SnapsToDevicePixels="False" Data="M1,1.5L4.5,5 8,1.5" />
              </Grid>
              <ContentPresenter Grid.Row="1" Margin="0,4,0,0" HorizontalAlignment="Center" VerticalAlignment="Top"
                  SnapsToDevicePixels="True" RecognizesAccessKey="True" />
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <Setter TargetName="arrow" Property="Path.Data" Value="M1,4.5L4.5,1 8,4.5" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Value="{StaticResource ö}" TargetName="circle" Property="Shape.Stroke" />
              <Setter Value="{StaticResource ÷}" TargetName="circle" Property="Shape.Fill" />
              <Setter Value="{StaticResource ø}" TargetName="arrow" Property="Shape.Stroke" />
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
              <Setter Value="{StaticResource ù}" TargetName="circle" Property="Shape.Stroke" />
              <Setter TargetName="circle" Property="Shape.StrokeThickness" Value="1.5" />
              <Setter Value="{StaticResource ú}" TargetName="circle" Property="Shape.Fill" />
              <Setter Value="{StaticResource û}" TargetName="arrow" Property="Shape.Stroke" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Value="{StaticResource ü}" TargetName="circle" Property="Shape.Stroke" />
              <Setter Value="{StaticResource ý}" TargetName="circle" Property="Shape.Fill" />
              <Setter Value="{StaticResource þ}" TargetName="arrow" Property="Shape.Stroke" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ă" TargetType="{x:Type ToggleButton}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Padding="{TemplateBinding Padding}">
            <Grid Panel.Background="#00FFFFFF" SnapsToDevicePixels="False">
              <Grid.RowDefinitions>
                <RowDefinition Height="19" />
                <RowDefinition Height="*" />
              </Grid.RowDefinitions>
              <Grid>
                <FrameworkElement.LayoutTransform>
                  <TransformGroup>
                    <TransformGroup.Children>
                      <TransformCollection>
                        <RotateTransform RotateTransform.Angle="-90" />
                      </TransformCollection>
                    </TransformGroup.Children>
                  </TransformGroup>
                </FrameworkElement.LayoutTransform>
                <Ellipse x:Name="circle" Width="19" Height="19" Stroke="{StaticResource ó}" Fill="{StaticResource ô}"
                    HorizontalAlignment="Center" VerticalAlignment="Center" />
                <Path x:Name="arrow" HorizontalAlignment="Center" VerticalAlignment="Center" Stroke="{StaticResource õ}"
                    StrokeThickness="2" SnapsToDevicePixels="False" Data="M1,1.5L4.5,5 8,1.5" />
              </Grid>
              <ContentPresenter Grid.Row="1" Margin="0,4,0,0" HorizontalAlignment="Center" VerticalAlignment="Top"
                  SnapsToDevicePixels="True" RecognizesAccessKey="True" />
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <Setter TargetName="arrow" Property="Path.Data" Value="M1,4.5L4.5,1 8,4.5" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Value="{StaticResource ö}" TargetName="circle" Property="Shape.Stroke" />
              <Setter Value="{StaticResource ÷}" TargetName="circle" Property="Shape.Fill" />
              <Setter Value="{StaticResource ø}" TargetName="arrow" Property="Shape.Stroke" />
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
              <Setter Value="{StaticResource ù}" TargetName="circle" Property="Shape.Stroke" />
              <Setter TargetName="circle" Property="Shape.StrokeThickness" Value="1.5" />
              <Setter Value="{StaticResource ú}" TargetName="circle" Property="Shape.Fill" />
              <Setter Value="{StaticResource û}" TargetName="arrow" Property="Shape.Stroke" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Value="{StaticResource ü}" TargetName="circle" Property="Shape.Stroke" />
              <Setter Value="{StaticResource ý}" TargetName="circle" Property="Shape.Fill" />
              <Setter Value="{StaticResource þ}" TargetName="arrow" Property="Shape.Stroke" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type Expander}" TargetType="{x:Type Expander}">
    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Property="Background" Value="#00FFFFFF" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="VerticalContentAlignment" Value="Stretch" />
    <Setter Property="BorderBrush" Value="#00FFFFFF" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Expander}">
          <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
              Background="{TemplateBinding Background}" CornerRadius="3" SnapsToDevicePixels="True">
            <DockPanel>
              <ToggleButton x:Name="HeaderSite" DockPanel.Dock="Top" Margin="1" MinWidth="0" MinHeight="0"
                  Style="{StaticResource Ā}" FocusVisualStyle="{StaticResource ÿ}"
                  ContentControl.Content="{TemplateBinding HeaderedContentControl.Header}"
                  ContentControl.ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}"
                  ContentControl.ContentTemplateSelector="{TemplateBinding HeaderedContentControl.HeaderTemplateSelector}"
                  Foreground="{TemplateBinding Foreground}" Padding="{TemplateBinding Padding}"
                  FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}"
                  FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}"
                  FontWeight="{TemplateBinding FontWeight}"
                  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                  ToggleButton.IsChecked="{Binding Path=IsExpanded,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" />
              <ContentPresenter Name="ExpandSite" DockPanel.Dock="Bottom" Visibility="Collapsed" Focusable="False"
                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" />
            </DockPanel>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="Expander.IsExpanded" Value="True">
              <Setter TargetName="ExpandSite" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="Expander.ExpandDirection" Value="Right">
              <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Right" />
              <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Left" />
              <Setter Value="{StaticResource ă}" TargetName="HeaderSite" Property="Style" />
            </Trigger>
            <Trigger Property="Expander.ExpandDirection" Value="Up">
              <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Top" />
              <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Bottom" />
              <Setter Value="{StaticResource ā}" TargetName="HeaderSite" Property="Style" />
            </Trigger>
            <Trigger Property="Expander.ExpandDirection" Value="Left">
              <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Left" />
              <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Right" />
              <Setter Value="{StaticResource Ă}" TargetName="HeaderSite" Property="Style" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Static SystemParameters.FocusVisualStyleKey}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
              StrokeDashArray="1 2" SnapsToDevicePixels="True" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="Ą">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Grid>
            <Rectangle Margin="13,0,1,1" StrokeThickness="1"
                Stroke="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" SnapsToDevicePixels="True" />
            <Rectangle Margin="13,0,1,1" StrokeThickness="1"
                Stroke="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" StrokeDashArray="2 2"
                SnapsToDevicePixels="True" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ą">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Grid>
            <Rectangle Margin="1,0,1,1" StrokeThickness="1"
                Stroke="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" SnapsToDevicePixels="True" />
            <Rectangle Margin="1,0,1,1" StrokeThickness="1"
                Stroke="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" StrokeDashArray="2 2"
                SnapsToDevicePixels="True" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="Ď">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Fill="#80000000" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type GridSplitter}" TargetType="{x:Type GridSplitter}">
    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
    <Setter Property="GridSplitter.PreviewStyle" Value="{StaticResource Ď}" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type GridSplitter}">
          <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
              Background="{TemplateBinding Background}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <BorderGapMaskConverter x:Key="ď" />
  <Style x:Key="{x:Type GroupBox}" TargetType="{x:Type GroupBox}">
    <Setter Property="BorderBrush" Value="#FFD5DFE5" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type GroupBox}">
          <Grid SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="6" />
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="6" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="Auto" />
              <RowDefinition Height="*" />
              <RowDefinition Height="6" />
            </Grid.RowDefinitions>
            <Border CornerRadius="4" Grid.Row="1" Grid.RowSpan="3" Grid.Column="0" Grid.ColumnSpan="4"
                BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="#00FFFFFF"
                Background="{TemplateBinding Background}" />
            <Border CornerRadius="4" Grid.Row="1" Grid.RowSpan="3" Grid.ColumnSpan="4"
                BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="#FFFFFFFF">
              <UIElement.OpacityMask>
                <MultiBinding MultiBinding.Converter="{StaticResource ď}" MultiBinding.ConverterParameter="7">
                  <Binding ElementName="Header" Path="ActualWidth" />
                  <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}" />
                  <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}" />
                </MultiBinding>
              </UIElement.OpacityMask>
              <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"
                  CornerRadius="3">
                <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="#FFFFFFFF" CornerRadius="2" />
              </Border>
            </Border>
            <Border x:Name="Header" Padding="3,1,3,0" Grid.Row="0" Grid.RowSpan="2" Grid.Column="1">
              <ContentPresenter ContentSource="Header" RecognizesAccessKey="True"
                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </Border>
            <ContentPresenter Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" Margin="{TemplateBinding Padding}"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type GroupItem}" TargetType="{x:Type GroupItem}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type GroupItem}">
          <StackPanel>
            <ContentPresenter Name="PART_Header" />
            <ItemsPresenter x:Name="ItemsPresenter" Margin="5,0,0,0" />
          </StackPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type HeaderedContentControl}" TargetType="{x:Type HeaderedContentControl}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type HeaderedContentControl}">
          <StackPanel>
            <ContentPresenter ContentSource="Header" />
            <ContentPresenter />
          </StackPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type Hyperlink}" TargetType="{x:Type Hyperlink}">
    <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.HotTrackBrushKey}}" />
    <Setter Property="Inline.TextDecorations" Value="Underline" />
    <Style.Triggers>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="false" />
          <Condition Binding="{Binding Path=IsMouseOver,RelativeSource={RelativeSource Self}}"
              Value="true" />
        </MultiDataTrigger.Conditions>
        <Setter Property="TextElement.Foreground" Value="#FFFF0000" />
      </MultiDataTrigger>
      <!--<MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding Path=(base:AccessibilitySwitches.UseNetFx47CompatibleAccessibilityFeatures)}"
                     Value="true" />
          <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}"
                     Value="true" />
          <Condition Binding="{Binding Path=IsMouseOver,RelativeSource={RelativeSource Self}}"
                     Value="true" />
        </MultiDataTrigger.Conditions>
        <Setter Property="TextElement.Foreground"
                Value="#FFFF0000" />
      </MultiDataTrigger>-->
      <Trigger Property="ContentElement.IsEnabled" Value="False">
        <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
      </Trigger>
      <Trigger Property="ContentElement.IsEnabled" Value="True">
        <Setter Property="FrameworkContentElement.Cursor" Value="Hand" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{x:Type ItemsControl}" TargetType="{x:Type ItemsControl}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ItemsControl}">
          <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}"
              SnapsToDevicePixels="True">
            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type Label}" TargetType="{x:Type Label}">
    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Property="Background" Value="#00FFFFFF" />
    <Setter Property="Padding" Value="5" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Top" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Label}">
          <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}"
              BorderBrush="{TemplateBinding BorderBrush}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <SolidColorBrush x:Key="Đ" Color="#828790" />
  <Style x:Key="{x:Type ListBox}" TargetType="{x:Type ListBox}">
    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
    <Setter Property="BorderBrush" Value="{StaticResource Đ}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
    <Setter Property="ScrollViewer.PanningMode" Value="Both" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListBox}">
          <Border Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" Padding="1">
            <ScrollViewer Padding="{TemplateBinding Padding}" Focusable="False">
              <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </ScrollViewer>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
                  Property="Background" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="ItemsControl.IsGrouping" Value="True" />
                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False" />
              </MultiTrigger.Conditions>
              <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="đ">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Margin="0,1,0,1" StrokeThickness="1"
              Stroke="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" StrokeDashArray="1 2"
              SnapsToDevicePixels="True" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type ListBoxItem}" TargetType="{x:Type ListBoxItem}">
    <Setter Property="Background" Value="#00FFFFFF" />
    <Setter Property="HorizontalContentAlignment"
        Value="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Property="VerticalContentAlignment"
        Value="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Property="Padding" Value="2,0,0,0" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListBoxItem}">
          <Border Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}"
              SnapsToDevicePixels="True">
            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="ListBoxItem.IsSelected" Value="True">
              <Setter TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                  Property="Background" />
              <Setter Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Foreground" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="ListBoxItem.IsSelected" Value="True" />
                <Condition Property="Selector.IsSelectionActive" Value="False" />
              </MultiTrigger.Conditions>
              <Setter TargetName="Bd" Value="{DynamicResource InternalSystemColorsExtendedStart}"
                  Property="Background" />
              <Setter Value="{DynamicResource {x:Static  SystemColors.InactiveSelectionHighlightBrush}}"
                  Property="Foreground" />
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Foreground" />
            </Trigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition
                    Binding="{Binding Path=AccessibilitySwitches.UseNetFx47CompatibleAccessibilityFeatures}"
                    Value="false" />
                <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="true" />
              </MultiDataTrigger.Conditions>
              <Setter Value="{StaticResource đ}" Property="FocusVisualStyle" />
            </MultiDataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Static GridView.GridViewScrollViewerStyleKey}" TargetType="{x:Type ScrollViewer}">
    <Setter Property="Focusable" Value="False" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ScrollViewer}">
          <Grid Panel.Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="*" />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <DockPanel Margin="{TemplateBinding Padding}">
              <ScrollViewer DockPanel.Dock="Top" ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                  ScrollViewer.VerticalScrollBarVisibility="Hidden" Focusable="False">
                <GridViewHeaderRowPresenter Margin="2,0,2,0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                  <GridViewRowPresenterBase.Columns>
                    <Binding Path="TemplatedParent.View.Columns"
                        RelativeSource="{RelativeSource TemplatedParent}" />
                  </GridViewRowPresenterBase.Columns>
                </GridViewHeaderRowPresenter>
              </ScrollViewer>
              <ScrollContentPresenter Name="PART_ScrollContentPresenter"
                  KeyboardNavigation.DirectionalNavigation="Local" Content="{TemplateBinding ContentControl.Content}"
                  ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                  ScrollContentPresenter.CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}"
                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </DockPanel>
            <ScrollBar Name="PART_HorizontalScrollBar" ScrollBar.Orientation="Horizontal" Grid.Row="1"
                RangeBase.Minimum="0.0" RangeBase.Maximum="{TemplateBinding ScrollViewer.ScrollableWidth}"
                ScrollBar.ViewportSize="{TemplateBinding ScrollViewer.ViewportWidth}"
                Visibility="{TemplateBinding ScrollViewer.ComputedHorizontalScrollBarVisibility}" Cursor="Arrow"
                RangeBase.Value="{Binding Path=HorizontalOffset,RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}" />
            <ScrollBar Name="PART_VerticalScrollBar" ScrollBar.Orientation="Vertical" Grid.Column="1"
                RangeBase.Minimum="0.0" RangeBase.Maximum="{TemplateBinding ScrollViewer.ScrollableHeight}"
                ScrollBar.ViewportSize="{TemplateBinding ScrollViewer.ViewportHeight}"
                Visibility="{TemplateBinding ScrollViewer.ComputedVerticalScrollBarVisibility}" Cursor="Arrow"
                RangeBase.Value="{Binding Path=VerticalOffset,RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}" />
            <DockPanel Grid.Column="1" Grid.Row="1" DockPanel.LastChildFill="False"
                Panel.Background="{Binding Path=Background,ElementName=PART_VerticalScrollBar}">
              <Rectangle DockPanel.Dock="Left" Width="1" Fill="#FFFFFFFF"
                  Visibility="{TemplateBinding ScrollViewer.ComputedVerticalScrollBarVisibility}" />
              <Rectangle DockPanel.Dock="Top" Height="1" Fill="#FFFFFFFF"
                  Visibility="{TemplateBinding ScrollViewer.ComputedHorizontalScrollBarVisibility}" />
            </DockPanel>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <LinearGradientBrush x:Key="Ē" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FFF2F2F2" Offset="0" />
      <GradientStop Color="#FFD5D5D5" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ē" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FFFFFFFF" Offset="0" />
      <GradientStop Color="#FFFFFFFF" Offset="0.4091" />
      <GradientStop Color="#FFF7F8F9" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="Ĕ" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FFBDEDFF" Offset="0" />
      <GradientStop Color="#FFB7E7FB" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ĕ" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FF8DD6F7" Offset="0" />
      <GradientStop Color="#FF8AD1F5" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <Style x:Key="Ė" TargetType="{x:Type Thumb}">
    <Setter Property="Canvas.Right" Value="-9" />
    <Setter Property="Width" Value="18" />
    <Setter Property="Height" Value="{Binding Path=ActualHeight,RelativeSource={RelativeSource TemplatedParent}}" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="Background" Value="{StaticResource Ē}" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Border Padding="{TemplateBinding Padding}" Background="#00FFFFFF">
            <Rectangle HorizontalAlignment="Center" Width="1" Fill="{TemplateBinding Background}" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type GridViewColumnHeader}" TargetType="{x:Type GridViewColumnHeader}">
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Background" Value="{StaticResource ē}" />
    <Setter Property="BorderBrush" Value="{StaticResource Ē}" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Padding" Value="2,0,2,0" />
    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
          <Grid SnapsToDevicePixels="True">
            <Border Name="HeaderBorder" BorderThickness="0,1,0,1" BorderBrush="{TemplateBinding BorderBrush}"
                Background="{TemplateBinding Background}">
              <Grid>
                <Grid.RowDefinitions>
                  <RowDefinition MaxHeight="7" />
                  <RowDefinition />
                </Grid.RowDefinitions>
                <Rectangle Name="UpperHighlight" Visibility="Collapsed" Fill="#FFE3F7FF" />
                <Border Grid.RowSpan="2" Padding="{TemplateBinding Padding}">
                  <ContentPresenter Name="HeaderContent" Margin="0,0,0,1"
                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True"
                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                </Border>
              </Grid>
            </Border>
            <Border Name="HeaderHoverBorder" BorderThickness="1,0,1,1" Margin="1,1,0,0" />
            <Border Name="HeaderPressBorder" BorderThickness="1,1,1,0" Margin="1,0,0,1" />
            <Canvas>
              <Thumb x:Name="PART_HeaderGripper" Style="{StaticResource Ė}" />
            </Canvas>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="HeaderBorder" Value="{StaticResource Ĕ}" Property="Background" />
              <Setter TargetName="HeaderHoverBorder" Property="BorderBrush" Value="#FF88CBEB" />
              <Setter TargetName="UpperHighlight" Property="Visibility" Value="Visible" />
              <Setter TargetName="PART_HeaderGripper" Property="Background" Value="#00FFFFFF" />
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
              <Setter TargetName="HeaderBorder" Value="{StaticResource ĕ}" Property="Background" />
              <Setter TargetName="HeaderHoverBorder" Property="BorderBrush" Value="#FF95DAF9" />
              <Setter TargetName="HeaderPressBorder" Property="BorderBrush" Value="#FF7A9EB1" />
              <Setter TargetName="UpperHighlight" Property="Visibility" Value="Visible" />
              <Setter TargetName="UpperHighlight" Property="Shape.Fill" Value="#FFBCE4F9" />
              <Setter TargetName="PART_HeaderGripper" Property="Visibility" Value="Hidden" />
              <Setter TargetName="HeaderContent" Property="Margin" Value="1,1,0,0" />
            </Trigger>
            <Trigger Property="Height" Value="Auto">
              <Setter Property="MinHeight" Value="20" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="GridViewColumnHeader.Role" Value="Floating">
        <Setter Property="Opacity" Value="0.4082" />
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
              <Canvas Name="PART_FloatingHeaderCanvas">
                <Rectangle Opacity="0.4697" Fill="#FF000000" Width="{TemplateBinding ActualWidth}"
                    Height="{TemplateBinding ActualHeight}" />
              </Canvas>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
      <Trigger Property="GridViewColumnHeader.Role" Value="Padding">
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
              <Border Name="HeaderBorder" BorderThickness="0,1,0,1" BorderBrush="{TemplateBinding BorderBrush}"
                  Background="{TemplateBinding Background}" />
              <ControlTemplate.Triggers>
                <Trigger Property="Height" Value="Auto">
                  <Setter Property="MinHeight" Value="20" />
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{x:Static GridView.GridViewStyleKey}" TargetType="{x:Type ListView}">
    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
    <Setter Property="BorderBrush" Value="{StaticResource Đ}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Foreground" Value="#FF042271" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
    <Setter Property="ScrollViewer.PanningMode" Value="Both" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListView}">
          <theme:ListBoxChrome x:Name="Bd" BorderThickness="{TemplateBinding BorderThickness}"
              BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}"
              RenderMouseOver="{TemplateBinding IsMouseOver}" RenderFocused="{TemplateBinding IsKeyboardFocusWithin}"
              SnapsToDevicePixels="True">
            <ScrollViewer Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}"
                Padding="{TemplateBinding Padding}">
              <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </ScrollViewer>
          </theme:ListBoxChrome>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
                  Property="Background" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="ItemsControl.IsGrouping" Value="True" />
                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False" />
              </MultiTrigger.Conditions>
              <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ė">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle StrokeThickness="1" RadiusX="2" RadiusY="2" Stroke="#8E6EA6F5" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <LinearGradientBrush x:Key="Ę" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FFF1FBFF" Offset="0" />
      <GradientStop Color="#FFD5F1FE" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ę" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FFD9F4FF" Offset="0" />
      <GradientStop Color="#FF9BDDFB" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="Ě" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FFEAF9FF" Offset="0" />
      <GradientStop Color="#FFC9EDFD" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ě" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FFEEEDED" Offset="0" />
      <GradientStop Color="#FFDDDDDD" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <Style x:Key="{x:Static GridView.GridViewItemContainerStyleKey}" TargetType="{x:Type ListViewItem}">
    <Setter Property="FocusVisualStyle" Value="{StaticResource ė}" />
    <Setter Property="Background" Value="#00FFFFFF" />
    <Setter Property="BorderBrush" Value="#00FFFFFF" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Margin" Value="0,0,0,1" />
    <Setter Property="Padding" Value="5,2,5,2" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListViewItem}">
          <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"
              Background="{TemplateBinding Background}" CornerRadius="2" SnapsToDevicePixels="True">
            <Border Name="InnerBorder" CornerRadius="1" BorderThickness="1">
              <Grid>
                <Grid.RowDefinitions>
                  <RowDefinition MaxHeight="11" />
                  <RowDefinition />
                </Grid.RowDefinitions>
                <Rectangle Name="UpperHighlight" Visibility="Collapsed" Fill="#75FFFFFF" />
                <GridViewRowPresenter Grid.RowSpan="2" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
              </Grid>
            </Border>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Value="{StaticResource Ę}" Property="Background" />
              <Setter Property="BorderBrush" Value="#FFCCF0FF" />
              <Setter TargetName="UpperHighlight" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="ListBoxItem.IsSelected" Value="True">
              <Setter Value="{StaticResource ę}" Property="Background" />
              <Setter Property="BorderBrush" Value="#FF98DDFB" />
              <Setter TargetName="InnerBorder" Property="BorderBrush" Value="#80FFFFFF" />
              <Setter TargetName="UpperHighlight" Property="Visibility" Value="Visible" />
              <Setter TargetName="UpperHighlight" Property="Shape.Fill" Value="#40FFFFFF" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="ListBoxItem.IsSelected" Value="True" />
                <Condition Property="Selector.IsSelectionActive" Value="False" />
              </MultiTrigger.Conditions>
              <Setter Value="{StaticResource ě}" Property="Background" />
              <Setter Property="BorderBrush" Value="#FFCFCFCF" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="ListBoxItem.IsSelected" Value="True" />
                <Condition Property="IsMouseOver" Value="True" />
              </MultiTrigger.Conditions>
              <Setter Value="{StaticResource Ě}" Property="Background" />
              <Setter Property="BorderBrush" Value="#FF98DDFB" />
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <LinearGradientBrush x:Key="Ĝ" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#F6F6F6" Offset="0.25" />
      <GradientStop Color="#EAE8E8" Offset="0.25" />
      <GradientStop Color="#DCD9D9" Offset="0.8" />
      <GradientStop Color="White" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <Style x:Key="{x:Type Menu}" TargetType="{x:Type Menu}">
    <Setter Property="Background" Value="{StaticResource Ĝ}" />
    <Setter Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}" />
    <Setter Property="FontSize" Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}" />
    <Setter Property="FontStyle" Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}" />
    <Setter Property="FontWeight" Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}" />
    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Menu}">
          <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}"
              SnapsToDevicePixels="True">
            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <MenuScrollingVisibilityConverter x:Key="ĝ" />
  <Geometry x:Key="Ë">
    M 0,0 L 3.5,4 L 7,0 Z
  </Geometry>
  <Geometry x:Key="Ğ">
    M 0,4 L 3.5,0 L 7,4 Z
  </Geometry>
  <Geometry x:Key="ğ">
    M 0,0 L 4,3.5 L 0,7 Z
  </Geometry>
  <Geometry x:Key="Ġ">
    M 0,5.1 L 1.7,5.2 L 3.4,7.1 L 8,0.4 L 9.2,0 L 3.3,10.8 Z
  </Geometry>
  <SolidColorBrush x:Key="ġ" Color="#FFF5F5F5" />
  <ControlTemplate
      x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement},ResourceId=SubmenuContent}"
      TargetType="{x:Type ContentControl}">
    <Border Background="{StaticResource ġ}" BorderBrush="#FF959595" BorderThickness="1">
      <Grid>
        <Rectangle Fill="#FFF1F1F1" HorizontalAlignment="Left" Width="28" Margin="2" RadiusX="2"
            RadiusY="2" />
        <Rectangle HorizontalAlignment="Left" Width="1" Margin="30,2,0,2" Fill="#FFE2E3E3" />
        <Rectangle HorizontalAlignment="Left" Width="1" Margin="31,2,0,2" Fill="#FFFFFFFF" />
        <ContentPresenter Grid.ColumnSpan="2" Margin="1,0" />
      </Grid>
    </Border>
  </ControlTemplate>
  <Style x:Key="Ģ" TargetType="{x:Type RepeatButton}" BasedOn="{x:Null}">
    <Setter Property="ButtonBase.ClickMode" Value="Hover" />
    <Setter Property="MinWidth" Value="0" />
    <Setter Property="MinHeight" Value="0" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <DockPanel Panel.Background="#00FFFFFF" SnapsToDevicePixels="True">
            <Rectangle x:Name="R1" DockPanel.Dock="Right" Width="1" Fill="#00FFFFFF" />
            <Rectangle x:Name="B1" DockPanel.Dock="Bottom" Height="1" Fill="#00FFFFFF" />
            <Rectangle x:Name="L1" DockPanel.Dock="Left" Width="1" Fill="#00FFFFFF" />
            <Rectangle x:Name="T1" DockPanel.Dock="Top" Height="1" Fill="#00FFFFFF" />
            <ContentPresenter Name="ContentContainer" Margin="2,2,2,2" VerticalAlignment="Center"
                HorizontalAlignment="Center" />
          </DockPanel>
          <ControlTemplate.Triggers>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
              <Setter TargetName="R1" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"
                  Property="Shape.Fill" />
              <Setter TargetName="B1" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"
                  Property="Shape.Fill" />
              <Setter TargetName="L1" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"
                  Property="Shape.Fill" />
              <Setter TargetName="T1" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"
                  Property="Shape.Fill" />
              <Setter TargetName="ContentContainer" Property="Margin" Value="3,3,1,1" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement},ResourceId=MenuScrollViewer}"
      TargetType="{x:Type ScrollViewer}" BasedOn="{x:Null}">
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ScrollViewer}">
          <Grid SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="*" />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Border Grid.Row="1" Grid.Column="0">
              <ScrollContentPresenter Margin="{TemplateBinding Padding}"
                  ScrollContentPresenter.CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}" />
            </Border>
            <RepeatButton Style="{StaticResource Ģ}" Grid.Row="0" Grid.Column="0"
                ButtonBase.Command="{x:Static ScrollBar.LineUpCommand}" Focusable="False"
                ButtonBase.CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
              <UIElement.Visibility>
                <MultiBinding BindingBase.FallbackValue="Visibility.Collapsed"
                    MultiBinding.Converter="{StaticResource ĝ}" MultiBinding.ConverterParameter="0">
                  <Binding Path="ComputedVerticalScrollBarVisibility"
                      RelativeSource="{RelativeSource TemplatedParent}" />
                  <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}" />
                  <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}" />
                  <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}" />
                </MultiBinding>
              </UIElement.Visibility>
              <Path Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Data="{StaticResource Ğ}" />
            </RepeatButton>
            <RepeatButton Style="{StaticResource Ģ}" Grid.Row="2" Grid.Column="0"
                ButtonBase.Command="{x:Static ScrollBar.LineDownCommand}" Focusable="False"
                ButtonBase.CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
              <UIElement.Visibility>
                <MultiBinding BindingBase.FallbackValue="Visibility.Collapsed"
                    MultiBinding.Converter="{StaticResource ĝ}" MultiBinding.ConverterParameter="100">
                  <Binding Path="ComputedVerticalScrollBarVisibility"
                      RelativeSource="{RelativeSource TemplatedParent}" />
                  <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}" />
                  <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}" />
                  <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}" />
                </MultiBinding>
              </UIElement.Visibility>
              <Path Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Data="{StaticResource Ë}" />
            </RepeatButton>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <LinearGradientBrush x:Key="ģ" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#34C5EBFF" Offset="0" />
      <GradientStop Color="#3481D8FF" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="Ĥ" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#28717070" Offset="0" />
      <GradientStop Color="#50717070" Offset="0.75" />
      <GradientStop Color="#90717070" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Separator}">
          <Grid SnapsToDevicePixels="True" UseLayoutRounding="False" Margin="0,6,0,4">
            <Rectangle Height="1" Margin="30,0,1,1" Fill="#FFE0E0E0" />
            <Rectangle Height="1" Margin="30,1,1,0" Fill="#FFFFFFFF" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ControlTemplate
      x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem},ResourceId=TopLevelItemTemplateKey}"
      TargetType="{x:Type MenuItem}">
    <Grid SnapsToDevicePixels="True">
      <Rectangle x:Name="OuterBorder" RadiusX="2" RadiusY="2" />
      <Rectangle Name="Bg" Margin="1" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}"
          StrokeThickness="1" RadiusX="1" RadiusY="1" />
      <Rectangle x:Name="InnerBorder" Margin="2" />
      <DockPanel>
        <ContentPresenter Name="Icon" Margin="4,0,6,0" VerticalAlignment="Center" ContentSource="Icon"
            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        <Path x:Name="GlyphPanel" Margin="7,0,0,0" Visibility="Collapsed" VerticalAlignment="Center"
            Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" Data="{StaticResource Ġ}" />
        <ContentPresenter ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
      </DockPanel>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Value="{x:Null}" Property="MenuItem.Icon">
        <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
      </Trigger>
      <Trigger Property="MenuItem.IsChecked" Value="True">
        <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
        <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
      </Trigger>
      <Trigger Property="MenuItem.IsHighlighted" Value="True">
        <Setter TargetName="Bg" Property="Shape.Stroke" Value="#90717070" />
        <Setter TargetName="OuterBorder" Property="Shape.Stroke" Value="#50FFFFFF" />
        <Setter TargetName="InnerBorder" Property="Shape.Stroke" Value="#50FFFFFF" />
      </Trigger>
      <Trigger Property="IsKeyboardFocused" Value="True">
        <Setter TargetName="Bg" Property="Shape.Stroke" Value="#E0717070" />
        <Setter TargetName="Bg" Value="{StaticResource Ĥ}" Property="Shape.Fill" />
        <Setter TargetName="InnerBorder" Property="Shape.Stroke" Value="#50747272" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Foreground" Value="#FF9A9A9A" />
        <Setter TargetName="GlyphPanel" Property="Shape.Fill" Value="#FF848589" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate
      x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem},ResourceId=TopLevelHeaderTemplateKey}"
      TargetType="{x:Type MenuItem}">
    <Grid SnapsToDevicePixels="True">
      <Rectangle x:Name="OuterBorder" RadiusX="2" RadiusY="2" />
      <Rectangle Name="Bg" Margin="1" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}"
          StrokeThickness="1" RadiusX="1" RadiusY="1" />
      <Rectangle x:Name="InnerBorder" Margin="2" />
      <DockPanel>
        <ContentPresenter Name="Icon" Margin="4,0,6,0" VerticalAlignment="Center" ContentSource="Icon"
            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        <Path x:Name="GlyphPanel" Margin="7,0,0,0" Visibility="Collapsed" VerticalAlignment="Center"
            Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" Data="{StaticResource Ġ}" />
        <ContentPresenter ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
      </DockPanel>
      <Popup x:Name="PART_Popup" HorizontalOffset="1" VerticalOffset="-1" AllowsTransparency="True"
          Placement="Bottom" Focusable="False"
          PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
          IsOpen="{Binding Path=IsSubmenuOpen,RelativeSource={RelativeSource TemplatedParent}}">
        <theme:SystemDropShadowChrome x:Name="Shdw" Color="Transparent">
          <Border Name="SubMenuBorder" Background="{StaticResource ġ}" BorderBrush="#FF959595" BorderThickness="1">
            <ScrollViewer Name="SubMenuScrollViewer" Margin="1,0"
                Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement},ResourceId=MenuScrollViewer}}">
              <Grid RenderOptions.ClearTypeHint="Enabled">
                <Canvas Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                  <Rectangle Name="OpaqueRect" Fill="{StaticResource ġ}"
                      Height="{Binding ElementName=SubMenuBorder,Path=ActualHeight}"
                      Width="{Binding ElementName=SubMenuBorder,Path=ActualWidth}" />
                </Canvas>
                <Rectangle Fill="#FFF1F1F1" HorizontalAlignment="Left" Width="28" Margin="1,2" RadiusX="2"
                    RadiusY="2" />
                <Rectangle HorizontalAlignment="Left" Width="1" Margin="29,2,0,2" Fill="#FFE2E3E3" />
                <Rectangle HorizontalAlignment="Left" Width="1" Margin="30,2,0,2" Fill="#FFFFFFFF" />
                <ItemsPresenter Name="ItemsPresenter" Margin="2" KeyboardNavigation.TabNavigation="Cycle"
                    KeyboardNavigation.DirectionalNavigation="Cycle"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Grid.IsSharedSizeScope="True" />
              </Grid>
            </ScrollViewer>
          </Border>
        </theme:SystemDropShadowChrome>
      </Popup>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="MenuItem.IsSuspendingPopupAnimation" Value="True">
        <Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None" />
      </Trigger>
      <Trigger Value="{x:Null}" Property="MenuItem.Icon">
        <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
      </Trigger>
      <Trigger Property="MenuItem.IsChecked" Value="True">
        <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
        <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
      </Trigger>
      <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
        <Setter TargetName="Shdw" Property="Margin" Value="0,0,5,5" />
        <Setter TargetName="Shdw" Property="theme:SystemDropShadowChrome.Color" Value="#71000000" />
      </Trigger>
      <Trigger Property="MenuItem.IsHighlighted" Value="True">
        <Setter TargetName="Bg" Property="Shape.Stroke" Value="#90717070" />
        <Setter TargetName="OuterBorder" Property="Shape.Stroke" Value="#50FFFFFF" />
        <Setter TargetName="InnerBorder" Property="Shape.Stroke" Value="#50FFFFFF" />
      </Trigger>
      <Trigger Property="IsKeyboardFocused" Value="True">
        <Setter TargetName="Bg" Property="Shape.Stroke" Value="#E0717070" />
        <Setter TargetName="Bg" Value="{StaticResource Ĥ}" Property="Shape.Fill" />
        <Setter TargetName="InnerBorder" Property="Shape.Stroke" Value="#50747272" />
      </Trigger>
      <Trigger Property="MenuItem.IsSubmenuOpen" Value="True">
        <Setter TargetName="Bg" Property="Shape.Stroke" Value="#E0717070" />
        <Setter TargetName="Bg" Value="{StaticResource Ĥ}" Property="Shape.Fill" />
        <Setter TargetName="InnerBorder" Property="Shape.Stroke" Value="#50747272" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Foreground" Value="#FF9A9A9A" />
        <Setter TargetName="GlyphPanel" Property="Shape.Fill" Value="#FF848589" />
      </Trigger>
      <Trigger SourceName="SubMenuScrollViewer" Property="ScrollViewer.CanContentScroll" Value="False">
        <Setter TargetName="OpaqueRect" Value="{Binding ElementName=SubMenuScrollViewer,Path=VerticalOffset}"
            Property="Canvas.Top" />
        <Setter TargetName="OpaqueRect" Value="{Binding ElementName=SubMenuScrollViewer,Path=HorizontalOffset}"
            Property="Canvas.Left" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate
      x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem},ResourceId=SubmenuItemTemplateKey}"
      TargetType="{x:Type MenuItem}">
    <Grid SnapsToDevicePixels="True">
      <Rectangle Name="Bg" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}"
          StrokeThickness="1" RadiusX="2" RadiusY="2" />
      <Rectangle x:Name="InnerBorder" Margin="1" RadiusX="2" RadiusY="2" />
      <Grid>
        <Grid.ColumnDefinitions>
          <ColumnDefinition MinWidth="24" Width="Auto" DefinitionBase.SharedSizeGroup="MenuItemIconColumnGroup" />
          <ColumnDefinition Width="4" />
          <ColumnDefinition Width="*" />
          <ColumnDefinition Width="37" />
          <ColumnDefinition Width="Auto" DefinitionBase.SharedSizeGroup="MenuItemIGTColumnGroup" />
          <ColumnDefinition Width="17" />
        </Grid.ColumnDefinitions>
        <ContentPresenter Name="Icon" Margin="1" VerticalAlignment="Center" ContentSource="Icon"
            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        <Border x:Name="GlyphPanel" Background="#FFE6EFF4" BorderBrush="#FFCDD3E6" BorderThickness="1" CornerRadius="3"
            Margin="1" Visibility="Hidden" Width="22" Height="22">
          <Path Name="Glyph" Width="9" Height="11" Fill="#FF0C12A1" FlowDirection="LeftToRight"
              Data="{StaticResource Ġ}" />
        </Border>
        <ContentPresenter Grid.Column="2" ContentSource="Header" Margin="{TemplateBinding Padding}"
            RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        <TextBlock Grid.Column="4" Text="{TemplateBinding MenuItem.InputGestureText}" Margin="{TemplateBinding Padding}" />
      </Grid>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Value="{x:Null}" Property="MenuItem.Icon">
        <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
      </Trigger>
      <Trigger Property="MenuItem.IsChecked" Value="True">
        <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
        <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
      </Trigger>
      <Trigger Property="MenuItem.IsHighlighted" Value="True">
        <Setter TargetName="Bg" Value="{StaticResource ģ}" Property="Shape.Fill" />
        <Setter TargetName="Bg" Property="Shape.Stroke" Value="#8071CBF1" />
        <Setter TargetName="InnerBorder" Property="Shape.Stroke" Value="#40FFFFFF" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Foreground" Value="#FF9A9A9A" />
        <Setter TargetName="GlyphPanel" Property="Background" Value="#FFEEE9E9" />
        <Setter TargetName="GlyphPanel" Property="BorderBrush" Value="#FFDBD6D6" />
        <Setter TargetName="Glyph" Property="Shape.Fill" Value="#FF848589" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate
      x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem},ResourceId=SubmenuHeaderTemplateKey}"
      TargetType="{x:Type MenuItem}">
    <Grid SnapsToDevicePixels="True">
      <Rectangle Name="Bg" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}"
          StrokeThickness="1" RadiusX="2" RadiusY="2" />
      <Rectangle x:Name="InnerBorder" Margin="1" Stroke="#00FFFFFF" StrokeThickness="1" RadiusX="2"
          RadiusY="2" />
      <Grid>
        <Grid.ColumnDefinitions>
          <ColumnDefinition MinWidth="24" Width="Auto" DefinitionBase.SharedSizeGroup="MenuItemIconColumnGroup" />
          <ColumnDefinition Width="4" />
          <ColumnDefinition Width="*" />
          <ColumnDefinition Width="37" />
          <ColumnDefinition Width="Auto" DefinitionBase.SharedSizeGroup="MenuItemIGTColumnGroup" />
          <ColumnDefinition Width="17" />
        </Grid.ColumnDefinitions>
        <ContentPresenter Name="Icon" Margin="1" VerticalAlignment="Center" ContentSource="Icon"
            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        <Border x:Name="GlyphPanel" Background="#FFE6EFF4" BorderBrush="#FFCDD3E6" BorderThickness="1" CornerRadius="3"
            Margin="1" Visibility="Hidden" Width="22" Height="22">
          <Path Name="Glyph" Width="9" Height="11" Fill="#FF0C12A1" FlowDirection="LeftToRight"
              Data="{StaticResource Ġ}" />
        </Border>
        <ContentPresenter Grid.Column="2" ContentSource="Header" Margin="{TemplateBinding Padding}"
            RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        <TextBlock Grid.Column="4" Text="{TemplateBinding MenuItem.InputGestureText}" Margin="{TemplateBinding Padding}"
            Visibility="Collapsed" />
        <Path Grid.Column="5" VerticalAlignment="Center" Margin="4,0,0,0" Fill="{TemplateBinding Foreground}"
            Data="{StaticResource ğ}" />
      </Grid>
      <Popup x:Name="PART_Popup" AllowsTransparency="True" Placement="Right" VerticalOffset="-3"
          HorizontalOffset="-2" Focusable="False"
          PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
          IsOpen="{Binding Path=IsSubmenuOpen,RelativeSource={RelativeSource TemplatedParent}}">
        <theme:SystemDropShadowChrome x:Name="Shdw" Color="Transparent">
          <Border Name="SubMenuBorder" Background="{StaticResource ġ}" BorderBrush="#FF959595" BorderThickness="1">
            <ScrollViewer Name="SubMenuScrollViewer" Margin="1,0"
                Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement},ResourceId=MenuScrollViewer}}">
              <Grid RenderOptions.ClearTypeHint="Enabled">
                <Canvas Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                  <Rectangle Name="OpaqueRect" Fill="{StaticResource ġ}"
                      Height="{Binding ElementName=SubMenuBorder,Path=ActualHeight}"
                      Width="{Binding ElementName=SubMenuBorder,Path=ActualWidth}" />
                </Canvas>
                <Rectangle Fill="#FFF1F1F1" HorizontalAlignment="Left" Width="28" Margin="1,2" RadiusX="2"
                    RadiusY="2" />
                <Rectangle HorizontalAlignment="Left" Width="1" Margin="29,2,0,2" Fill="#FFE2E3E3" />
                <Rectangle HorizontalAlignment="Left" Width="1" Margin="30,2,0,2" Fill="#FFFFFFFF" />
                <ItemsPresenter Name="ItemsPresenter" Margin="2" KeyboardNavigation.TabNavigation="Cycle"
                    KeyboardNavigation.DirectionalNavigation="Cycle"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Grid.IsSharedSizeScope="True" />
              </Grid>
            </ScrollViewer>
          </Border>
        </theme:SystemDropShadowChrome>
      </Popup>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="MenuItem.IsSuspendingPopupAnimation" Value="True">
        <Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None" />
      </Trigger>
      <Trigger Property="MenuItem.IsHighlighted" Value="True">
        <Setter TargetName="InnerBorder" Property="Shape.Stroke" Value="#D1DBF4FF" />
      </Trigger>
      <Trigger Value="{x:Null}" Property="MenuItem.Icon">
        <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
      </Trigger>
      <Trigger Property="MenuItem.IsChecked" Value="True">
        <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
        <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
      </Trigger>
      <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
        <Setter TargetName="Shdw" Property="Margin" Value="0,0,5,5" />
        <Setter TargetName="Shdw" Property="theme:SystemDropShadowChrome.Color" Value="#71000000" />
      </Trigger>
      <Trigger Property="MenuItem.IsHighlighted" Value="True">
        <Setter TargetName="Bg" Value="{StaticResource ģ}" Property="Shape.Fill" />
        <Setter TargetName="Bg" Property="Shape.Stroke" Value="#8571CBF1" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Foreground" Value="#FF9A9A9A" />
        <Setter TargetName="GlyphPanel" Property="Background" Value="#FFEEE9E9" />
        <Setter TargetName="GlyphPanel" Property="BorderBrush" Value="#FFDBD6D6" />
        <Setter TargetName="Glyph" Property="Shape.Fill" Value="#FF848589" />
      </Trigger>
      <Trigger SourceName="SubMenuScrollViewer" Property="ScrollViewer.CanContentScroll" Value="False">
        <Setter TargetName="OpaqueRect" Value="{Binding ElementName=SubMenuScrollViewer,Path=VerticalOffset}"
            Property="Canvas.Top" />
        <Setter TargetName="OpaqueRect" Value="{Binding ElementName=SubMenuScrollViewer,Path=HorizontalOffset}"
            Property="Canvas.Left" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="{x:Type MenuItem}" TargetType="{x:Type MenuItem}">
    <Setter Property="HorizontalContentAlignment"
        Value="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Property="VerticalContentAlignment"
        Value="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Property="Background" Value="#00FFFFFF" />
    <Setter Property="ScrollViewer.PanningMode" Value="Both" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="Control.Template"
        Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem},ResourceId=SubmenuItemTemplateKey}}" />
    <Style.Triggers>
      <Trigger Property="MenuItem.Role" Value="TopLevelHeader">
        <Setter Property="Padding" Value="7,2,8,3" />
        <Setter Property="Control.Template"
            Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem},ResourceId=TopLevelHeaderTemplateKey}}" />
      </Trigger>
      <Trigger Property="MenuItem.Role" Value="TopLevelItem">
        <Setter Property="Padding" Value="7,2,8,3" />
        <Setter Property="Control.Template"
            Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem},ResourceId=TopLevelItemTemplateKey}}" />
      </Trigger>
      <Trigger Property="MenuItem.Role" Value="SubmenuHeader">
        <Setter Property="Padding" Value="2,3,2,3" />
        <Setter Property="Control.Template"
            Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem},ResourceId=SubmenuHeaderTemplateKey}}" />
      </Trigger>
      <Trigger Property="MenuItem.Role" Value="SubmenuItem">
        <Setter Property="Padding" Value="2,3,2,3" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <JournalEntryUnifiedViewConverter x:Key="ċ" />
  <LinearGradientBrush x:Key="ĥ" StartPoint="0.5,0.0" EndPoint="0.5,1.0">
    <GradientBrush.GradientStops>
      <GradientStopCollection>
        <GradientStop Color="#FFFFFF" Offset="0.0" />
        <GradientStop Color="#CCD4E9" Offset="0.1" />
        <GradientStop Color="#4881D2" Offset="0.47" />
        <GradientStop Color="#001A5A" Offset="0.47" />
        <GradientStop Color="#007BD6" Offset="0.70" />
        <GradientStop Color="#54DAFF" Offset="0.85" />
        <GradientStop Color="#86FFFF" Offset="0.95" />
        <GradientStop Color="#FFFFFF" Offset="1.0" />
      </GradientStopCollection>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="Ħ" StartPoint="0.5,0.0" EndPoint="0.5,1.0">
    <GradientBrush.GradientStops>
      <GradientStopCollection>
        <GradientStop Color="#FFFFFF" Offset="0.0" />
        <GradientStop Color="#DFEDF9" Offset="0.1" />
        <GradientStop Color="#3086E1" Offset="0.47" />
        <GradientStop Color="#003B91" Offset="0.47" />
        <GradientStop Color="#1793EF" Offset="0.70" />
        <GradientStop Color="#5AD4FF" Offset="0.85" />
        <GradientStop Color="#BDFFFF" Offset="0.95" />
        <GradientStop Color="#FFFFFF" Offset="1.0" />
      </GradientStopCollection>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ħ" StartPoint="0.5,0.0" EndPoint="0.5,1.0">
    <GradientBrush.GradientStops>
      <GradientStopCollection>
        <GradientStop Color="#C0D2F5" Offset="0.0" />
        <GradientStop Color="#5E7A9C" Offset="0.47" />
        <GradientStop Color="#00062D" Offset="0.47" />
        <GradientStop Color="#005F9F" Offset="0.70" />
        <GradientStop Color="#1FA4E2" Offset="0.85" />
        <GradientStop Color="#61DAFF" Offset="0.95" />
        <GradientStop Color="#48CFFF" Offset="1.0" />
      </GradientStopCollection>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="Ĩ" StartPoint="0.5,0.0" EndPoint="0.5,1.0">
    <GradientBrush.GradientStops>
      <GradientStopCollection>
        <GradientStop Color="#FFFFFF" Offset="0" />
        <GradientStop Color="#EBEEF5" Offset="0.5" />
        <GradientStop Color="#D8DDEB" Offset="0.5" />
        <GradientStop Color="#DFE2F0" Offset="1.0" />
      </GradientStopCollection>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ĩ" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStopCollection>
        <GradientStop Color="#6C90C4" Offset="0" />
        <GradientStop Color="#315BB4" Offset="0.5" />
        <GradientStop Color="#002091" Offset="0.5" />
        <GradientStop Color="#08377C" Offset="1" />
      </GradientStopCollection>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="Ī" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#8AB1FB" Offset="0" />
      <GradientStop Color="#002874" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ī" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStopCollection>
        <GradientStop Color="#FFFFFF" Offset="0.5" />
        <GradientStop Color="#EEEEEE" Offset="0.5" />
        <GradientStop Color="#B0B0B0" Offset="1" />
      </GradientStopCollection>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="Ĭ" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStopCollection>
        <GradientStop Color="#33B5DA" Offset="0" />
        <GradientStop Color="#335799" Offset="1" />
      </GradientStopCollection>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ć" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FFFFFF" Offset="0" />
      <GradientStop Color="#E3E8F4" Offset="0.5" />
      <GradientStop Color="#CFD7EB" Offset="0.5" />
      <GradientStop Color="#E9ECFA" Offset="1.0" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="ĭ" Color="{StaticResource {x:Static SystemColors.HighlightColorKey}}" Brush.Opacity="0.25" />
  <Style x:Key="Ċ" TargetType="{x:Type MenuItem}">
    <Setter Property="OverridesDefaultStyle" Value="True" />
    <Setter Property="HeaderedItemsControl.Header" Value="{Binding Path=(JournalEntry.Name)}" />
    <Setter Property="MenuItem.Command" Value="NavigationCommands.NavigateJournal" />
    <Setter Property="MenuItem.CommandTarget"
        Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type Menu}},Path=TemplatedParent}" />
    <Setter Property="MenuItem.CommandParameter" Value="{Binding RelativeSource={RelativeSource Self}}" />
    <Setter Property="JournalEntryUnifiedViewConverter.JournalEntryPosition"
        Value="{Binding (JournalEntryUnifiedViewConverter.JournalEntryPosition)}" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type MenuItem}">
          <Grid Name="Panel" Panel.Background="#00FFFFFF" SnapsToDevicePixels="True">
            <Path Name="Glyph" SnapsToDevicePixels="False" Margin="7,5" Width="10" Height="10"
                HorizontalAlignment="Left" StrokeStartLineCap="Triangle" StrokeEndLineCap="Triangle" StrokeThickness="2"
                Stroke="{TemplateBinding Foreground}" />
            <ContentPresenter ContentSource="Header" Margin="24,5,21,5" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="JournalEntryUnifiedViewConverter.JournalEntryPosition" Value="Current">
              <Setter TargetName="Panel" Value="{StaticResource ĭ}" Property="Panel.Background" />
              <Setter TargetName="Glyph" Property="Path.Data" Value="M0,5L2.5,8 7,3" />
              <Setter TargetName="Glyph" Property="FlowDirection" Value="LeftToRight" />
              <Setter TargetName="Glyph" Property="Shape.StrokeLineJoin" Value="Miter" />
            </Trigger>
            <Trigger Property="MenuItem.IsHighlighted" Value="True">
              <Setter Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Foreground" />
              <Setter TargetName="Panel" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                  Property="Panel.Background" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="MenuItem.IsHighlighted" Value="True" />
                <Condition Property="JournalEntryUnifiedViewConverter.JournalEntryPosition"
                    Value="Forward" />
              </MultiTrigger.Conditions>
              <Setter TargetName="Glyph" Property="Shape.Stroke" Value="#FFFFFFFF" />
              <Setter TargetName="Glyph" Property="Path.Data" Value="M1,5L7,5 M5,1L9,5 5,9" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="MenuItem.IsHighlighted" Value="True" />
                <Condition Property="JournalEntryUnifiedViewConverter.JournalEntryPosition"
                    Value="Back" />
              </MultiTrigger.Conditions>
              <Setter TargetName="Glyph" Property="Shape.Stroke" Value="#FFFFFFFF" />
              <Setter TargetName="Glyph" Property="Path.Data" Value="M9,5L3,5 M5,1L1,5 5,9" />
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ĉ" TargetType="{x:Type MenuItem}">
    <Setter Property="OverridesDefaultStyle" Value="True" />
    <Setter Property="ScrollViewer.PanningMode" Value="Both" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type MenuItem}">
          <Grid>
            <Popup x:Name="PART_Popup" AllowsTransparency="True" Placement="Bottom" VerticalOffset="2"
                Focusable="False"
                PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                IsOpen="{Binding Path=(MenuItem.IsSubmenuOpen),RelativeSource={RelativeSource TemplatedParent}}">
              <theme:SystemDropShadowChrome x:Name="Shdw" Color="Transparent">
                <Border Name="SubMenuBorder" Background="{DynamicResource {x:Static SystemColors.MenuBrushKey}}"
                    BorderThickness="1" BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}">
                  <ScrollViewer Name="SubMenuScrollViewer"
                      Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement},ResourceId=MenuScrollViewer}}">
                    <Grid RenderOptions.ClearTypeHint="Enabled">
                      <Canvas Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                        <Rectangle Name="OpaqueRect" Height="{Binding ElementName=SubMenuBorder,Path=ActualHeight}"
                            Width="{Binding ElementName=SubMenuBorder,Path=ActualWidth}"
                            Fill="{Binding ElementName=SubMenuBorder,Path=Background}" />
                      </Canvas>
                      <ItemsPresenter Name="ItemsPresenter" Margin="2" KeyboardNavigation.TabNavigation="Cycle"
                          KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Grid>
                  </ScrollViewer>
                </Border>
              </theme:SystemDropShadowChrome>
            </Popup>
            <Grid x:Name="Panel" Width="26" Panel.Background="#00FFFFFF" HorizontalAlignment="Right">
              <Border Name="HighlightBorder" SnapsToDevicePixels="True" Visibility="Hidden" BorderThickness="1,1,1,1"
                  BorderBrush="#B0B5BACE" CornerRadius="2">
                <Border.Background>
                  <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientBrush.GradientStops>
                      <GradientStop Color="#20DDDDDD" Offset="0" />
                      <GradientStop Color="#80FFFFFF" Offset="1" />
                    </GradientBrush.GradientStops>
                  </LinearGradientBrush>
                </Border.Background>
                <Border BorderBrush="#A0FFFFFF" CornerRadius="1.5" BorderThickness="1" />
              </Border>
              <Path x:Name="Arrow" SnapsToDevicePixels="False" HorizontalAlignment="Right" VerticalAlignment="Center"
                  Margin="{TemplateBinding Padding}" Fill="{StaticResource Ĭ}" Stroke="#FFFFFFFF" StrokeThickness="1"
                  StrokeLineJoin="Round" Data="M0,0L4.5,5 9,0z" />
            </Grid>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="MenuItem.IsHighlighted" Value="True">
              <Setter TargetName="HighlightBorder" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="Arrow" Property="Shape.Fill" Value="#FFA5AABE" />
            </Trigger>
            <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
              <Setter TargetName="Shdw" Property="Margin" Value="0,0,5,5" />
              <Setter TargetName="Shdw" Property="SnapsToDevicePixels" Value="True" />
              <Setter TargetName="Shdw" Property="theme:SystemDropShadowChrome.Color" Value="#71000000" />
            </Trigger>
            <Trigger SourceName="SubMenuScrollViewer" Property="ScrollViewer.CanContentScroll" Value="False">
              <Setter TargetName="OpaqueRect" Value="{Binding ElementName=SubMenuScrollViewer,Path=VerticalOffset}"
                  Property="Canvas.Top" />
              <Setter TargetName="OpaqueRect" Value="{Binding ElementName=SubMenuScrollViewer,Path=HorizontalOffset}"
                  Property="Canvas.Left" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="Ĉ" TargetType="{x:Type Menu}">
    <Setter Property="ItemsControl.ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <DockPanel />
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="OverridesDefaultStyle" Value="True" />
    <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
    <Setter Property="Menu.IsMainMenu" Value="False" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Menu}">
          <ItemsPresenter />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="Č" TargetType="{x:Type Button}">
    <Setter Property="OverridesDefaultStyle" Value="True" />
    <Setter Property="ButtonBase.Command" Value="NavigationCommands.BrowseBack" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid Width="24" Height="24" Panel.Background="#00FFFFFF">
            <Ellipse Name="Circle" StrokeThickness="1" Fill="{StaticResource ĥ}" Stroke="{StaticResource ĩ}" />
            <Path Name="Arrow" VerticalAlignment="Center" HorizontalAlignment="Center" StrokeThickness="0.75"
                Data="M0.37,7.69L5.74,14.2A1.5,1.5,0,1,0,10.26,12.27L8.42,10.42 14.9,10.39A1.5,1.5,0,1,0,14.92,5.87L8.44,5.9 10.31,4.03A1.5,1.5,0,1,0,5.79,1.77z"
                Stroke="{StaticResource Ī}" Fill="{StaticResource ī}" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Value="{StaticResource Ĩ}" TargetName="Circle" Property="Shape.Fill" />
              <Setter TargetName="Circle" Property="Shape.Stroke" Value="#FFB5BACE" />
              <Setter TargetName="Arrow" Property="Shape.Stroke" Value="#B0B5BACE" />
              <Setter TargetName="Arrow" Property="Shape.Fill" Value="#D0FFFFFF" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Value="{StaticResource Ħ}" TargetName="Circle" Property="Shape.Fill" />
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
              <Setter Value="{StaticResource ħ}" TargetName="Circle" Property="Shape.Fill" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="č" TargetType="{x:Type Button}">
    <Setter Property="OverridesDefaultStyle" Value="True" />
    <Setter Property="ButtonBase.Command" Value="NavigationCommands.BrowseForward" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid Width="24" Height="24" Panel.Background="#00FFFFFF">
            <Ellipse Name="Circle" Grid.Column="0" StrokeThickness="1" Fill="{StaticResource ĥ}"
                Stroke="{StaticResource ĩ}" />
            <Path Name="Arrow" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center"
                StrokeThickness="0.75"
                Data="M0.37,7.69L5.74,14.2A1.5,1.5,0,1,0,10.26,12.27L8.42,10.42 14.9,10.39A1.5,1.5,0,1,0,14.92,5.87L8.44,5.9 10.31,4.03A1.5,1.5,0,1,0,5.79,1.77z"
                Stroke="{StaticResource Ī}" Fill="{StaticResource ī}" RenderTransformOrigin="0.5,0">
              <UIElement.RenderTransform>
                <ScaleTransform ScaleX="-1" />
              </UIElement.RenderTransform>
            </Path>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Value="{StaticResource Ĩ}" TargetName="Circle" Property="Shape.Fill" />
              <Setter TargetName="Circle" Property="Shape.Stroke" Value="#FFB5BACE" />
              <Setter TargetName="Arrow" Property="Shape.Stroke" Value="#B0B5BACE" />
              <Setter TargetName="Arrow" Property="Shape.Fill" Value="#D0FFFFFF" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Value="{StaticResource Ħ}" TargetName="Circle" Property="Shape.Fill" />
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
              <Setter Value="{StaticResource ħ}" TargetName="Circle" Property="Shape.Fill" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ControlTemplate x:Key="Į" TargetType="{x:Type NavigationWindow}">
    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
        BorderThickness="{TemplateBinding BorderThickness}">
      <DockPanel>
        <Grid Name="NavChrome" Panel.Background="{StaticResource ć}" DockPanel.Dock="Top" Height="30">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="29" />
            <ColumnDefinition Width="26" />
            <ColumnDefinition Width="17" />
            <ColumnDefinition Width="*" />
          </Grid.ColumnDefinitions>
          <Menu Name="NavMenu" Grid.ColumnSpan="3" Height="23" Margin="1,0,0,1" VerticalAlignment="Center"
              Style="{StaticResource Ĉ}">
            <MenuItem Padding="0,2,5,0" Style="{StaticResource ĉ}" ItemsControl.ItemContainerStyle="{StaticResource Ċ}"
                MenuItem.IsSubmenuOpen="{Binding Path=(MenuItem.IsSubmenuOpen),Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}">
              <ItemsControl.ItemsSource>
                <MultiBinding MultiBinding.Converter="{StaticResource ċ}">
                  <MultiBinding.Bindings>
                    <Binding Path="(NavigationWindow.BackStack)"
                        RelativeSource="{RelativeSource TemplatedParent}" />
                    <Binding Path="(NavigationWindow.ForwardStack)"
                        RelativeSource="{RelativeSource TemplatedParent}" />
                  </MultiBinding.Bindings>
                </MultiBinding>
              </ItemsControl.ItemsSource>
            </MenuItem>
          </Menu>
          <Path Grid.Column="0" SnapsToDevicePixels="False" IsHitTestVisible="False" Margin="2,0,0,0"
              Grid.ColumnSpan="3" StrokeThickness="1" HorizontalAlignment="Left" VerticalAlignment="Center"
              Data="M22.5767,21.035Q27,19.37,31.424,21.035A12.5,12.5,0,0,0,53.5,13A12.5,12.5,0,0,0,37.765,0.926Q27,4.93,16.235,0.926A12.5,12.5,0,0,0,0.5,13A12.5,12.5,0,0,0,22.5767,21.035z">
            <Shape.Fill>
              <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                <GradientBrush.GradientStops>
                  <GradientStopCollection>
                    <GradientStop Color="#A0C2CCE7" Offset="0" />
                    <GradientStop Color="#60FFFFFF" Offset="1" />
                  </GradientStopCollection>
                </GradientBrush.GradientStops>
              </LinearGradientBrush>
            </Shape.Fill>
            <Shape.Stroke>
              <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                <GradientBrush.GradientStops>
                  <GradientStopCollection>
                    <GradientStop Color="#FFB7C2E3" Offset="0.2" />
                    <GradientStop Color="#A0FFFFFF" Offset="0.9" />
                  </GradientStopCollection>
                </GradientBrush.GradientStops>
              </LinearGradientBrush>
            </Shape.Stroke>
          </Path>
          <Button Style="{StaticResource Č}" Margin="3,0,2,0" Grid.Column="0" />
          <Button Style="{StaticResource č}" Margin="2,0,0,0" Grid.Column="1" />
        </Grid>
        <Grid>
          <AdornerDecorator>
            <ContentPresenter Name="PART_NavWinCP" ClipToBounds="True" />
          </AdornerDecorator>
          <ResizeGrip x:Name="WindowResizeGrip" HorizontalAlignment="Right" VerticalAlignment="Bottom"
              Visibility="Collapsed" IsTabStop="False" />
        </Grid>
      </DockPanel>
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="NavigationWindow.ShowsNavigationUI" Value="False">
        <Setter TargetName="NavChrome" Property="Visibility" Value="Collapsed" />
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="Window.ResizeMode" Value="CanResizeWithGrip" />
          <Condition Property="Window.WindowState" Value="Normal" />
        </MultiTrigger.Conditions>
        <Setter TargetName="WindowResizeGrip" Property="Visibility" Value="Visible" />
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="NavigationWindow.CanGoForward" Value="False" />
          <Condition Property="NavigationWindow.CanGoBack" Value="False" />
        </MultiTrigger.Conditions>
        <Setter TargetName="NavMenu" Property="IsEnabled" Value="False" />
      </MultiTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="{x:Type NavigationWindow}" TargetType="{x:Type NavigationWindow}">
    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
    <Setter Property="Control.Template" Value="{StaticResource Į}" />
  </Style>
  <Style x:Key="{x:Type Page}" TargetType="{x:Type Page}">
    <Setter Property="Page.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Page}">
          <Border Background="{TemplateBinding Page.Background}">
            <ContentPresenter Content="{TemplateBinding Page.Content}" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <LinearGradientBrush x:Key="į" EndPoint="0,1" StartPoint="0,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="#B2B2B2" Offset="0" />
      <GradientStop Color="#8C8C8C" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="İ" EndPoint="1,0" StartPoint="0,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="#BABABA" Offset="0" />
      <GradientStop Color="#C7C7C7" Offset="0.5" />
      <GradientStop Color="#BABABA" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ı" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#80FFFFFF" Offset="0.05" />
      <GradientStop Color="#00FFFFFF" Offset="0.25" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="Ĳ" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#50FFFFFF" Offset="0.5385" />
      <GradientStop Color="#00FFFFFF" Offset="0.5385" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ĳ" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#90FFFFFF" Offset="0.5385" />
      <GradientStop Color="#00FFFFFF" Offset="0.5385" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <RadialGradientBrush x:Key="Ĵ" RadialGradientBrush.RadiusX="1" RadialGradientBrush.RadiusY="1"
      Brush.RelativeTransform="1,0,0,1,0.5,0.5">
    <GradientBrush.GradientStops>
      <GradientStop Color="#60FFFFC4" Offset="0" />
      <GradientStop Color="#00FFFFC4" Offset="1" />
    </GradientBrush.GradientStops>
  </RadialGradientBrush>
  <LinearGradientBrush x:Key="ĵ" StartPoint="0,1" EndPoint="0,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="#60FFFFC4" Offset="0" />
      <GradientStop Color="#00FFFFC4" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <RadialGradientBrush x:Key="Ķ" RadialGradientBrush.RadiusX="1" RadialGradientBrush.RadiusY="1"
      Brush.RelativeTransform="1,0,0,1,-0.5,0.5">
    <GradientBrush.GradientStops>
      <GradientStop Color="#60FFFFC4" Offset="0" />
      <GradientStop Color="#00FFFFC4" Offset="1" />
    </GradientBrush.GradientStops>
  </RadialGradientBrush>
  <LinearGradientBrush x:Key="ķ" StartPoint="0,0" EndPoint="1,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="#0C000000" Offset="0" />
      <GradientStop Color="#20000000" Offset="0.3" />
      <GradientStop Color="#00000000" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ĸ" StartPoint="0,0" EndPoint="1,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="#00000000" Offset="0" />
      <GradientStop Color="#20000000" Offset="0.7" />
      <GradientStop Color="#0C000000" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="Ĺ" StartPoint="0,0" EndPoint="1,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="#00FFFFFF" Offset="0" />
      <GradientStop Color="#60FFFFFF" Offset="0.4" />
      <GradientStop Color="#60FFFFFF" Offset="0.6" />
      <GradientStop Color="#00FFFFFF" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <Style x:Key="{x:Type ProgressBar}" TargetType="{x:Type ProgressBar}">
    <Setter Property="Foreground" Value="#FF01D328" />
    <Setter Property="Background" Value="{StaticResource İ}" />
    <Setter Property="BorderBrush" Value="{StaticResource į}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ProgressBar}">
          <Grid Name="TemplateRoot" SnapsToDevicePixels="True">
            <Rectangle Fill="{TemplateBinding Background}" RadiusX="2" RadiusY="2" />
            <Border Background="{StaticResource Ĳ}" Margin="1" CornerRadius="2" />
            <Border BorderBrush="#80FFFFFF" Background="{StaticResource ı}" BorderThickness="1,0,1,1" Margin="1" />
            <Rectangle Name="PART_Track" Margin="1" />
            <Decorator x:Name="PART_Indicator" HorizontalAlignment="Left" Margin="1">
              <Grid Name="Foreground">
                <Rectangle x:Name="Indicator" Fill="{TemplateBinding Foreground}" />
                <Grid x:Name="Animation" ClipToBounds="True">
                  <Rectangle x:Name="PART_GlowRect" Width="100" Fill="{StaticResource Ĺ}" Margin="-100,0,0,0"
                      HorizontalAlignment="Left" />
                </Grid>
                <Grid x:Name="Overlay">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition MaxWidth="15" />
                    <ColumnDefinition Width="0.1*" />
                    <ColumnDefinition MaxWidth="15" />
                  </Grid.ColumnDefinitions>
                  <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                  </Grid.RowDefinitions>
                  <Rectangle x:Name="LeftDark" Grid.RowSpan="2" Fill="{StaticResource ķ}" RadiusX="1"
                      RadiusY="1" Margin="1,1,0,1" />
                  <Rectangle x:Name="RightDark" Grid.RowSpan="2" Grid.Column="2" RadiusX="1"
                      RadiusY="1" Fill="{StaticResource ĸ}" Margin="0,1,1,1" />
                  <Rectangle x:Name="LeftLight" Grid.Column="0" Grid.Row="2" Fill="{StaticResource Ĵ}" />
                  <Rectangle x:Name="CenterLight" Grid.Column="1" Grid.Row="2" Fill="{StaticResource ĵ}" />
                  <Rectangle x:Name="RightLight" Grid.Column="2" Grid.Row="2" Fill="{StaticResource Ķ}" />
                  <Border x:Name="Highlight1" Grid.RowSpan="2" Grid.ColumnSpan="3" Background="{StaticResource ĳ}" />
                  <Border x:Name="Highlight2" Grid.RowSpan="2" Grid.ColumnSpan="3" Background="{StaticResource ı}" />
                </Grid>
              </Grid>
            </Decorator>
            <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"
                CornerRadius="2" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="ProgressBar.Orientation" Value="Vertical">
              <Setter TargetName="TemplateRoot" Property="LayoutTransform">
                <Setter.Value>
                  <RotateTransform RotateTransform.Angle="-90" />
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="ProgressBar.IsIndeterminate" Value="True">
              <Setter TargetName="LeftDark" Property="Visibility" Value="Collapsed" />
              <Setter TargetName="RightDark" Property="Visibility" Value="Collapsed" />
              <Setter TargetName="LeftLight" Property="Visibility" Value="Collapsed" />
              <Setter TargetName="CenterLight" Property="Visibility" Value="Collapsed" />
              <Setter TargetName="RightLight" Property="Visibility" Value="Collapsed" />
              <Setter TargetName="Indicator" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="ProgressBar.IsIndeterminate" Value="False">
              <Setter TargetName="Animation" Property="Panel.Background" Value="#80B5FFA9" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type RadioButton}" TargetType="{x:Type RadioButton}">
    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Property="Background" Value="#FFF4F4F4" />
    <Setter Property="BorderBrush" Value="{StaticResource Þ}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RadioButton}">
          <BulletDecorator BulletDecorator.Background="#00FFFFFF">
            <BulletDecorator.Bullet>
              <theme:BulletChrome Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                  IsRound="True" RenderMouseOver="{TemplateBinding IsMouseOver}"
                  RenderPressed="{TemplateBinding ButtonBase.IsPressed}"
                  IsChecked="{TemplateBinding ToggleButton.IsChecked}" />
            </BulletDecorator.Bullet>
            <ContentPresenter Margin="{TemplateBinding Padding}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" />
          </BulletDecorator>
          <ControlTemplate.Triggers>
            <Trigger Property="ContentControl.HasContent" Value="True">
              <Setter Value="{StaticResource Ù}" Property="FocusVisualStyle" />
              <Setter Property="Padding" Value="4,0,0,0" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <LinearGradientBrush x:Key="ĺ" StartPoint="0,0.25" EndPoint="1,0.75">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FFFFFF" Offset="0.3" />
      <GradientStop Color="#BBC5D7" Offset="0.75" />
      <GradientStop Color="#6D83A9" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <Style x:Key="{x:Type ResizeGrip}" TargetType="{x:Type ResizeGrip}">
    <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
    <Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
    <Setter Property="Background" Value="#00FFFFFF" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ResizeGrip}">
          <Grid SnapsToDevicePixels="True" Panel.Background="{TemplateBinding Background}">
            <Path HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,2,2"
                Data="M9,0L11,0 11,11 0,11 0,9 3,9 3,6 6,6 6,3 9,3z">
              <Shape.Fill>
                <DrawingBrush TileBrush.Viewbox="0,0,3,3" TileBrush.Viewport="0,0,3,3" TileBrush.TileMode="Tile"
                    TileBrush.ViewportUnits="Absolute" TileBrush.ViewboxUnits="Absolute">
                  <DrawingBrush.Drawing>
                    <DrawingGroup>
                      <DrawingGroup.Children>
                        <GeometryDrawing GeometryDrawing.Brush="{StaticResource ĺ}"
                            GeometryDrawing.Geometry="M0,0L2,0 2,2 0,2z" />
                      </DrawingGroup.Children>
                    </DrawingGroup>
                  </DrawingBrush.Drawing>
                </DrawingBrush>
              </Shape.Fill>
            </Path>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <SolidColorBrush x:Key="Ļ" Color="#F4F4F4" />
  <LinearGradientBrush x:Key="ļ" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#E1E1E1" Offset="0" />
      <GradientStop Color="#EDEDED" Offset="0.20" />
      <GradientStop Color="#EDEDED" Offset="0.80" />
      <GradientStop Color="#E3E3E3" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="Ľ" StartPoint="0,0" EndPoint="1,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="#E1E1E1" Offset="0" />
      <GradientStop Color="#EDEDED" Offset="0.20" />
      <GradientStop Color="#EDEDED" Offset="0.80" />
      <GradientStop Color="#E3E3E3" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <Style x:Key="ľ" TargetType="{x:Type RepeatButton}">
    <Setter Property="OverridesDefaultStyle" Value="True" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <theme:ScrollChrome x:Name="Chrome" ScrollGlyph="{TemplateBinding theme:ScrollChrome.ScrollGlyph}"
              RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding ButtonBase.IsPressed}"
              SnapsToDevicePixels="True" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="Ŀ" TargetType="{x:Type Thumb}">
    <Setter Property="OverridesDefaultStyle" Value="True" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <theme:ScrollChrome x:Name="Chrome" ScrollGlyph="{TemplateBinding theme:ScrollChrome.ScrollGlyph}"
              RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding Thumb.IsDragging}"
              SnapsToDevicePixels="True" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ŀ" TargetType="{x:Type RepeatButton}">
    <Setter Property="OverridesDefaultStyle" Value="True" />
    <Setter Property="Background" Value="#00FFFFFF" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Rectangle Fill="{TemplateBinding Background}" Width="{TemplateBinding Width}"
              Height="{TemplateBinding Height}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="Ł" TargetType="{x:Type RepeatButton}">
    <Setter Property="OverridesDefaultStyle" Value="True" />
    <Setter Property="Background" Value="#00FFFFFF" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Rectangle Fill="{TemplateBinding Background}" Width="{TemplateBinding Width}"
              Height="{TemplateBinding Height}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
    <Setter Property="Background" Value="{StaticResource Ľ}" />
    <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
    <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ScrollBar}">
          <Grid Name="Bg" Panel.Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
            <Grid.RowDefinitions>
              <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
              <RowDefinition Height="0.00001*" />
              <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
            </Grid.RowDefinitions>
            <RepeatButton Style="{StaticResource ľ}" IsEnabled="{TemplateBinding IsMouseOver}"
                ButtonBase.Command="{x:Static ScrollBar.LineUpCommand}" theme:ScrollChrome.ScrollGlyph="UpArrow" />
            <Track Name="PART_Track" Grid.Row="1" IsEnabled="{TemplateBinding IsMouseOver}"
                Track.IsDirectionReversed="True">
              <Track.DecreaseRepeatButton>
                <RepeatButton Style="{StaticResource Ł}" ButtonBase.Command="{x:Static ScrollBar.PageUpCommand}" />
              </Track.DecreaseRepeatButton>
              <Track.IncreaseRepeatButton>
                <RepeatButton Style="{StaticResource Ł}" ButtonBase.Command="{x:Static ScrollBar.PageDownCommand}" />
              </Track.IncreaseRepeatButton>
              <Track.Thumb>
                <Thumb Style="{StaticResource Ŀ}" theme:ScrollChrome.ScrollGlyph="VerticalGripper" />
              </Track.Thumb>
            </Track>
            <RepeatButton Style="{StaticResource ľ}" Grid.Row="2" IsEnabled="{TemplateBinding IsMouseOver}"
                ButtonBase.Command="{x:Static ScrollBar.LineDownCommand}" theme:ScrollChrome.ScrollGlyph="DownArrow" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="Bg" Value="{StaticResource Ļ}" Property="Panel.Background" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="ScrollBar.Orientation" Value="Horizontal">
        <Setter Property="Width" Value="Auto" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
        <Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
        <Setter Property="Background" Value="{StaticResource ļ}" />
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ScrollBar}">
              <Grid Name="Bg" Panel.Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition
                      MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                  <ColumnDefinition Width="0.00001*" />
                  <ColumnDefinition
                      MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                </Grid.ColumnDefinitions>
                <RepeatButton Style="{StaticResource ľ}" IsEnabled="{TemplateBinding IsMouseOver}"
                    ButtonBase.Command="{x:Static ScrollBar.LineLeftCommand}" theme:ScrollChrome.ScrollGlyph="LeftArrow" />
                <Track Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding IsMouseOver}">
                  <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ŀ}" ButtonBase.Command="{x:Static ScrollBar.PageLeftCommand}" />
                  </Track.DecreaseRepeatButton>
                  <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ŀ}" ButtonBase.Command="{x:Static ScrollBar.PageRightCommand}" />
                  </Track.IncreaseRepeatButton>
                  <Track.Thumb>
                    <Thumb Style="{StaticResource Ŀ}" theme:ScrollChrome.ScrollGlyph="HorizontalGripper" />
                  </Track.Thumb>
                </Track>
                <RepeatButton Style="{StaticResource ľ}" Grid.Column="2" IsEnabled="{TemplateBinding IsMouseOver}"
                    ButtonBase.Command="{x:Static ScrollBar.LineRightCommand}"
                    theme:ScrollChrome.ScrollGlyph="RightArrow" />
              </Grid>
              <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                  <Setter TargetName="Bg" Value="{StaticResource Ļ}" Property="Panel.Background" />
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{x:Type ScrollViewer}" TargetType="{x:Type ScrollViewer}">
    <Style.Triggers>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{x:Type Separator}" TargetType="{x:Type Separator}">
    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
    <Setter Property="Margin" Value="0,2,0,2" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Separator}">
          <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" Height="1" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Geometry x:Key="ł">
    M 4.5,-7.5 A 1 1 0 0 0 3.5,-8.5 L -3.5,-8.5 A 1 1 0 0 0 -4.5,-7.5 L -4.5,4.5 L -0.5,8.5 L 0.5,8.5 L 4.5,4.5 Z
  </Geometry>
  <Geometry x:Key="Ń">
    M 3.5,-7.5 L -3.5,-7.5 L -3.5,4.5 L 0,8 L 3.5,4.5 Z
  </Geometry>
  <Geometry x:Key="ń">
    M 2.5,-6.5 L -2.5,-6.5 L -2.5,4.5 L 0,7 L 2.5 4.5 Z
  </Geometry>
  <Geometry x:Key="Ņ">
    M 4.5,-8.5 L -4.5,-8.5 L -4.5,4.5 L -0.5,8.5 L 0.5,8.5 L 4.5,4.5 Z
  </Geometry>
  <Geometry x:Key="ņ">
    M -5,-9.5 A 1 1 0 0 1 -4,-10.5 L 4,-10.5 A 1 1 0 0 1 5,-9.5 L 5,9.5 A 1 1 0 0 1 4,10.5 L -4,10.5 A 1 1 0 0 1 -5,9.5 Z
  </Geometry>
  <Geometry x:Key="Ň">
    M -4,-9.5 L 4,-9.5 L 4,9.5 L -4,9.5 Z
  </Geometry>
  <Geometry x:Key="ň">
    M -5,-10.5 L 5,-10.5 L 5,10.5 L -5,10.5 Z
  </Geometry>
  <LinearGradientBrush x:Key="ŉ" EndPoint="0,1" StartPoint="0,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="White" Offset="0" />
      <GradientStop Color="#F0EFEF" Offset="0.4" />
      <GradientStop Color="#D6D5D5" Offset=".8" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="Ŋ" EndPoint="0,0" StartPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="White" Offset="0" />
      <GradientStop Color="#F0EFEF" Offset="0.4" />
      <GradientStop Color="#D6D5D5" Offset=".8" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ŋ" EndPoint="1,0" StartPoint="0,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="White" Offset="0" />
      <GradientStop Color="#F0EFEF" Offset="0.4" />
      <GradientStop Color="#D6D5D5" Offset=".8" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="Ō" EndPoint="0,0" StartPoint="1,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="White" Offset="0" />
      <GradientStop Color="#F0EFEF" Offset="0.4" />
      <GradientStop Color="#D6D5D5" Offset=".8" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ō" EndPoint="0,1" StartPoint="0,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="white" Offset="0" />
      <GradientStop Color="#B8E2F9" Offset="0.5" />
      <GradientStop Color="#B0DFF8" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="Ŏ" EndPoint="0,0" StartPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="white" Offset="0" />
      <GradientStop Color="#B8E2F9" Offset="0.5" />
      <GradientStop Color="#B0DFF8" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ŏ" EndPoint="1,0" StartPoint="0,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="white" Offset="0" />
      <GradientStop Color="#B8E2F9" Offset="0.5" />
      <GradientStop Color="#B0DFF8" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="Ő" EndPoint="0,0" StartPoint="1,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="white" Offset="0" />
      <GradientStop Color="#B8E2F9" Offset="0.5" />
      <GradientStop Color="#B0DFF8" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="ő" Color="#3C7FB1" />
  <LinearGradientBrush x:Key="Œ" EndPoint="0,1" StartPoint="0,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="#B8E4FA" Offset="0.25" />
      <GradientStop Color="#5EB4E3" Offset="0.5" />
      <GradientStop Color="#4C8BB4" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="œ" EndPoint="0,0" StartPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#B8E4FA" Offset="0.25" />
      <GradientStop Color="#5EB4E3" Offset="0.5" />
      <GradientStop Color="#4C8BB4" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="Ŕ" EndPoint="1,0" StartPoint="0,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="#B8E4FA" Offset="0.25" />
      <GradientStop Color="#5EB4E3" Offset="0.5" />
      <GradientStop Color="#4C8BB4" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ŕ" EndPoint="0,0" StartPoint="1,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="#B8E4FA" Offset="0.25" />
      <GradientStop Color="#5EB4E3" Offset="0.5" />
      <GradientStop Color="#4C8BB4" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="Ŗ" Color="#2C628B" />
  <SolidColorBrush x:Key="ŗ" Color="#FFE7EAEA" />
  <LinearGradientBrush x:Key="Ř" EndPoint="0,1" StartPoint="0,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FFAEB1AF" Offset="0.1" />
      <GradientStop Color="White" Offset=".9" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <Style x:Key="ř" TargetType="{x:Type RepeatButton}">
    <Setter Property="OverridesDefaultStyle" Value="True" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Rectangle Fill="#00FFFFFF" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="Ś" TargetType="{x:Type Thumb}">
    <Setter Property="Focusable" Value="False" />
    <Setter Property="OverridesDefaultStyle" Value="True" />
    <Setter Property="Height" Value="22" />
    <Setter Property="Width" Value="11" />
    <Setter Property="Foreground" Value="#FF808080" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Canvas SnapsToDevicePixels="True">
            <UIElement.RenderTransform>
              <TranslateTransform TranslateTransform.X="5.5" TranslateTransform.Y="11" />
            </UIElement.RenderTransform>
            <Path x:Name="Background" Fill="{StaticResource ŉ}" Data="{StaticResource ņ}" />
            <Path x:Name="InnerBorder" Stroke="#FFFFFFFF" Data="{StaticResource Ň}" />
            <Path x:Name="OuterBorder" Stroke="#FF929292" Data="{StaticResource ņ}" />
          </Canvas>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="Background" Value="{StaticResource ō}" Property="Shape.Fill" />
              <Setter TargetName="OuterBorder" Value="{StaticResource ő}" Property="Shape.Stroke" />
            </Trigger>
            <Trigger Property="Foreground" Value="#FF0000FF">
              <Setter TargetName="Background" Value="{StaticResource ō}" Property="Shape.Fill" />
              <Setter TargetName="OuterBorder" Value="{StaticResource ő}" Property="Shape.Stroke" />
            </Trigger>
            <Trigger Property="Thumb.IsDragging" Value="True">
              <Setter TargetName="Background" Value="{StaticResource Œ}" Property="Shape.Fill" />
              <Setter TargetName="OuterBorder" Value="{StaticResource Ŗ}" Property="Shape.Stroke" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="Background" Property="Shape.Fill" Value="#FFF4F4F4" />
              <Setter TargetName="InnerBorder" Value="{x:Null}" Property="Shape.Stroke" />
              <Setter TargetName="OuterBorder" Value="{StaticResource ň}" Property="Path.Data" />
              <Setter TargetName="OuterBorder" Property="Shape.Stroke" Value="#FFAEB1AF" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ś" TargetType="{x:Type Thumb}">
    <Setter Property="Focusable" Value="False" />
    <Setter Property="OverridesDefaultStyle" Value="True" />
    <Setter Property="Height" Value="18" />
    <Setter Property="Width" Value="10" />
    <Setter Property="Foreground" Value="#FF808080" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Canvas SnapsToDevicePixels="True">
            <UIElement.RenderTransform>
              <TransformGroup>
                <TransformGroup.Children>
                  <TransformCollection>
                    <RotateTransform RotateTransform.Angle="180" />
                    <TranslateTransform TranslateTransform.X="5" TranslateTransform.Y="9" />
                  </TransformCollection>
                </TransformGroup.Children>
              </TransformGroup>
            </UIElement.RenderTransform>
            <Path x:Name="Background" Fill="{StaticResource Ŋ}" Data="{StaticResource ł}" />
            <Path x:Name="InnerBorder" Stroke="#FFFFFFFF" StrokeThickness="1" Data="{StaticResource Ń}" />
            <Path x:Name="OuterBorder" Stroke="#FF929292" StrokeThickness="1" Data="{StaticResource ł}" />
          </Canvas>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="Background" Value="{StaticResource Ŏ}" Property="Shape.Fill" />
              <Setter TargetName="OuterBorder" Value="{StaticResource ő}" Property="Shape.Stroke" />
            </Trigger>
            <Trigger Property="Foreground" Value="#FF0000FF">
              <Setter TargetName="Background" Value="{StaticResource Ŏ}" Property="Shape.Fill" />
              <Setter TargetName="OuterBorder" Value="{StaticResource ő}" Property="Shape.Stroke" />
            </Trigger>
            <Trigger Property="Thumb.IsDragging" Value="True">
              <Setter TargetName="Background" Value="{StaticResource œ}" Property="Shape.Fill" />
              <Setter TargetName="OuterBorder" Value="{StaticResource Ŗ}" Property="Shape.Stroke" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="Background" Property="Shape.Fill" Value="#FFF4F4F4" />
              <Setter TargetName="InnerBorder" Value="{x:Null}" Property="Shape.Stroke" />
              <Setter TargetName="OuterBorder" Value="{StaticResource ň}" Property="Path.Data" />
              <Setter TargetName="OuterBorder" Property="Shape.Stroke" Value="#FFAEB1AF" />
              <Setter TargetName="OuterBorder" Value="{StaticResource Ņ}" Property="Path.Data" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="Ŝ" TargetType="{x:Type Thumb}">
    <Setter Property="Focusable" Value="False" />
    <Setter Property="OverridesDefaultStyle" Value="True" />
    <Setter Property="Height" Value="18" />
    <Setter Property="Width" Value="10" />
    <Setter Property="Foreground" Value="#FF808080" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Canvas SnapsToDevicePixels="True">
            <UIElement.RenderTransform>
              <TranslateTransform TranslateTransform.X="5" TranslateTransform.Y="9" />
            </UIElement.RenderTransform>
            <Path x:Name="Background" Fill="{StaticResource ŉ}" Data="{StaticResource ł}" />
            <Path x:Name="InnerBorder" Stroke="#FFFFFFFF" StrokeThickness="1" Data="{StaticResource Ń}" />
            <Path x:Name="OuterBorder" Stroke="#FF929292" StrokeThickness="1" Data="{StaticResource ł}" />
          </Canvas>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="Background" Value="{StaticResource ō}" Property="Shape.Fill" />
              <Setter TargetName="OuterBorder" Value="{StaticResource ő}" Property="Shape.Stroke" />
            </Trigger>
            <Trigger Property="Foreground" Value="#FF0000FF">
              <Setter TargetName="Background" Value="{StaticResource ō}" Property="Shape.Fill" />
              <Setter TargetName="OuterBorder" Value="{StaticResource ő}" Property="Shape.Stroke" />
            </Trigger>
            <Trigger Property="Thumb.IsDragging" Value="True">
              <Setter TargetName="Background" Value="{StaticResource Œ}" Property="Shape.Fill" />
              <Setter TargetName="OuterBorder" Value="{StaticResource Ŗ}" Property="Shape.Stroke" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="Background" Property="Shape.Fill" Value="#FFF4F4F4" />
              <Setter TargetName="InnerBorder" Value="{x:Null}" Property="Shape.Stroke" />
              <Setter TargetName="OuterBorder" Value="{StaticResource ň}" Property="Path.Data" />
              <Setter TargetName="OuterBorder" Property="Shape.Stroke" Value="#FFAEB1AF" />
              <Setter TargetName="OuterBorder" Value="{StaticResource Ņ}" Property="Path.Data" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <LinearGradientBrush x:Key="ŝ" EndPoint="1,0" StartPoint="0,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FFAEB1AF" Offset="0.1" />
      <GradientStop Color="White" Offset=".9" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <Style x:Key="Ş" TargetType="{x:Type Thumb}">
    <Setter Property="Focusable" Value="False" />
    <Setter Property="OverridesDefaultStyle" Value="True" />
    <Setter Property="Height" Value="11" />
    <Setter Property="Width" Value="22" />
    <Setter Property="Foreground" Value="#FF808080" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Canvas SnapsToDevicePixels="True">
            <UIElement.RenderTransform>
              <TransformGroup>
                <TransformGroup.Children>
                  <TransformCollection>
                    <RotateTransform RotateTransform.Angle="90" />
                    <TranslateTransform TranslateTransform.X="11" TranslateTransform.Y="5.5" />
                  </TransformCollection>
                </TransformGroup.Children>
              </TransformGroup>
            </UIElement.RenderTransform>
            <Path x:Name="Background" Fill="{StaticResource ŋ}" Data="{StaticResource ņ}" />
            <Path x:Name="InnerBorder" Stroke="#FFFFFFFF" StrokeThickness="1" Data="{StaticResource Ň}" />
            <Path x:Name="OuterBorder" Stroke="#FF929292" StrokeThickness="1" Data="{StaticResource ņ}" />
          </Canvas>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="Background" Value="{StaticResource ŏ}" Property="Shape.Fill" />
              <Setter TargetName="OuterBorder" Value="{StaticResource ő}" Property="Shape.Stroke" />
            </Trigger>
            <Trigger Property="Foreground" Value="#FF0000FF">
              <Setter TargetName="Background" Value="{StaticResource ŏ}" Property="Shape.Fill" />
              <Setter TargetName="OuterBorder" Value="{StaticResource ő}" Property="Shape.Stroke" />
            </Trigger>
            <Trigger Property="Thumb.IsDragging" Value="True">
              <Setter TargetName="Background" Value="{StaticResource Ŕ}" Property="Shape.Fill" />
              <Setter TargetName="OuterBorder" Value="{StaticResource Ŗ}" Property="Shape.Stroke" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="Background" Property="Shape.Fill" Value="#FFF4F4F4" />
              <Setter TargetName="InnerBorder" Value="{x:Null}" Property="Shape.Stroke" />
              <Setter TargetName="OuterBorder" Value="{StaticResource ň}" Property="Path.Data" />
              <Setter TargetName="OuterBorder" Property="Shape.Stroke" Value="#FFAEB1AF" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ş" TargetType="{x:Type Thumb}">
    <Setter Property="Focusable" Value="False" />
    <Setter Property="OverridesDefaultStyle" Value="True" />
    <Setter Property="Height" Value="10" />
    <Setter Property="Width" Value="18" />
    <Setter Property="Foreground" Value="#FF808080" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Canvas SnapsToDevicePixels="True">
            <UIElement.RenderTransform>
              <TransformGroup>
                <TransformGroup.Children>
                  <TransformCollection>
                    <RotateTransform RotateTransform.Angle="90" />
                    <TranslateTransform TranslateTransform.X="9" TranslateTransform.Y="5" />
                  </TransformCollection>
                </TransformGroup.Children>
              </TransformGroup>
            </UIElement.RenderTransform>
            <Path x:Name="Background" Fill="{StaticResource ŋ}" Data="{StaticResource ł}" />
            <Path x:Name="InnerBorder" Stroke="#FFFFFFFF" StrokeThickness="1" Data="{StaticResource Ń}" />
            <Path x:Name="OuterBorder" Stroke="#FF929292" StrokeThickness="1" Data="{StaticResource ł}" />
          </Canvas>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="Background" Value="{StaticResource ŏ}" Property="Shape.Fill" />
              <Setter TargetName="OuterBorder" Value="{StaticResource ő}" Property="Shape.Stroke" />
            </Trigger>
            <Trigger Property="Foreground" Value="#FF0000FF">
              <Setter TargetName="Background" Value="{StaticResource ŏ}" Property="Shape.Fill" />
              <Setter TargetName="OuterBorder" Value="{StaticResource ő}" Property="Shape.Stroke" />
            </Trigger>
            <Trigger Property="Thumb.IsDragging" Value="True">
              <Setter TargetName="Background" Value="{StaticResource Ŕ}" Property="Shape.Fill" />
              <Setter TargetName="OuterBorder" Value="{StaticResource Ŗ}" Property="Shape.Stroke" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="Background" Property="Shape.Fill" Value="#FFF4F4F4" />
              <Setter TargetName="InnerBorder" Value="{x:Null}" Property="Shape.Stroke" />
              <Setter TargetName="OuterBorder" Value="{StaticResource Ņ}" Property="Path.Data" />
              <Setter TargetName="OuterBorder" Property="Shape.Stroke" Value="#FFAEB1AF" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="Š" TargetType="{x:Type Thumb}">
    <Setter Property="Focusable" Value="False" />
    <Setter Property="OverridesDefaultStyle" Value="True" />
    <Setter Property="Height" Value="10" />
    <Setter Property="Width" Value="18" />
    <Setter Property="Foreground" Value="#FF808080" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Canvas SnapsToDevicePixels="True">
            <UIElement.RenderTransform>
              <TransformGroup>
                <TransformGroup.Children>
                  <TransformCollection>
                    <RotateTransform RotateTransform.Angle="-90" />
                    <TranslateTransform TranslateTransform.X="9" TranslateTransform.Y="5" />
                  </TransformCollection>
                </TransformGroup.Children>
              </TransformGroup>
            </UIElement.RenderTransform>
            <Path x:Name="Background" Fill="{StaticResource Ō}" Data="{StaticResource ł}" />
            <Path x:Name="InnerBorder" Stroke="#FFFFFFFF" StrokeThickness="1" Data="{StaticResource Ń}" />
            <Path x:Name="OuterBorder" Stroke="#FF929292" StrokeThickness="1" Data="{StaticResource ł}" />
          </Canvas>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="Background" Value="{StaticResource Ő}" Property="Shape.Fill" />
              <Setter TargetName="OuterBorder" Value="{StaticResource ő}" Property="Shape.Stroke" />
            </Trigger>
            <Trigger Property="Foreground" Value="#FF0000FF">
              <Setter TargetName="Background" Value="{StaticResource Ő}" Property="Shape.Fill" />
              <Setter TargetName="OuterBorder" Value="{StaticResource ő}" Property="Shape.Stroke" />
            </Trigger>
            <Trigger Property="Thumb.IsDragging" Value="True">
              <Setter TargetName="Background" Value="{StaticResource ŕ}" Property="Shape.Fill" />
              <Setter TargetName="OuterBorder" Value="{StaticResource Ŗ}" Property="Shape.Stroke" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="Background" Property="Shape.Fill" Value="#FFF4F4F4" />
              <Setter TargetName="InnerBorder" Value="{x:Null}" Property="Shape.Stroke" />
              <Setter TargetName="OuterBorder" Value="{StaticResource Ņ}" Property="Path.Data" />
              <Setter TargetName="OuterBorder" Property="Shape.Stroke" Value="#FFAEB1AF" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type Slider}" TargetType="{x:Type Slider}">
    <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False" />
    <Setter Property="Background" Value="#00FFFFFF" />
    <Setter Property="Foreground" Value="#FFC4C4C4" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Slider}">
          <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                <RowDefinition Height="Auto" />
              </Grid.RowDefinitions>
              <TickBar x:Name="TopTick" Grid.Row="0" Visibility="Collapsed" TickBar.Placement="Top"
                  TickBar.Fill="{TemplateBinding Foreground}" Height="4" />
              <TickBar x:Name="BottomTick" Grid.Row="2" Visibility="Collapsed" TickBar.Placement="Bottom"
                  TickBar.Fill="{TemplateBinding Foreground}" Height="4" />
              <Border x:Name="TrackBackground" Grid.Row="1" Margin="5,0" VerticalAlignment="center"
                  BorderBrush="{StaticResource Ř}" BorderThickness="1" CornerRadius="1" Background="{StaticResource ŗ}"
                  Height="4.0">
                <Canvas Margin="-6,-1">
                  <Rectangle x:Name="PART_SelectionRange"
                      Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Height="4.0"
                      Visibility="Hidden" StrokeThickness="1.0"
                      Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
                </Canvas>
              </Border>
              <Track Name="PART_Track" Grid.Row="1">
                <Track.DecreaseRepeatButton>
                  <RepeatButton Style="{StaticResource ř}" ButtonBase.Command="{x:Static Slider.DecreaseLarge}" />
                </Track.DecreaseRepeatButton>
                <Track.IncreaseRepeatButton>
                  <RepeatButton Style="{StaticResource ř}" ButtonBase.Command="{x:Static Slider.IncreaseLarge}" />
                </Track.IncreaseRepeatButton>
                <Track.Thumb>
                  <Thumb x:Name="Thumb" Style="{StaticResource Ś}" />
                </Track.Thumb>
              </Track>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="Slider.TickPlacement" Value="TopLeft">
              <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
              <Setter TargetName="Thumb" Value="{StaticResource ś}" Property="Style" />
              <Setter TargetName="TrackBackground" Property="Margin" Value="5,2,5,0" />
            </Trigger>
            <Trigger Property="Slider.TickPlacement" Value="BottomRight">
              <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
              <Setter TargetName="Thumb" Value="{StaticResource Ŝ}" Property="Style" />
              <Setter TargetName="TrackBackground" Property="Margin" Value="5,0,5,2" />
            </Trigger>
            <Trigger Property="Slider.TickPlacement" Value="Both">
              <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
              <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="Slider.IsSelectionRangeEnabled" Value="True">
              <Setter TargetName="PART_SelectionRange" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="True">
              <Setter TargetName="Thumb" Property="Foreground" Value="#FF0000FF" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="Slider.Orientation" Value="Vertical">
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type Slider}">
              <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" MinWidth="{TemplateBinding MinWidth}" />
                    <ColumnDefinition Width="Auto" />
                  </Grid.ColumnDefinitions>
                  <TickBar x:Name="TopTick" Grid.Column="0" Visibility="Collapsed" TickBar.Placement="Left"
                      TickBar.Fill="{TemplateBinding Foreground}" Width="4" />
                  <TickBar x:Name="BottomTick" Grid.Column="2" Visibility="Collapsed" TickBar.Placement="Right"
                      TickBar.Fill="{TemplateBinding Foreground}" Width="4" />
                  <Border Name="TrackBackground" Grid.Column="1" Margin="0,5" HorizontalAlignment="center"
                      BorderBrush="{StaticResource ŝ}" BorderThickness="1" CornerRadius="1"
                      Background="{StaticResource ŗ}" Width="4.0">
                    <Canvas Margin="-1,-6">
                      <Rectangle x:Name="PART_SelectionRange"
                          Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Width="4.0"
                          Visibility="Hidden" StrokeThickness="1.0"
                          Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
                    </Canvas>
                  </Border>
                  <Track Name="PART_Track" Grid.Column="1">
                    <Track.DecreaseRepeatButton>
                      <RepeatButton Style="{StaticResource ř}" ButtonBase.Command="{x:Static Slider.DecreaseLarge}" />
                    </Track.DecreaseRepeatButton>
                    <Track.IncreaseRepeatButton>
                      <RepeatButton Style="{StaticResource ř}" ButtonBase.Command="{x:Static Slider.IncreaseLarge}" />
                    </Track.IncreaseRepeatButton>
                    <Track.Thumb>
                      <Thumb x:Name="Thumb" Style="{StaticResource Ş}" />
                    </Track.Thumb>
                  </Track>
                </Grid>
              </Border>
              <ControlTemplate.Triggers>
                <Trigger Property="Slider.TickPlacement" Value="TopLeft">
                  <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                  <Setter TargetName="Thumb" Value="{StaticResource ş}" Property="Style" />
                  <Setter TargetName="TrackBackground" Property="Margin" Value="2,5,0,5" />
                </Trigger>
                <Trigger Property="Slider.TickPlacement" Value="BottomRight">
                  <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
                  <Setter TargetName="Thumb" Value="{StaticResource Š}" Property="Style" />
                  <Setter TargetName="TrackBackground" Property="Margin" Value="0,5,2,5" />
                </Trigger>
                <Trigger Property="Slider.TickPlacement" Value="Both">
                  <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                  <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
                </Trigger>
                <Trigger Property="Slider.IsSelectionRangeEnabled" Value="True">
                  <Setter TargetName="PART_SelectionRange" Property="Visibility" Value="Visible" />
                </Trigger>
                <Trigger Property="IsKeyboardFocused" Value="True">
                  <Setter TargetName="Thumb" Property="Foreground" Value="#FF0000FF" />
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{x:Type StatusBar}" TargetType="{x:Type StatusBar}">
    <Setter Property="Background" Value="#FFF1EDED" />
    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.StatusFontFamilyKey}}" />
    <Setter Property="FontSize" Value="{DynamicResource {x:Static SystemFonts.StatusFontSizeKey}}" />
    <Setter Property="FontStyle" Value="{DynamicResource {x:Static SystemFonts.StatusFontStyleKey}}" />
    <Setter Property="FontWeight" Value="{DynamicResource {x:Static SystemFonts.StatusFontWeightKey}}" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type StatusBar}">
          <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}"
              SnapsToDevicePixels="True">
            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Static StatusBar.SeparatorStyleKey}" TargetType="{x:Type Separator}">
    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
    <Setter Property="MinWidth" Value="1" />
    <Setter Property="MinHeight" Value="1" />
    <Setter Property="Margin" Value="2" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Separator}">
          <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type StatusBarItem}" TargetType="{x:Type StatusBarItem}">
    <Setter Property="Padding" Value="3" />
    <Setter Property="Background" Value="#00FFFFFF" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type StatusBarItem}">
          <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}"
              SnapsToDevicePixels="True">
            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <SolidColorBrush x:Key="š" Color="#8C8E94" />
  <Style x:Key="{x:Type TabControl}" TargetType="{x:Type TabControl}">
    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Property="Padding" Value="4,4,4,4" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="BorderBrush" Value="{StaticResource š}" />
    <Setter Property="Background" Value="#FFF9F9F9" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TabControl}">
          <Grid KeyboardNavigation.TabNavigation="Local" SnapsToDevicePixels="True" ClipToBounds="True">
            <Grid.ColumnDefinitions>
              <ColumnDefinition x:Name="ColumnDefinition0" />
              <ColumnDefinition x:Name="ColumnDefinition1" Width="0" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition x:Name="RowDefinition0" Height="Auto" />
              <RowDefinition x:Name="RowDefinition1" Height="*" />
            </Grid.RowDefinitions>
            <TabPanel x:Name="HeaderPanel" Panel.ZIndex="1" KeyboardNavigation.TabIndex="1" Grid.Column="0" Grid.Row="0"
                Margin="2,2,2,0" Panel.IsItemsHost="True" />
            <Border x:Name="ContentPanel" Background="{TemplateBinding Background}"
                BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"
                KeyboardNavigation.TabNavigation="Local" KeyboardNavigation.DirectionalNavigation="Contained"
                KeyboardNavigation.TabIndex="2" Grid.Column="0" Grid.Row="1">
              <ContentPresenter Name="PART_SelectedContentHost"
                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="{TemplateBinding Padding}"
                  ContentSource="SelectedContent" />
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="TabControl.TabStripPlacement" Value="Bottom">
              <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="1" />
              <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
              <Setter TargetName="RowDefinition0" Property="RowDefinition.Height" Value="*" />
              <Setter TargetName="RowDefinition1" Property="RowDefinition.Height" Value="Auto" />
              <Setter TargetName="HeaderPanel" Property="Margin" Value="2,0,2,2" />
            </Trigger>
            <Trigger Property="TabControl.TabStripPlacement" Value="Left">
              <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0" />
              <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
              <Setter TargetName="HeaderPanel" Property="Grid.Column" Value="0" />
              <Setter TargetName="ContentPanel" Property="Grid.Column" Value="1" />
              <Setter TargetName="ColumnDefinition0" Property="ColumnDefinition.Width" Value="Auto" />
              <Setter TargetName="ColumnDefinition1" Property="ColumnDefinition.Width" Value="*" />
              <Setter TargetName="RowDefinition0" Property="RowDefinition.Height" Value="*" />
              <Setter TargetName="RowDefinition1" Property="RowDefinition.Height" Value="0" />
              <Setter TargetName="HeaderPanel" Property="Margin" Value="2,2,0,2" />
            </Trigger>
            <Trigger Property="TabControl.TabStripPlacement" Value="Right">
              <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0" />
              <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
              <Setter TargetName="HeaderPanel" Property="Grid.Column" Value="1" />
              <Setter TargetName="ContentPanel" Property="Grid.Column" Value="0" />
              <Setter TargetName="ColumnDefinition0" Property="ColumnDefinition.Width" Value="*" />
              <Setter TargetName="ColumnDefinition1" Property="ColumnDefinition.Width" Value="Auto" />
              <Setter TargetName="RowDefinition0" Property="RowDefinition.Height" Value="*" />
              <Setter TargetName="RowDefinition1" Property="RowDefinition.Height" Value="0" />
              <Setter TargetName="HeaderPanel" Property="Margin" Value="0,2,2,2" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="Ţ">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Margin="3,3,3,1" StrokeThickness="1"
              Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeDashArray="1 2"
              SnapsToDevicePixels="True" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <LinearGradientBrush x:Key="ţ" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#EAF6FD" Offset="0.15" />
      <GradientStop Color="#D9F0FC" Offset=".5" />
      <GradientStop Color="#BEE6FD" Offset=".5" />
      <GradientStop Color="#A7D9F5" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="Ť" Color="#F9F9F9" />
  <SolidColorBrush x:Key="ť" Color="#F4F4F4" />
  <SolidColorBrush x:Key="Ŧ" Color="#3C7FB1" />
  <SolidColorBrush x:Key="ŧ" Color="#FFC9C7BA" />
  <Style x:Key="{x:Type TabItem}" TargetType="{x:Type TabItem}">
    <Setter Property="FocusVisualStyle" Value="{StaticResource Ţ}" />
    <Setter Property="Foreground" Value="#FF000000" />
    <Setter Property="Padding" Value="6,1,6,1" />
    <Setter Property="BorderBrush" Value="{StaticResource š}" />
    <Setter Property="Background" Value="{StaticResource Ò}" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="VerticalContentAlignment" Value="Stretch" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TabItem}">
          <Grid SnapsToDevicePixels="True">
            <Border Name="Bd" Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}"
                Background="{TemplateBinding Background}" BorderThickness="1,1,1,0">
              <ContentPresenter Name="Content" ContentSource="Header"
                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"
                  HorizontalAlignment="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                  VerticalAlignment="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="Bd" Value="{StaticResource ţ}" Property="Background" />
            </Trigger>
            <Trigger Property="TabItem.IsSelected" Value="True">
              <Setter Property="Panel.ZIndex" Value="1" />
              <Setter TargetName="Bd" Value="{StaticResource Ť}" Property="Background" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="TabItem.IsSelected" Value="False" />
                <Condition Property="IsMouseOver" Value="True" />
              </MultiTrigger.Conditions>
              <Setter TargetName="Bd" Value="{StaticResource Ŧ}" Property="BorderBrush" />
            </MultiTrigger>
            <Trigger Property="TabItem.TabStripPlacement" Value="Bottom">
              <Setter TargetName="Bd" Property="BorderThickness" Value="1,0,1,1" />
            </Trigger>
            <Trigger Property="TabItem.TabStripPlacement" Value="Left">
              <Setter TargetName="Bd" Property="BorderThickness" Value="1,1,0,1" />
            </Trigger>
            <Trigger Property="TabItem.TabStripPlacement" Value="Right">
              <Setter TargetName="Bd" Property="BorderThickness" Value="0,1,1,1" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="TabItem.IsSelected" Value="True" />
                <Condition Property="TabItem.TabStripPlacement" Value="Top" />
              </MultiTrigger.Conditions>
              <Setter Property="Margin" Value="-2,-2,-2,-1" />
              <Setter TargetName="Content" Property="Margin" Value="0,0,0,1" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="TabItem.IsSelected" Value="True" />
                <Condition Property="TabItem.TabStripPlacement" Value="Bottom" />
              </MultiTrigger.Conditions>
              <Setter Property="Margin" Value="-2,-1,-2,-2" />
              <Setter TargetName="Content" Property="Margin" Value="0,1,0,0" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="TabItem.IsSelected" Value="True" />
                <Condition Property="TabItem.TabStripPlacement" Value="Left" />
              </MultiTrigger.Conditions>
              <Setter Property="Margin" Value="-2,-2,-1,-2" />
              <Setter TargetName="Content" Property="Margin" Value="0,0,1,0" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="TabItem.IsSelected" Value="True" />
                <Condition Property="TabItem.TabStripPlacement" Value="Right" />
              </MultiTrigger.Conditions>
              <Setter Property="Margin" Value="-1,-2,-2,-2" />
              <Setter TargetName="Content" Property="Margin" Value="1,0,0,0" />
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="Bd" Value="{StaticResource ť}" Property="Background" />
              <Setter TargetName="Bd" Value="{StaticResource ŧ}" Property="BorderBrush" />
              <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <LinearGradientBrush x:Key="å" StartPoint="0,0" EndPoint="0,20" GradientBrush.MappingMode="Absolute">
    <GradientBrush.GradientStops>
      <GradientStop Color="#ABADB3" Offset="0.05" />
      <GradientStop Color="#E2E3EA" Offset="0.07" />
      <GradientStop Color="#E3E9EF" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <Style x:Key="{x:Type TextBoxBase}" TargetType="{x:Type TextBoxBase}" BasedOn="{x:Null}">
    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
    <Setter Property="BorderBrush" Value="{StaticResource å}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Padding" Value="1" />
    <Setter Property="AllowDrop" Value="True" />
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TextBoxBase}">
          <theme:ListBoxChrome x:Name="Bd" BorderThickness="{TemplateBinding BorderThickness}"
              BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}"
              RenderMouseOver="{TemplateBinding IsMouseOver}" RenderFocused="{TemplateBinding IsKeyboardFocusWithin}"
              SnapsToDevicePixels="True">
            <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
          </theme:ListBoxChrome>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
                  Property="Background" />
              <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <!--<DataTrigger Binding="{Binding Path=(framework:FrameworkAppContextSwitches.UseAdornerForTextboxSelectionRendering)}"
                   Value="false">
        <Setter Property="TextBoxBase.SelectionBrush"
                Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
        <Setter Property="TextBoxBase.SelectionBrush"
                Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
      </DataTrigger>-->
      <!--<MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="TextBoxBase.IsInactiveSelectionHighlightEnabled"
                     Value="True" />
          <Condition Property="TextBoxBase.IsSelectionActive"
                     Value="False" />
        </MultiTrigger.Conditions>
        <Setter Property="TextBoxBase.SelectionBrush"
                Value="{DynamicResource {x:Static  InternalSystemColorsExtendedStart}}" />
        <Setter Property="TextBoxBase.SelectionBrush"
                Value="{DynamicResource {x:Static  SystemColors.InactiveSelectionHighlightBrush}}" />
      </MultiTrigger>-->
    </Style.Triggers>
  </Style>
  <Style x:Key="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBoxBase}}" TargetType="{x:Type TextBox}" />
  <Style x:Key="{x:Type RichTextBox}" BasedOn="{StaticResource {x:Type TextBoxBase}}" TargetType="{x:Type RichTextBox}">
    <Style.Resources>
      <ResourceDictionary>
        <Style TargetType="{x:Type FlowDocument}">
          <Setter Property="FrameworkContentElement.OverridesDefaultStyle" Value="True" />
        </Style>
        <Style BasedOn="{StaticResource {x:Type Hyperlink}}" TargetType="{x:Type Hyperlink}">
          <Style.Triggers>
            <Trigger Property="ContentElement.IsMouseOver" Value="True">
              <Setter Property="TextElement.Foreground" Value="#FF0000FF" />
            </Trigger>
            <Trigger Property="ContentElement.IsEnabled" Value="False">
              <Setter Property="TextElement.Foreground"
                  Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>
          </Style.Triggers>
        </Style>
      </ResourceDictionary>
    </Style.Resources>
    <Setter Property="MinWidth" Value="10" />
  </Style>
  <Style x:Key="{x:Type PasswordBox}" TargetType="{x:Type PasswordBox}">
    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
    <Setter Property="BorderBrush" Value="{StaticResource å}" />
    <Setter Property="FontFamily" Value="Times New Roman" />
    <Setter Property="PasswordBox.PasswordChar" Value="●" />
    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="Padding" Value="1" />
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="AllowDrop" Value="True" />
    <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type PasswordBox}">
          <theme:ListBoxChrome Name="Bd" BorderThickness="{TemplateBinding BorderThickness}"
              BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}"
              RenderMouseOver="{TemplateBinding IsMouseOver}" RenderFocused="{TemplateBinding IsKeyboardFocusWithin}"
              SnapsToDevicePixels="True">
            <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
          </theme:ListBoxChrome>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
                  Property="Background" />
              <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <!--<DataTrigger Binding="{Binding Path=(framework:FrameworkAppContextSwitches.UseAdornerForTextboxSelectionRendering)}"
                   Value="false">
        <Setter Property="PasswordBox.SelectionBrush"
                Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
        <Setter Property="PasswordBox.SelectionBrush"
                Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
      </DataTrigger>-->
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="PasswordBox.IsInactiveSelectionHighlightEnabled" Value="True" />
          <Condition Property="PasswordBox.IsSelectionActive" Value="False" />
        </MultiTrigger.Conditions>
        <!--<Setter Property="PasswordBox.SelectionBrush"
                Value="{DynamicResource {x:Static  InternalSystemColorsExtendedStart}}" />-->
        <Setter Property="PasswordBox.SelectionBrush"
            Value="{DynamicResource {x:Static  SystemColors.InactiveSelectionHighlightBrush}}" />
      </MultiTrigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{x:Type Thumb}" TargetType="{x:Type Thumb}">
    <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False" />
    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}">
            <Grid>
              <Border BorderThickness="0,0,1,1" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
                  BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
              <Border BorderThickness="0,0,1,1" Margin="1"
                  Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"
                  BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
              <Border Margin="2" Background="{TemplateBinding Background}" />
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <LinearGradientBrush x:Key="Ɓ" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FFFFFF" Offset="0" />
      <GradientStop Color="#E4E5F0" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <Style x:Key="{x:Type ToolTip}" TargetType="{x:Type ToolTip}">
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="BorderBrush" Value="#FF767676" />
    <Setter Property="Background" Value="{StaticResource Ɓ}" />
    <Setter Property="Foreground" Value="#FF575757" />
    <Setter Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.StatusFontFamilyKey}}" />
    <Setter Property="FontSize" Value="{DynamicResource {x:Static SystemFonts.StatusFontSizeKey}}" />
    <Setter Property="FontStyle" Value="{DynamicResource {x:Static SystemFonts.StatusFontStyleKey}}" />
    <Setter Property="FontWeight" Value="{DynamicResource {x:Static SystemFonts.StatusFontWeightKey}}" />
    <Setter Property="Padding" Value="5,1,5,4" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="ToolTip.HasDropShadow" Value="{DynamicResource {x:Static SystemParameters.DropShadowKey}}" />
    <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToolTip}">
          <theme:SystemDropShadowChrome x:Name="Shdw" Color="Transparent" SnapsToDevicePixels="True" CornerRadius="2">
            <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}"
                BorderBrush="{TemplateBinding BorderBrush}" Padding="{TemplateBinding Padding}" CornerRadius="2">
              <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </Border>
          </theme:SystemDropShadowChrome>
          <ControlTemplate.Triggers>
            <Trigger Property="ToolTip.HasDropShadow" Value="True">
              <Setter TargetName="Shdw" Property="Margin" Value="0,0,5,5" />
              <Setter TargetName="Shdw" Property="theme:SystemDropShadowChrome.Color" Value="#71000000" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type TreeView}" TargetType="{x:Type TreeView}">
    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
    <Setter Property="BorderBrush" Value="{StaticResource Đ}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Padding" Value="1" />
    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.PanningMode" Value="Both" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TreeView}">
          <Border Name="Bd" BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
            <ScrollViewer Name="_tv_scrollviewer_" Background="{TemplateBinding Background}" Focusable="False"
                ScrollViewer.CanContentScroll="False"
                ScrollViewer.HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                ScrollViewer.VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
              <ItemsPresenter />
            </ScrollViewer>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
                  Property="Background" />
            </Trigger>
            <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="True">
              <Setter TargetName="_tv_scrollviewer_" Property="ScrollViewer.CanContentScroll" Value="True" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="True">
        <Setter Property="ItemsControl.ItemsPanel">
          <Setter.Value>
            <ItemsPanelTemplate>
              <VirtualizingStackPanel />
            </ItemsPanelTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>
  <SolidColorBrush x:Key="Ƃ" Color="#FF989898" />
  <SolidColorBrush x:Key="ƃ" Color="Transparent" />
  <SolidColorBrush x:Key="Ƅ" Color="#FF1BBBFA" />
  <SolidColorBrush x:Key="ƅ" Color="Transparent" />
  <SolidColorBrush x:Key="Ɔ" Color="#FF262626" />
  <SolidColorBrush x:Key="Ƈ" Color="#FF595959" />
  <SolidColorBrush x:Key="ƈ" Color="#FF262626" />
  <SolidColorBrush x:Key="Ɖ" Color="#FF595959" />
  <PathGeometry x:Key="Ɗ">
    <PathGeometry.Figures>
      <PathFigureCollection>
        <PathFigure PathFigure.IsFilled="True" PathFigure.StartPoint="0 0" PathFigure.IsClosed="True">
          <PathFigure.Segments>
            <PathSegmentCollection>
              <LineSegment LineSegment.Point="0 6" />
              <LineSegment LineSegment.Point="6 0" />
            </PathSegmentCollection>
          </PathFigure.Segments>
        </PathFigure>
      </PathFigureCollection>
    </PathGeometry.Figures>
  </PathGeometry>
  <Style x:Key="Ƌ" TargetType="{x:Type ToggleButton}">
    <Setter Property="Focusable" Value="False" />
    <Setter Property="Width" Value="16" />
    <Setter Property="Height" Value="16" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Width="16" Height="16" Background="#00FFFFFF" Padding="5,5,5,5">
            <Path x:Name="ExpandPath" Fill="{StaticResource ƃ}" Stroke="{StaticResource Ƃ}" Data="{StaticResource Ɗ}">
              <UIElement.RenderTransform>
                <RotateTransform RotateTransform.Angle="135" RotateTransform.CenterX="3" RotateTransform.CenterY="3" />
              </UIElement.RenderTransform>
            </Path>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
              <Setter TargetName="ExpandPath" Property="RenderTransform">
                <Setter.Value>
                  <RotateTransform RotateTransform.Angle="180" RotateTransform.CenterX="3" RotateTransform.CenterY="3" />
                </Setter.Value>
              </Setter>
              <Setter TargetName="ExpandPath" Value="{StaticResource Ƈ}" Property="Shape.Fill" />
              <Setter TargetName="ExpandPath" Value="{StaticResource Ɔ}" Property="Shape.Stroke" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="ExpandPath" Value="{StaticResource Ƅ}" Property="Shape.Stroke" />
              <Setter TargetName="ExpandPath" Value="{StaticResource ƅ}" Property="Shape.Fill" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsMouseOver" Value="True" />
                <Condition Property="ToggleButton.IsChecked" Value="True" />
              </MultiTrigger.Conditions>
              <Setter TargetName="ExpandPath" Value="{StaticResource ƈ}" Property="Shape.Stroke" />
              <Setter TargetName="ExpandPath" Value="{StaticResource Ɖ}" Property="Shape.Fill" />
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ƌ">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type TreeViewItem}" TargetType="{x:Type TreeViewItem}">
    <Setter Property="Background" Value="#00FFFFFF" />
    <Setter Property="HorizontalContentAlignment"
        Value="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Property="VerticalContentAlignment"
        Value="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Property="Padding" Value="1,0,0,0" />
    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Property="FocusVisualStyle" Value="{StaticResource ƌ}" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TreeViewItem}">
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition MinWidth="19" Width="Auto" />
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition />
            </Grid.RowDefinitions>
            <ToggleButton x:Name="Expander" Style="{StaticResource Ƌ}" ButtonBase.ClickMode="Press"
                ToggleButton.IsChecked="{Binding Path=IsExpanded,RelativeSource={RelativeSource TemplatedParent}}" />
            <Border Name="Bd" Grid.Column="1" Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
              <ContentPresenter Name="PART_Header" ContentSource="Header"
                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </Border>
            <ItemsPresenter x:Name="ItemsHost" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="TreeViewItem.IsExpanded" Value="False">
              <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="ItemsControl.HasItems" Value="False">
              <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
            </Trigger>
            <Trigger Property="TreeViewItem.IsSelected" Value="True">
              <Setter TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                  Property="Background" />
              <Setter Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Foreground" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="TreeViewItem.IsSelected" Value="True" />
                <Condition Property="TreeViewItem.IsSelectionActive" Value="False" />
              </MultiTrigger.Conditions>
              <!--<Setter TargetName="Bd"
                      Value="{DynamicResource {x:Static  InternalSystemColorsExtendedStart}}"
                      Property="Background" />-->
              <Setter Value="{DynamicResource {x:Static  SystemColors.InactiveSelectionHighlightBrush}}"
                  Property="Foreground" />
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="True">
        <Setter Property="ItemsControl.ItemsPanel">
          <Setter.Value>
            <ItemsPanelTemplate>
              <VirtualizingStackPanel />
            </ItemsPanelTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{x:Type UserControl}" TargetType="{x:Type UserControl}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type UserControl}">
          <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}"
              SnapsToDevicePixels="True">
            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ControlTemplate x:Key="ƍ" TargetType="{x:Type Window}">
    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
        BorderThickness="{TemplateBinding BorderThickness}">
      <Grid>
        <AdornerDecorator>
          <ContentPresenter />
        </AdornerDecorator>
        <ResizeGrip x:Name="WindowResizeGrip" HorizontalAlignment="Right" VerticalAlignment="Bottom"
            Visibility="Collapsed" IsTabStop="False" />
      </Grid>
    </Border>
    <ControlTemplate.Triggers>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="Window.ResizeMode" Value="CanResizeWithGrip" />
          <Condition Property="Window.WindowState" Value="Normal" />
        </MultiTrigger.Conditions>
        <Setter TargetName="WindowResizeGrip" Property="Visibility" Value="Visible" />
      </MultiTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="{x:Type Window}" TargetType="{x:Type Window}">
    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Window}">
          <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}">
            <AdornerDecorator>
              <ContentPresenter />
            </AdornerDecorator>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="Window.ResizeMode" Value="CanResizeWithGrip">
        <Setter Property="Control.Template" Value="{StaticResource ƍ}" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <JournalEntryListConverter x:Key="È" />
  <Style x:Key="É" TargetType="{x:Type MenuItem}">
    <Setter Property="HeaderedItemsControl.Header" Value="{Binding Path=Name}" />
    <Setter Property="MenuItem.Command" Value="NavigationCommands.NavigateJournal" />
    <Setter Property="MenuItem.CommandTarget"
        Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type NavigationWindow}}}" />
    <Setter Property="MenuItem.CommandParameter" Value="{Binding RelativeSource={RelativeSource Self}}" />
  </Style>
  <Style x:Key="Ê" TargetType="{x:Type MenuItem}">
    <Setter Property="Margin" Value="0" />
    <Setter Property="ScrollViewer.PanningMode" Value="Both" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type MenuItem}">
          <DockPanel x:Name="Panel" Panel.Background="#00FFFFFF">
            <Popup x:Name="PART_Popup" AllowsTransparency="True" Placement="Bottom" Focusable="False"
                PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                IsOpen="{Binding Path=IsSubmenuOpen,RelativeSource={RelativeSource TemplatedParent}}">
              <theme:SystemDropShadowChrome x:Name="Shdw" Color="Transparent">
                <Border Name="SubMenuBorder" Background="{DynamicResource {x:Static SystemColors.MenuBrushKey}}"
                    BorderThickness="1" BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}">
                  <ScrollViewer Name="SubMenuScrollViewer"
                      Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement},ResourceId=MenuScrollViewer}}">
                    <Grid RenderOptions.ClearTypeHint="Enabled">
                      <Canvas Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                        <Rectangle Name="OpaqueRect" Height="{Binding ElementName=SubMenuBorder,Path=ActualHeight}"
                            Width="{Binding ElementName=SubMenuBorder,Path=ActualWidth}"
                            Fill="{Binding ElementName=SubMenuBorder,Path=Background}" />
                      </Canvas>
                      <ItemsPresenter Name="ItemsPresenter" Margin="2" KeyboardNavigation.TabNavigation="Cycle"
                          KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Grid>
                  </ScrollViewer>
                </Border>
              </theme:SystemDropShadowChrome>
            </Popup>
            <Path x:Name="Arrow" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0 2 0 0"
                Fill="#FFFFFFFF" Stroke="#FFAAAAAA" StrokeThickness="1" Data="{StaticResource Ë}" />
          </DockPanel>
          <ControlTemplate.Triggers>
            <Trigger Property="MenuItem.IsSuspendingPopupAnimation" Value="True">
              <Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None" />
            </Trigger>
            <Trigger Property="MenuItem.IsHighlighted" Value="True">
              <Setter TargetName="Arrow" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"
                  Property="Shape.Fill" />
              <Setter TargetName="Panel" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                  Property="Panel.Background" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="Arrow" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"
                  Property="Shape.Fill" />
            </Trigger>
            <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
              <Setter TargetName="Shdw" Property="Margin" Value="0,0,5,5" />
              <Setter TargetName="Shdw" Property="SnapsToDevicePixels" Value="True" />
              <Setter TargetName="Shdw" Property="theme:SystemDropShadowChrome.Color" Value="#71000000" />
            </Trigger>
            <Trigger SourceName="SubMenuScrollViewer" Property="ScrollViewer.CanContentScroll" Value="False">
              <Setter TargetName="OpaqueRect" Value="{Binding ElementName=SubMenuScrollViewer,Path=VerticalOffset}"
                  Property="Canvas.Top" />
              <Setter TargetName="OpaqueRect" Value="{Binding ElementName=SubMenuScrollViewer,Path=HorizontalOffset}"
                  Property="Canvas.Left" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="Ì" TargetType="{x:Type Menu}">
    <Setter Property="ItemsControl.ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <DockPanel />
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Padding" Value="0,0,0,0" />
    <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
    <Setter Property="Menu.IsMainMenu" Value="False" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Menu}">
          <ItemsPresenter />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="Í" TargetType="{x:Type Button}">
    <Setter Property="Margin" Value="0,0,0,0" />
    <Setter Property="IsEnabled" Value="False" />
    <Setter Property="ButtonBase.Command" Value="NavigationCommands.BrowseBack" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <DockPanel>
            <Rectangle x:Name="R1" DockPanel.Dock="Right" Width="1" Visibility="Hidden"
                Fill="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
            <Rectangle x:Name="B1" DockPanel.Dock="Bottom" Height="1" Visibility="Hidden"
                Fill="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
            <Rectangle x:Name="L1" DockPanel.Dock="Left" Width="1" Visibility="Hidden"
                Fill="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
            <Rectangle x:Name="T1" DockPanel.Dock="Top" Height="1" Visibility="Hidden"
                Fill="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="*" />
              </Grid.RowDefinitions>
              <Viewbox Grid.Column="0" Grid.Row="0">
                <Grid Width="50" Height="50" Margin="15,0,0,0">
                  <Ellipse x:Name="EllipseBackground" Opacity="1" StrokeThickness="2">
                    <Shape.Fill>
                      <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <GradientBrush.GradientStops>
                          <GradientStopCollection>
                            <GradientStop Color="#B3E2A2" Offset="0" />
                            <GradientStop Color="#25B40E" Offset="1" />
                          </GradientStopCollection>
                        </GradientBrush.GradientStops>
                      </LinearGradientBrush>
                    </Shape.Fill>
                    <Shape.Stroke>
                      <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <GradientBrush.GradientStops>
                          <GradientStopCollection>
                            <GradientStop Color="black" Offset="0" />
                            <GradientStop Color="#ccffffff" Offset="1" />
                          </GradientStopCollection>
                        </GradientBrush.GradientStops>
                      </LinearGradientBrush>
                    </Shape.Stroke>
                  </Ellipse>
                  <Ellipse x:Name="EllipseShine" Stroke="#00FFFFFF" Margin="5,5,5,15">
                    <Shape.Fill>
                      <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <GradientBrush.GradientStops>
                          <GradientStopCollection>
                            <GradientStop Color="#aaffffff" Offset="0" />
                            <GradientStop Color="transparent" Offset="1" />
                          </GradientStopCollection>
                        </GradientBrush.GradientStops>
                      </LinearGradientBrush>
                    </Shape.Fill>
                  </Ellipse>
                  <Path x:Name="Arrow" Fill="#FFFFFFFF" Stroke="#FF086403"
                      Data="M0.5,20.468C0.502,20.808 0.536,21.147 0.602,21.481 0.634,21.643 0.694,21.793 0.741,21.949 0.793,22.125 0.833,22.304 0.904,22.476 0.98,22.659 1.084,22.825 1.178,22.997 1.251,23.129 1.309,23.267 1.394,23.394 1.59,23.688 1.812,23.962 2.061,24.211L16.672,38.822C18.755,40.905 22.131,40.905 24.214,38.822 26.297,36.739 26.297,33.363 24.214,31.28L18.705,25.771 42.496,25.771C45.441,25.771 47.829,23.383 47.829,20.438 47.829,17.492 45.441,15.105 42.496,15.105L18.732,15.105 24.241,9.596C26.324,7.513 26.324,4.137 24.241,2.054 22.158,-0.0289999999999981 18.782,-0.0289999999999981 16.699,2.054L2.203,16.549C2.16,16.589 2.108,16.619 2.067,16.66 2.065,16.662 2.062,16.663 2.06,16.666 2.058,16.668 2.057,16.67 2.055,16.672 1.809,16.919 1.59,17.189 1.396,17.479 1.308,17.611 1.247,17.754 1.172,17.892 1.08,18.059 0.98,18.22 0.906,18.397 0.834,18.572 0.792,18.754 0.739,18.935 0.694,19.088 0.635,19.234 0.604,19.393 0.536,19.732 0.5,20.075 0.5,20.419 0.5,20.425 0.498,20.431 0.498,20.438 0.498,20.448 0.5,20.458 0.5,20.468z">
                    <UIElement.RenderTransform>
                      <TransformGroup>
                        <TransformGroup.Children>
                          <TransformCollection>
                            <ScaleTransform ScaleX="0.65" ScaleY="0.65" />
                            <TranslateTransform TranslateTransform.X="11.5" TranslateTransform.Y="10" />
                          </TransformCollection>
                        </TransformGroup.Children>
                      </TransformGroup>
                    </UIElement.RenderTransform>
                  </Path>
                </Grid>
              </Viewbox>
              <DockPanel Grid.Column="1" Grid.Row="0">
                <Rectangle x:Name="R2" DockPanel.Dock="Right" Width="1" Visibility="Hidden"
                    Fill="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
                <Rectangle x:Name="B2" DockPanel.Dock="Bottom" Height="1" Visibility="Hidden"
                    Fill="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
                <Rectangle x:Name="L2" DockPanel.Dock="Left" Width="1" Visibility="Hidden"
                    Fill="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
                <Rectangle x:Name="T2" DockPanel.Dock="Top" Height="1" Visibility="Hidden"
                    Fill="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
                <Grid Width="10">
                  <Menu Style="{StaticResource Ì}">
                    <MenuItem x:Name="NavWinMenu" Style="{StaticResource Ê}"
                        ItemsControl.ItemContainerStyle="{StaticResource É}"
                        ItemsControl.ItemsSource="{Binding Path=BackStack,Converter={StaticResource È},Mode=OneTime,RelativeSource={RelativeSource AncestorType={x:Type NavigationWindow}}}"
                        MenuItem.IsSubmenuOpen="{Binding Path=(MenuItem.IsSubmenuOpen),Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" />
                  </Menu>
                </Grid>
              </DockPanel>
            </Grid>
          </DockPanel>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="EllipseBackground" Property="Shape.Fill">
                <Setter.Value>
                  <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientBrush.GradientStops>
                      <GradientStopCollection>
                        <GradientStop Color="white" Offset="0" />
                        <GradientStop Color="gray" Offset="1" />
                      </GradientStopCollection>
                    </GradientBrush.GradientStops>
                  </LinearGradientBrush>
                </Setter.Value>
              </Setter>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsMouseOver" Value="True" />
                <Condition Property="IsEnabled" Value="True" />
              </MultiTrigger.Conditions>
              <Setter TargetName="EllipseBackground" Property="Shape.Fill">
                <Setter.Value>
                  <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientBrush.GradientStops>
                      <GradientStopCollection>
                        <GradientStop Color="#25B40E" Offset="0" />
                        <GradientStop Color="#086403" Offset="1" />
                      </GradientStopCollection>
                    </GradientBrush.GradientStops>
                  </LinearGradientBrush>
                </Setter.Value>
              </Setter>
              <Setter TargetName="NavWinMenu" Property="Background" Value="#00FFFFFF" />
              <Setter TargetName="L1" Property="Visibility" Value="Visible" />
              <Setter TargetName="R1" Property="Visibility" Value="Visible" />
              <Setter TargetName="T1" Property="Visibility" Value="Visible" />
              <Setter TargetName="B1" Property="Visibility" Value="Visible" />
            </MultiTrigger>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
              <Setter TargetName="EllipseBackground" Property="Shape.Fill">
                <Setter.Value>
                  <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientBrush.GradientStops>
                      <GradientStopCollection>
                        <GradientStop Color="#25B40E" Offset="0" />
                        <GradientStop Color="#086403" Offset="1" />
                      </GradientStopCollection>
                    </GradientBrush.GradientStops>
                  </LinearGradientBrush>
                </Setter.Value>
              </Setter>
              <Setter TargetName="Arrow" Property="RenderTransform">
                <Setter.Value>
                  <TransformGroup>
                    <TransformGroup.Children>
                      <TransformCollection>
                        <ScaleTransform ScaleX="0.65" ScaleY="0.65" />
                        <TranslateTransform TranslateTransform.X="10" TranslateTransform.Y="12" />
                      </TransformCollection>
                    </TransformGroup.Children>
                  </TransformGroup>
                </Setter.Value>
              </Setter>
              <Setter TargetName="EllipseShine" Property="RenderTransform">
                <Setter.Value>
                  <TranslateTransform TranslateTransform.X="0" TranslateTransform.Y="2" />
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="MenuItem.IsSubmenuOpen" Value="True">
              <Setter TargetName="L2" Property="Visibility" Value="Visible" />
              <Setter TargetName="R2" Property="Visibility" Value="Visible" />
              <Setter TargetName="T2" Property="Visibility" Value="Visible" />
              <Setter TargetName="B2" Property="Visibility" Value="Visible" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="Î" TargetType="{x:Type Button}">
    <Setter Property="Margin" Value="0,0,0,0" />
    <Setter Property="IsEnabled" Value="False" />
    <Setter Property="ButtonBase.Command" Value="NavigationCommands.BrowseForward" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <DockPanel>
            <Rectangle x:Name="R1" DockPanel.Dock="Right" Width="1" Visibility="Hidden"
                Fill="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
            <Rectangle x:Name="B1" DockPanel.Dock="Bottom" Height="1" Visibility="Hidden"
                Fill="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
            <Rectangle x:Name="L1" DockPanel.Dock="Left" Width="1" Visibility="Hidden"
                Fill="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
            <Rectangle x:Name="T1" DockPanel.Dock="Top" Height="1" Visibility="Hidden"
                Fill="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="*" />
              </Grid.RowDefinitions>
              <Viewbox Grid.Column="0" Grid.Row="0">
                <Grid Width="50" Height="50" Margin="15,0,0,0">
                  <Ellipse x:Name="EllipseBackground" Opacity="1" StrokeThickness="2">
                    <Shape.Fill>
                      <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <GradientBrush.GradientStops>
                          <GradientStopCollection>
                            <GradientStop Color="#B3E2A2" Offset="0" />
                            <GradientStop Color="#25B40E" Offset="1" />
                          </GradientStopCollection>
                        </GradientBrush.GradientStops>
                      </LinearGradientBrush>
                    </Shape.Fill>
                    <Shape.Stroke>
                      <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <GradientBrush.GradientStops>
                          <GradientStopCollection>
                            <GradientStop Color="black" Offset="0" />
                            <GradientStop Color="#ccffffff" Offset="1" />
                          </GradientStopCollection>
                        </GradientBrush.GradientStops>
                      </LinearGradientBrush>
                    </Shape.Stroke>
                  </Ellipse>
                  <Ellipse x:Name="EllipseShine" Stroke="#00FFFFFF" Margin="5,3,5,15">
                    <Shape.Fill>
                      <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <GradientBrush.GradientStops>
                          <GradientStopCollection>
                            <GradientStop Color="#aaffffff" Offset="0" />
                            <GradientStop Color="transparent" Offset="1" />
                          </GradientStopCollection>
                        </GradientBrush.GradientStops>
                      </LinearGradientBrush>
                    </Shape.Fill>
                  </Ellipse>
                  <Path x:Name="Arrow" Fill="#FFFFFFFF" Stroke="#FF086403"
                      Data="M47.82,20.407C47.818,20.067 47.784,19.728 47.718,19.394 47.686,19.232 47.626,19.082 47.579,18.926 47.527,18.75 47.487,18.571 47.416,18.399 47.34,18.216 47.236,18.05 47.142,17.878 47.069,17.746 47.011,17.608 46.926,17.481 46.73,17.187 46.508,16.913 46.259,16.664L31.647,2.053C29.564,-0.0300000000000002 26.188,-0.0300000000000002 24.105,2.053 22.022,4.136 22.022,7.512 24.105,9.595L29.614,15.104 5.823,15.104C2.878,15.104 0.49,17.492 0.49,20.437 0.49,23.383 2.878,25.77 5.823,25.77L29.588,25.77 24.079,31.279C21.996,33.362 21.996,36.738 24.079,38.821 26.162,40.904 29.538,40.904 31.621,38.821L46.118,24.324C46.161,24.284 46.213,24.254 46.254,24.213 46.256,24.211 46.259,24.21 46.261,24.207 46.263,24.205 46.264,24.203 46.266,24.201 46.512,23.954 46.731,23.684 46.925,23.394 47.013,23.262 47.074,23.119 47.149,22.981 47.241,22.814 47.341,22.653 47.415,22.476 47.487,22.301 47.529,22.119 47.582,21.938 47.627,21.785 47.686,21.639 47.717,21.48 47.784,21.141 47.82,20.798 47.821,20.454 47.821,20.448 47.823,20.442 47.823,20.435 47.823,20.427 47.82,20.417 47.82,20.407z">
                    <UIElement.RenderTransform>
                      <TransformGroup>
                        <TransformGroup.Children>
                          <TransformCollection>
                            <ScaleTransform ScaleX="0.65" ScaleY="0.65" />
                            <TranslateTransform TranslateTransform.X="8.5" TranslateTransform.Y="10" />
                          </TransformCollection>
                        </TransformGroup.Children>
                      </TransformGroup>
                    </UIElement.RenderTransform>
                  </Path>
                </Grid>
              </Viewbox>
              <DockPanel Grid.Column="1" Grid.Row="0">
                <Rectangle x:Name="R2" DockPanel.Dock="Right" Width="1" Visibility="Hidden"
                    Fill="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
                <Rectangle x:Name="B2" DockPanel.Dock="Bottom" Height="1" Visibility="Hidden"
                    Fill="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
                <Rectangle x:Name="L2" DockPanel.Dock="Left" Width="1" Visibility="Hidden"
                    Fill="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
                <Rectangle x:Name="T2" DockPanel.Dock="Top" Height="1" Visibility="Hidden"
                    Fill="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
                <Grid Width="10">
                  <Menu Style="{StaticResource Ì}">
                    <MenuItem x:Name="NavWinMenu" Style="{StaticResource Ê}"
                        ItemsControl.ItemContainerStyle="{StaticResource É}"
                        ItemsControl.ItemsSource="{Binding Path=ForwardStack,Converter={StaticResource È},Mode=OneTime,RelativeSource={RelativeSource AncestorType={x:Type NavigationWindow}}}"
                        MenuItem.IsSubmenuOpen="{Binding Path=(MenuItem.IsSubmenuOpen),Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" />
                  </Menu>
                </Grid>
              </DockPanel>
            </Grid>
          </DockPanel>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="EllipseBackground" Property="Shape.Fill">
                <Setter.Value>
                  <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientBrush.GradientStops>
                      <GradientStopCollection>
                        <GradientStop Color="white" Offset="0" />
                        <GradientStop Color="gray" Offset="1" />
                      </GradientStopCollection>
                    </GradientBrush.GradientStops>
                  </LinearGradientBrush>
                </Setter.Value>
              </Setter>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsMouseOver" Value="True" />
                <Condition Property="IsEnabled" Value="True" />
              </MultiTrigger.Conditions>
              <Setter TargetName="EllipseBackground" Property="Shape.Fill">
                <Setter.Value>
                  <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientBrush.GradientStops>
                      <GradientStopCollection>
                        <GradientStop Color="#25B40E" Offset="0" />
                        <GradientStop Color="#086403" Offset="1" />
                      </GradientStopCollection>
                    </GradientBrush.GradientStops>
                  </LinearGradientBrush>
                </Setter.Value>
              </Setter>
              <Setter TargetName="NavWinMenu" Property="Background" Value="#00FFFFFF" />
              <Setter TargetName="L1" Property="Visibility" Value="Visible" />
              <Setter TargetName="R1" Property="Visibility" Value="Visible" />
              <Setter TargetName="T1" Property="Visibility" Value="Visible" />
              <Setter TargetName="B1" Property="Visibility" Value="Visible" />
            </MultiTrigger>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
              <Setter TargetName="EllipseBackground" Property="Shape.Fill">
                <Setter.Value>
                  <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientBrush.GradientStops>
                      <GradientStopCollection>
                        <GradientStop Color="#25B40E" Offset="0" />
                        <GradientStop Color="#086403" Offset="1" />
                      </GradientStopCollection>
                    </GradientBrush.GradientStops>
                  </LinearGradientBrush>
                </Setter.Value>
              </Setter>
              <Setter TargetName="Arrow" Property="RenderTransform">
                <Setter.Value>
                  <TransformGroup>
                    <TransformGroup.Children>
                      <TransformCollection>
                        <ScaleTransform ScaleX="0.65" ScaleY="0.65" />
                        <TranslateTransform TranslateTransform.X="10" TranslateTransform.Y="12" />
                      </TransformCollection>
                    </TransformGroup.Children>
                  </TransformGroup>
                </Setter.Value>
              </Setter>
              <Setter TargetName="EllipseShine" Property="RenderTransform">
                <Setter.Value>
                  <TranslateTransform TranslateTransform.X="0" TranslateTransform.Y="2" />
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="MenuItem.IsSubmenuOpen" Value="True">
              <Setter TargetName="L2" Property="Visibility" Value="Visible" />
              <Setter TargetName="R2" Property="Visibility" Value="Visible" />
              <Setter TargetName="T2" Property="Visibility" Value="Visible" />
              <Setter TargetName="B2" Property="Visibility" Value="Visible" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ControlTemplate x:Key="Ï" TargetType="{x:Type NavigationWindow}">
    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
        BorderThickness="{TemplateBinding BorderThickness}">
      <AdornerDecorator>
        <ContentPresenter Name="PART_NavWinCP" ClipToBounds="True" />
      </AdornerDecorator>
    </Border>
  </ControlTemplate>
  <Style x:Key="{x:Static SystemParameters.NavigationChromeStyleKey}" TargetType="{x:Type NavigationWindow}">
    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
    <Setter Property="Control.Template" Value="{StaticResource Ï}" />
  </Style>
  <ControlTemplate x:Key="Ð" TargetType="{x:Type NavigationWindow}">
    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
        BorderThickness="{TemplateBinding BorderThickness}">
      <DockPanel>
        <Grid FlowDirection="{x:Static theme:PlatformCulture.FlowDirection}" DockPanel.Dock="Top" Height="30">
          <Panel.Background>
            <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
              <GradientBrush.GradientStops>
                <GradientStopCollection>
                  <GradientStop Color="silver" Offset="0" />
                  <GradientStop Color="white" Offset="1" />
                </GradientStopCollection>
              </GradientBrush.GradientStops>
            </LinearGradientBrush>
          </Panel.Background>
          <DockPanel DockPanel.LastChildFill="False">
            <Button Style="{StaticResource Í}" DockPanel.Dock="left" Width="40"
                IsEnabled="{TemplateBinding NavigationWindow.CanGoBack}" />
            <Button Style="{StaticResource Î}" DockPanel.Dock="left" Width="40"
                IsEnabled="{TemplateBinding NavigationWindow.CanGoForward}" />
          </DockPanel>
        </Grid>
        <Border>
          <AdornerDecorator>
            <ContentPresenter Name="PART_NavWinCP" ClipToBounds="True" />
          </AdornerDecorator>
        </Border>
      </DockPanel>
    </Border>
  </ControlTemplate>
  <Style x:Key="{x:Static SystemParameters.NavigationChromeDownLevelStyleKey}" TargetType="{x:Type NavigationWindow}">
    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
    <Setter Property="Control.Template" Value="{StaticResource Ð}" />
    <Style.Triggers>
      <Trigger Property="NavigationWindow.ShowsNavigationUI" Value="False">
        <Setter Property="Control.Template" Value="{StaticResource Ï}" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="ß">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Margin="4,4,21,4" StrokeThickness="1"
              Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeDashArray="1 2"
              SnapsToDevicePixels="True" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="à" TargetType="{x:Type TextBox}">
    <Style.Triggers>
      <!--<DataTrigger Binding="{Binding Path=(base:AccessibilitySwitches.UseNetFx47CompatibleAccessibilityFeatures)}"
                   Value="false">
        <Setter Property="AutomationProperties.Name"
                Value="{Binding Path=(AutomationProperties.Name),Mode=OneWay,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ComboBox}}}" />
        <Setter Property="AutomationProperties.LabeledBy"
                Value="{Binding Path=(AutomationProperties.LabeledBy),Mode=OneWay,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ComboBox}}}" />
        <Setter Property="AutomationProperties.HelpText"
                Value="{Binding Path=(AutomationProperties.HelpText),Mode=OneWay,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ComboBox}}}" />
      </DataTrigger>-->
      <!--<DataTrigger Binding="{Binding Path=(framework:FrameworkAppContextSwitches.UseAdornerForTextboxSelectionRendering)}"
                   Value="false">
        <Setter Property="TextBoxBase.SelectionBrush"
                Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
        <Setter Property="TextBoxBase.SelectionBrush"
                Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
      </DataTrigger>-->
    </Style.Triggers>
    <Setter Property="OverridesDefaultStyle" Value="True" />
    <Setter Property="AllowDrop" Value="True" />
    <Setter Property="MinWidth" Value="0" />
    <Setter Property="MinHeight" Value="0" />
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TextBox}">
          <ScrollViewer x:Name="PART_ContentHost" Focusable="False" ScrollViewer.HorizontalScrollBarVisibility="Hidden"
              ScrollViewer.VerticalScrollBarVisibility="Hidden" Background="#00FFFFFF" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Geometry x:Key="á">
    M 0 0 L 3.5 4 L 7 0 Z
  </Geometry>
  <Style x:Key="â" TargetType="{x:Type ToggleButton}">
    <Setter Property="OverridesDefaultStyle" Value="True" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="ButtonBase.ClickMode" Value="Press" />
    <Setter Property="Background" Value="#00FFFFFF" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <theme:ButtonChrome x:Name="Chrome" Background="{TemplateBinding Background}"
              BorderBrush="{TemplateBinding BorderBrush}" RenderMouseOver="{TemplateBinding IsMouseOver}"
              RenderPressed="{TemplateBinding ButtonBase.IsPressed}" SnapsToDevicePixels="True">
            <Grid Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                HorizontalAlignment="Right">
              <Path Name="Arrow" Margin="3,1,0,0" Fill="#FF000000" Data="{StaticResource á}"
                  HorizontalAlignment="Center" VerticalAlignment="Center" />
            </Grid>
          </theme:ButtonChrome>
          <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <Setter TargetName="Chrome" Property="RenderPressed" Value="True" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="Arrow" Property="Shape.Fill" Value="#FFAFAFAF" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ã" TargetType="{x:Type ToggleButton}">
    <Setter Property="OverridesDefaultStyle" Value="True" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="ButtonBase.ClickMode" Value="Press" />
    <Setter Property="Background" Value="#00FFFFFF" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <theme:ButtonChrome x:Name="Chrome"
              Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
              Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
              RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding ButtonBase.IsPressed}"
              RoundCorners="False" SnapsToDevicePixels="True">
            <Path Name="Arrow" Margin="0,1,0,0" Fill="#FF000000" Data="{StaticResource á}" HorizontalAlignment="Center"
                VerticalAlignment="Center" />
          </theme:ButtonChrome>
          <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <Setter TargetName="Chrome" Property="RenderPressed" Value="True" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="Arrow" Property="Shape.Fill" Value="#FFAFAFAF" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ControlTemplate x:Key="ä" TargetType="{x:Type ComboBox}">
    <Grid Name="Placement" SnapsToDevicePixels="True">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*" />
        <ColumnDefinition Width="Auto" />
      </Grid.ColumnDefinitions>
      <Popup Name="PART_Popup" Grid.ColumnSpan="2" AllowsTransparency="True" Placement="Bottom"
          PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
          IsOpen="{Binding Path=IsDropDownOpen,RelativeSource={RelativeSource TemplatedParent}}">
        <theme:SystemDropShadowChrome x:Name="Shdw" Color="Transparent"
            MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}"
            MinWidth="{Binding ElementName=Placement,Path=ActualWidth}">
          <Border x:Name="DropDownBorder" BorderThickness="1"
              BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
              Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
            <ScrollViewer Name="DropDownScrollViewer">
              <Grid RenderOptions.ClearTypeHint="Enabled">
                <Canvas Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                  <Rectangle Name="OpaqueRect" Height="{Binding ElementName=DropDownBorder,Path=ActualHeight}"
                      Width="{Binding ElementName=DropDownBorder,Path=ActualWidth}"
                      Fill="{Binding ElementName=DropDownBorder,Path=Background}" />
                </Canvas>
                <ItemsPresenter Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
              </Grid>
            </ScrollViewer>
          </Border>
        </theme:SystemDropShadowChrome>
      </Popup>
      <theme:ListBoxChrome x:Name="Border" Grid.ColumnSpan="2" BorderThickness="{TemplateBinding BorderThickness}"
          BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}"
          RenderMouseOver="{TemplateBinding IsMouseOver}" RenderFocused="{TemplateBinding IsKeyboardFocusWithin}" />
      <TextBox Name="PART_EditableTextBox" Margin="{TemplateBinding Padding}" Style="{StaticResource à}"
          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
          TextBoxBase.IsReadOnly="{Binding Path=IsReadOnly,RelativeSource={RelativeSource TemplatedParent}}" />
      <ToggleButton Grid.Column="1" Style="{StaticResource ã}"
          ToggleButton.IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="IsKeyboardFocusWithin" Value="True">
        <Setter Property="Foreground" Value="#FF000000" />
      </Trigger>
      <Trigger Property="ComboBox.IsDropDownOpen" Value="True">
        <Setter TargetName="Border" Property="RenderFocused" Value="True" />
      </Trigger>
      <Trigger Property="ItemsControl.HasItems" Value="False">
        <Setter TargetName="DropDownBorder" Property="Height" Value="95" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Foreground" />
        <Setter Property="Background" Value="#FFF4F4F4" />
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="ItemsControl.IsGrouping" Value="True" />
          <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False" />
        </MultiTrigger.Conditions>
        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
      </MultiTrigger>
      <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
        <Setter TargetName="Shdw" Property="Margin" Value="0,0,5,5" />
        <Setter TargetName="Shdw" Property="theme:SystemDropShadowChrome.Color" Value="#71000000" />
      </Trigger>
      <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="False">
        <Setter TargetName="OpaqueRect" Value="{Binding ElementName=DropDownScrollViewer,Path=VerticalOffset}"
            Property="Canvas.Top" />
        <Setter TargetName="OpaqueRect" Value="{Binding ElementName=DropDownScrollViewer,Path=HorizontalOffset}"
            Property="Canvas.Left" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
    <Setter Property="FocusVisualStyle" Value="{StaticResource ß}" />
    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
    <Setter Property="Background" Value="{StaticResource Ò}" />
    <Setter Property="BorderBrush" Value="{StaticResource Ó}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="Padding" Value="4,3" />
    <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
    <Setter Property="ScrollViewer.PanningMode" Value="Both" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ComboBox}">
          <Grid Name="MainGrid" SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*" />
              <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                  Width="0" />
            </Grid.ColumnDefinitions>
            <Popup Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2" Placement="Bottom"
                Margin="1"
                PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                IsOpen="{Binding Path=IsDropDownOpen,RelativeSource={RelativeSource TemplatedParent}}">
              <theme:SystemDropShadowChrome x:Name="Shdw" Color="Transparent"
                  MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}"
                  MinWidth="{Binding ElementName=MainGrid,Path=ActualWidth}">
                <Border x:Name="DropDownBorder" BorderThickness="1"
                    BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
                    Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                  <ScrollViewer Name="DropDownScrollViewer">
                    <Grid RenderOptions.ClearTypeHint="Enabled">
                      <Canvas Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                        <Rectangle Name="OpaqueRect" Height="{Binding ElementName=DropDownBorder,Path=ActualHeight}"
                            Width="{Binding ElementName=DropDownBorder,Path=ActualWidth}"
                            Fill="{Binding ElementName=DropDownBorder,Path=Background}" />
                      </Canvas>
                      <ItemsPresenter Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained"
                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                  </ScrollViewer>
                </Border>
              </theme:SystemDropShadowChrome>
            </Popup>
            <ToggleButton Grid.ColumnSpan="2" Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}" Style="{StaticResource â}"
                ToggleButton.IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" />
            <ContentPresenter IsHitTestVisible="False" Margin="{TemplateBinding Padding}"
                Content="{TemplateBinding ComboBox.SelectionBoxItem}"
                ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                ContentTemplateSelector="{TemplateBinding ItemsControl.ItemTemplateSelector}"
                ContentStringFormat="{TemplateBinding ComboBox.SelectionBoxItemStringFormat}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
              <Setter TargetName="Shdw" Property="Margin" Value="0,0,5,5" />
              <Setter TargetName="Shdw" Property="theme:SystemDropShadowChrome.Color" Value="#71000000" />
            </Trigger>
            <Trigger Property="ItemsControl.HasItems" Value="False">
              <Setter TargetName="DropDownBorder" Property="Height" Value="95" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Foreground" />
              <Setter Property="Background" Value="#FFF4F4F4" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="ItemsControl.IsGrouping" Value="True" />
                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False" />
              </MultiTrigger.Conditions>
              <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
            </MultiTrigger>
            <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="False">
              <Setter TargetName="OpaqueRect" Value="{Binding ElementName=DropDownScrollViewer,Path=VerticalOffset}"
                  Property="Canvas.Top" />
              <Setter TargetName="OpaqueRect" Value="{Binding ElementName=DropDownScrollViewer,Path=HorizontalOffset}"
                  Property="Canvas.Left" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="ComboBox.IsEditable" Value="True">
        <Setter Property="BorderBrush" Value="{StaticResource å}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Padding" Value="3" />
        <Setter Property="Control.Template" Value="{StaticResource ä}" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <ControlTemplate x:Key="Ć" TargetType="{x:Type Frame}">
    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
        BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
      <DockPanel>
        <Grid Panel.Background="{StaticResource ć}" DockPanel.Dock="Top" Height="22">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="16" />
            <ColumnDefinition Width="*" />
          </Grid.ColumnDefinitions>
          <Menu Name="NavMenu" Grid.ColumnSpan="3" Height="16" Margin="1,0,0,0" VerticalAlignment="Center"
              Style="{StaticResource Ĉ}">
            <MenuItem Padding="0,2,4,0" Style="{StaticResource ĉ}" ItemsControl.ItemContainerStyle="{StaticResource Ċ}"
                MenuItem.IsSubmenuOpen="{Binding Path=(MenuItem.IsSubmenuOpen),Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}">
              <ItemsControl.ItemsSource>
                <MultiBinding MultiBinding.Converter="{StaticResource ċ}">
                  <MultiBinding.Bindings>
                    <Binding Path="BackStack" RelativeSource="{RelativeSource TemplatedParent}" />
                    <Binding Path="ForwardStack" RelativeSource="{RelativeSource TemplatedParent}" />
                  </MultiBinding.Bindings>
                </MultiBinding>
              </ItemsControl.ItemsSource>
            </MenuItem>
          </Menu>
          <Path Grid.Column="0" SnapsToDevicePixels="False" IsHitTestVisible="False" Margin="2,0,0,0"
              Grid.ColumnSpan="3" StrokeThickness="1" HorizontalAlignment="Left" VerticalAlignment="Center"
              Data="M22.5767,21.035Q27,19.37,31.424,21.035A12.5,12.5,0,0,0,53.5,13A12.5,12.5,0,0,0,37.765,0.926Q27,4.93,16.235,0.926A12.5,12.5,0,0,0,0.5,13A12.5,12.5,0,0,0,22.5767,21.035z">
            <Shape.Fill>
              <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                <GradientBrush.GradientStops>
                  <GradientStopCollection>
                    <GradientStop Color="#A0C2CCE7" Offset="0" />
                    <GradientStop Color="#60FFFFFF" Offset="1" />
                  </GradientStopCollection>
                </GradientBrush.GradientStops>
              </LinearGradientBrush>
            </Shape.Fill>
            <Shape.Stroke>
              <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                <GradientBrush.GradientStops>
                  <GradientStopCollection>
                    <GradientStop Color="#FFB7C2E3" Offset="0.2" />
                    <GradientStop Color="#A0FFFFFF" Offset="0.9" />
                  </GradientStopCollection>
                </GradientBrush.GradientStops>
              </LinearGradientBrush>
            </Shape.Stroke>
            <FrameworkElement.LayoutTransform>
              <ScaleTransform ScaleX="0.667" ScaleY="0.667" />
            </FrameworkElement.LayoutTransform>
          </Path>
          <Button Style="{StaticResource Č}" Margin="3,0,1,0" Grid.Column="0">
            <FrameworkElement.LayoutTransform>
              <ScaleTransform ScaleX="0.667" ScaleY="0.667" />
            </FrameworkElement.LayoutTransform>
          </Button>
          <Button Style="{StaticResource č}" Margin="1,0,0,0" Grid.Column="1">
            <FrameworkElement.LayoutTransform>
              <ScaleTransform ScaleX="0.667" ScaleY="0.667" />
            </FrameworkElement.LayoutTransform>
          </Button>
        </Grid>
        <ContentPresenter Name="PART_FrameCP" />
      </DockPanel>
    </Border>
    <ControlTemplate.Triggers>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="Frame.CanGoForward" Value="False" />
          <Condition Property="Frame.CanGoBack" Value="False" />
        </MultiTrigger.Conditions>
        <Setter TargetName="NavMenu" Property="IsEnabled" Value="False" />
      </MultiTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="{x:Type Frame}" TargetType="{x:Type Frame}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Frame}">
          <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
            <ContentPresenter Name="PART_FrameCP" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="Frame.NavigationUIVisibility" Value="Visible">
        <Setter Property="Control.Template" Value="{StaticResource Ć}" />
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="Frame.JournalOwnership" Value="OwnsJournal" />
          <Condition Property="Frame.NavigationUIVisibility" Value="Automatic" />
        </MultiTrigger.Conditions>
        <Setter Property="Control.Template" Value="{StaticResource Ć}" />
      </MultiTrigger>
    </Style.Triggers>
  </Style>
  <SolidColorBrush x:Key="Ũ" Color="#99CCFF" />
  <SolidColorBrush x:Key="ũ" Color="#F7F7F7" />
  <SolidColorBrush x:Key="Ū" Color="#B5B2B5" />
  <SolidColorBrush x:Key="ū" Color="#C6C7C6" />
  <SolidColorBrush x:Key="Ŭ" Color="#C2E0FF" />
  <SolidColorBrush x:Key="ŭ" Color="#3399FF" />
  <SolidColorBrush x:Key="Ů" Color="#E6F0FA" />
  <SolidColorBrush x:Key="ů" Color="#99CCFF" />
  <SolidColorBrush x:Key="Ű" Color="#3399FF" />
  <SolidColorBrush x:Key="ű" Color="#808080" />
  <SolidColorBrush x:Key="Ų" Color="#FDFDFD" />
  <SolidColorBrush x:Key="ų" Color="#E6F0FA" />
  <LinearGradientBrush x:Key="Ŵ" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FFFFFF" Offset="0" />
      <GradientStop Color="#FFFBFF" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ŵ" StartPoint="0,0" EndPoint="688,0" GradientBrush.MappingMode="Absolute">
    <GradientBrush.GradientStops>
      <GradientStop Color="#F4F4F4" Offset="0" />
      <GradientStop Color="#FDFDFD" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="Ŷ" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FFFFFF" Offset="0" />
      <GradientStop Color="#FFFBFF" Offset="0.5" />
      <GradientStop Color="#F7F7F7" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ŷ" StartPoint="0,0" EndPoint="1,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FFFFFF" Offset="0" />
      <GradientStop Color="#FFFBFF" Offset="0.5" />
      <GradientStop Color="#F7F7F7" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="Ÿ" Color="#C6C3C6" />
  <LinearGradientBrush x:Key="Ź" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#ECECEC" Offset="0" />
      <GradientStop Color="#DDDDDD" Offset="0.5" />
      <GradientStop Color="#A0A0A0" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ź" StartPoint="0,0" EndPoint="1,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="#ECECEC" Offset="0" />
      <GradientStop Color="#DDDDDD" Offset="0.5" />
      <GradientStop Color="#A0A0A0" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <Geometry x:Key="Ż">
    M 0,2.5 L 2.5,5 L 7,0.5
  </Geometry>
  <Style x:Key="ż" TargetType="{x:Type Border}">
    <Style.Triggers>
      <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
        <Setter Property="CornerRadius" Value="0,0,0,0" />
      </DataTrigger>
    </Style.Triggers>
    <Setter Property="Margin" Value="0,0,11,0" />
    <Setter Property="CornerRadius" Value="3,3,3,3" />
  </Style>
  <Style x:Key="{x:Static ToolBar.SeparatorStyleKey}" TargetType="{x:Type Separator}">
    <Setter Property="Background" Value="{StaticResource ū}" />
    <Setter Property="MinWidth" Value="1" />
    <Setter Property="MinHeight" Value="1" />
    <Setter Property="Margin" Value="2,2,2,2" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Separator}">
          <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Static ToolBar.ButtonStyleKey}" TargetType="{x:Type Button}">
    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Property="Padding" Value="2" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Background" Value="#00FFFFFF" />
    <Setter Property="BorderBrush" Value="#00FFFFFF" />
    <Setter Property="HorizontalAlignment" Value="Center" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Border Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}"
              SnapsToDevicePixels="True">
            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="Bd" Value="{StaticResource ŭ}" Property="BorderBrush" />
              <Setter TargetName="Bd" Value="{StaticResource Ŭ}" Property="Background" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="True">
              <Setter TargetName="Bd" Value="{StaticResource ŭ}" Property="BorderBrush" />
              <Setter TargetName="Bd" Value="{StaticResource Ŭ}" Property="Background" />
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
              <Setter TargetName="Bd" Value="{StaticResource Ű}" Property="BorderBrush" />
              <Setter TargetName="Bd" Value="{StaticResource ů}" Property="Background" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Static ToolBar.ToggleButtonStyleKey}" TargetType="{x:Type ToggleButton}">
    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Property="Padding" Value="2" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Background" Value="#00FFFFFF" />
    <Setter Property="BorderBrush" Value="#00FFFFFF" />
    <Setter Property="HorizontalAlignment" Value="Center" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}"
              SnapsToDevicePixels="True">
            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <Setter Value="{StaticResource ŭ}" Property="BorderBrush" />
              <Setter Value="{StaticResource Ů}" Property="Background" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Value="{StaticResource ŭ}" Property="BorderBrush" />
              <Setter Value="{StaticResource Ŭ}" Property="Background" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="True">
              <Setter Value="{StaticResource ŭ}" Property="BorderBrush" />
              <Setter Value="{StaticResource Ŭ}" Property="Background" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsMouseOver" Value="True" />
                <Condition Property="ToggleButton.IsChecked" Value="true" />
              </MultiTrigger.Conditions>
              <Setter Value="{StaticResource Ű}" Property="BorderBrush" />
              <Setter Value="{StaticResource ů}" Property="Background" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsKeyboardFocused" Value="True" />
                <Condition Property="ToggleButton.IsChecked" Value="true" />
              </MultiTrigger.Conditions>
              <Setter Value="{StaticResource Ű}" Property="BorderBrush" />
              <Setter Value="{StaticResource ů}" Property="Background" />
            </MultiTrigger>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
              <Setter Value="{StaticResource Ű}" Property="BorderBrush" />
              <Setter Value="{StaticResource ů}" Property="Background" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Static ToolBar.CheckBoxStyleKey}" BasedOn="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}"
      TargetType="{x:Type CheckBox}" />
  <Style x:Key="{x:Static ToolBar.RadioButtonStyleKey}"
      BasedOn="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}" TargetType="{x:Type RadioButton}" />
  <Style x:Key="Ž" TargetType="{x:Type ToggleButton}">
    <Setter Property="MinWidth" Value="0" />
    <Setter Property="MinHeight" Value="0" />
    <Setter Property="Width" Value="Auto" />
    <Setter Property="Background" Value="#00FFFFFF" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="ButtonBase.ClickMode" Value="Press" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Grid Panel.Background="#00FFFFFF">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="Auto" DefinitionBase.SharedSizeGroup="ComboBoxButton" />
            </Grid.ColumnDefinitions>
            <Border x:Name="Chrome" Grid.Column="1" Width="13" Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                SnapsToDevicePixels="True">
              <Path x:Name="ArrowDownPath" Data="M2.5,0L8.5,0 5.5,3z" Fill="#FF000000" VerticalAlignment="Center" />
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="Chrome" Value="{x:Null}" Property="BorderBrush" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsMouseOver" Value="True" />
                <Condition Property="ToggleButton.IsChecked" Value="false" />
              </MultiTrigger.Conditions>
              <Setter TargetName="Chrome" Value="{StaticResource Ŭ}" Property="Background" />
            </MultiTrigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <Setter TargetName="Chrome" Value="{StaticResource Ű}" Property="BorderBrush" />
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
              <Setter TargetName="Chrome" Value="{StaticResource ů}" Property="Background" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="ArrowDownPath" Value="{StaticResource Ū}" Property="Shape.Fill" />
            </Trigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding Path=AccessibilitySwitches.UseNetFx47CompatibleAccessibilityFeatures}"
                    Value="false" />
                <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="true" />
                <Condition Binding="{Binding Path=IsEnabled,RelativeSource={x:Static RelativeSource.Self}}" Value="true" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="ArrowDownPath" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                  Property="Shape.Fill" />
              <Setter TargetName="Chrome" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                  Property="BorderBrush" />
            </MultiDataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Static ToolBar.ComboBoxStyleKey}" TargetType="{x:Type ComboBox}">
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Margin" Value="1,0" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
    <Setter Property="ScrollViewer.PanningMode" Value="Both" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="HorizontalAlignment" Value="Center" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="MinHeight" Value="18" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ComboBox}">
          <Grid SnapsToDevicePixels="True">
            <Grid Grid.IsSharedSizeScope="True">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" DefinitionBase.SharedSizeGroup="ComboBoxButton" />
              </Grid.ColumnDefinitions>
              <Border Name="Background" Background="{TemplateBinding Background}" />
              <Border Name="SelectedContentBorder" Margin="2,2,1,2">
                <ContentPresenter Name="ContentSite" Content="{TemplateBinding ComboBox.SelectionBoxItem}"
                    ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                    ContentTemplateSelector="{TemplateBinding ItemsControl.ItemTemplateSelector}"
                    Margin="{TemplateBinding Padding}" VerticalAlignment="Center"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
              </Border>
              <Border Name="Border" Grid.ColumnSpan="2" BorderThickness="{TemplateBinding BorderThickness}"
                  BorderBrush="{TemplateBinding BorderBrush}" />
              <ToggleButton x:Name="DropDownButton" BorderBrush="#FFFFFFFF" BorderThickness="1" Grid.ColumnSpan="2"
                  Style="{StaticResource Ž}"
                  ToggleButton.IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" />
              <TextBox x:Name="PART_EditableTextBox" Padding="{TemplateBinding Padding}" Margin="1,1,0,1" MinHeight="18"
                  Style="{StaticResource à}" Visibility="Collapsed" VerticalAlignment="Center"
                  TextBoxBase.IsReadOnly="{Binding Path=IsReadOnly,RelativeSource={RelativeSource TemplatedParent}}" />
            </Grid>
            <Popup Name="PART_Popup" AllowsTransparency="True" Placement="Bottom" Focusable="False"
                PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                IsOpen="{Binding Path=IsDropDownOpen,RelativeSource={RelativeSource TemplatedParent}}">
              <theme:SystemDropShadowChrome x:Name="Shdw" Color="Transparent" MinWidth="{TemplateBinding ActualWidth}"
                  MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                <Border x:Name="DropDownBorder" Background="{TemplateBinding Background}" BorderThickness="1"
                    BorderBrush="{StaticResource ű}">
                  <ScrollViewer Name="DropDownScrollViewer">
                    <Grid RenderOptions.ClearTypeHint="Enabled">
                      <Canvas Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                        <Rectangle Name="OpaqueRect" Height="{Binding ElementName=DropDownBorder,Path=ActualHeight}"
                            Width="{Binding ElementName=DropDownBorder,Path=ActualWidth}"
                            Fill="{Binding ElementName=DropDownBorder,Path=Background}" />
                      </Canvas>
                      <ItemsPresenter Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" />
                    </Grid>
                  </ScrollViewer>
                </Border>
              </theme:SystemDropShadowChrome>
            </Popup>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Foreground" />
              <Setter TargetName="Background" Value="{StaticResource ũ}" Property="Background" />
              <Setter TargetName="Background" Property="Grid.ColumnSpan" Value="2" />
              <Setter TargetName="Border" Value="{StaticResource Ū}" Property="BorderBrush" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsKeyboardFocusWithin" Value="True" />
                <Condition Property="ComboBox.IsDropDownOpen" Value="False" />
                <Condition Property="ComboBox.IsEditable" Value="False" />
              </MultiTrigger.Conditions>
              <Setter TargetName="SelectedContentBorder"
                  Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Background" />
            </MultiTrigger>
            <Trigger Property="ComboBox.IsEditable" Value="True">
              <Setter TargetName="DropDownButton" Value="{x:Null}" Property="Background" />
              <Setter TargetName="ContentSite" Property="Visibility" Value="Collapsed" />
              <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="DropDownButton" Value="{StaticResource ŭ}" Property="BorderBrush" />
              <Setter TargetName="DropDownButton" Value="{StaticResource Ŭ}" Property="Background" />
              <Setter TargetName="Border" Value="{StaticResource ŭ}" Property="BorderBrush" />
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
              <Setter TargetName="DropDownButton" Value="{StaticResource ŭ}" Property="BorderBrush" />
              <Setter TargetName="DropDownButton" Value="{StaticResource Ŭ}" Property="Background" />
              <Setter TargetName="Border" Value="{StaticResource ŭ}" Property="BorderBrush" />
            </Trigger>
            <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
              <Setter TargetName="Shdw" Property="Margin" Value="0,0,5,5" />
              <Setter TargetName="Shdw" Property="SnapsToDevicePixels" Value="True" />
              <Setter TargetName="Shdw" Property="theme:SystemDropShadowChrome.Color" Value="#71000000" />
            </Trigger>
            <Trigger Property="ItemsControl.HasItems" Value="False">
              <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="ItemsControl.IsGrouping" Value="True" />
                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False" />
              </MultiTrigger.Conditions>
              <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsKeyboardFocusWithin" Value="True" />
                <Condition Property="ComboBox.IsDropDownOpen" Value="False" />
                <Condition Property="ComboBox.IsEditable" Value="False" />
              </MultiTrigger.Conditions>
              <Setter Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Foreground" />
            </MultiTrigger>
            <Trigger Property="ComboBox.IsEditable" Value="True">
              <Setter Property="Padding" Value="2" />
              <Setter Property="IsTabStop" Value="False" />
            </Trigger>
            <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="False">
              <Setter TargetName="OpaqueRect" Value="{Binding ElementName=DropDownScrollViewer,Path=VerticalOffset}"
                  Property="Canvas.Top" />
              <Setter TargetName="OpaqueRect" Value="{Binding ElementName=DropDownScrollViewer,Path=HorizontalOffset}"
                  Property="Canvas.Left" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Static ToolBar.TextBoxStyleKey}" TargetType="{x:Type TextBox}">
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Margin" Value="1,0" />
    <Setter Property="Padding" Value="2" />
    <Setter Property="HorizontalAlignment" Value="Center" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="MinHeight" Value="18" />
    <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TextBox}">
          <Border Name="Border" Background="{TemplateBinding Background}"
              BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"
              SnapsToDevicePixels="True">
            <ScrollViewer x:Name="PART_ContentHost" VerticalAlignment="Center" MinHeight="18" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Foreground" />
              <Setter TargetName="Border" Value="{StaticResource ũ}" Property="Background" />
              <Setter TargetName="Border" Value="{StaticResource Ū}" Property="BorderBrush" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="Border" Value="{StaticResource ŭ}" Property="BorderBrush" />
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
              <Setter TargetName="Border" Value="{StaticResource ŭ}" Property="BorderBrush" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Static ToolBar.MenuStyleKey}" TargetType="{x:Type Menu}">
    <Setter Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}" />
    <Setter Property="FontSize" Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}" />
    <Setter Property="FontStyle" Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}" />
    <Setter Property="FontWeight" Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}" />
    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="KeyboardNavigation.TabNavigation" Value="Continue" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Menu}">
          <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}"
              SnapsToDevicePixels="True">
            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Resources>
      <ResourceDictionary>
        <Style TargetType="{x:Type Separator}">
          <Setter Property="OverridesDefaultStyle" Value="True" />
          <Setter Property="Background" Value="{StaticResource ū}" />
          <Setter Property="Height" Value="1" />
          <Setter Property="Margin" Value="0,1,0,0" />
          <Setter Property="Control.Template">
            <Setter.Value>
              <ControlTemplate TargetType="{x:Type Separator}">
                <Grid SnapsToDevicePixels="True">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="24" Width="Auto"
                        DefinitionBase.SharedSizeGroup="MenuItemIconColumnGroup" />
                    <ColumnDefinition Width="*" />
                  </Grid.ColumnDefinitions>
                  <Border Grid.Column="1" Margin="8,0,0,0" Background="{TemplateBinding Background}"
                      BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
                </Grid>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>
        <Style TargetType="{x:Type MenuItem}">
          <Setter Property="OverridesDefaultStyle" Value="True" />
          <Setter Property="HorizontalContentAlignment"
              Value="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
          <Setter Property="VerticalContentAlignment"
              Value="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
          <Setter Property="Background" Value="#00FFFFFF" />
          <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
          <Setter Property="BorderThickness" Value="1" />
          <Setter Property="Margin" Value="0,1,0,0" />
          <Setter Property="Padding" Value="8,3,8,3" />
          <Setter Property="DockPanel.Dock" Value="Top" />
          <Setter Property="ScrollViewer.PanningMode" Value="Both" />
          <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
          <Setter Property="Control.Template">
            <Setter.Value>
              <ControlTemplate TargetType="{x:Type MenuItem}">
                <Grid Panel.Background="#00FFFFFF" SnapsToDevicePixels="True">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="24" Width="Auto"
                        DefinitionBase.SharedSizeGroup="MenuItemIconColumnGroup" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" DefinitionBase.SharedSizeGroup="MenuItemIGTColumnGroup" />
                    <ColumnDefinition Width="14" />
                  </Grid.ColumnDefinitions>
                  <Border Name="Border" Background="{TemplateBinding Background}"
                      BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"
                      Grid.ColumnSpan="4" Margin="1,0" />
                  <ContentPresenter Name="Icon" Margin="0" VerticalAlignment="Center" ContentSource="Icon"
                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                  <Border Name="GlyphPanel" Margin="0,1" Width="20" Height="20" Visibility="Hidden"
                      BorderBrush="{StaticResource ŭ}" Background="{StaticResource ų}" BorderThickness="1">
                    <Path VerticalAlignment="Center" HorizontalAlignment="Center" FlowDirection="LeftToRight"
                        Stroke="{TemplateBinding Foreground}" StrokeThickness="1.2" Data="{StaticResource Ż}" />
                  </Border>
                  <ContentPresenter Grid.Column="1" ContentSource="Header" Margin="{TemplateBinding Padding}"
                      RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                  <TextBlock Grid.Column="2" Text="{TemplateBinding MenuItem.InputGestureText}" Margin="4,3,2,3"
                      HorizontalAlignment="Right" />
                </Grid>
                <ControlTemplate.Triggers>
                  <Trigger Value="{x:Null}" Property="MenuItem.Icon">
                    <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                  </Trigger>
                  <Trigger Property="MenuItem.IsChecked" Value="True">
                    <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
                    <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                  </Trigger>
                  <Trigger Property="MenuItem.IsHighlighted" Value="True">
                    <Setter TargetName="Border" Value="{StaticResource ŭ}" Property="BorderBrush" />
                    <Setter TargetName="Border" Value="{StaticResource Ŭ}" Property="Background" />
                    <Setter TargetName="GlyphPanel" Value="{StaticResource Ű}" Property="BorderBrush" />
                    <Setter TargetName="GlyphPanel" Value="{StaticResource Ũ}" Property="Background" />
                  </Trigger>
                  <Trigger Property="IsEnabled" Value="False">
                    <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Foreground" />
                  </Trigger>
                </ControlTemplate.Triggers>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
          <Style.Triggers>
            <Trigger Property="MenuItem.Role" Value="TopLevelHeader">
              <Setter Property="Padding" Value="6,2,7,2" />
              <Setter Property="Grid.IsSharedSizeScope" Value="True" />
              <Setter Property="Control.Template">
                <Setter.Value>
                  <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border Name="Border" Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" SnapsToDevicePixels="True">
                      <DockPanel Name="Header">
                        <ContentPresenter Name="Icon" Margin="4,0,6,0" VerticalAlignment="Center" ContentSource="Icon"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Path x:Name="GlyphPanel" Margin="4,0,6,0" Visibility="Collapsed" VerticalAlignment="Center"
                            FlowDirection="LeftToRight" Stroke="{TemplateBinding Foreground}" StrokeThickness="1.2"
                            Data="{StaticResource Ż}" />
                        <ContentPresenter ContentSource="Header" Margin="{TemplateBinding Padding}"
                            RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Popup x:Name="PART_Popup" Placement="Bottom" HorizontalOffset="-1"
                            Focusable="False"
                            PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                            AllowsTransparency="True"
                            IsOpen="{Binding Path=IsSubmenuOpen,RelativeSource={RelativeSource TemplatedParent}}">
                          <theme:SystemDropShadowChrome x:Name="Shdw" Color="Transparent">
                            <Border Name="SubMenuBorder" Background="{StaticResource Ų}"
                                BorderBrush="{StaticResource ű}" BorderThickness="1">
                              <Grid>
                                <Rectangle Fill="{StaticResource Ų}" Margin="0,-1,0,0" VerticalAlignment="Top"
                                    HorizontalAlignment="Left" Height="1"
                                    Width="{Binding ElementName=Header,Path=ActualWidth}" />
                                <ScrollViewer Name="SubMenuScrollViewer"
                                    Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement},ResourceId=MenuScrollViewer}}">
                                  <Grid RenderOptions.ClearTypeHint="Enabled" Grid.IsSharedSizeScope="True">
                                    <Grid.ColumnDefinitions>
                                      <ColumnDefinition MinWidth="24" Width="Auto"
                                          DefinitionBase.SharedSizeGroup="MenuItemIconColumnGroup" />
                                      <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Canvas Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                                      <Rectangle Name="OpaqueRect"
                                          Height="{Binding ElementName=SubMenuBorder,Path=ActualHeight}"
                                          Width="{Binding ElementName=SubMenuBorder,Path=ActualWidth}"
                                          Fill="{Binding ElementName=SubMenuBorder,Path=Background}" />
                                    </Canvas>
                                    <Rectangle Fill="{StaticResource ŷ}" Margin="0,1" />
                                    <ItemsPresenter Name="ItemsPresenter"
                                        KeyboardNavigation.DirectionalNavigation="Cycle" Grid.ColumnSpan="2"
                                        KeyboardNavigation.TabNavigation="Cycle" Margin="0,0,0,1"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                  </Grid>
                                </ScrollViewer>
                              </Grid>
                            </Border>
                          </theme:SystemDropShadowChrome>
                        </Popup>
                      </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                      <Trigger Property="MenuItem.IsSuspendingPopupAnimation" Value="True">
                        <Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None" />
                      </Trigger>
                      <Trigger Value="{x:Null}" Property="MenuItem.Icon">
                        <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                      </Trigger>
                      <Trigger Property="MenuItem.IsChecked" Value="True">
                        <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
                        <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                      </Trigger>
                      <Trigger Property="MenuItem.IsHighlighted" Value="True">
                        <Setter TargetName="Border" Value="{StaticResource ŭ}" Property="BorderBrush" />
                        <Setter TargetName="Border" Value="{StaticResource Ŭ}" Property="Background" />
                      </Trigger>
                      <Trigger Property="MenuItem.IsSubmenuOpen" Value="True">
                        <Setter TargetName="Border" Value="{StaticResource ű}" Property="BorderBrush" />
                        <Setter TargetName="Border" Value="{StaticResource Ŵ}" Property="Background" />
                      </Trigger>
                      <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
                        <Setter TargetName="Shdw" Property="Margin" Value="0,0,5,5" />
                        <Setter TargetName="Shdw" Property="SnapsToDevicePixels" Value="True" />
                        <Setter TargetName="Shdw" Property="theme:SystemDropShadowChrome.Color" Value="#71000000" />
                      </Trigger>
                      <Trigger Property="IsEnabled" Value="False">
                        <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Foreground" />
                      </Trigger>
                      <Trigger SourceName="SubMenuScrollViewer" Property="ScrollViewer.CanContentScroll" Value="False">
                        <Setter TargetName="OpaqueRect"
                            Value="{Binding ElementName=SubMenuScrollViewer,Path=VerticalOffset}" Property="Canvas.Top" />
                        <Setter TargetName="OpaqueRect"
                            Value="{Binding ElementName=SubMenuScrollViewer,Path=HorizontalOffset}"
                            Property="Canvas.Left" />
                      </Trigger>
                    </ControlTemplate.Triggers>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="MenuItem.Role" Value="TopLevelItem">
              <Setter Property="Margin" Value="0,1,0,1" />
              <Setter Property="Padding" Value="7,1,8,2" />
              <Setter Property="Control.Template">
                <Setter.Value>
                  <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border Name="Border" Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" SnapsToDevicePixels="True">
                      <DockPanel>
                        <ContentPresenter Name="Icon" Margin="4,0,6,0" VerticalAlignment="Center" ContentSource="Icon"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Path x:Name="GlyphPanel" Margin="4,0,6,0" Visibility="Collapsed" VerticalAlignment="Center"
                            FlowDirection="LeftToRight" Stroke="{TemplateBinding Foreground}" StrokeThickness="1.2"
                            Data="{StaticResource Ż}" />
                        <ContentPresenter ContentSource="Header" Margin="{TemplateBinding Padding}"
                            RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                      </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                      <Trigger Value="{x:Null}" Property="MenuItem.Icon">
                        <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                      </Trigger>
                      <Trigger Property="MenuItem.IsChecked" Value="True">
                        <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
                        <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                      </Trigger>
                      <Trigger Property="MenuItem.IsHighlighted" Value="True">
                        <Setter TargetName="Border" Value="{StaticResource ŭ}" Property="BorderBrush" />
                        <Setter TargetName="Border" Value="{StaticResource Ŭ}" Property="Background" />
                      </Trigger>
                      <Trigger Property="IsEnabled" Value="False">
                        <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Foreground" />
                      </Trigger>
                    </ControlTemplate.Triggers>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="MenuItem.Role" Value="SubmenuHeader">
              <Setter Property="DockPanel.Dock" Value="Top" />
              <Setter Property="Padding" Value="8,3,8,3" />
              <Setter Property="Grid.IsSharedSizeScope" Value="True" />
              <Setter Property="Control.Template">
                <Setter.Value>
                  <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Grid Panel.Background="#00FFFFFF" SnapsToDevicePixels="True">
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="24" Width="Auto"
                            DefinitionBase.SharedSizeGroup="MenuItemIconColumnGroup" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" DefinitionBase.SharedSizeGroup="MenuItemIGTColumnGroup" />
                        <ColumnDefinition Width="14" />
                      </Grid.ColumnDefinitions>
                      <Border Name="Border" Background="{TemplateBinding Background}"
                          BorderThickness="{TemplateBinding BorderThickness}"
                          BorderBrush="{TemplateBinding BorderBrush}" Grid.ColumnSpan="4" Margin="1,0" />
                      <ContentPresenter Name="Icon" Margin="3" VerticalAlignment="Center" ContentSource="Icon"
                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                      <Border Name="GlyphPanel" Margin="0,1" Width="20" Height="20" Visibility="Hidden"
                          BorderBrush="{StaticResource ŭ}" Background="{StaticResource ų}" BorderThickness="1">
                        <Path VerticalAlignment="Center" HorizontalAlignment="Center" FlowDirection="LeftToRight"
                            Stroke="{TemplateBinding Foreground}" StrokeThickness="1.2" Data="{StaticResource Ż}" />
                      </Border>
                      <ContentPresenter Grid.Column="1" ContentSource="Header" Margin="{TemplateBinding Padding}"
                          RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                      <Path Grid.Column="3" DockPanel.Dock="Right" VerticalAlignment="Center" Margin="4,0,6,0"
                          Fill="{TemplateBinding Foreground}" Data="{StaticResource ğ}" />
                      <Popup x:Name="PART_Popup" Placement="Right" Focusable="False"
                          PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                          AllowsTransparency="True"
                          IsOpen="{Binding Path=IsSubmenuOpen,RelativeSource={RelativeSource TemplatedParent}}">
                        <theme:SystemDropShadowChrome x:Name="Shdw" Color="Transparent">
                          <Border Name="SubMenuBorder" Background="{StaticResource Ų}" BorderBrush="{StaticResource ű}"
                              BorderThickness="1" Grid.IsSharedSizeScope="True">
                            <ScrollViewer Name="SubMenuScrollViewer"
                                Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement},ResourceId=MenuScrollViewer}}">
                              <Grid RenderOptions.ClearTypeHint="Enabled">
                                <Grid.ColumnDefinitions>
                                  <ColumnDefinition MinWidth="24" Width="Auto"
                                      DefinitionBase.SharedSizeGroup="MenuItemIconColumnGroup" />
                                  <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Canvas Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                                  <Rectangle Name="OpaqueRect"
                                      Height="{Binding ElementName=SubMenuBorder,Path=ActualHeight}"
                                      Width="{Binding ElementName=SubMenuBorder,Path=ActualWidth}"
                                      Fill="{Binding ElementName=SubMenuBorder,Path=Background}" />
                                </Canvas>
                                <Rectangle Fill="{StaticResource ŷ}" Margin="0,1" />
                                <ItemsPresenter Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle"
                                    Grid.ColumnSpan="2" KeyboardNavigation.TabNavigation="Cycle" Margin="0,0,0,1"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                              </Grid>
                            </ScrollViewer>
                          </Border>
                        </theme:SystemDropShadowChrome>
                      </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                      <Trigger Property="MenuItem.IsSuspendingPopupAnimation" Value="True">
                        <Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None" />
                      </Trigger>
                      <Trigger Value="{x:Null}" Property="MenuItem.Icon">
                        <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                      </Trigger>
                      <Trigger Property="MenuItem.IsChecked" Value="True">
                        <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
                        <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                      </Trigger>
                      <Trigger Property="MenuItem.IsHighlighted" Value="True">
                        <Setter TargetName="Border" Value="{StaticResource ŭ}" Property="BorderBrush" />
                        <Setter TargetName="Border" Value="{StaticResource Ŭ}" Property="Background" />
                        <Setter TargetName="GlyphPanel" Value="{StaticResource Ű}" Property="BorderBrush" />
                        <Setter TargetName="GlyphPanel" Value="{StaticResource Ũ}" Property="Background" />
                      </Trigger>
                      <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
                        <Setter TargetName="Shdw" Property="Margin" Value="0,0,5,5" />
                        <Setter TargetName="Shdw" Property="SnapsToDevicePixels" Value="True" />
                        <Setter TargetName="Shdw" Property="theme:SystemDropShadowChrome.Color" Value="#71000000" />
                      </Trigger>
                      <Trigger Property="IsEnabled" Value="False">
                        <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Foreground" />
                      </Trigger>
                      <Trigger SourceName="SubMenuScrollViewer" Property="ScrollViewer.CanContentScroll" Value="False">
                        <Setter TargetName="OpaqueRect"
                            Value="{Binding ElementName=SubMenuScrollViewer,Path=VerticalOffset}" Property="Canvas.Top" />
                        <Setter TargetName="OpaqueRect"
                            Value="{Binding ElementName=SubMenuScrollViewer,Path=HorizontalOffset}"
                            Property="Canvas.Left" />
                      </Trigger>
                    </ControlTemplate.Triggers>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
            </Trigger>
          </Style.Triggers>
        </Style>
      </ResourceDictionary>
    </Style.Resources>
  </Style>
  <Style x:Key="ž" TargetType="{x:Type Thumb}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Border Padding="{TemplateBinding Padding}" Background="#00FFFFFF" SnapsToDevicePixels="True">
            <Rectangle>
              <Shape.Fill>
                <DrawingBrush TileBrush.Viewbox="0,0,4,4" TileBrush.Viewport="0,0,4,4" TileBrush.TileMode="Tile"
                    TileBrush.ViewportUnits="Absolute" TileBrush.ViewboxUnits="Absolute">
                  <DrawingBrush.Drawing>
                    <DrawingGroup>
                      <DrawingGroup.Children>
                        <GeometryDrawing GeometryDrawing.Brush="#FFFFFFFF" GeometryDrawing.Geometry="M1,1L1,3 3,3 3,1z" />
                        <GeometryDrawing GeometryDrawing.Brush="{StaticResource Ÿ}"
                            GeometryDrawing.Geometry="M0,0L0,2 2,2 2,0z" />
                      </DrawingGroup.Children>
                    </DrawingGroup>
                  </DrawingBrush.Drawing>
                </DrawingBrush>
              </Shape.Fill>
            </Rectangle>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Cursor" Value="SizeAll" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ſ" TargetType="{x:Type ToggleButton}">
    <Style.Triggers>
      <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
      </DataTrigger>
    </Style.Triggers>
    <Setter Property="Background" Value="{StaticResource Ź}" />
    <Setter Property="MinHeight" Value="0" />
    <Setter Property="MinWidth" Value="0" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Name="Bd" CornerRadius="0,3,3,0" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
            <Canvas Width="6" Height="7" Margin="7,2,2,2" HorizontalAlignment="Right" VerticalAlignment="Bottom"
                SnapsToDevicePixels="True">
              <Path Stroke="#FFFFFFFF" Data="M1,1.5L6,1.5" />
              <Path Stroke="{TemplateBinding Foreground}" Data="M0,0.5L5,0.5" />
              <Path Fill="#FFFFFFFF" Data="M0.5,4L6.5,4 3.5,7z" />
              <Path Fill="{TemplateBinding Foreground}" Data="M-0.5,3L5.5,3 2.5,6z" />
            </Canvas>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="Bd" Value="{StaticResource Ŭ}" Property="Background" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="True">
              <Setter TargetName="Bd" Value="{StaticResource Ŭ}" Property="Background" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Value="{StaticResource Ÿ}" Property="Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ƀ" TargetType="{x:Type ToggleButton}">
    <Style.Triggers>
      <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
      </DataTrigger>
    </Style.Triggers>
    <Setter Property="Background" Value="{StaticResource ź}" />
    <Setter Property="MinHeight" Value="0" />
    <Setter Property="MinWidth" Value="0" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Name="Bd" CornerRadius="0,0,3,3" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
            <Canvas Width="7" Height="6" Margin="2,7,2,2" HorizontalAlignment="Right" VerticalAlignment="Bottom"
                SnapsToDevicePixels="True">
              <Path Stroke="#FFFFFFFF" Data="M1.5,1L1.5,6" />
              <Path Stroke="{TemplateBinding Foreground}" Data="M0.5,0L0.5,5" />
              <Path Fill="#FFFFFFFF" Data="M3.5,0.5L7,3.5 4,6.5z" />
              <Path Fill="{TemplateBinding Foreground}" Data="M3,-0.5L6,2.5 3,5.5z" />
            </Canvas>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="Bd" Value="{StaticResource Ŭ}" Property="Background" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="True">
              <Setter TargetName="Bd" Value="{StaticResource Ŭ}" Property="Background" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Value="{StaticResource Ÿ}" Property="Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type ToolBar}" TargetType="{x:Type ToolBar}">
    <Style.Triggers>
      <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
      </DataTrigger>
    </Style.Triggers>
    <Setter Property="Background" Value="{StaticResource Ŷ}" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToolBar}">
          <Grid Name="Grid" Margin="3,1,1,1" SnapsToDevicePixels="True">
            <Grid x:Name="OverflowGrid" HorizontalAlignment="Right">
              <ToggleButton x:Name="OverflowButton" IsEnabled="{TemplateBinding ToolBar.HasOverflowItems}"
                  Style="{StaticResource ſ}" ButtonBase.ClickMode="Press" FocusVisualStyle="{x:Null}"
                  ToggleButton.IsChecked="{Binding Path=IsOverflowOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" />
              <Popup x:Name="OverflowPopup" AllowsTransparency="True" Placement="Bottom"
                  StaysOpen="False" Focusable="False"
                  PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                  IsOpen="{Binding Path=IsOverflowOpen,RelativeSource={RelativeSource TemplatedParent}}">
                <theme:SystemDropShadowChrome x:Name="Shdw" Color="Transparent">
                  <Border x:Name="ToolBarSubMenuBorder" Background="{StaticResource Ų}" BorderBrush="{StaticResource ű}"
                      BorderThickness="1" RenderOptions.ClearTypeHint="Enabled">
                    <ToolBarOverflowPanel x:Name="PART_ToolBarOverflowPanel" Margin="2"
                        ToolBarOverflowPanel.WrapWidth="200" Focusable="True" KeyboardNavigation.TabNavigation="Cycle"
                        KeyboardNavigation.DirectionalNavigation="Cycle"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" FocusVisualStyle="{x:Null}" />
                  </Border>
                </theme:SystemDropShadowChrome>
              </Popup>
            </Grid>
            <Border x:Name="MainPanelBorder" Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                Padding="{TemplateBinding Padding}" Style="{StaticResource ż}">
              <DockPanel KeyboardNavigation.TabIndex="1" KeyboardNavigation.TabNavigation="Local">
                <Thumb x:Name="ToolBarThumb" Style="{StaticResource ž}" Margin="-3,-1,0,0" Width="10" Padding="6,5,1,6" />
                <ContentPresenter Name="ToolBarHeader" ContentSource="Header" HorizontalAlignment="Center"
                    VerticalAlignment="Center" Margin="4,0,4,0"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                <ToolBarPanel x:Name="PART_ToolBarPanel" Panel.IsItemsHost="True" Margin="0,1,2,2"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
              </DockPanel>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="ToolBar.IsOverflowOpen" Value="True">
              <Setter TargetName="ToolBarThumb" Property="IsEnabled" Value="False" />
            </Trigger>
            <Trigger Value="{x:Null}" Property="HeaderedItemsControl.Header">
              <Setter TargetName="ToolBarHeader" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="ToolBarTray.IsLocked" Value="True">
              <Setter TargetName="ToolBarThumb" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger SourceName="OverflowPopup" Property="Popup.HasDropShadow" Value="True">
              <Setter TargetName="Shdw" Property="Margin" Value="0,0,5,5" />
              <Setter TargetName="Shdw" Property="SnapsToDevicePixels" Value="True" />
              <Setter TargetName="Shdw" Property="theme:SystemDropShadowChrome.Color" Value="#71000000" />
            </Trigger>
            <Trigger Property="ToolBar.Orientation" Value="Vertical">
              <Setter TargetName="Grid" Property="Margin" Value="1,3,1,1" />
              <Setter TargetName="OverflowButton" Value="{StaticResource ƀ}" Property="Style" />
              <Setter TargetName="ToolBarThumb" Property="Height" Value="10" />
              <Setter TargetName="ToolBarThumb" Property="Width" Value="Auto" />
              <Setter TargetName="ToolBarThumb" Property="Margin" Value="-1,-3,0,0" />
              <Setter TargetName="ToolBarThumb" Property="Padding" Value="5,6,6,1" />
              <Setter TargetName="ToolBarHeader" Property="Margin" Value="0,0,0,4" />
              <Setter TargetName="PART_ToolBarPanel" Property="Margin" Value="1,0,2,2" />
              <Setter TargetName="ToolBarThumb" Property="DockPanel.Dock" Value="Top" />
              <Setter TargetName="ToolBarHeader" Property="DockPanel.Dock" Value="Top" />
              <Setter TargetName="OverflowGrid" Property="HorizontalAlignment" Value="Stretch" />
              <Setter TargetName="OverflowGrid" Property="VerticalAlignment" Value="Bottom" />
              <Setter TargetName="OverflowPopup" Property="Popup.Placement" Value="Right" />
              <Setter TargetName="MainPanelBorder" Property="Margin" Value="0,0,0,11" />
              <Setter Value="{StaticResource ŷ}" Property="Background" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type ToolBarTray}" TargetType="{x:Type ToolBarTray}">
    <Setter Property="Background" Value="{StaticResource ŵ}" />
    <Style.Triggers>
      <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
      </DataTrigger>
    </Style.Triggers>
  </Style>

</ResourceDictionary>