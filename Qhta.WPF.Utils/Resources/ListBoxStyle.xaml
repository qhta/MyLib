<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:utils="clr-namespace:Qhta.WPF.Utils"
    xmlns:diag="clr-namespace:System.Diagnostics;assembly=WindowsBase"
    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">

  <SolidColorBrush x:Key="ListBoxBorderBrush" Color="#828790" />
  <!--<Style x:Key="ListBoxItemContainerStyle" TargetType="{x:Type ListBoxItem}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListBoxItem}">
          <ContentPresenter />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>-->
  <Style x:Key="MyListBoxStyle" TargetType="{x:Type ListBox}">
    <Setter Property="Background"
        Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
    <Setter Property="BorderBrush" Value="{StaticResource ListBoxBorderBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Foreground"
        Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
    <Setter Property="ScrollViewer.PanningMode" Value="Both" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <!--<Setter Property="ItemContainerStyle" Value="{StaticResource ListBoxItemContainerStyle}"/>-->
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListBox}">
          <Border Name="Bd" Background="{TemplateBinding Background}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              SnapsToDevicePixels="True" Padding="0">
            <ScrollViewer Padding="{TemplateBinding Padding}" Focusable="False">
              <Grid>
                <AdornerDecorator>
                  <ItemsPresenter
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                </AdornerDecorator>
              </Grid>
            </ScrollViewer>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="Bd"
                  Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
                  Property="Background" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="ItemsControl.IsGrouping" Value="True" />
                <Condition
                    Property="VirtualizingPanel.IsVirtualizingWhenGrouping"
                    Value="False" />
              </MultiTrigger.Conditions>
              <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ListBoxItemFocusVisualStyle">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Margin="0,1,0,1" StrokeThickness="1"
              Stroke="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"
              StrokeDashArray="1 2" SnapsToDevicePixels="True" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--<AdornerDecorator x:Key="HorizontalLine" TargetType="{x:Type AdornerDecorator}">
    
  </AdornerDecorator>-->
  
  <Style x:Key="{x:Type ListBoxItem}" TargetType="{x:Type ListBoxItem}">
    <Setter Property="Background" Value="#00FFFFFF" />
    <Setter Property="HorizontalContentAlignment"
        Value="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Property="VerticalContentAlignment"
        Value="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Property="Padding" Value="2,0,0,0" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListBoxItem}">
          <Grid Margin="0,0,0,-1">
              <Border Name="Bd" Background="{TemplateBinding Background}"
                Margin="0,1,0,0"
                Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
            <!--<Border Name="Bd" Background="{TemplateBinding Background}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              >-->
              <ContentPresenter
                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </Border>
            <!--<Line x:Name="TopLine" Height="1" HorizontalAlignment="Stretch"
                VerticalAlignment="Top"
                Stroke="{x:Static SystemColors.ControlTextBrush}" StrokeThickness="1"
              StrokeDashArray="6,3" StrokeDashOffset="3" X1="0" Y1="0.5" Y2="0.5"
              X2="{Binding Path=ActualWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Grid}}"
              />
            <Line x:Name="BottomLine" Height="1" HorizontalAlignment="Stretch"
                VerticalAlignment="Bottom"
                Stroke="{x:Static SystemColors.ControlTextBrush}" StrokeThickness="1"
                StrokeDashArray="6,3" StrokeDashOffset="3" X1="0" Y1="0.5" Y2="0.5"
                X2="{Binding Path=ActualWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Grid}}" />-->
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="ListBoxItem.IsSelected" Value="True">
              <Setter TargetName="Bd"
                  Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                  Property="Background" />
              <Setter
                  Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"
                  Property="Foreground" />
            </Trigger>
            <!--<MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="ListBoxItem.IsSelected" Value="True" />
                <Condition Property="Selector.IsSelectionActive" Value="False" />
              </MultiTrigger.Conditions>
              <Setter TargetName="Bd"
                  Value="{DynamicResource InternalSystemColorsExtendedStart}"
                  Property="Background" />
              <Setter
                  Value="{DynamicResource {x:Static  SystemColors.InactiveSelectionHighlightBrush}}"
                  Property="Foreground" />
            </MultiTrigger>-->
            <Trigger Property="IsEnabled" Value="False">
              <Setter
                  Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"
                  Property="Foreground" />
            </Trigger>
            <!--<DataTrigger
                Binding="{Binding Path=(utils:ListBoxBehavior.DropAfterItem), RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}"
                Value="true">
              <Setter Property="Visibility" TargetName="clearButtonBorder"
                  Value="Visible" />
            </DataTrigger>-->

            <!--<MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition
                    Binding="{Binding Path=AccessibilitySwitches.UseNetFx47CompatibleAccessibilityFeatures}"
                    Value="false" />
                <Condition
                    Binding="{Binding Path=(SystemParameters.HighContrast)}"
                    Value="true" />
              </MultiDataTrigger.Conditions>
              <Setter Value="{StaticResource ListBoxItemFocusVisualStyle}" Property="FocusVisualStyle" />
            </MultiDataTrigger>-->
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type ListBox}" TargetType="{x:Type ListBox}"
      BasedOn="{StaticResource MyListBoxStyle}" />

</ResourceDictionary>