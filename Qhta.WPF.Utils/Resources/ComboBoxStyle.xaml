<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:utils="clr-namespace:Qhta.WPF.Utils"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:globalization="clr-namespace:System.Globalization;assembly=mscorlib"
                    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
                    x:Class="Qhta.WPF.Utils.ComboBoxBehavior">

  <!-- FocusVisual -->
  <Style x:Key="FocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Margin="2"
                     SnapsToDevicePixels="true"
                     Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                     StrokeThickness="1"
                     StrokeDashArray="1 2" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- Brushes -->
  <LinearGradientBrush x:Key="ComboBox.Static.Background"
                       EndPoint="0,1"
                       StartPoint="0,0">
    <GradientStop Color="#FFF0F0F0"
                  Offset="0.0" />
    <GradientStop Color="#FFE5E5E5"
                  Offset="1.0" />
  </LinearGradientBrush>
  <SolidColorBrush x:Key="ComboBox.Static.Border"
                   Color="#FFACACAC" />
  <SolidColorBrush x:Key="ComboBox.Static.Editable.Background"
                   Color="#FFFFFFFF" />
  <SolidColorBrush x:Key="ComboBox.Static.Editable.Border"
                   Color="#FFABADB3" />
  <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background"
                   Color="Transparent" />
  <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border"
                   Color="Transparent" />
  <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph"
                   Color="#FF000000" />
  <SolidColorBrush x:Key="ComboBox.MouseOver.ClearButtonGlyph"
                   Color="Red" />
  <SolidColorBrush x:Key="ComboBox.MouseOver.ClearButtonClick"
                   Color="Black" />
  <LinearGradientBrush x:Key="ComboBox.MouseOver.Background"
                       EndPoint="0,1"
                       StartPoint="0,0">
    <GradientStop Color="#FFECF4FC"
                  Offset="0.0" />
    <GradientStop Color="#FFDCECFC"
                  Offset="1.0" />
  </LinearGradientBrush>
  <SolidColorBrush x:Key="ComboBox.MouseOver.Border"
                   Color="#FF7EB4EA" />
  <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background"
                   Color="#FFFFFFFF" />
  <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border"
                   Color="#FF7EB4EA" />
  <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background"
                       EndPoint="0,1"
                       StartPoint="0,0">
    <GradientStop Color="#FFEBF4FC"
                  Offset="0.0" />
    <GradientStop Color="#FFDCECFC"
                  Offset="1.0" />
  </LinearGradientBrush>
  <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border"
                   Color="#FF7EB4EA" />
  <SolidColorBrush x:Key="ComboBox.Pressed.Glyph"
                   Color="#FF000000" />
  <LinearGradientBrush x:Key="ComboBox.Pressed.Background"
                       EndPoint="0,1"
                       StartPoint="0,0">
    <GradientStop Color="#FFDAECFC"
                  Offset="0.0" />
    <GradientStop Color="#FFC4E0FC"
                  Offset="1.0" />
  </LinearGradientBrush>
  <SolidColorBrush x:Key="ComboBox.Pressed.Border"
                   Color="#FF569DE5" />
  <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background"
                   Color="#FFFFFFFF" />
  <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border"
                   Color="#FF569DE5" />
  <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background"
                       EndPoint="0,1"
                       StartPoint="0,0">
    <GradientStop Color="#FFDAEBFC"
                  Offset="0.0" />
    <GradientStop Color="#FFC4E0FC"
                  Offset="1.0" />
  </LinearGradientBrush>
  <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border"
                   Color="#FF569DE5" />
  <SolidColorBrush x:Key="ComboBox.Disabled.Glyph"
                   Color="#FFBFBFBF" />
  <SolidColorBrush x:Key="ComboBox.Disabled.Background"
                   Color="#FFF0F0F0" />
  <SolidColorBrush x:Key="ComboBox.Disabled.Border"
                   Color="#FFD9D9D9" />
  <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background"
                   Color="#FFFFFFFF" />
  <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border"
                   Color="#FFBFBFBF" />
  <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background"
                   Color="Transparent" />
  <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border"
                   Color="Transparent" />
  <SolidColorBrush x:Key="ComboBox.Static.Glyph"
                   Color="#FF606060" />
  <SolidColorBrush x:Key="TextBox.Static.Background"
                   Color="Transparent" />

  <!-- ComboBoxToggleButton -->
  <Style x:Key="ComboBoxToggleButton"
         TargetType="{x:Type ToggleButton}">
    <Setter Property="OverridesDefaultStyle"
            Value="true" />
    <Setter Property="IsTabStop"
            Value="false" />
    <Setter Property="Focusable"
            Value="false" />
    <Setter Property="ClickMode"
            Value="Press" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border x:Name="templateRoot"
                  BorderBrush="{StaticResource ComboBox.Static.Border}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  Background="{StaticResource ComboBox.Static.Background}"
                  SnapsToDevicePixels="true">
            <Border x:Name="splitBorder"
                    BorderBrush="Transparent"
                    BorderThickness="1"
                    HorizontalAlignment="Right"
                    Margin="0"
                    SnapsToDevicePixels="true"
                    Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
              <Path x:Name="arrow"
                    Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z"
                    Fill="{StaticResource ComboBox.Static.Glyph}"
                    HorizontalAlignment="Center"
                    Margin="0"
                    VerticalAlignment="Center" />
            </Border>
          </Border>
          <ControlTemplate.Triggers>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                           Value="true" />
                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}"
                           Value="false" />
                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}"
                           Value="false" />
                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}"
                           Value="true" />
              </MultiDataTrigger.Conditions>
              <Setter Property="Background"
                      TargetName="templateRoot"
                      Value="Transparent" />
              <Setter Property="BorderBrush"
                      TargetName="templateRoot"
                      Value="Transparent" />
              <Setter Property="Background"
                      TargetName="splitBorder"
                      Value="{StaticResource ComboBox.Static.Editable.Button.Background}" />
              <Setter Property="BorderBrush"
                      TargetName="splitBorder"
                      Value="{StaticResource ComboBox.Static.Editable.Button.Border}" />
            </MultiDataTrigger>
            <Trigger Property="IsMouseOver"
                     Value="true">
              <Setter Property="Fill"
                      TargetName="arrow"
                      Value="{StaticResource ComboBox.MouseOver.Glyph}" />
            </Trigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}"
                           Value="true" />
                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                           Value="false" />
              </MultiDataTrigger.Conditions>
              <Setter Property="Background"
                      TargetName="templateRoot"
                      Value="{StaticResource ComboBox.MouseOver.Background}" />
              <Setter Property="BorderBrush"
                      TargetName="templateRoot"
                      Value="{StaticResource ComboBox.MouseOver.Border}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}"
                           Value="true" />
                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                           Value="true" />
              </MultiDataTrigger.Conditions>
              <Setter Property="Background"
                      TargetName="templateRoot"
                      Value="{StaticResource ComboBox.MouseOver.Editable.Background}" />
              <Setter Property="BorderBrush"
                      TargetName="templateRoot"
                      Value="{StaticResource ComboBox.MouseOver.Editable.Border}" />
              <Setter Property="Background"
                      TargetName="splitBorder"
                      Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}" />
              <Setter Property="BorderBrush"
                      TargetName="splitBorder"
                      Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}" />
            </MultiDataTrigger>
            <Trigger Property="IsPressed"
                     Value="true">
              <Setter Property="Fill"
                      TargetName="arrow"
                      Value="{StaticResource ComboBox.Pressed.Glyph}" />
            </Trigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}"
                           Value="true" />
                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                           Value="false" />
              </MultiDataTrigger.Conditions>
              <Setter Property="Background"
                      TargetName="templateRoot"
                      Value="{StaticResource ComboBox.Pressed.Background}" />
              <Setter Property="BorderBrush"
                      TargetName="templateRoot"
                      Value="{StaticResource ComboBox.Pressed.Border}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}"
                           Value="true" />
                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                           Value="true" />
              </MultiDataTrigger.Conditions>
              <Setter Property="Background"
                      TargetName="templateRoot"
                      Value="{StaticResource ComboBox.Pressed.Editable.Background}" />
              <Setter Property="BorderBrush"
                      TargetName="templateRoot"
                      Value="{StaticResource ComboBox.Pressed.Editable.Border}" />
              <Setter Property="Background"
                      TargetName="splitBorder"
                      Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}" />
              <Setter Property="BorderBrush"
                      TargetName="splitBorder"
                      Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}" />
            </MultiDataTrigger>
            <Trigger Property="IsEnabled"
                     Value="false">
              <Setter Property="Fill"
                      TargetName="arrow"
                      Value="{StaticResource ComboBox.Disabled.Glyph}" />
            </Trigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}"
                           Value="false" />
                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                           Value="false" />
              </MultiDataTrigger.Conditions>
              <Setter Property="Background"
                      TargetName="templateRoot"
                      Value="{StaticResource ComboBox.Disabled.Background}" />
              <Setter Property="BorderBrush"
                      TargetName="templateRoot"
                      Value="{StaticResource ComboBox.Disabled.Border}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}"
                           Value="false" />
                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                           Value="true" />
              </MultiDataTrigger.Conditions>
              <Setter Property="Background"
                      TargetName="templateRoot"
                      Value="{StaticResource ComboBox.Disabled.Editable.Background}" />
              <Setter Property="BorderBrush"
                      TargetName="templateRoot"
                      Value="{StaticResource ComboBox.Disabled.Editable.Border}" />
              <Setter Property="Background"
                      TargetName="splitBorder"
                      Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}" />
              <Setter Property="BorderBrush"
                      TargetName="splitBorder"
                      Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}" />
            </MultiDataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ComboBoxClearButton -->
  <Style x:Key="ComboBoxClearButton"
         TargetType="{x:Type ButtonBase}">
    <Setter Property="OverridesDefaultStyle"
            Value="true" />
    <Setter Property="IsTabStop"
            Value="false" />
    <Setter Property="Focusable"
            Value="false" />
    <Setter Property="ClickMode"
            Value="Press" />
    <Setter Property="IsEnabled"
            Value="true" />
    <EventSetter Event="Click"
                 Handler="ClearButton_Click" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ButtonBase}">
          <Border x:Name="clearButtonBorder"
                  BorderBrush="Transparent"
                  BorderThickness="1"
                  HorizontalAlignment="Right"
                  Background="Transparent"
                  Margin="0"
                  SnapsToDevicePixels="true"
                  Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
            <Border.Style>
              <Style TargetType="Border">
                <Setter Property="Visibility"
                        Value="Collapsed" />
              </Style>
            </Border.Style>
            <Path x:Name="cross"
                  Data="M 0,0 L 5.3334,5.3334 M 5.3334,0 L0,5.3334"
                  Stroke="{StaticResource ComboBox.Static.Glyph}"
                  HorizontalAlignment="Center"
                  Margin="0"
                  VerticalAlignment="Center" />
          </Border>
          <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(utils:ComboBoxBehavior.IsNullable), RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                         Value="true">
              <Setter Property="Visibility"
                      TargetName="clearButtonBorder"
                      Value="Visible" />
            </DataTrigger>
            <Trigger Property="IsMouseOver"
                     Value="true">
              <Setter Property="Stroke"
                      TargetName="cross"
                      Value="{StaticResource ComboBox.MouseOver.ClearButtonGlyph}" />
            </Trigger>
            <Trigger Property="IsPressed"
                     Value="true">
              <Setter Property="Stroke"
                      TargetName="cross"
                      Value="{StaticResource ComboBox.MouseOver.ClearButtonClick}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ComboBoxTemplate -->
  <ControlTemplate x:Key="ComboBoxTemplate"
                   TargetType="{x:Type ComboBox}">
    <Grid x:Name="templateRoot"
          SnapsToDevicePixels="true">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*" />
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                          Width="0" />
      </Grid.ColumnDefinitions>
      <Popup x:Name="PART_Popup"
             AllowsTransparency="true"
             Grid.ColumnSpan="2"
             IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
             Margin="1"
             PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
             Placement="Bottom">
        <theme:SystemDropShadowChrome x:Name="shadow"
                                      Color="Transparent"
                                      MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                      MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
          <Border x:Name="dropDownBorder"
                  BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
                  BorderThickness="1"
                  Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
            <ScrollViewer x:Name="DropDownScrollViewer">
              <Grid x:Name="grid"
                    RenderOptions.ClearTypeHint="Enabled">
                <Canvas x:Name="canvas"
                        HorizontalAlignment="Left"
                        Height="0"
                        VerticalAlignment="Top"
                        Width="0">
                  <Rectangle x:Name="opaqueRect"
                             Fill="{Binding Background, ElementName=dropDownBorder}"
                             Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                             Width="{Binding ActualWidth, ElementName=dropDownBorder}" />
                </Canvas>
                <ItemsPresenter x:Name="ItemsPresenter"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
              </Grid>
            </ScrollViewer>
          </Border>
        </theme:SystemDropShadowChrome>
      </Popup>
      <ToggleButton x:Name="toggleButton"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Background="{TemplateBinding Background}"
                    Grid.ColumnSpan="3"
                    IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                    Style="{StaticResource ComboBoxToggleButton}" />
      <ContentPresenter x:Name="contentPresenter"
                        ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                        ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                        Content="{TemplateBinding SelectionBoxItem}"
                        ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        IsHitTestVisible="false"
                        Margin="{TemplateBinding Padding}"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
      <Button x:Name="clearButton"
              Grid.Column="1"
              Style="{StaticResource ComboBoxClearButton}" />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="HasDropShadow"
               SourceName="PART_Popup"
               Value="true">
        <Setter Property="Margin"
                TargetName="shadow"
                Value="0,0,5,5" />
        <Setter Property="Color"
                TargetName="shadow"
                Value="#71000000" />
      </Trigger>
      <Trigger Property="HasItems"
               Value="false">
        <Setter Property="Height"
                TargetName="dropDownBorder"
                Value="95" />
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsGrouping"
                     Value="true" />
          <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping"
                     Value="false" />
        </MultiTrigger.Conditions>
        <Setter Property="ScrollViewer.CanContentScroll"
                Value="false" />
      </MultiTrigger>
      <Trigger Property="ScrollViewer.CanContentScroll"
               SourceName="DropDownScrollViewer"
               Value="false">
        <Setter Property="Canvas.Top"
                TargetName="opaqueRect"
                Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
        <Setter Property="Canvas.Left"
                TargetName="opaqueRect"
                Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <!-- ComboBoxEditableTextBox -->
  <Style x:Key="ComboBoxEditableTextBox"
         TargetType="{x:Type TextBox}">
    <Setter Property="OverridesDefaultStyle"
            Value="true" />
    <Setter Property="AllowDrop"
            Value="true" />
    <Setter Property="MinWidth"
            Value="0" />
    <Setter Property="MinHeight"
            Value="0" />
    <Setter Property="FocusVisualStyle"
            Value="{x:Null}" />
    <Setter Property="ScrollViewer.PanningMode"
            Value="VerticalFirst" />
    <Setter Property="Stylus.IsFlicksEnabled"
            Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TextBox}">
          <ScrollViewer x:Name="PART_ContentHost"
                        Background="Transparent"
                        Focusable="false"
                        HorizontalScrollBarVisibility="Hidden"
                        VerticalScrollBarVisibility="Hidden" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>


  <!-- ComboBoxEditableTemplate -->
  <ControlTemplate x:Key="ComboBoxEditableTemplate"
                   TargetType="{x:Type ComboBox}">
    <Grid x:Name="templateRoot"
          SnapsToDevicePixels="true">
      <Popup x:Name="PART_Popup"
             AllowsTransparency="true"
             Grid.ColumnSpan="2"
             IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
             PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
             Placement="Bottom">
        <theme:SystemDropShadowChrome x:Name="shadow"
                                      Color="Transparent"
                                      MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                      MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
          <Border x:Name="dropDownBorder"
                  BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
                  BorderThickness="1"
                  Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
            <ScrollViewer x:Name="DropDownScrollViewer">
              <Grid x:Name="grid"
                    RenderOptions.ClearTypeHint="Enabled">
                <Canvas x:Name="canvas"
                        HorizontalAlignment="Left"
                        Height="0"
                        VerticalAlignment="Top"
                        Width="0">
                  <Rectangle x:Name="opaqueRect"
                             Fill="{Binding Background, ElementName=dropDownBorder}"
                             Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                             Width="{Binding ActualWidth, ElementName=dropDownBorder}" />
                </Canvas>
                <ItemsPresenter x:Name="ItemsPresenter"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
              </Grid>
            </ScrollViewer>
          </Border>
        </theme:SystemDropShadowChrome>
      </Popup>
      <Border x:Name="border"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              Background="{TemplateBinding Background}">
        <Grid x:Name="controlGrid">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="auto" />
          </Grid.ColumnDefinitions>
          <Button x:Name="clearButton"
                  Grid.Column="2"
                  Style="{StaticResource ComboBoxClearButton}" />
          <ToggleButton x:Name="toggleButton"
                        Grid.Column="2"
                        IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                        Style="{StaticResource ComboBoxToggleButton}"
                        MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                        Visibility="Collapsed" />
          <Border x:Name="textBorder"
                  Background="{StaticResource TextBox.Static.Background}"
                  Margin="{TemplateBinding BorderThickness}">
            <TextBox x:Name="PART_EditableTextBox"
                     HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                     IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"
                     Margin="{TemplateBinding Padding}"
                     Style="{StaticResource ComboBoxEditableTextBox}"
                     VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
          </Border>
        </Grid>
      </Border>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="IsEnabled"
               Value="false">
        <Setter Property="Opacity"
                TargetName="border"
                Value="0.56" />
      </Trigger>
      <Trigger Property="IsKeyboardFocusWithin"
               Value="true">
        <Setter Property="Foreground"
                Value="Black" />
        <Setter TargetName="toggleButton"
                Property="Visibility"
                Value="Visible" />
      </Trigger>
      <Trigger Property="HasDropShadow"
               SourceName="PART_Popup"
               Value="true">
        <Setter Property="Margin"
                TargetName="shadow"
                Value="0,0,5,5" />
        <Setter Property="Color"
                TargetName="shadow"
                Value="#71000000" />
      </Trigger>
      <Trigger Property="HasItems"
               Value="false">
        <Setter Property="Height"
                TargetName="dropDownBorder"
                Value="95" />
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsGrouping"
                     Value="true" />
          <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping"
                     Value="false" />
        </MultiTrigger.Conditions>
        <Setter Property="ScrollViewer.CanContentScroll"
                Value="false" />
      </MultiTrigger>
      <Trigger Property="ScrollViewer.CanContentScroll"
               SourceName="DropDownScrollViewer"
               Value="false">
        <Setter Property="Canvas.Top"
                TargetName="opaqueRect"
                Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
        <Setter Property="Canvas.Left"
                TargetName="opaqueRect"
                Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <Style x:Key="MyComboBoxItem"
         TargetType="{x:Type ComboBoxItem}"
         BasedOn="{StaticResource {x:Type ComboBoxItem}}">
    <EventSetter Event="PreviewMouseLeftButtonDown"
                 Handler="ComboBoxItem_PreviewMouseLeftButtonDown" />
  </Style>

  <!-- MyComboBoxStyle -->
  <Style x:Key="MyComboBoxStyle"
         TargetType="{x:Type ComboBox}">
    <Setter Property="FocusVisualStyle"
            Value="{StaticResource FocusVisual}" />
    <Setter Property="Background"
            Value="{StaticResource ComboBox.Static.Background}" />
    <Setter Property="BorderBrush"
            Value="{StaticResource ComboBox.Static.Border}" />
    <Setter Property="Foreground"
            Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
    <Setter Property="BorderThickness"
            Value="1" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
            Value="Auto" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
            Value="Auto" />
    <Setter Property="Padding"
            Value="6,3,5,3" />
    <Setter Property="ScrollViewer.CanContentScroll"
            Value="true" />
    <Setter Property="ScrollViewer.PanningMode"
            Value="Both" />
    <Setter Property="Stylus.IsFlicksEnabled"
            Value="False" />
    <Setter Property="ItemContainerStyle"
            Value="{StaticResource MyComboBoxItem}" />
    <Setter Property="Template"
            Value="{StaticResource ComboBoxTemplate}" />
    <Style.Triggers>
      <Trigger Property="IsEditable"
               Value="true">
        <Setter Property="IsTabStop"
                Value="false" />
        <Setter Property="Padding"
                Value="2" />
        <Setter Property="Background"
                Value="{StaticResource ComboBox.Static.Editable.Background}" />
        <Setter Property="Template"
                Value="{StaticResource ComboBoxEditableTemplate}" />
      </Trigger>
    </Style.Triggers>
  </Style>

  <Style TargetType="{x:Type ComboBox}"
         BasedOn="{StaticResource MyComboBoxStyle}" />

</ResourceDictionary>