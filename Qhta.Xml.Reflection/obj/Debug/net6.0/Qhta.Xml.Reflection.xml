<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Qhta.Xml.Reflection</name>
    </assembly>
    <members>
        <member name="P:Qhta.Xml.Reflection.ContentItemInfo.StoresReferences">
            <summary>
              If a collection of objects stores references only.
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.ContentItemInfo.KnownItemTypes">
            <summary>
              Known types for collection items.
            </summary>
        </member>
        <member name="T:Qhta.Xml.Reflection.SerializationItemInfo">
            <summary>
              Info of an array property item
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationItemInfo.TypeInfo">
            <summary>
              Refers to the existing TypeInfo
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationItemInfo.DictionaryInfo">
            <summary>
              Used when this info is a dictionary item info
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationItemInfo.KeyName">
            <summary>
              Used when this info is a dictionary item info
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationItemInfo.KeyTypeInfo">
            <summary>
              Used when this info is a dictionary item info
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationItemInfo.ValueTypeInfo">
            <summary>
              Used when this info is a dictionary item info
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationItemInfo.Value">
            <summary>
              Preset value of the item
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationItemInfo.AddMethod">
            <summary>
              Used to add item to collection or dictionary
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationItemInfo.XmlName">
            <summary>
              Name of the Xml element
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationItemInfo.XmlNamespace">
            <summary>
              XmlNamespace of the element
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationItemInfo.ClrNamespace">
            <summary>
              ClrNamespace of the element
            </summary>
        </member>
        <member name="T:Qhta.Xml.Reflection.SerializationMemberInfo">
            <summary>
              Represents the information about property or field needed for serialization/deserialization.
            </summary>
        </member>
        <member name="M:Qhta.Xml.Reflection.SerializationMemberInfo.#ctor(System.String,System.Reflection.MemberInfo,System.Int32)">
            <summary>
              Constructor with parameters.
            </summary>
            <param name="name">Attribute or element name used for serialization></param>
            <param name="memberInfo">Applied member info. It can be either PropertyInfo or FieldInfo</param>
            <param name="order">Needed to sort the order for serialization</param>
        </member>
        <member name="M:Qhta.Xml.Reflection.SerializationMemberInfo.#ctor(Qhta.Xml.Reflection.QualifiedName,System.Reflection.MemberInfo,System.Int32)">
            <summary>
              Constructor with parameters.
            </summary>
            <param name="name">Attribute or element name used for serialization></param>
            <param name="memberInfo">Applied member info. It can be either PropertyInfo or FieldInfo</param>
            <param name="order">Needed to sort the order for serialization</param>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationMemberInfo.Order">
            <summary>
              Needed to sort the order of properties for serialization.
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationMemberInfo.Member">
            <summary>
              Applied member info.
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationMemberInfo.DataType">
            <summary>
              XSD standard data type for simple value text conversion.
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationMemberInfo.Format">
            <summary>
              Specific format for text conversion.
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationMemberInfo.Culture">
            <summary>
              Specific culture info for text conversion.
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationMemberInfo.IsNullable">
            <summary>
              Specifies if a member is nullable.
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationMemberInfo.IsReference">
            <summary>
              Specifies if  member is serialized as a reference to an object.
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationMemberInfo.DefaultValue">
            <summary>
              Specifies a default value (for simple types only) which is not serialized.
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationMemberInfo.ValueType">
            <summary>
              Applied type info of the member value.
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationMemberInfo.TypeConverter">
            <summary>
              Used for conversion value from/to string.
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationMemberInfo.XmlConverter">
            <summary>
              Used for conversion value from/to xml.
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationMemberInfo.CheckMethod">
            <summary>
              A method used to specify if a member should be serialized at run-time.
              The method should be a parameterless function of type boolean.
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationMemberInfo.KnownSubtypes">
            <summary>
              If a valueType can be substituted by subclasses then these classes are listed here.
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationMemberInfo.IsCollection">
            <summary>
              If a type is serialized as a collection but not as a dictionary
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationMemberInfo.IsDictionary">
            <summary>
              If a type is serialized as a dictionary but not as a collection
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationMemberInfo.ContentInfo">
            <summary>
              Optional collection info filled if a member is an array, collection or dictionary.
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationMemberInfo.XmlName">
            <summary>
              Attribute or element name used for serialization.
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationMemberInfo.XmlNamespace">
            <summary>
              Attribute or element XML namespace used for serialization.
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationMemberInfo.ClrNamespace">
            <summary>
              ClrNamespace of the property or field.
            </summary>
        </member>
        <member name="M:Qhta.Xml.Reflection.SerializationMemberInfo.GetKnownSubtypes">
            <summary>
              Get KnownSubtypes as saved or from ValueType.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Qhta.Xml.Reflection.SerializationMemberInfo.GetCollectionInfo">
            <summary>
              Get CollectionInfo as saved or from ValueType.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationTypeInfo.KnownConstructor">
            <summary>
              A public constructor to invoke while deserialization
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationTypeInfo.TypeConverter">
            <summary>
              Converter to/from string value.
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationTypeInfo.XmlConverter">
            <summary>
              Converter to read/write XML.
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationTypeInfo.MembersAsAttributes">
            <summary>
              Known properties to serialize as XML attributes.
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationTypeInfo.MembersAsElements">
            <summary>
              Known properties to serialize as XML elements.
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationTypeInfo.ContentProperty">
            <summary>
              Known property to accept content of XmlElement.
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationTypeInfo.TextProperty">
            <summary>
              Known property to accept text content of XmlElement.
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationTypeInfo.KnownSubtypes">
            <summary>
              If a class can be substituted by subclasses then these classes are listed here.
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationTypeInfo.IsCollection">
            <summary>
              Specifies if a type is serialized as a collection but not as a dictionary.
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationTypeInfo.IsDictionary">
            <summary>
              Specifies If a type is serialized as a dictionary but not as a collection.
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationTypeInfo.ContentInfo">
            <summary>
              Optional collection info filled if a property is an array, collection or dictionary
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationTypeInfo.XmlName">
            <summary>
              Name of the Xml element
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationTypeInfo.XmlNamespace">
            <summary>
              XmlNamespace of the element
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationTypeInfo.ClrNamespace">
            <summary>
              ClrNamespace of the element
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationTypeInfo.Type">
            <summary>
              Mapped type
            </summary>
        </member>
        <member name="T:Qhta.Xml.Reflection.TypeInfoCollection`1">
            <summary>
            Collection of type name info, which is indexed by type, long name and by short name.
            </summary>
            <typeparam name="TypeNameInfo">The type of the ype name information.</typeparam>
        </member>
        <member name="P:Qhta.Xml.Reflection.TypeInfoCollection`1.TypeIndexedItems">
            <summary>
            Dictionary of items indexed by type.
            </summary>
            <value>
            The type indexed items.
            </value>
        </member>
        <member name="P:Qhta.Xml.Reflection.TypeInfoCollection`1.FullNameIndexedItems">
            <summary>
            Dictionary of items indexed by full name.
            </summary>
            <value>
            The full name indexed items.
            </value>
        </member>
        <member name="P:Qhta.Xml.Reflection.TypeInfoCollection`1.ShortNameIndexedItems">
            <summary>
            Dictionary of items indexed by short name. 
            If some types have same names (and different namespaces), 
            they are registered in <see cref="P:Qhta.Xml.Reflection.TypeInfoCollection`1.DuplicatedShortNames"/>
            </summary>
            <value>
            The short name indexed items.
            </value>
        </member>
        <member name="P:Qhta.Xml.Reflection.TypeInfoCollection`1.DuplicatedShortNames">
            <summary>
            Gets the duplicated short type names.
            The concrete classes can be found in <see cref="P:Qhta.Xml.Reflection.TypeInfoCollection`1.FullNameIndexedItems"/>
            </summary>
            <value>
            The duplicated short names.
            </value>
        </member>
        <member name="M:Qhta.Xml.Reflection.TypeInfoCollection`1.Add(`0)">
            <summary>
            Adds an item to collection.
            </summary>
            <param name="item">The object to add. />.</param>
        </member>
        <member name="M:Qhta.Xml.Reflection.TypeInfoCollection`1.Clear">
            <summary>
            Removes all items from the collection.
            </summary>
        </member>
        <member name="M:Qhta.Xml.Reflection.TypeInfoCollection`1.Contains(`0)">
            <summary>
            Determines whether the collection contains the object.
            </summary>
            <param name="item">The object to locate.</param>
        </member>
        <member name="M:Qhta.Xml.Reflection.TypeInfoCollection`1.CopyTo(`0[],System.Int32)">
            <summary>
            Copies the elements of the collection to an array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from collection. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array" /> at which copying begins.</param>
        </member>
        <member name="M:Qhta.Xml.Reflection.TypeInfoCollection`1.Remove(`0)">
            <summary>
            Removes the  occurrence of a specific object from the collection />.
            </summary>
            <param name="item">The object to remove from the collection.</param>
            <returns>
              <see langword="true" /> if <paramref name="item" /> was successfully removed from the collection; otherwise, <see langword="false" />. 
              This method also returns <see langword="false" /> if <paramref name="item" /> is not found in the original collection.
            </returns>
        </member>
        <member name="P:Qhta.Xml.Reflection.TypeInfoCollection`1.Count">
            <summary>
            Gets the number of elements contained in the collection.
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.TypeInfoCollection`1.IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read-only.
            </summary>
        </member>
        <member name="M:Qhta.Xml.Reflection.TypeInfoCollection`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            An enumerator that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Qhta.Xml.Reflection.TypeInfoCollection`1.Equals(Qhta.Xml.Reflection.TypeInfoCollection{`0})">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
              <see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; 
              otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:Qhta.Xml.Reflection.TypeInfoCollection`1.TryGetValue(System.Type,`0@)">
            <summary>
            Tries to get the element from the collection indexed by type.
            </summary>
            <param name="type">The type of the searched element.</param>
            <param name="typeInfo">variable to hold the element id found.</param>
            <returns>
              <see langword="true" /> if the element is found; otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:Qhta.Xml.Reflection.TypeInfoCollection`1.TryGetValue(Qhta.Xml.Reflection.QualifiedName,`0@)">
            <summary>
            Tries to get the element from the collection indexed by full name.
            </summary>
            <param name="qualifiedName">The qualified name of the searched element.</param>
            <param name="typeInfo">variable to hold the element id found.</param>
            <returns>
              <see langword="true" /> if the element is found; otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:Qhta.Xml.Reflection.TypeInfoCollection`1.TryGetValue(Qhta.Xml.XmlQualifiedTagName,`0@)">
            <summary>
            Tries to get the element from the collection indexed by full or short name.
            First the full name index is searched, and if not found then the short name index.
            </summary>
            <param name="tag">The xml qualified tag name of the searched element.</param>
            <param name="typeInfo">variable to hold the element id found.</param>
            <returns>
              <see langword="true" /> if the element is found; otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:Qhta.Xml.Reflection.TypeInfoCollection`1.TryGetValue(System.String,`0@)">
            <summary>
            Tries to get the element from the collection indexed by full or short name.
            First the full name index is searched, and if not found then the short name index.
            </summary>
            <param name="name">Full or short name of the searched element.</param>
            <param name="typeInfo">variable to hold the element id found.</param>
            <returns>
              <see langword="true" /> if the element is found; otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:Qhta.Xml.Reflection.TypeInfoCollection`1.FindTypeInfo(System.Type)">
            <summary>
            Finds the type information by querying the collection.
            </summary>
            <param name="itemType">Type of the item.</param>
            <returns></returns>
        </member>
        <member name="P:Qhta.Xml.Reflection.TypeInfoCollection`1.Keys">
            <summary>
             Type keys stored in collection
            </summary>
            <value>
            The keys.
            </value>
        </member>
    </members>
</doc>
