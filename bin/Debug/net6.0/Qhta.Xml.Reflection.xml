<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Qhta.Xml.Reflection</name>
    </assembly>
    <members>
        <member name="T:Qhta.Xml.Reflection.ContentItemInfo">
            <summary>
            Information on class item that represents object content
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.ContentItemInfo.StoresReferences">
            <summary>
              If a collection of objects stores references only.
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.ContentItemInfo.KnownItemTypes">
            <summary>
              Known types for collection items.
            </summary>
        </member>
        <member name="M:Qhta.Xml.Reflection.ContentItemInfo.Equals(Qhta.Xml.Reflection.ContentItemInfo)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
              <see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="T:Qhta.Xml.Reflection.DictionaryInfo">
            <summary>
            Represents information on content item that is a dictionary
            </summary>
            <seealso cref="T:Qhta.Xml.Reflection.ContentItemInfo" />
        </member>
        <member name="P:Qhta.Xml.Reflection.DictionaryInfo.KeyTypeInfo">
            <summary>
            Gets or sets the key type information.
            </summary>
            <value>
            The key type information.
            </value>
        </member>
        <member name="P:Qhta.Xml.Reflection.DictionaryInfo.ValueTypeInfo">
            <summary>
            Gets or sets the value type information.
            </summary>
            <value>
            The value type information.
            </value>
        </member>
        <member name="P:Qhta.Xml.Reflection.DictionaryInfo.KeyName">
            <summary>
            Gets or sets the name of the key.
            </summary>
            <value>
            The name of the key.
            </value>
        </member>
        <member name="P:Qhta.Xml.Reflection.DictionaryInfo.KeyProperty">
            <summary>
            Gets or sets the key property.
            </summary>
            <value>
            The key property.
            </value>
        </member>
        <member name="T:Qhta.Xml.Reflection.IMembersDictionary">
            <summary>
            Interface for KnownMembersCollection to be used as a dictionary
            </summary>
        </member>
        <member name="M:Qhta.Xml.Reflection.IMembersDictionary.ContainsKey(Qhta.Xml.Reflection.QualifiedName)">
            <summary>
            Checkes if it contains a qualified name (name with namespace) as an item key.
            </summary>
            <param name="qualifiedName">QualifiedName to search</param>
            <returns><c>true</c> if name found, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Qhta.Xml.Reflection.IMembersDictionary.ContainsKey(System.String)">
            <summary>
            Checkes if it contains a simple name (without namespace) as an item key.
            </summary>
            <param name="name">Simple name to search</param>
            <returns><c>true</c> if name found, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Qhta.Xml.Reflection.IMembersDictionary.TryGetValue(Qhta.Xml.Reflection.QualifiedName,Qhta.Xml.Reflection.SerializationMemberInfo@)">
            <summary>
            Tries to get an item searching its qualified name (name with namespace).
            </summary>
            <param name="qualifiedName">QualifiedName to search</param>
            <param name="typeInfo">FoundSerializationMemberInfo (or null when not found).</param>
            <returns><c>true</c> if name found, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Qhta.Xml.Reflection.IMembersDictionary.TryGetValue(System.String,Qhta.Xml.Reflection.SerializationMemberInfo@)">
            <summary>
            Tries to get an item searching its simple name (without namespace).
            </summary>
            <param name="name">Simple name to search</param>
            <param name="typeInfo">FoundSerializationMemberInfo (or null when not found).</param>
            <returns><c>true</c> if name found, <c>false</c> otherwise.</returns>
        </member>
        <member name="T:Qhta.Xml.Reflection.INamedElement">
            <summary>
            Interface for an element that provides XML name, XML namespace, and ClrNamespace
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.INamedElement.XmlName">
            <summary>
            Gets the name of the XML element.
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.INamedElement.XmlNamespace">
            <summary>
            Gets the namespace of the XML element.
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.INamedElement.ClrNamespace">
            <summary>
            Gets the programming language namespace of the element.
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.INamedElement.QualifiedName">
            <summary>
            Gets the the qualified name (XmlName, XmlNamespace) of the element
            </summary>
        </member>
        <member name="T:Qhta.Xml.Reflection.ITypeNameInfo">
            <summary>
            Extension for INamedElement that provides a Type
            </summary>
            <seealso cref="T:Qhta.Xml.Reflection.INamedElement" />
        </member>
        <member name="P:Qhta.Xml.Reflection.ITypeNameInfo.Type">
            <summary>
            Gets the original type.
            </summary>
        </member>
        <member name="T:Qhta.Xml.Reflection.KnownItemTypesCollection">
            <summary>
            Named collection of serialization item info. Needed for serialization.
            </summary>
        </member>
        <member name="T:Qhta.Xml.Reflection.KnownMembersCollection">
            <summary>
            Named collection of serialization member info.
            </summary>
        </member>
        <member name="M:Qhta.Xml.Reflection.KnownMembersCollection.Dump(System.String,Qhta.Xml.Reflection.KnownNamespacesCollection)">
            <summary>
            Dumps collection to debug output window
            </summary>
            <param name="header">The header.</param>
            <param name="KnownNamespaces">The known namespaces.</param>
        </member>
        <member name="T:Qhta.Xml.Reflection.KnownNamespacesCollection">
            <summary>
            Named collection of xml namespace info
            </summary>
        </member>
        <member name="F:Qhta.Xml.Reflection.KnownNamespacesCollection.Items">
            <summary>
            String indexed items
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.KnownNamespacesCollection.ClrToXmlNamespace">
            <summary>
            Conversion dictionary from C# language namespace to xml namespace
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.KnownNamespacesCollection.XmlNamespaceToPrefix">
            <summary>
            Conversion dictionary from xml namespace to xml prefix
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.KnownNamespacesCollection.PrefixToXmlNamespace">
            <summary>
            Conversion dictionary from xml prefix to xml namespace
            </summary>
        </member>
        <member name="T:Qhta.Xml.Reflection.KnownTypesCollection">
            <summary>
            Named collection of serialization type info
            </summary>
        </member>
        <member name="M:Qhta.Xml.Reflection.KnownTypesCollection.#ctor(Qhta.Xml.Reflection.KnownNamespacesCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Qhta.Xml.Reflection.KnownTypesCollection"/> class.
            </summary>
            <param name="knownNamespaces">Known namespaces collection.</param>
        </member>
        <member name="M:Qhta.Xml.Reflection.KnownTypesCollection.Dump">
            <summary>
            Dumps this instance to debug output window
            </summary>
        </member>
        <member name="M:Qhta.Xml.Reflection.KnownTypesCollection.Dump(Qhta.Xml.Reflection.SerializationTypeInfo)">
            <summary>
            Dumps the specified type information to debug output window
            </summary>
            <param name="typeInfo">The type information.</param>
        </member>
        <member name="T:Qhta.Xml.Reflection.PropOrderComparer">
            <summary>
            Class to compare order of properties for serialization.
            </summary>
        </member>
        <member name="M:Qhta.Xml.Reflection.PropOrderComparer.Compare(Qhta.Xml.Reflection.SerializationMemberInfo,Qhta.Xml.Reflection.SerializationMemberInfo)">
            <summary>
            Compares two serialization member info objecst.
            </summary>
            <param name="x">The first object to compare.</param>
            <param name="y">The second object to compare.</param>
            <returns>
            A signed integer that indicates the relative values of <paramref name="x" /> and <paramref name="y" />, as shown in the following table.
            <list type="table"><listheader><term> Value</term><description> Meaning</description></listheader><item><term> Less than zero</term><description><paramref name="x" /> is less than <paramref name="y" />.</description></item><item><term> Zero</term><description><paramref name="x" /> equals <paramref name="y" />.</description></item><item><term> Greater than zero</term><description><paramref name="x" /> is greater than <paramref name="y" />.</description></item></list>
            </returns>
        </member>
        <member name="T:Qhta.Xml.Reflection.QualifiedName">
            <summary>
            Qualified name that contains a name and namespace
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.QualifiedName.Namespace">
            <summary>
            Gets or sets the namespace.
            </summary>
            <value>
            The namespace.
            </value>
        </member>
        <member name="P:Qhta.Xml.Reflection.QualifiedName.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="M:Qhta.Xml.Reflection.QualifiedName.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Qhta.Xml.Reflection.QualifiedName"/> struct.
            </summary>
        </member>
        <member name="M:Qhta.Xml.Reflection.QualifiedName.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Qhta.Xml.Reflection.QualifiedName"/> struct
            using compound name.
            </summary>
            <param name="compoundName">The string thas consists of namespace, colon and name.</param>
        </member>
        <member name="M:Qhta.Xml.Reflection.QualifiedName.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Qhta.Xml.Reflection.QualifiedName"/> struct.
            </summary>
            <param name="name">The name to init</param>
            <param name="nspace">The namespace to init</param>
        </member>
        <member name="M:Qhta.Xml.Reflection.QualifiedName.IsEmpty">
            <summary>
            Determines whether the name is an empty string.
            </summary>
            <returns>
              <c>true</c> if this instance is empty; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:Qhta.Xml.Reflection.QualifiedName.Empty">
            <summary>
            Gets the empty instance (with empty name).
            </summary>
            <value>
            The empty.
            </value>
        </member>
        <member name="M:Qhta.Xml.Reflection.QualifiedName.CompareTo(Qhta.Xml.Reflection.QualifiedName)">
            <summary>
            Compares namespace first, then name.
            </summary>
            <param name="other">An object to compare with this instance.</param>
            <returns>
            A value that indicates the relative order of the objects being compared. The return value has these meanings:
            <list type="table"><listheader><term> Value</term><description> Meaning</description></listheader><item><term> Less than zero</term><description> This instance precedes <paramref name="other" /> in the sort order.</description></item><item><term> Zero</term><description> This instance occurs in the same position in the sort order as <paramref name="other" />.</description></item><item><term> Greater than zero</term><description> This instance follows <paramref name="other" /> in the sort order.</description></item></list>
            </returns>
        </member>
        <member name="M:Qhta.Xml.Reflection.QualifiedName.ToString">
            <summary>
            Converts to string that consists of namespace, colon and name.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Qhta.Xml.Reflection.QualifiedName.op_Implicit(Qhta.Xml.Reflection.QualifiedName)~System.String">
            <summary>
            Performs an implicit conversion from <see cref="T:Qhta.Xml.Reflection.QualifiedName"/> to <see cref="T:System.String"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:Qhta.Xml.Reflection.QualifiedName.op_Implicit(System.String)~Qhta.Xml.Reflection.QualifiedName">
            <summary>
            Performs an implicit conversion from <see cref="T:System.String"/> to <see cref="T:Qhta.Xml.Reflection.QualifiedName"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="T:Qhta.Xml.Reflection.QualifiedNameTypeConverter">
            <summary>
            Converter needed for qualified name serialization
            </summary>
            <seealso cref="T:System.ComponentModel.TypeConverter" />
        </member>
        <member name="M:Qhta.Xml.Reflection.QualifiedNameTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type" /> that represents the type you want to convert from.</param>
            <returns>
              <see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:Qhta.Xml.Reflection.QualifiedNameTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture.</param>
            <param name="value">The <see cref="T:System.Object" /> to convert.</param>
            <returns>
            An <see cref="T:System.Object" /> that represents the converted value.
            </returns>
            <exception cref="T:System.NotSupportedException">Cannot convert {nameof(XmlQualifiedTagName)} from {value.GetType().Name}</exception>
        </member>
        <member name="M:Qhta.Xml.Reflection.QualifiedNameTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you want to convert to.</param>
            <returns>
              <see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:Qhta.Xml.Reflection.QualifiedNameTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo" />. If <see langword="null" /> is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object" /> to convert.</param>
            <param name="destinationType">The <see cref="T:System.Type" /> to convert the <paramref name="value" /> parameter to.</param>
            <returns>
            An <see cref="T:System.Object" /> that represents the converted value.
            </returns>
            <exception cref="T:System.NotSupportedException">Cannot convert {nameof(XmlQualifiedTagName)} to {destinationType.Name}</exception>
        </member>
        <member name="T:Qhta.Xml.Reflection.SerializationItemInfo">
            <summary>
              Info of an array property item
            </summary>
        </member>
        <member name="M:Qhta.Xml.Reflection.SerializationItemInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Qhta.Xml.Reflection.SerializationItemInfo"/> class.
            </summary>
        </member>
        <member name="M:Qhta.Xml.Reflection.SerializationItemInfo.#ctor(Qhta.Xml.Reflection.SerializationTypeInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Qhta.Xml.Reflection.SerializationItemInfo"/> class
            using serialization type info.
            </summary>
            <param name="itemTypeInfo">The type info.</param>
        </member>
        <member name="M:Qhta.Xml.Reflection.SerializationItemInfo.#ctor(System.String,Qhta.Xml.Reflection.SerializationTypeInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Qhta.Xml.Reflection.SerializationItemInfo"/> class
            using serialization type info with element name.
            </summary>
            <param name="elementName">Name of the element.</param>
            <param name="itemTypeInfo">The type info.</param>
        </member>
        <member name="M:Qhta.Xml.Reflection.SerializationItemInfo.#ctor(System.String,System.String,Qhta.Xml.Reflection.SerializationTypeInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Qhta.Xml.Reflection.SerializationItemInfo"/> class
            using serialization type info with element name and namespace.
            </summary>
            <param name="elementName">Name of the element.</param>
            <param name="xmlNamespace">Xml Uri namespace</param>
            <param name="itemTypeInfo">The type info.</param>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationItemInfo.TypeInfo">
            <summary>
              Refers to the existing TypeInfo
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationItemInfo.DictionaryInfo">
            <summary>
              Used when this info is a dictionary item info
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationItemInfo.KeyName">
            <summary>
              Used when this info is a dictionary item info
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationItemInfo.KeyTypeInfo">
            <summary>
              Used when this info is a dictionary item info
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationItemInfo.ValueTypeInfo">
            <summary>
              Used when this info is a dictionary item info
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationItemInfo.Value">
            <summary>
              Preset value of the item
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationItemInfo.AddMethod">
            <summary>
              Used to add item to collection or dictionary
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationItemInfo.XmlName">
            <summary>
              Name of the Xml element
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationItemInfo.XmlNamespace">
            <summary>
              XmlNamespace of the element
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationItemInfo.ClrNamespace">
            <summary>
              ClrNamespace of the element
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationItemInfo.Type">
            <summary>
            Gets the original type.
            </summary>
        </member>
        <member name="M:Qhta.Xml.Reflection.SerializationItemInfo.ToString">
            <summary>
            Converts to string in format "name(typename)".
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Qhta.Xml.Reflection.SerializationMemberInfo">
            <summary>
              Represents the information about property or field needed for serialization/deserialization.
            </summary>
        </member>
        <member name="M:Qhta.Xml.Reflection.SerializationMemberInfo.#ctor(Qhta.Xml.Reflection.SerializationTypeInfo,System.String,System.Reflection.MemberInfo,System.Int32)">
            <summary>
              Constructor with parameters.
            </summary>
            <param name="parentType">A type to hold this member</param>
            <param name="name">Attribute or element name used for serialization></param>
            <param name="memberInfo">Applied member info. It can be either PropertyInfo or FieldInfo</param>
            <param name="order">Needed to sort the order for serialization</param>
        </member>
        <member name="M:Qhta.Xml.Reflection.SerializationMemberInfo.#ctor(Qhta.Xml.Reflection.SerializationTypeInfo,Qhta.Xml.Reflection.QualifiedName,System.Reflection.MemberInfo,System.Int32)">
            <summary>
              Constructor with parameters.
            </summary>
            <param name="parentType">A type to hold this member</param>
            <param name="name">Attribute or element name used for serialization></param>
            <param name="memberInfo">Applied member info. It can be either PropertyInfo or FieldInfo</param>
            <param name="order">Needed to sort the order for serialization</param>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationMemberInfo.ParentType">
            <summary>
            A serialization info for the type where this member belongs.
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationMemberInfo.IsField">
            <summary>
            Gets a value indicating whether the member is a field of some class
            </summary>
            <value>
              <c>true</c> if this instance is field; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationMemberInfo.Field">
            <summary>
            Converts the member to field reflection info
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationMemberInfo.Property">
            <summary>
            Converts the member to property reflection info
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationMemberInfo.MemberType">
            <summary>
            Gets the member type (field type or property type).
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationMemberInfo.CanWrite">
            <summary>
            Gets a value indicating whether the member can be written in a class instance.
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationMemberInfo.IsAttribute">
            <summary>
            Specifies whether serialization as XML attribute is preferred over XML element.
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationMemberInfo.Order">
            <summary>
              Needed to sort the order of properties for serialization.
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationMemberInfo.Member">
            <summary>
              Applied member info.
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationMemberInfo.DataType">
            <summary>
              XSD standard data type for simple value text conversion.
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationMemberInfo.Format">
            <summary>
              Specific format for text conversion.
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationMemberInfo.Culture">
            <summary>
              Specific culture info for text conversion.
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationMemberInfo.IsContentElement">
            <summary>
              Specifies whether a member is serialized as parent element content
              (without xml property tag).
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationMemberInfo.IsNullable">
            <summary>
              Specifies whether a member is nullable.
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationMemberInfo.IsReference">
            <summary>
              Specifies whether a member is serialized as a reference to an object.
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationMemberInfo.DefaultValue">
            <summary>
              Specifies a default value (for simple types only) which is not serialized.
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationMemberInfo.ValueType">
            <summary>
              Applied type info of the member value.
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationMemberInfo.TypeConverter">
            <summary>
              Used for conversion value from/to string.
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationMemberInfo.XmlConverter">
            <summary>
              Used for conversion value from/to xml.
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationMemberInfo.CheckMethod">
            <summary>
              A method used to specify if a member should be serialized at run-time.
              The method should be a parameterless function of type boolean.
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationMemberInfo.HasCheckMethod">
            <summary>
            Specifies whether this instance has check method.
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationMemberInfo.IsPolymorfic">
            <summary>
            Gets a value indicating whether this instance has known subtypes.
            </summary>
            <value>
              <c>true</c> if this instance is polymorfic; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationMemberInfo.KnownSubtypes">
            <summary>
              If a valueType can be substituted by subclasses then these classes are listed here.
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationMemberInfo.IsCollection">
            <summary>
              Specifies whether the type is serialized as a collection but not as a dictionary
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationMemberInfo.IsDictionary">
            <summary>
              Specifies whether the type is serialized as a dictionary but not as a collection
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationMemberInfo.IsObject">
            <summary>
              Specifies whether the type instance must be serialized as an object, not a simple collection.
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationMemberInfo.ContentInfo">
            <summary>
              Optional collection info filled if a member is an array, collection or dictionary.
            </summary>
        </member>
        <member name="M:Qhta.Xml.Reflection.SerializationMemberInfo.CompareTo(Qhta.Xml.Reflection.SerializationMemberInfo)">
            <summary>
            Compares the order of two instances. Allows two items of the same order to occur in dictionary.
            </summary>
            <param name="other">An object to compare with this instance.</param>
            <returns>
            A value that indicates the relative order of the objects being compared. The return value has these meanings:
            <list type="table"><listheader><term> Value</term><description> Meaning</description></listheader><item><term> Less than zero</term><description> This instance precedes <paramref name="other" /> in the sort order.</description></item><item><term> Zero</term><description> This instance occurs in the same position in the sort order as <paramref name="other" />.</description></item><item><term> Greater than zero</term><description> This instance follows <paramref name="other" /> in the sort order.</description></item></list>
            </returns>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationMemberInfo.XmlName">
            <summary>
              Attribute or element name used for serialization.
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationMemberInfo.XmlNamespace">
            <summary>
              Attribute or element XML namespace used for serialization.
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationMemberInfo.ClrNamespace">
            <summary>
              ClrNamespace of the property or field.
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationMemberInfo.QualifiedName">
            <summary>
            Gets the the qualified name (XmlName, XmlNamespace) of the element.
            </summary>
        </member>
        <member name="M:Qhta.Xml.Reflection.SerializationMemberInfo.GetValue(System.Object)">
            <summary>
            Gets the value of the member (field value or property value).
            </summary>
            <param name="obj">The object.</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.Xml.Reflection.SerializationMemberInfo.SetValue(System.Object,System.Object)">
            <summary>
            Sets the value of the member (field value or property value).
            </summary>
            <param name="obj">The object.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Qhta.Xml.Reflection.SerializationMemberInfo.GetKnownSubtypes">
            <summary>
              Gets known subtypes as saved or from ValueType.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Qhta.Xml.Reflection.SerializationMemberInfo.GetCollectionInfo">
            <summary>
              Gets CollectionInfo as saved or from ValueType.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Qhta.Xml.Reflection.SerializationMemberInfo.ToString">
            <summary>
            Converts to string in format "name(membername)"
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Qhta.Xml.Reflection.SerializationMemberInfo.GetTypeConverter">
            <summary>
            Gets the type converter to serialize/deserialize as a string.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Qhta.Xml.Reflection.SerializationTypeInfo">
            <summary>
            Information needed for type serialization
            </summary>
            <seealso cref="T:Qhta.Xml.Reflection.ITypeNameInfo" />
            <seealso cref="T:Qhta.Xml.Reflection.INamedElement" />
        </member>
        <member name="M:Qhta.Xml.Reflection.SerializationTypeInfo.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Qhta.Xml.Reflection.SerializationTypeInfo"/> class.
            </summary>
            <param name="aType">a type.</param>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationTypeInfo.HasKnownConstructor">
            <summary>
            Gets a value indicating whether this instance has known constructor.
            </summary>
            <value>
              <c>true</c> if this instance has known constructor; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationTypeInfo.KnownConstructor">
            <summary>
            A public constructor info to invoke while deserialization
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationTypeInfo.TypeConverter">
            <summary>
              Converter to/from string value.
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationTypeInfo.XmlConverter">
            <summary>
              Converter to read/write XML.
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationTypeInfo.KnownMembers">
            <summary>
              Known properties to serialize as XML attributes.
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationTypeInfo.MembersAsAttributes">
            <summary>
              Known properties to serialize as XML attributes.
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationTypeInfo.MembersAsElements">
            <summary>
              Known properties to serialize as XML elements.
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationTypeInfo.TextProperty">
            <summary>
              Known property to accept text content of XmlElement.
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationTypeInfo.IsSealed">
            <summary>
            Specifies that a derived types can't occur when serializing object values.
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationTypeInfo.KnownSubtypes">
            <summary>
              If a class can be substituted by subclasses then these classes are listed here.
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationTypeInfo.IsCollection">
            <summary>
              Specifies whether the type is serialized as a collection but not as a dictionary.
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationTypeInfo.IsDictionary">
            <summary>
              Specifies whether the type is serialized as a dictionary but not as a collection.
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationTypeInfo.ContentProperty">
            <summary>
              Known property to accept content of XmlElement.
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationTypeInfo.IsObject">
            <summary>
              Specifies whether the type instance must be serialized as an object, not a simple collection.
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationTypeInfo.ContentInfo">
            <summary>
              Optional collection info filled if a property is an array, collection or dictionary
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationTypeInfo.XmlName">
            <summary>
              Name of the Xml element
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationTypeInfo.XmlNamespace">
            <summary>
              XmlNamespace of the element
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationTypeInfo.ClrNamespace">
            <summary>
              ClrNamespace of the element
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.SerializationTypeInfo.Type">
            <summary>
              Mapped type
            </summary>
        </member>
        <member name="M:Qhta.Xml.Reflection.SerializationTypeInfo.ShouldSerializeType">
            <summary>
            Gets the value that indicates whether the type should be serialized.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Qhta.Xml.Reflection.SerializationTypeInfo.ShouldSerializePropertiesAsAttributes">
            <summary>
            Gets the value that indicates whether there are properties to be serialized as xml attributes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Qhta.Xml.Reflection.SerializationTypeInfo.ShouldSerializePropertiesAsElements">
            <summary>
            Gets the value that indicates whether there are properties to be serialized as xml properties.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Qhta.Xml.Reflection.SerializationTypeInfo.ToString">
            <summary>
            Converts to string in format "namespace:name"
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Qhta.Xml.Reflection.TypeInfoCollection`1">
            <summary>
            Collection of type name info, which is indexed by type, long name and by short name.
            </summary>
            <typeparam name="TypeNameInfo">The type of the ype name information.</typeparam>
        </member>
        <member name="P:Qhta.Xml.Reflection.TypeInfoCollection`1.TypeIndexedItems">
            <summary>
            Dictionary of items indexed by type.
            </summary>
            <value>
            The type indexed items.
            </value>
        </member>
        <member name="P:Qhta.Xml.Reflection.TypeInfoCollection`1.FullNameIndexedItems">
            <summary>
            Dictionary of items indexed by full name.
            </summary>
            <value>
            The full name indexed items.
            </value>
        </member>
        <member name="P:Qhta.Xml.Reflection.TypeInfoCollection`1.ShortNameIndexedItems">
            <summary>
            Dictionary of items indexed by short name. 
            If some types have same names (and different namespaces), 
            they are registered in <see cref="P:Qhta.Xml.Reflection.TypeInfoCollection`1.DuplicatedShortNames"/>
            </summary>
            <value>
            The short name indexed items.
            </value>
        </member>
        <member name="P:Qhta.Xml.Reflection.TypeInfoCollection`1.DuplicatedShortNames">
            <summary>
            Gets the duplicated short type names.
            The concrete classes can be found in <see cref="P:Qhta.Xml.Reflection.TypeInfoCollection`1.FullNameIndexedItems"/>
            </summary>
            <value>
            The duplicated short names.
            </value>
        </member>
        <member name="M:Qhta.Xml.Reflection.TypeInfoCollection`1.Add(`0)">
            <summary>
            Adds an item to collection.
            </summary>
            <param name="item">The object to add. />.</param>
        </member>
        <member name="M:Qhta.Xml.Reflection.TypeInfoCollection`1.Clear">
            <summary>
            Removes all items from the collection.
            </summary>
        </member>
        <member name="M:Qhta.Xml.Reflection.TypeInfoCollection`1.Contains(`0)">
            <summary>
            Determines whether the collection contains the object.
            </summary>
            <param name="item">The object to locate.</param>
        </member>
        <member name="M:Qhta.Xml.Reflection.TypeInfoCollection`1.CopyTo(`0[],System.Int32)">
            <summary>
            Copies the elements of the collection to an array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from collection. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array" /> at which copying begins.</param>
        </member>
        <member name="M:Qhta.Xml.Reflection.TypeInfoCollection`1.Remove(`0)">
            <summary>
            Removes the  occurrence of a specific object from the collection />.
            </summary>
            <param name="item">The object to remove from the collection.</param>
            <returns>
              <see langword="true" /> if <paramref name="item" /> was successfully removed from the collection; otherwise, <see langword="false" />. 
              This method also returns <see langword="false" /> if <paramref name="item" /> is not found in the original collection.
            </returns>
        </member>
        <member name="P:Qhta.Xml.Reflection.TypeInfoCollection`1.Count">
            <summary>
            Gets the number of elements contained in the collection.
            </summary>
        </member>
        <member name="P:Qhta.Xml.Reflection.TypeInfoCollection`1.IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read-only.
            </summary>
        </member>
        <member name="M:Qhta.Xml.Reflection.TypeInfoCollection`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            An enumerator that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Qhta.Xml.Reflection.TypeInfoCollection`1.Equals(Qhta.Xml.Reflection.TypeInfoCollection{`0})">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
              <see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; 
              otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:Qhta.Xml.Reflection.TypeInfoCollection`1.TryGetValue(System.Type,`0@)">
            <summary>
            Tries to get the element from the collection indexed by type.
            </summary>
            <param name="type">The type of the searched element.</param>
            <param name="typeInfo">variable to hold the element id found.</param>
            <returns>
              <see langword="true" /> if the element is found; otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:Qhta.Xml.Reflection.TypeInfoCollection`1.TryGetValue(Qhta.Xml.Reflection.QualifiedName,`0@)">
            <summary>
            Tries to get the element from the collection indexed by full name.
            </summary>
            <param name="qualifiedName">The qualified name of the searched element.</param>
            <param name="typeInfo">variable to hold the element id found.</param>
            <returns>
              <see langword="true" /> if the element is found; otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:Qhta.Xml.Reflection.TypeInfoCollection`1.TryGetValue(Qhta.Xml.XmlQualifiedTagName,`0@)">
            <summary>
            Tries to get the element from the collection indexed by full or short name.
            First the full name index is searched, and if not found then the short name index.
            </summary>
            <param name="tag">The xml qualified tag name of the searched element.</param>
            <param name="typeInfo">variable to hold the element id found.</param>
            <returns>
              <see langword="true" /> if the element is found; otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:Qhta.Xml.Reflection.TypeInfoCollection`1.TryGetValue(System.String,`0@)">
            <summary>
            Tries to get the element from the collection indexed by full or short name.
            First the full name index is searched, and if not found then the short name index.
            </summary>
            <param name="name">Full or short name of the searched element.</param>
            <param name="typeInfo">variable to hold the element id found.</param>
            <returns>
              <see langword="true" /> if the element is found; otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:Qhta.Xml.Reflection.TypeInfoCollection`1.FindTypeInfo(System.Type)">
            <summary>
            Finds the type information by querying the collection.
            </summary>
            <param name="itemType">Type of the item.</param>
            <returns></returns>
        </member>
        <member name="P:Qhta.Xml.Reflection.TypeInfoCollection`1.Keys">
            <summary>
             Type keys stored in collection
            </summary>
            <value>
            The keys.
            </value>
        </member>
        <member name="T:Qhta.Xml.Reflection.XmlNamespaceInfo">
            <summary>
            Compounf information for xml namespace. 
            Contains the xml namespace (uri), C# namespace, xml prefix.
            </summary>
        </member>
        <member name="M:Qhta.Xml.Reflection.XmlNamespaceInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Qhta.Xml.Reflection.XmlNamespaceInfo"/> class.
            </summary>
        </member>
        <member name="M:Qhta.Xml.Reflection.XmlNamespaceInfo.#ctor(System.Xml.XmlQualifiedName)">
            <summary>
            Initializes a new instance of the <see cref="T:Qhta.Xml.Reflection.XmlNamespaceInfo"/> class
            using xml qualified name
            </summary>
            <param name="qname">Xml qualified name.</param>
        </member>
        <member name="P:Qhta.Xml.Reflection.XmlNamespaceInfo.XmlNamespace">
            <summary>
            Gets or sets the XML namespace (uri)
            </summary>
            <value>
            The XML namespace.
            </value>
        </member>
        <member name="P:Qhta.Xml.Reflection.XmlNamespaceInfo.ClrNamespace">
            <summary>
            Gets or sets the C# namespace.
            </summary>
            <value>
            The C# namespace.
            </value>
        </member>
        <member name="P:Qhta.Xml.Reflection.XmlNamespaceInfo.Prefix">
            <summary>
            Gets or sets the XML prefix.
            </summary>
            <value>
            The prefix.
            </value>
        </member>
        <member name="P:Qhta.Xml.Reflection.XmlNamespaceInfo.IsUsed">
            <summary>
            Gets or sets a flag indicating whether this instance is used.
            </summary>
            <value>
              <c>true</c> if this instance is used; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Qhta.Xml.Reflection.XmlNamespaceInfo.ToString">
            <summary>
            Converts to string for debugging.
            </summary>
        </member>
    </members>
</doc>
