<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Qhta.OpenXmlTools</name>
    </assembly>
    <members>
        <member name="T:Qhta.OpenXmlTools.AbstractNumTools">
            <summary>
            A collection of tools for working with AbstractNum elements.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.AbstractNumTools.GetAbstractNumId(DocumentFormat.OpenXml.Wordprocessing.AbstractNum)">
            <summary>
            Get the abstract number ID of the abstract number.
            </summary>
            <param name="abstractNum"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.AbstractNumTools.SetAbstractNumId(DocumentFormat.OpenXml.Wordprocessing.AbstractNum,System.Nullable{System.Int32})">
            <summary>
            Set the abstract number ID of the abstract number.
            If value to set is null, the element will be removed.
            </summary>
            <param name="abstractNum"></param>
            <param name="abstractNumId"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.AbstractNumTools.GetMultiLevelType(DocumentFormat.OpenXml.Wordprocessing.AbstractNum)">
            <summary>
            Get the multi-level type of the abstract number.
            </summary>
            <param name="abstractNum"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.AbstractNumTools.SetMultiLevelType(DocumentFormat.OpenXml.Wordprocessing.AbstractNum,System.Nullable{DocumentFormat.OpenXml.Wordprocessing.MultiLevelValues})">
            <summary>
            Set the multi-level type of the abstract number.
            If value to set is null, the element will be removed.
            </summary>
            <param name="abstractNum"></param>
            <param name="multiLevelType"></param>
        </member>
        <member name="T:Qhta.OpenXmlTools.BodyTools">
            <summary>
            Extension methods for the Body class.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.BodyTools.GetLastSectionProperties(DocumentFormat.OpenXml.Wordprocessing.Body,System.Boolean)">
            <summary>
            Gets the last <c>SectionProperties</c> element of the <c>Body</c> element of the document.
            If the document does not have a <c>SectionProperties</c>, it can be created.
            </summary>
            <param name="body"></param>
            <param name="create">Option to create a <c>SectionProperties</c>, if it does not exist.</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.BodyTools.GetSectionProperties(DocumentFormat.OpenXml.Wordprocessing.Body)">
            <summary>
            Gets the section properties of the body.
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.BodyTools.GetSections(DocumentFormat.OpenXml.Wordprocessing.Body)">
            <summary>
            Gets all the sections
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="T:Qhta.OpenXmlTools.BookmarkTools">
            <summary>
            Tools for working with bookmarks
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.BookmarkTools.GetBookmarkStart(DocumentFormat.OpenXml.Wordprocessing.BookmarkEnd,DocumentFormat.OpenXml.OpenXmlElement)">
            <summary>
            Gets the bookmark start element that corresponds to the specified bookmark end element
            </summary>
            <param name="bookmarkEnd"></param>
            <param name="searchFromElement">searches from this element backward</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:Qhta.OpenXmlTools.BookmarkTools.GetBookmarkEnd(DocumentFormat.OpenXml.Wordprocessing.BookmarkStart,DocumentFormat.OpenXml.OpenXmlElement)">
            <summary>
            Gets the bookmark end element that corresponds to the specified bookmark start element
            </summary>
            <param name="bookmarkStart"></param>
            <param name="searchFromElement">searches from this element backward</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="T:Qhta.OpenXmlTools.BordersTools">
            <summary>
            Tools for working with OpenXml Wordprocessing Borders element.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.BordersTools.ToOpenXmlBorders``1(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.Wordprocessing.BorderType})">
            <summary>
            Convert a list of <see cref="T:DocumentFormat.OpenXml.Wordprocessing.BorderType"/> elements
            to a typed OpenXml borders element.
            </summary>
            <param name="borderList">Enumeration of source <see cref="T:DocumentFormat.OpenXml.Wordprocessing.BorderType"/> elements</param>
            <typeparam name="OpenXmlElementType">Target OpenXml element type. It must be a composite element</typeparam>
            <returns>New <typeparamref name="OpenXmlElementType"/> element</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.BordersTools.IsVisible(DocumentFormat.OpenXml.Wordprocessing.BorderType)">
            <summary>
            Determines whether the border is visible.
            </summary>
            <param name="border"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.BordersTools.GetBorder``1(DocumentFormat.OpenXml.OpenXmlElement)">
            <summary>
            Get the border of the specific type to the borders element.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="bordersElement"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.BordersTools.SetBorder``1(DocumentFormat.OpenXml.OpenXmlElement,DocumentFormat.OpenXml.Wordprocessing.BorderType)">
            <summary>
            Set the border of the specific type to the borders element.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="bordersElement"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.BordersTools.CopyProperties(DocumentFormat.OpenXml.Wordprocessing.BorderType,DocumentFormat.OpenXml.Wordprocessing.BorderType)">
            <summary>
            Copies the properties of a <see cref="T:DocumentFormat.OpenXml.Wordprocessing.BorderType"/> element to another.
            </summary>
            <param name="source"></param>
            <param name="target"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.BordersTools.IsVisible(DocumentFormat.OpenXml.OpenXmlElement)">
            <summary>
            Check if any of the borders elements is visible.
            </summary>
            <param name="bordersElement"></param>
            <returns></returns>
        </member>
        <member name="T:Qhta.OpenXmlTools.BuiltinStyles">
            <summary>Specifies builtin styles as defined in OpenXml</summary>
        </member>
        <member name="T:Qhta.OpenXmlTools.ColorSchemeTools">
            <summary>
            Contains tools for working with color schemes.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.ColorSchemeTools.GetThemeColor(DocumentFormat.OpenXml.Drawing.ColorScheme,DocumentFormat.OpenXml.Wordprocessing.ThemeColorValues)">
            <summary>
            Get the color from color scheme.
            </summary>
            <param name="colorScheme">Color scheme to examine</param>
            <param name="themeColorValue">determines which color to select</param>
            <returns></returns>
        </member>
        <member name="T:Qhta.OpenXmlTools.CompatibilityTools">
            <summary>
            Tools for working with compatibility settings
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.CompatibilityTools.HasCompatibilitySettings(DocumentFormat.OpenXml.Packaging.WordprocessingDocument)">
            <summary>
            Check if the document has compatibility settings
            </summary>
            <param name="wordDoc">The WordprocessingDocument</param>
            <returns>True if the document has compatibility settings</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.CompatibilityTools.GetCompatibilitySettings(DocumentFormat.OpenXml.Packaging.WordprocessingDocument)">
            <summary>
            Gets the compatibility settings from the document. If the document does not have compatibility settings, they are created.
            </summary>
            <param name="wordDoc">The WordprocessingDocument</param>
            <returns>The instance of the compatibility settings</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.CompatibilityTools.Count(DocumentFormat.OpenXml.Wordprocessing.Compatibility,Qhta.OpenXmlTools.ItemFilter)">
            <summary>
            Get the count of the compatibility settings.
            </summary>
            <param name="properties"></param>
            <param name="filter">specifies if all property names should be counted or non-empty ones</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.CompatibilityTools.GetNames(DocumentFormat.OpenXml.Wordprocessing.Compatibility,Qhta.OpenXmlTools.ItemFilter)">
            <summary>
            Get the names of the compatibility settings.
            </summary>
            <param name="properties"></param>
            <param name="filter">specifies if all property names should be listed or non-empty ones</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.CompatibilityTools.GetType(DocumentFormat.OpenXml.Wordprocessing.Compatibility,System.String)">
            <summary>
            Get the type of property with its name.
            </summary>
            <param name="properties"></param>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.CompatibilityTools.GetDocument(DocumentFormat.OpenXml.Wordprocessing.Compatibility)">
            <summary>
            Gets the <c>WordprocessingDocument</c> from the <c>Compatibility</c> object.
            </summary>
            <param name="properties"></param>
            <result>wordprocessing document</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.CompatibilityTools.GetValue(DocumentFormat.OpenXml.Wordprocessing.Compatibility,System.String)">
            <summary>
            Gets the value of a <c>Compatibility</c> property.
            </summary>
            <param name="properties"></param>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.CompatibilityTools.SetValue(DocumentFormat.OpenXml.Wordprocessing.Compatibility,System.String,System.Object)">
            <summary>
            Sets the value of a <c>Compatibility</c> property.
            </summary>
            <param name="properties"></param>
            <param name="propertyName"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.CompatibilityTools.GetCompatibilitySettingBoolVal(DocumentFormat.OpenXml.Wordprocessing.Compatibility,System.String)">
            <summary>
            Gets the <c>CompatibilitySetting</c> <c>Val</c> property bool value.
            </summary>
            <param name="properties"></param>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.CompatibilityTools.GetCompatibilityMode(DocumentFormat.OpenXml.Wordprocessing.Compatibility)">
            <summary>
            Gets the <c>CompatibilityMode</c> property value.
            </summary>
            <param name="properties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.CompatibilityTools.SetCompatibilitySettingBoolVal(DocumentFormat.OpenXml.Wordprocessing.Compatibility,System.String,System.Nullable{System.Boolean})">
            <summary>
            sets the <c>CompatibilitySetting</c> <c>Val</c> property bool value.
            </summary>
            <param name="properties"></param>
            <param name="propertyName"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.CompatibilityTools.SetCompatibilityMode(DocumentFormat.OpenXml.Wordprocessing.Compatibility,System.Nullable{System.Int32})">
            <summary>
            Sets the <c>CompatibilityMode</c> property value.
            </summary>
            <param name="properties"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:Qhta.OpenXmlTools.CorePropertiesTools">
            <summary>
            Tools for working with core properties of a document.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.CorePropertiesTools.HasCoreProperties(DocumentFormat.OpenXml.Packaging.WordprocessingDocument)">
            <summary>
            Checks if the document has core properties.
            </summary>
            <param name="wordDoc"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.CorePropertiesTools.GetCoreProperties(DocumentFormat.OpenXml.Packaging.WordprocessingDocument)">
            <summary>
            Gets the core properties of the document. If the document does not have core properties, they are created.
            </summary>
            <param name="wordDoc">The WordprocessingDocument to get the properties from.</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.CorePropertiesTools.Count(DocumentFormat.OpenXml.Packaging.IPackageProperties,Qhta.OpenXmlTools.ItemFilter)">
            <summary>
            Get the count of the core properties.
            </summary>
            <param name="coreProperties"></param>
            <param name="filter">specifies if all property names should be listed or non-empty ones</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.CorePropertiesTools.GetNames(DocumentFormat.OpenXml.Packaging.IPackageProperties,Qhta.OpenXmlTools.ItemFilter)">
            <summary>
            Get the names of the core properties.
            </summary>
            <param name="coreProperties"></param>
            <param name="filter">specifies if all property names should be listed or non-empty ones</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.CorePropertiesTools.GetType(DocumentFormat.OpenXml.Packaging.IPackageProperties,System.String)">
            <summary>
            Get the type of property with its name.
            </summary>
            <param name="coreProperties"></param>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.CorePropertiesTools.GetValue(DocumentFormat.OpenXml.Packaging.IPackageProperties,System.String)">
            <summary>
            Gets the value of a core property.
            </summary>
            <param name="coreProperties"></param>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.CorePropertiesTools.SetValue(DocumentFormat.OpenXml.Packaging.IPackageProperties,System.String,System.Object)">
            <summary>
            Sets the value of a core property.
            </summary>
            <param name="coreProperties"></param>
            <param name="propertyName"></param>
            <param name="value"></param>
        </member>
        <member name="T:Qhta.OpenXmlTools.CustomFileProperties">
            <summary>
            Tools for working with custom file properties of a document.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.CustomFileProperties.HasCustomFileProperties(DocumentFormat.OpenXml.Packaging.WordprocessingDocument)">
            <summary>
            Checks if the document has custom file properties.
            </summary>
            <param name="wordDoc"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.CustomFileProperties.GetCustomFileProperties(DocumentFormat.OpenXml.Packaging.WordprocessingDocument)">
            <summary>
            Gets the custom file properties of the document. If the document does not have custom file properties,
            they are created.
            </summary>
            <param name="wordDoc">The WordprocessingDocument to get the properties from.</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.CustomFileProperties.Count(DocumentFormat.OpenXml.CustomProperties.Properties)">
            <summary>
            Get the count of the custom file properties.
            </summary>
            <param name="customFileProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.CustomFileProperties.GetNames(DocumentFormat.OpenXml.CustomProperties.Properties)">
            <summary>
            Get the names of the custom file properties.
            </summary>
            <param name="customFileProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.CustomFileProperties.GetType(DocumentFormat.OpenXml.CustomProperties.Properties,System.String)">
            <summary>
            Get the type of property with its name.
            </summary>
            <param name="customFileProperties"></param>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.CustomFileProperties.GetValue(DocumentFormat.OpenXml.CustomProperties.Properties,System.String)">
            <summary>
            Gets the value of a custom file property.
            </summary>
            <param name="customFileProperties"></param>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.CustomFileProperties.SetValue(DocumentFormat.OpenXml.CustomProperties.Properties,System.String,System.Object)">
            <summary>
            Sets the value of a custom file property.
            </summary>
            <param name="customFileProperties"></param>
            <param name="propertyName"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.CustomFileProperties.Add(DocumentFormat.OpenXml.CustomProperties.Properties,System.String,System.Type,System.Object)">
            <summary>
            Add the new custom file property.
            </summary>
            <param name="customFileProperties"></param>
            <param name="propertyName"></param>
            <param name="propertyType"></param>
            <param name="value"></param>
            <returns>true if the addition was successful, false if the property with the same name already exists</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.CustomFileProperties.Remove(DocumentFormat.OpenXml.CustomProperties.Properties,System.String)">
            <summary>
            Removes a custom file property.
            </summary>
            <param name="customFileProperties"></param>
            <param name="propertyName"></param>
            <returns>true if the addition was successful, false if the property with the given name does not exist</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.CustomFileProperties.Rename(DocumentFormat.OpenXml.CustomProperties.Properties,System.String,System.String)">
            <summary>
            Renames a custom file property.
            </summary>
            <param name="customFileProperties"></param>
            <param name="propertyName"></param>
            <param name="newName"></param>
            <returns>true if the addition was successful, false if the property with the given name does not exist</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.CustomFileProperties.ChangeType(DocumentFormat.OpenXml.CustomProperties.Properties,System.String,System.Type)">
            <summary>
            Changes a custom file property type.
            </summary>
            <param name="customFileProperties"></param>
            <param name="propertyName"></param>
            <param name="newType"></param>
            <returns>true if the addition was successful, false if the property with the given name does not exist</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.CustomFileProperties.Clear(DocumentFormat.OpenXml.CustomProperties.Properties)">
            <summary>
            Removes all custom file properties.
            </summary>
            <param name="customFileProperties"></param>
        </member>
        <member name="T:Qhta.OpenXmlTools.DocumentFormatter">
            <summary>
            A composite tool for formatting a Wordprocessing document.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.DocumentFormatter.VerboseLevel">
            <summary>
            Determines the level of verbosity of the cleaner.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.DocumentFormatter.FormatDocument(System.String)">
            <summary>
            Format the document using all the methods available.
            </summary>
            <param name="fileName"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.DocumentFormatter.FormatBodyParagraphs(DocumentFormat.OpenXml.Packaging.WordprocessingDocument)">
            <summary>
            Format body paragraphs.
            </summary>
            <param name="wordDoc"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.DocumentFormatter.FormatParagraphs(DocumentFormat.OpenXml.OpenXmlCompositeElement)">
            <summary>
            Format paragraphs in the element.
            </summary>
            <param name="body"></param>
            <returns>count of trimmed paragraphs</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.DocumentFormatter.ScanParagraph(DocumentFormat.OpenXml.Wordprocessing.Paragraph)">
            <summary>
            Scan a paragraph for properties.
            Find the properties of the paragraph and count them.
            Properties counts are stored in the PropertyCounts dictionary.
            </summary>
            <param name="paragraph"></param>
            <returns></returns>
        </member>
        <member name="T:Qhta.OpenXmlTools.DocumentProperties">
            <summary>
            Manages the properties of a document in a uniform way.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.DocumentProperties.#ctor(DocumentFormat.OpenXml.Packaging.WordprocessingDocument)">
            <summary>
            Initializes a new instance of the DocumentProperties class.
            </summary>
            <param name="wordDoc"></param>
        </member>
        <member name="P:Qhta.OpenXmlTools.DocumentProperties.WordDoc">
            <summary>
            Holds the WordprocessingDocument object.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.DocumentProperties.Count(Qhta.OpenXmlTools.ItemFilter)">
            <summary>
            Get the count of the document properties.
            </summary>
            <param name="filter">specifies if all property names should be listed or non-empty ones</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.DocumentProperties.GetNames(Qhta.OpenXmlTools.ItemFilter)">
            <summary>
            Get the names of the document properties.
            </summary>
            <param name="filter">specifies if all property names should be listed or non-empty ones</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.DocumentProperties.GetType(System.String)">
            <summary>
            Get the type of the document property
            </summary>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.DocumentProperties.GetValue(System.String)">
            <summary>
            Gets the value of a document property.
            </summary>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.DocumentProperties.SetValue(System.String,System.Object)">
            <summary>
            Sets the value of a document property.
            </summary>
            <param name="propertyName"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:Qhta.OpenXmlTools.DocumentPropertyKind">
            <summary>
            Enum to represent the kind of document property: Core, Extended, Custom
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.DocumentPropertyKind.Core">
            <summary>
            Core (package) property.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.DocumentPropertyKind.Extended">
            <summary>
            Extended (application) property.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.DocumentPropertyKind.Custom">
            <summary>
            Custom property.
            </summary>
        </member>
        <member name="T:Qhta.OpenXmlTools.DocumentSecurity">
            <summary>
            Encoding for the <c>DocumentSecurity</c>> property
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.DocumentSecurity.PasswordProtected">
            <summary>
            Document is password protected
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.DocumentSecurity.ReadOnlyRecommended">
            <summary>
             Document is recommended to be opened as read-only
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.DocumentSecurity.ReadOnlyForced">
            <summary>
             Document is recommended to be opened as read-only
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.DocumentSecurity.LockedForAnnotation">
            <summary>
             Document is locked for annotation
            </summary>
        </member>
        <member name="T:Qhta.OpenXmlTools.DocumentTools">
            <summary>
            A collection of tools for working with OpenXml documents.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.DocumentTools.GetDocumentId(DocumentFormat.OpenXml.Packaging.WordprocessingDocument)">
            <summary>
            Gets the integer identifier of the document.
            </summary>
            <param name="wordDoc"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.DocumentTools.GetDocumentProperties(DocumentFormat.OpenXml.Packaging.WordprocessingDocument)">
            <summary>
            Gets all the properties of the document to manage them in a uniform way.
            </summary>
            <param name="wordDoc"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.DocumentTools.HasMainDocumentPart(DocumentFormat.OpenXml.Packaging.WordprocessingDocument)">
            <summary>
            Checks if the document has a <c>MainDocumentPart</c>.
            </summary>
            <param name="wordDoc"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.DocumentTools.GetMainDocumentPart(DocumentFormat.OpenXml.Packaging.WordprocessingDocument)">
            <summary>
            Gets the <c>MainDocumentPart</c> of the document. If the document does not have a <c>MainDocumentPart</c>, it is created with an empty <c>Document</c> element.
            </summary>
            <param name="wordDoc"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.DocumentTools.HasBody(DocumentFormat.OpenXml.Packaging.WordprocessingDocument)">
            <summary>
            Checks if the document has a <c>Body</c> element.
            </summary>
            <param name="wordDoc"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.DocumentTools.GetBody(DocumentFormat.OpenXml.Packaging.WordprocessingDocument)">
            <summary>
            Gets the <c>Body</c> element of the document. If the document does not have a <c>Body</c>, it is created.
            </summary>
            <param name="wordDoc"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.DocumentTools.GetHeaders(DocumentFormat.OpenXml.Packaging.WordprocessingDocument)">
            <summary>
            Gets all the <c>Header</c> elements of the document.
            </summary>
            <param name="wordDoc"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.DocumentTools.GetFooters(DocumentFormat.OpenXml.Packaging.WordprocessingDocument)">
            <summary>
            Gets all the <c>Footer</c> elements of the document.
            </summary>
            <param name="wordDoc"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.DocumentTools.GetRange(DocumentFormat.OpenXml.Packaging.WordprocessingDocument)">
            <summary>
            Gets the <see cref="T:Qhta.OpenXmlTools.Range"/> of the <c>Body</c> element of the document. If the document does not have a <c>Body</c>, it is created.
            </summary>
            <param name="wordDoc"></param>
            <returns></returns>
        </member>
        <member name="T:Qhta.OpenXmlTools.DrawingTools">
            <summary>
            Tools for drawing elements.
            </summary>
        </member>
        <member name="T:Qhta.OpenXmlTools.EMUTools">
            <summary>
            Tools for working with OpenXml EMU values.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.EMUTools.ToMM(DocumentFormat.OpenXml.Int32Value,System.Int32)">
            <summary>
            Convert an integer value in EMU to millimeters.
            </summary>
            <param name="x">Source integer value</param>
            <param name="precision">Number of decimal digits to round to (default 0)</param>
            <returns>Double result</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.EMUTools.ToMM(DocumentFormat.OpenXml.UInt32Value,System.Int32)">
            <summary>
            Convert an unsigned integer value in EMU to millimeters.
            </summary>
            <param name="x">Source integer value</param>
            <param name="precision">Number of decimal digits to round to (default 0)</param>
            <returns>Double result</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.EMUTools.ToStringMM(DocumentFormat.OpenXml.Int32Value,System.Int32)">
            <summary>
            Convert an integer value in EMU to millimeters string with "mm" suffix.
            </summary>
            <param name="x">Source integer value</param>
            <param name="precision">Number of decimal digits to round to (default 0)</param>
            <returns>String result in invariant culture format</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.EMUTools.ToStringMM(DocumentFormat.OpenXml.UInt32Value,System.Int32)">
            <summary>
            Convert an unsigned integer value in EMU to millimeters string with "mm" suffix.
            </summary>
            <param name="x">Source integer value</param>
            <param name="precision">Number of decimal digits to round to (default 0)</param>
            <returns>String result in invariant culture format</returns>
        </member>
        <member name="T:Qhta.OpenXmlTools.EndnotePropertiesTools">
            <summary>
            Tools for EndnoteProperties element.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.EndnotePropertiesTools.GetEndnotePosition(DocumentFormat.OpenXml.Wordprocessing.EndnoteProperties)">
            <summary>
            Gets the EndnotePosition element value.
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.EndnotePropertiesTools.SetEndnotePosition(DocumentFormat.OpenXml.Wordprocessing.EndnoteProperties,System.Nullable{DocumentFormat.OpenXml.Wordprocessing.EndnotePositionValues})">
            <summary>
            Sets the EndnotePosition element value.
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.EndnotePropertiesTools.GetNumberingFormat(DocumentFormat.OpenXml.Wordprocessing.EndnoteProperties)">
            <summary>
            Gets the first NumberingFormat element value
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.EndnotePropertiesTools.SetNumberingFormat(DocumentFormat.OpenXml.Wordprocessing.EndnoteProperties,DocumentFormat.OpenXml.Wordprocessing.NumberingFormat)">
            <summary>
            Sets the NumberingFormat element value.
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.EndnotePropertiesTools.GetNumberingStart(DocumentFormat.OpenXml.Wordprocessing.EndnoteProperties)">
            <summary>
            Gets the NumberingStart element value.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.EndnotePropertiesTools.SetNumberingStart(DocumentFormat.OpenXml.Wordprocessing.EndnoteProperties,System.Nullable{System.Int32})">
            <summary>
            Sets the NumberingStart element value.
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.EndnotePropertiesTools.GetNumberingRestart(DocumentFormat.OpenXml.Wordprocessing.EndnoteProperties)">
            <summary>
            Gets the NumberingRestart element value.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.EndnotePropertiesTools.SetNumberingRestart(DocumentFormat.OpenXml.Wordprocessing.EndnoteProperties,System.Nullable{DocumentFormat.OpenXml.Wordprocessing.RestartNumberValues})">
            <summary>
            Sets the NumberingRestart element value.
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="T:Qhta.OpenXmlTools.EndnoteTools">
            <summary>
            Tools for working with OpenXml Wordprocessing Endnotes element.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.EndnoteTools.Init(DocumentFormat.OpenXml.Wordprocessing.Endnotes)">
            <summary>
            Initialize the Endnotes element with the default separator and continuation separator.
            </summary>
            <param name="endnotes"></param>
        </member>
        <member name="T:Qhta.OpenXmlTools.AppType">
            <summary>
            Filter for extended file properties by their application type.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.AppType.None">
            <summary>
            Applies to no application.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.AppType.Word">
            <summary>
            Applies to Word documents.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.AppType.Presentation">
            <summary>
            Applies to presentations document.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.AppType.All">
            <summary>
            Applies to all applications.
            </summary>
        </member>
        <member name="T:Qhta.OpenXmlTools.ExtendedFilePropertiesTools">
            <summary>
            Tools for working with extended file properties of a document.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.ExtendedFilePropertiesTools.HasExtendedFileProperties(DocumentFormat.OpenXml.Packaging.WordprocessingDocument)">
            <summary>
            Checks if the document has extended file properties.
            </summary>
            <param name="wordDoc"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ExtendedFilePropertiesTools.GetExtendedFileProperties(DocumentFormat.OpenXml.Packaging.WordprocessingDocument)">
            <summary>
            Gets the extended file properties of the document. If the document does not have extended file properties,
            they are created.
            </summary>
            <param name="wordDoc">The WordprocessingDocument to get the properties from.</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ExtendedFilePropertiesTools.Count(DocumentFormat.OpenXml.ExtendedProperties.Properties,Qhta.OpenXmlTools.ItemFilter)">
            <summary>
            Get the count of the extended file properties.
            </summary>
            <param name="extendedFileProperties"></param>
            <param name="filter">specifies if all property names should be counted or non-empty ones</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ExtendedFilePropertiesTools.GetNames(DocumentFormat.OpenXml.ExtendedProperties.Properties,Qhta.OpenXmlTools.ItemFilter)">
            <summary>
            Get the names of the extended file properties.
            </summary>
            <param name="extendedFileProperties"></param>
            <param name="filter">specifies if all property names should be listed or non-empty ones</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ExtendedFilePropertiesTools.GetType(DocumentFormat.OpenXml.ExtendedProperties.Properties,System.String)">
            <summary>
            Get the type of property with its name.
            </summary>
            <param name="extendedFileProperties"></param>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ExtendedFilePropertiesTools.IsVolatile(DocumentFormat.OpenXml.ExtendedProperties.Properties,System.String)">
            <summary>
            Check if the property is volatile.
            </summary>
            <param name="extendedFileProperties"></param>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ExtendedFilePropertiesTools.AppliesToApplication(DocumentFormat.OpenXml.ExtendedProperties.Properties,System.String,Qhta.OpenXmlTools.AppType)">
            <summary>
            Check if the property is volatile.
            </summary>
            <param name="extendedFileProperties"></param>
            <param name="propertyName"></param>
            <param name="appType"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ExtendedFilePropertiesTools.GetValue(DocumentFormat.OpenXml.ExtendedProperties.Properties,System.String)">
            <summary>
            Gets the value of an extended file property.
            </summary>
            <param name="extendedFileProperties"></param>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ExtendedFilePropertiesTools.SetValue(DocumentFormat.OpenXml.ExtendedProperties.Properties,System.String,System.Object)">
            <summary>
            Sets the value of an extended file property.
            </summary>
            <param name="extendedFileProperties"></param>
            <param name="propertyName"></param>
            <param name="value"></param>
        </member>
        <member name="T:Qhta.OpenXmlTools.FindAndReplaceOptions">
            <summary>
            Options for FindAndReplace methods.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.FindAndReplaceOptions.FindWholeWordsOnly">
            <summary>
            Find option - whole words only.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.FindAndReplaceOptions.MatchCaseInsensitive">
            <summary>
            Find and replace option - case-insensitive.
            </summary>
        </member>
        <member name="T:Qhta.OpenXmlTools.Finder">
            <summary>
            Class to find (and replace) text in a document.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.Finder.#ctor(DocumentFormat.OpenXml.OpenXmlCompositeElement)">
            <summary>
            Construct a finder using context element.
            </summary>
            <param name="contextElement"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.Finder.#ctor(Qhta.OpenXmlTools.Range)">
            <summary>
            Construct a finder using context range.
            </summary>
            <param name="contextRange"></param>
        </member>
        <member name="P:Qhta.OpenXmlTools.Finder.ContextRange">
            <summary>
            ContextRange for the search.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.Finder.TextOptions">
            <summary>
            Options for get text to search.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.Finder.SearchText">
            <summary>
            PlainText to search for.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.Finder.Format">
            <summary>
            Determines if the search must consider formatting.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.Finder.Replacement">
            <summary>
            SearchText to replace.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.Finder.Execute">
            <summary>
            Realize the search and replace.
            </summary>
            <returns>if finder founds text and/or formatting</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.Finder.ReplaceText(DocumentFormat.OpenXml.Wordprocessing.Paragraph,System.String,System.String)">
            <summary>
            Find the text in the paragraph and replace it with the replacement text.
            </summary>
            <param name="paragraph"></param>
            <param name="sText"></param>
            <param name="replacement"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.Finder.Find(System.String,System.String)">
            <summary>
            Check if the input text matches start of the search text.
            Determines if the input text contains completely the search text
            or if the input text ends with a start of the search text of any length.
            </summary>
            <param name="inText">SearchText to search in</param>
            <param name="sText">SearchText to search for</param>
            <returns>The index of the first char that matches the search string or -1 if not found</returns>
        </member>
        <member name="T:Qhta.OpenXmlTools.FontSchemeTools">
            <summary>
            Contains tools for working with font schemes.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.FontSchemeTools.GetThemeFontName(DocumentFormat.OpenXml.Drawing.FontScheme,DocumentFormat.OpenXml.Wordprocessing.ThemeFontValues)">
            <summary>
            Get the font name from the theme font values.
            </summary>
            <param name="fontScheme">Font scheme to examine</param>
            <param name="themeFontValue">determines which type name to select</param>
            <returns></returns>
        </member>
        <member name="T:Qhta.OpenXmlTools.FootnotePropertiesTools">
            <summary>
            Tools for FootnoteProperties element.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.FootnotePropertiesTools.GetFootnotePosition(DocumentFormat.OpenXml.Wordprocessing.FootnoteProperties)">
            <summary>
            Gets the FootnotePosition element value.
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.FootnotePropertiesTools.SetFootnotePosition(DocumentFormat.OpenXml.Wordprocessing.FootnoteProperties,System.Nullable{DocumentFormat.OpenXml.Wordprocessing.FootnotePositionValues})">
            <summary>
            Sets the FootnotePosition element value.
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.FootnotePropertiesTools.GetNumberingFormat(DocumentFormat.OpenXml.Wordprocessing.FootnoteProperties)">
            <summary>
            Gets the first NumberingFormat element value
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.FootnotePropertiesTools.SetNumberingFormat(DocumentFormat.OpenXml.Wordprocessing.FootnoteProperties,DocumentFormat.OpenXml.Wordprocessing.NumberingFormat)">
            <summary>
            Sets the NumberingFormat element value.
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.FootnotePropertiesTools.GetNumberingStart(DocumentFormat.OpenXml.Wordprocessing.FootnoteProperties)">
            <summary>
            Gets the NumberingStart element value.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.FootnotePropertiesTools.SetNumberingStart(DocumentFormat.OpenXml.Wordprocessing.FootnoteProperties,System.Nullable{System.Int32})">
            <summary>
            Sets the NumberingStart element value.
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.FootnotePropertiesTools.GetNumberingRestart(DocumentFormat.OpenXml.Wordprocessing.FootnoteProperties)">
            <summary>
            Gets the NumberingRestart element value.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.FootnotePropertiesTools.SetNumberingRestart(DocumentFormat.OpenXml.Wordprocessing.FootnoteProperties,System.Nullable{DocumentFormat.OpenXml.Wordprocessing.RestartNumberValues})">
            <summary>
            Sets the NumberingRestart element value.
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="T:Qhta.OpenXmlTools.FootnoteTools">
            <summary>
            Tools for working with OpenXml Wordprocessing Footnotes element.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.FootnoteTools.Init(DocumentFormat.OpenXml.Wordprocessing.Footnotes)">
            <summary>
            Initialize the Footnotes element with the default separator and continuation separator.
            </summary>
            <param name="endnotes"></param>
        </member>
        <member name="T:Qhta.OpenXmlTools.RunInText">
            <summary>
            Represents the list of the run members.
            These members, which can be converted to the plain text, are concatenated to single Text element.
            Others are contained as themselves.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.RunInText.#ctor">
            <summary>
            Construct an empty RunInText object.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.RunInText.#ctor(System.String)">
            <summary>
            Construct a RunInText object with a single Text element.
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.RunInText.Append(System.String)">
            <summary>
            Append the text to the last Text element in the list
            or add a new Text element to the list.
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.RunInText.PlainText">
            <summary>
            Concatenate the text of items in the list.
            Non-text elements are replaced with their single-character representation.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Qhta.OpenXmlTools.RunText">
            <summary>
            Represents a run-text pair in the FormattingText class.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.RunText.Run">
            <summary>
            Run element.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.RunText.RunInText">
            <summary>
            PlainText of the run element.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.RunText.PlainText">
            <summary>
            Get the plain text of the run element.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.RunText.#ctor(DocumentFormat.OpenXml.Wordprocessing.Run,Qhta.OpenXmlTools.RunInText)">
            <summary>
            Construct a RunText object using run-in text.
            </summary>
            <param name="run"></param>
            <param name="runInText"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.RunText.#ctor(DocumentFormat.OpenXml.Wordprocessing.Run,System.String)">
            <summary>
            Construct a RunText object using plain text.
            </summary>
            <param name="run"></param>
            <param name="plainText"></param>
        </member>
        <member name="T:Qhta.OpenXmlTools.FormattedText">
            <summary>
            Represents a list of run-text pairs.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.FormattedText.#ctor(DocumentFormat.OpenXml.Wordprocessing.Paragraph)">
            <summary>
            Construct a formatted text using paragraph as a context element.
            </summary>
            <param name="paragraph"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.FormattedText.GetText">
            <summary>
            Concatenate the text of all items in the list.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.FormattedText.SetText(System.String,DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Set the text to the all Run elements.
            Text is split with TextOptions PlainText RunSeparator.
            Number of text parts must be equal to the number of Run elements.
            </summary>
            <param name="text"></param>
            <param name="objects">Member object assigned to object representing characters</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.FormattedText.SetText(System.Int32,System.String,DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Set the text of the specified item and pass it to the Run element.
            </summary>
            <param name="index"></param>
            <param name="text"></param>
            <param name="objects">Member object assigned to object representing characters</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.FormattedText.SetFormat(System.Int32,Qhta.OpenXmlTools.TextFormat)">
            <summary>
            Set the format of the specified item passing it to the Run element.
            </summary>
            <param name="index"></param>
            <param name="format"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.FormattedText.InsertBefore(System.Int32,System.String,Qhta.OpenXmlTools.TextFormat)">
            <summary>
            Insert the new run with text and format before the specified item.
            </summary>
            <param name="index"></param>
            <param name="text"></param>
            <param name="format"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.FormattedText.InsertAfter(System.Int32,System.String,Qhta.OpenXmlTools.TextFormat)">
            <summary>
            Insert the new run with text and format after the specified item.
            </summary>
            <param name="index"></param>
            <param name="text"></param>
            <param name="format"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.FormattedText.InsertWithSplit(System.Int32,System.Int32,System.String,Qhta.OpenXmlTools.TextFormat)">
            <summary>
            Insert the new run with text and format into the specified item at the given position splitting the item into two runs.
            </summary>
            <param name="index"></param>
            <param name="itemPosition"></param>
            <param name="text"></param>
            <param name="format"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.FormattedText.Find(System.String,Qhta.OpenXmlTools.TextFormat,Qhta.OpenXmlTools.FindAndReplaceOptions)">
            <summary>
            Find the text with the given format.
            </summary>
            <param name="searchText"></param>
            <param name="searchFormat"></param>
            <param name="options"></param>
            <returns>character position of the text or -1 if not found</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.FormattedText.Find(System.Int32,System.String,Qhta.OpenXmlTools.TextFormat,Qhta.OpenXmlTools.FindAndReplaceOptions,System.Int32@)">
            <summary>
            Find the text with the given format starting at the given startPosition.
            </summary>
            <param name="startPosition"></param>
            <param name="searchText"></param>
            <param name="searchFormat"></param>
            <param name="foundLength">length of found text (or 0 if not found)</param>
            <param name="options"></param>
            <returns>character startPosition of the text (or -1 if not found)</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.FormattedText.FindText(System.Int32,System.String,Qhta.OpenXmlTools.FindAndReplaceOptions)">
            <summary>
            Find the text with without format starting at the given startPosition.
            </summary>
            <param name="startPosition"></param>
            <param name="searchText"></param>
            <param name="options"></param>
            <returns>character startPosition of the text (or -1 if not found)</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.FormattedText.FindTextWithFormat(System.Int32,System.String,Qhta.OpenXmlTools.TextFormat,Qhta.OpenXmlTools.FindAndReplaceOptions)">
            <summary>
            Find the text with the given format starting at the given startPosition.
            </summary>
            <param name="startPosition"></param>
            <param name="searchText"></param>
            <param name="searchFormat"></param>
            <param name="options"></param>
            <returns>character startPosition of the text (or -1 if not found)</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.FormattedText.FindFormat(System.Int32,Qhta.OpenXmlTools.TextFormat,Qhta.OpenXmlTools.FindAndReplaceOptions,System.Int32@)">
            <summary>
            Find the given format without text starting at the given startPosition.
            </summary>
            <param name="startPosition"></param>
            <param name="searchFormat"></param>
            <param name="foundLength">length of found text (or 0 if not found)</param>
            <param name="options"></param>
            <returns>character startPosition of the text (or -1 if not found)</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.FormattedText.Replace(System.String,System.String,Qhta.OpenXmlTools.FindAndReplaceOptions)">
            <summary>
            Replace the first occurrence of the search text with the replacement text.
            </summary>
            <param name="searchText"></param>
            <param name="replacementText"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.FormattedText.Replace(System.String,System.String,Qhta.OpenXmlTools.TextFormat,Qhta.OpenXmlTools.FindAndReplaceOptions)">
            <summary>
            Replace the first occurrence of the search text with the formatted replacement text.
            </summary>
            <param name="searchText"></param>
            <param name="replacementText"></param>
            <param name="replacementFormat"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.FormattedText.Replace(System.String,Qhta.OpenXmlTools.TextFormat,System.String,Qhta.OpenXmlTools.TextFormat,Qhta.OpenXmlTools.FindAndReplaceOptions)">
            <summary>
            Replace the first occurrence of the formatted search text with the formatted replacement text.
            </summary>
            <param name="searchText"></param>
            <param name="replacementText"></param>
            <param name="searchFormat"></param>
            <param name="replacementFormat"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.FormattedText.Replace(System.Int32,System.String,Qhta.OpenXmlTools.TextFormat,System.String,Qhta.OpenXmlTools.TextFormat,Qhta.OpenXmlTools.FindAndReplaceOptions)">
            <summary>
            Replace formatted search text with the formatted replacement text starting at the given position.
            </summary>
            <param name="startPosition"></param>
            <param name="searchText"></param>
            <param name="replacementText"></param>
            <param name="searchFormat"></param>
            <param name="replacementFormat"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.FormattedText.ReplaceTextAt(System.Int32,System.Int32,System.String,Qhta.OpenXmlTools.TextFormat,Qhta.OpenXmlTools.FindAndReplaceOptions)">
            <summary>
            Replace the text at given position and of given length with the replacement text.
            </summary>
            <param name="length"></param>
            <param name="replacementText"></param>
            <param name="position"></param>
            <param name="replacementFormat"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.FormattedText.ReplaceFormatAt(System.Int32,System.Int32,Qhta.OpenXmlTools.TextFormat,Qhta.OpenXmlTools.FindAndReplaceOptions)">
            <summary>
            Replace the format of text at given position and of given length with the replacement format.
            </summary>
            <param name="length"></param>
            <param name="position"></param>
            <param name="replacementFormat"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.FormattedText.TrimStart">
            <summary>
            Trim the whitespaces at the start of the formatted text.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.FormattedText.TrimEnd">
            <summary>
            Trim the whitespaces at the end of the formatted text.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.FormattedText.NormalizeWhitespaces(Qhta.OpenXmlTools.WhitespaceOptions)">
            <summary>
            Remove exceeding whitespaces from all paragraphs in the context.
            </summary>
        </member>
        <member name="T:Qhta.OpenXmlTools.FormattedTextObjects">
            <summary>
            A list of OpenXmlElements that represent formatted text objects.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.FormattedTextObjects.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.FormattedTextObjects.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Constructor that takes a list of OpenXmlElements.
            </summary>
            <param name="elements"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.FormattedTextObjects.GetObject(System.Char,System.Int32)">
            <summary>
            Gets the OpenXmlElement that represents the specified character.
            It searches the list of OpenXmlElements for an element that represents the specified character as defined in TextOptions PlainText.
            </summary>
            <param name="ch"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="T:Qhta.OpenXmlTools.GetTextMethods">
            <summary>
            Methods to get text from OpenXml elements.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.GetTextMethods.GetOuterXml(DocumentFormat.OpenXml.OpenXmlElement)">
            <summary>
            Gets the outer xml text of the element.
            Removes the xmlns attributes from the element.
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.GetTextMethods.GetText(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement},Qhta.OpenXmlTools.TextOptions)">
            <summary>
            Gets the text of the collection of elements
            </summary>
            <param name="elements"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.GetTextMethods.GetText(DocumentFormat.OpenXml.OpenXmlElement,Qhta.OpenXmlTools.TextOptions)">
            <summary>
            Gets the text of the element.
            </summary>
            <param name="element"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.GetTextMethods.DispatchGetText(DocumentFormat.OpenXml.OpenXmlElement,Qhta.OpenXmlTools.TextOptions)">
            <summary>
            Dispatch the get text method for the element.
            </summary>
            <param name="element"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.GetTextMethods.GetTextOf(DocumentFormat.OpenXml.Wordprocessing.Run,Qhta.OpenXmlTools.TextOptions)">
            <summary>
            Get the text content of the run.
            </summary>
            <param name="run"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.GetTextMethods.GetText(DocumentFormat.OpenXml.Wordprocessing.Text,Qhta.OpenXmlTools.TextOptions)">
            <summary>
            Get the text of the run Text element.
            </summary>
            <param name="runText"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.GetTextMethods.GetTextOf(DocumentFormat.OpenXml.Wordprocessing.Text,Qhta.OpenXmlTools.TextOptions)">
            <summary>
            Get the text of the run Text element.
            </summary>
            <param name="runText"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.GetTextMethods.GetTextOf(DocumentFormat.OpenXml.Wordprocessing.TabChar,Qhta.OpenXmlTools.TextOptions)">
            <summary>
            Get the text of the TabChar element.
            </summary>
            <param name="tabChar"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.GetTextMethods.GetTextOf(DocumentFormat.OpenXml.Wordprocessing.SoftHyphen,Qhta.OpenXmlTools.TextOptions)">
            <summary>
            Get the text of the SoftHyphen element.
            </summary>
            <param name="softHyphen"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.GetTextMethods.GetTextOf(DocumentFormat.OpenXml.Wordprocessing.NoBreakHyphen,Qhta.OpenXmlTools.TextOptions)">
            <summary>
            Get the text of the NoBreakHyphen element.
            </summary>
            <param name="noBreakHyphen"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.GetTextMethods.GetTextOf(DocumentFormat.OpenXml.Wordprocessing.CarriageReturn,Qhta.OpenXmlTools.TextOptions)">
            <summary>
            Get the text of the CarriageReturn element.
            </summary>
            <param name="carriageReturn"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.GetTextMethods.GetTextOf(DocumentFormat.OpenXml.Wordprocessing.LastRenderedPageBreak,Qhta.OpenXmlTools.TextOptions)">
            <summary>
            Get the text of the LastRenderedPageBreak element.
            </summary>
            <param name="lastRenderedPageBreak"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.GetTextMethods.GetTextOf(DocumentFormat.OpenXml.Wordprocessing.PageNumber,Qhta.OpenXmlTools.TextOptions)">
            <summary>
            Get the text of the PageNumber element.
            </summary>
            <param name="pageNumber"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.GetTextMethods.GetTextOf(DocumentFormat.OpenXml.Wordprocessing.DeletedText,Qhta.OpenXmlTools.TextOptions)">
            <summary>
            Get the element of the DeletedText element.
            </summary>
            <param name="element"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.GetTextMethods.GetTextOf(DocumentFormat.OpenXml.Wordprocessing.DeletedFieldCode,Qhta.OpenXmlTools.TextOptions)">
            <summary>
            Get the element of the deleted field code element.
            </summary>
            <param name="element"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.GetTextMethods.GetTextOf(DocumentFormat.OpenXml.Wordprocessing.Break,Qhta.OpenXmlTools.TextOptions)">
            <summary>
            Get the text of the Break element.
            </summary>
            <param name="break"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.GetTextMethods.GetTextOf(DocumentFormat.OpenXml.Wordprocessing.SymbolChar,Qhta.OpenXmlTools.TextOptions)">
            <summary>
            Get the text of the SymbolChar element.
            </summary>
            <param name="symbolChar"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.GetTextMethods.GetTextOf(DocumentFormat.OpenXml.Wordprocessing.Hyperlink,Qhta.OpenXmlTools.TextOptions)">
            <summary>
            Get the text of the hyperlink run elements.
            </summary>
            <param name="hyperlink">source hyperlink</param>
            <param name="options"></param>
            <returns>joined text</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.GetTextMethods.GetTextOf(DocumentFormat.OpenXml.Wordprocessing.FieldChar,Qhta.OpenXmlTools.TextOptions)">
            <summary>
            Get the text of the FieldChar element.
            </summary>
            <param name="fieldChar"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.GetTextMethods.GetTextOf(DocumentFormat.OpenXml.Wordprocessing.FieldCode,Qhta.OpenXmlTools.TextOptions)">
            <summary>
            Get the text of the FieldCode element.
            </summary>
            <param name="fieldCode"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.GetTextMethods.GetTextOf(DocumentFormat.OpenXml.Wordprocessing.DayLong,Qhta.OpenXmlTools.TextOptions)">
            <summary>
            Get the text of the DayLong element.
            </summary>
            <param name="dayLong"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.GetTextMethods.GetSystemLongDay(DocumentFormat.OpenXml.Packaging.MainDocumentPart)">
            <summary>
            
            </summary>
            <param name="mainDocumentPart"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.GetTextMethods.GetTextOf(DocumentFormat.OpenXml.Wordprocessing.DayShort,Qhta.OpenXmlTools.TextOptions)">
            <summary>
            Get the text of the DayShort element.
            </summary>
            <param name="dayShort"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.GetTextMethods.GetSystemShortDay(DocumentFormat.OpenXml.Packaging.MainDocumentPart)">
            <summary>
            Get the system short day.
            </summary>
            <param name="mainDocumentPart"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.GetTextMethods.GetTextOf(DocumentFormat.OpenXml.Wordprocessing.MonthLong,Qhta.OpenXmlTools.TextOptions)">
            <summary>
            Get the text of the MonthLong element.
            </summary>
            <param name="MonthLong"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.GetTextMethods.GetSystemLongMonth(DocumentFormat.OpenXml.Packaging.MainDocumentPart)">
            <summary>
             Get the system long month.
            </summary>
            <param name="mainDocumentPart"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.GetTextMethods.GetTextOf(DocumentFormat.OpenXml.Wordprocessing.MonthShort,Qhta.OpenXmlTools.TextOptions)">
            <summary>
            Get the text of the MonthShort element.
            </summary>
            <param name="MonthShort"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.GetTextMethods.GetSystemShortMonth(DocumentFormat.OpenXml.Packaging.MainDocumentPart)">
            <summary>
            Get the system short month.
            </summary>
            <param name="mainDocumentPart"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.GetTextMethods.GetTextOf(DocumentFormat.OpenXml.Wordprocessing.YearLong,Qhta.OpenXmlTools.TextOptions)">
            <summary>
            Get the text of the YearLong element.
            </summary>
            <param name="YearLong"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.GetTextMethods.GetSystemLongYear(DocumentFormat.OpenXml.Packaging.MainDocumentPart)">
            <summary>
            Get the system long year.
            </summary>
            <param name="mainDocumentPart"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.GetTextMethods.GetTextOf(DocumentFormat.OpenXml.Wordprocessing.YearShort,Qhta.OpenXmlTools.TextOptions)">
            <summary>
            Get the text of the YearShort element.
            </summary>
            <param name="YearShort"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.GetTextMethods.GetSystemShortYear(DocumentFormat.OpenXml.Packaging.MainDocumentPart)">
            <summary>
            Get the system short year.
            </summary>
            <param name="mainDocumentPart"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.GetTextMethods.GetTextOf(DocumentFormat.OpenXml.Wordprocessing.FootnoteReference,Qhta.OpenXmlTools.TextOptions)">
            <summary>
            Get the text of the FootnoteReference element.
            </summary>
            <param name="footnoteReference"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.GetTextMethods.GetTextOf(DocumentFormat.OpenXml.Wordprocessing.EndnoteReference,Qhta.OpenXmlTools.TextOptions)">
            <summary>
            Get the text of the EndnoteReference element.
            </summary>
            <param name="endnoteReference"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.GetTextMethods.GetTextOf(DocumentFormat.OpenXml.Wordprocessing.CommentReference,Qhta.OpenXmlTools.TextOptions)">
            <summary>
            Get the text of the CommentReference element.
            </summary>
            <param name="commentReference"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.GetTextMethods.GetTextOf(DocumentFormat.OpenXml.Wordprocessing.FootnoteReferenceMark,Qhta.OpenXmlTools.TextOptions)">
            <summary>
            Get the text of the FootnoteReferenceMark element.
            </summary>
            <param name="footnoteReferenceMark"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.GetTextMethods.GetTextOf(DocumentFormat.OpenXml.Wordprocessing.EndnoteReferenceMark,Qhta.OpenXmlTools.TextOptions)">
            <summary>
            Get the text of the EndnoteReferenceMark element.
            </summary>
            <param name="endnoteReferenceMark"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.GetTextMethods.GetTextOf(DocumentFormat.OpenXml.Wordprocessing.AnnotationReferenceMark,Qhta.OpenXmlTools.TextOptions)">
            <summary>
            Get the text of the annotationReferenceMark element.
            </summary>
            <param name="annotationReferenceMark"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.GetTextMethods.GetTextOf(DocumentFormat.OpenXml.Wordprocessing.SeparatorMark,Qhta.OpenXmlTools.TextOptions)">
            <summary>
            Get the text of the SeparatorMark element.
            </summary>
            <param name="SeparatorMark"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.GetTextMethods.GetTextOf(DocumentFormat.OpenXml.Wordprocessing.ContinuationSeparatorMark,Qhta.OpenXmlTools.TextOptions)">
            <summary>
            Get the text of the continuationSeparatorMark element.
            </summary>
            <param name="continuationSeparatorMark"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.GetTextMethods.GetText(DocumentFormat.OpenXml.Wordprocessing.Paragraph)">
            <summary>
            Get the text of the paragraph using ParaText options.
            </summary>
            <param name="paragraph">source paragraph</param>
            <returns>joined text</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.GetTextMethods.GetTextOf(DocumentFormat.OpenXml.Wordprocessing.Paragraph,Qhta.OpenXmlTools.TextOptions)">
            <summary>
            Get the text of the paragraph.
            </summary>
            <param name="paragraph">source paragraph</param>
            <param name="options"></param>
            <returns>joined text</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.GetTextMethods.GetInnerText(DocumentFormat.OpenXml.Wordprocessing.Paragraph,Qhta.OpenXmlTools.TextOptions)">
            <summary>
            Get the text of the paragraph members elements.
            </summary>
            <param name="paragraph">source paragraph</param>
            <param name="options"></param>
            <returns>joined text</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.GetTextMethods.GetTextOf(DocumentFormat.OpenXml.Wordprocessing.Table,Qhta.OpenXmlTools.TextOptions)">
            <summary>
            Gets the text table including table tags
            </summary>
            <param name="table"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.GetTextMethods.GetInnerText(DocumentFormat.OpenXml.Wordprocessing.Table,Qhta.OpenXmlTools.TextOptions)">
            <summary>
            Gets the text of all rows in the table.
            </summary>
            <param name="table"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.GetTextMethods.GetTextOf(DocumentFormat.OpenXml.Wordprocessing.TableRow,Qhta.OpenXmlTools.TextOptions)">
            <summary>
            Gets the text of all cells in the table row.
            </summary>
            <param name="row"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.GetTextMethods.GetTextOf(DocumentFormat.OpenXml.Wordprocessing.TableCell,Qhta.OpenXmlTools.TextOptions)">
            <summary>
            Gets the text of the table cell.
            </summary>
            <param name="cell"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.GetTextMethods.GetInnerText(DocumentFormat.OpenXml.Wordprocessing.TableCell,Qhta.OpenXmlTools.TextOptions)">
            <summary>
            Gets inner text the table cell.
            </summary>
            <param name="cell"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.GetTextMethods.GetTextOf(DocumentFormat.OpenXml.Wordprocessing.Ruby,Qhta.OpenXmlTools.TextOptions)">
            <summary>
            Get the text content of the ruby element
            </summary>
            <param name="ruby"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.GetTextMethods.GetTextOf(DocumentFormat.OpenXml.Wordprocessing.EmbeddedObject,Qhta.OpenXmlTools.TextOptions)">
            <summary>
            Get the text for the embeddedObject element.
            </summary>
            <param name="embeddedObject"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.GetTextMethods.GetTextOf(DocumentFormat.OpenXml.Wordprocessing.ContentPart,Qhta.OpenXmlTools.TextOptions)">
            <summary>
            Get the text for the contentPart element.
            </summary>
            <param name="contentPart"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.GetTextMethods.GetTextOf(DocumentFormat.OpenXml.Wordprocessing.Drawing,Qhta.OpenXmlTools.TextOptions)">
            <summary>
            Get the text for the drawing element.
            </summary>
            <param name="drawing"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.GetTextMethods.GetTextOf(DocumentFormat.OpenXml.Drawing.Blip,Qhta.OpenXmlTools.TextOptions)">
            <summary>
            Get the text for the Blip element.
            </summary>
            <param name="blip"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="T:Qhta.OpenXmlTools.GotTextParser">
            <summary>
            This class parses text which was got with PlainText methods for OpenXml elements.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.GotTextParser.RootElement">
            <summary>
            Element which text will be parsed.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.GotTextParser.Options">
            <summary>
            Options used when text was taken from RootElement using PlainText method.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.GotTextParser.ErrorMessage">
            <summary>
            Message with error description if text was not parsed successfully.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.GotTextParser.#ctor(DocumentFormat.OpenXml.OpenXmlElement,Qhta.OpenXmlTools.TextOptions)">
            <summary>
            Constructor. Root element is the element which text will be parsed.
            </summary>
            <param name="rootElement">Element which text will be parsed.</param>
            <param name="options">Options used when text was taken from RootElement using PlainText method.</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.GotTextParser.ParseText(System.String)">
            <summary>
            Main method. Parses text. Returns true if text was parsed successfully.
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.GotTextParser.Dispose">
            <summary>
            Now implementation is empty
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.GotTextParser.ParseText(DocumentFormat.OpenXml.OpenXmlElement,System.String,System.Int32@)">
            <summary>
            Set text to a Run element.
            </summary>
            <param name="rootElement"></param>
            <param name="text"></param>
            <param name="pos">current parse position</param>
        </member>
        <member name="T:Qhta.OpenXmlTools.GraphicTools">
            <summary>
            Tools for working with graphics
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.GraphicTools.GetAnchorId(DocumentFormat.OpenXml.Drawing.Wordprocessing.Inline)">
            <summary>
            Get the anchor id of an inline
            </summary>
            <param name="inline"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.GraphicTools.SetAnchorId(DocumentFormat.OpenXml.Drawing.Wordprocessing.Inline,System.String)">
            <summary>
            Set the anchor id of an inline
            </summary>
            <param name="inline"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.GraphicTools.GetAnchorId(DocumentFormat.OpenXml.Drawing.Wordprocessing.Anchor)">
            <summary>
            Get the anchor id of an anchor
            </summary>
            <param name="anchor"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.GraphicTools.SetAnchorId(DocumentFormat.OpenXml.Drawing.Wordprocessing.Anchor,System.String)">
            <summary>
            Set the anchor id of an anchor
            </summary>
            <param name="anchor"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.GraphicTools.ConvertAnchorToInline(DocumentFormat.OpenXml.Drawing.Wordprocessing.Anchor)">
            <summary>
            Convert an Anchor to an Inline
            </summary>
            <param name="anchor"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.GraphicTools.ConvertFloatingPictureToInlinePicture(DocumentFormat.OpenXml.Wordprocessing.Picture)">
            <summary>
            Convert a floating picture to an inline picture
            </summary>
            <param name="picture"></param>
            <returns>Returns converted picture (or null if not converted)</returns>
        </member>
        <member name="T:Qhta.OpenXmlTools.GridColumnTools">
            <summary>
            Tools for working with grid columns in OpenXml documents.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.GridColumnTools.GetWidth(DocumentFormat.OpenXml.Wordprocessing.GridColumn)">
            <summary>
            Gets the width of the table grid column (in twips).
            </summary>
            <param name="gridColumn"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.GridColumnTools.SetWidth(DocumentFormat.OpenXml.Wordprocessing.GridColumn,System.Nullable{System.Int32})">
            <summary>
            Sets the width of the table grid column (in twips).
            </summary>
            <param name="gridColumn"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:Qhta.OpenXmlTools.HexByte">
            <summary>
            Represents HexByte integer value.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.HexByte.Value">
            <summary>
            Stored value.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.HexByte.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Qhta.OpenXmlTools.HexByte"/> struct with the integer value.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.HexByte.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Qhta.OpenXmlTools.HexByte"/> struct with the string value.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.HexByte.op_Implicit(System.Int32)~Qhta.OpenXmlTools.HexByte">
            <summary>
            Converts the integer to the <see cref="T:Qhta.OpenXmlTools.HexByte"/> struct.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.HexByte.op_Implicit(Qhta.OpenXmlTools.HexByte)~System.Int32">
            <summary>
            Converts the <see cref="T:Qhta.OpenXmlTools.HexByte"/> struct to the integer.
            </summary>
            <param name="hexInt"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.HexByte.op_Implicit(System.String)~System.Nullable{Qhta.OpenXmlTools.HexByte}">
            <summary>
            Converts the string value to the <see cref="T:Qhta.OpenXmlTools.HexByte"/> struct.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.HexByte.op_Implicit(System.Nullable{Qhta.OpenXmlTools.HexByte})~System.String">
            <summary>
            Converts the <see cref="T:Qhta.OpenXmlTools.HexByte"/> struct to the string.
            </summary>
            <param name="hexInt"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.HexByte.ToString">
            <summary>
            Converts the <see cref="T:Qhta.OpenXmlTools.HexByte"/> struct to the string.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Qhta.OpenXmlTools.HexInt">
            <summary>
            Represents a hexadecimal integer.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.HexInt.Value">
            <summary>
            Stored value.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.HexInt.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Qhta.OpenXmlTools.HexInt"/> struct with the integer value.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.HexInt.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Qhta.OpenXmlTools.HexInt"/> struct with the string value.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.HexInt.op_Implicit(System.Int32)~Qhta.OpenXmlTools.HexInt">
            <summary>
            Converts the integer to the <see cref="T:Qhta.OpenXmlTools.HexInt"/> struct.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.HexInt.op_Implicit(Qhta.OpenXmlTools.HexInt)~System.Int32">
            <summary>
            Converts the <see cref="T:Qhta.OpenXmlTools.HexInt"/> struct to the integer.
            </summary>
            <param name="hexInt"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.HexInt.op_Implicit(System.String)~System.Nullable{Qhta.OpenXmlTools.HexInt}">
            <summary>
            Converts the string value to the <see cref="T:Qhta.OpenXmlTools.HexInt"/> struct.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.HexInt.op_Implicit(System.Nullable{Qhta.OpenXmlTools.HexInt})~System.String">
            <summary>
            Converts the <see cref="T:Qhta.OpenXmlTools.HexInt"/> struct to the string.
            </summary>
            <param name="hexInt"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.HexInt.ToString">
            <summary>
            Converts the <see cref="T:Qhta.OpenXmlTools.HexInt"/> struct to the string.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Qhta.OpenXmlTools.HexRGB">
            <summary>
            Represents RGB integer color code.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.HexRGB.Value">
            <summary>
            Stored value.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.HexRGB.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Qhta.OpenXmlTools.HexRGB"/> struct with the integer value.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.HexRGB.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Qhta.OpenXmlTools.HexRGB"/> struct with the string value.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.HexRGB.op_Implicit(System.Int32)~Qhta.OpenXmlTools.HexRGB">
            <summary>
            Converts the integer to the <see cref="T:Qhta.OpenXmlTools.HexRGB"/> struct.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.HexRGB.op_Implicit(Qhta.OpenXmlTools.HexRGB)~System.Int32">
            <summary>
            Converts the <see cref="T:Qhta.OpenXmlTools.HexRGB"/> struct to the integer.
            </summary>
            <param name="hexInt"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.HexRGB.op_Implicit(System.String)~System.Nullable{Qhta.OpenXmlTools.HexRGB}">
            <summary>
            Converts the string value to the <see cref="T:Qhta.OpenXmlTools.HexRGB"/> struct.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.HexRGB.op_Implicit(System.Nullable{Qhta.OpenXmlTools.HexRGB})~System.String">
            <summary>
            Converts the <see cref="T:Qhta.OpenXmlTools.HexRGB"/> struct to the string.
            </summary>
            <param name="hexInt"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.HexRGB.ToString">
            <summary>
            Converts the <see cref="T:Qhta.OpenXmlTools.HexRGB"/> struct to the string.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Qhta.OpenXmlTools.HyperlinkTools">
            <summary>
            Contains tools for working with OpenXml Hyperlink elements.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.HyperlinkTools.SetText(DocumentFormat.OpenXml.Wordprocessing.Hyperlink,System.String,Qhta.OpenXmlTools.TextOptions)">
            <summary>
            Set the text of the hyperlink.
            </summary>
            <param name="hyperlink"></param>
            <param name="text"></param>
            <param name="options"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.HyperlinkTools.IsEmpty(DocumentFormat.OpenXml.Wordprocessing.Hyperlink)">
            <summary>
            Checks if the hyperlink is empty.
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.HyperlinkTools.GetRel(DocumentFormat.OpenXml.Wordprocessing.Hyperlink)">
            <summary>
            Get the reference relationship of the hyperlink.
            </summary>
            <param name="hyperlink"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.HyperlinkTools.TrimStart(DocumentFormat.OpenXml.Wordprocessing.Hyperlink)">
            <summary>
            Trim hyperlink text removing leading white spaces.
            </summary>
            <param name="hyperlink"></param>
            <returns>true if trimmed</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.HyperlinkTools.TrimEnd(DocumentFormat.OpenXml.Wordprocessing.Hyperlink)">
            <summary>
            Trim hyperlink text removing trailing white spaces.
            </summary>
            <param name="hyperlink"></param>
            <returns>true if trimmed</returns>
        </member>
        <member name="T:Qhta.OpenXmlTools.IndentationTools">
            <summary>
            Contains tools for working with indentation elements.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.IndentationTools.GetLeft(DocumentFormat.OpenXml.Wordprocessing.Indentation)">
            <summary>
            Get the Left indentation value.
            </summary>
            <param name="indentation"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.IndentationTools.SetLeft(DocumentFormat.OpenXml.Wordprocessing.Indentation,System.Nullable{System.Int32})">
            <summary>
            Set the Left indentation value.
            </summary>
            <param name="indentation"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.IndentationTools.GetStart(DocumentFormat.OpenXml.Wordprocessing.Indentation)">
            <summary>
            Get the Start indentation value.
            </summary>
            <param name="indentation"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.IndentationTools.SetStart(DocumentFormat.OpenXml.Wordprocessing.Indentation,System.Nullable{System.Int32})">
            <summary>
            Set the Start indentation value.
            </summary>
            <param name="indentation"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.IndentationTools.GetRight(DocumentFormat.OpenXml.Wordprocessing.Indentation)">
            <summary>
            Get the Right indentation value.
            </summary>
            <param name="indentation"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.IndentationTools.SetRight(DocumentFormat.OpenXml.Wordprocessing.Indentation,System.Nullable{System.Int32})">
            <summary>
            Set the Right indentation value.
            </summary>
            <param name="indentation"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.IndentationTools.GetEnd(DocumentFormat.OpenXml.Wordprocessing.Indentation)">
            <summary>
            Get the End indentation value.
            </summary>
            <param name="indentation"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.IndentationTools.SetEnd(DocumentFormat.OpenXml.Wordprocessing.Indentation,System.Nullable{System.Int32})">
            <summary>
            Set the End indentation value.
            </summary>
            <param name="indentation"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.IndentationTools.GetFirstLine(DocumentFormat.OpenXml.Wordprocessing.Indentation)">
            <summary>
            Get the FirstLine indentation value.
            </summary>
            <param name="indentation"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.IndentationTools.SetFirstLine(DocumentFormat.OpenXml.Wordprocessing.Indentation,System.Nullable{System.Int32})">
            <summary>
            Set the FirstLine indentation value.
            </summary>
            <param name="indentation"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.IndentationTools.GetHanging(DocumentFormat.OpenXml.Wordprocessing.Indentation)">
            <summary>
            Get the Hanging indentation value.
            </summary>
            <param name="indentation"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.IndentationTools.SetHanging(DocumentFormat.OpenXml.Wordprocessing.Indentation,System.Nullable{System.Int32})">
            <summary>
            Set the Hanging indentation value.
            </summary>
            <param name="indentation"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:Qhta.OpenXmlTools.ItemFilter">
            <summary>
            Specifies which items to count or get.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.ItemFilter.Defined">
            <summary>
            RowsCount or get only defined items.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.ItemFilter.All">
            <summary>
            RowsCount or get all items.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.ItemFilter.BuiltIn">
            <summary>
            RowsCount or get only built-in items.
            </summary>
        </member>
        <member name="T:Qhta.OpenXmlTools.LevelTools">
            <summary>
            Contains tools for working with numbering levels.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.LevelTools.IsBulleted(DocumentFormat.OpenXml.Wordprocessing.Level)">
            <summary>
            Determines if the level format is bulleted.
            </summary>
            <param name="level">Level to examine</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.LevelTools.IsDecimal(DocumentFormat.OpenXml.Wordprocessing.Level)">
            <summary>
            Determines if the level format is decimal.
            </summary>
            <param name="level">Level to examine</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.LevelTools.IsLowerLetter(DocumentFormat.OpenXml.Wordprocessing.Level)">
            <summary>
            Determines if the level format is lower letter.
            </summary>
            <param name="level">Level to examine</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.LevelTools.IsUpperLetter(DocumentFormat.OpenXml.Wordprocessing.Level)">
            <summary>
            Determines if the level format is upper letter.
            </summary>
            <param name="level">Level to examine</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.LevelTools.IsLowerRoman(DocumentFormat.OpenXml.Wordprocessing.Level)">
            <summary>
            Determines if the level format is lower roman.
            </summary>
            <param name="level">Level to examine</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.LevelTools.IsUpperRoman(DocumentFormat.OpenXml.Wordprocessing.Level)">
            <summary>
            Determines if the level format is upper roman.
            </summary>
            <param name="level">Level to examine</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.LevelTools.IsCompatibleWith(DocumentFormat.OpenXml.Wordprocessing.Level,System.String)">
            <summary>
            Determines if the level formatting is compatible with the numbering string.
            </summary>
            <param name="level"></param>
            <param name="numberingString"></param>
            <returns></returns>
        </member>
        <member name="T:Qhta.OpenXmlTools.ListTools">
            <summary>
            Extension methods for the numbering list.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.ListTools.GetNumberingId(DocumentFormat.OpenXml.Packaging.WordprocessingDocument,DocumentFormat.OpenXml.Wordprocessing.Paragraph)">
            <summary>
            Gets the numbering id of the paragraph.
            </summary>
            <param name="wordDocument"></param>
            <param name="paragraph"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ListTools.GetAbstractNumberingId(DocumentFormat.OpenXml.Packaging.WordprocessingDocument,DocumentFormat.OpenXml.Wordprocessing.Paragraph)">
            <summary>
            Gets the abstract numbering id of the paragraph.
            </summary>
            <param name="wordDocument"></param>
            <param name="paragraph"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ListTools.GetAbstractNumberingId(DocumentFormat.OpenXml.Packaging.WordprocessingDocument,System.Int32)">
            <summary>
            Gets the abstract numbering id of the numbering id.
            </summary>
            <param name="wordDocument"></param>
            <param name="numId"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ListTools.GetNumberingLevel(DocumentFormat.OpenXml.Packaging.WordprocessingDocument,DocumentFormat.OpenXml.Wordprocessing.Paragraph)">
            <summary>
            Gets the numbering level of the paragraph.
            </summary>
            <param name="wordDocument"></param>
            <param name="paragraph"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ListTools.GetNumberingProperties(DocumentFormat.OpenXml.Packaging.WordprocessingDocument,DocumentFormat.OpenXml.Wordprocessing.Paragraph)">
            <summary>
            Gets the numbering level of the paragraph.
            </summary>
            <param name="wordDocument"></param>
            <param name="paragraph"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ListTools.GetNumberingLevel(DocumentFormat.OpenXml.Packaging.WordprocessingDocument,DocumentFormat.OpenXml.Wordprocessing.NumberingProperties)">
            <summary>
            Gets the numbering level of the numbering properties.
            </summary>
            <param name="wordDocument"></param>
            <param name="numPr"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ListTools.GetNumberingLevelDef(DocumentFormat.OpenXml.Packaging.WordprocessingDocument,System.Int32,System.Int32)">
            <summary>
            Gets the numbering level definition.
            </summary>
            <param name="wordDocument"></param>
            <param name="abstractNumId"></param>
            <param name="levelNdx"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ListTools.GetOutlineLevel(DocumentFormat.OpenXml.Packaging.WordprocessingDocument,DocumentFormat.OpenXml.Wordprocessing.Paragraph)">
            <summary>
            Gets the outline level of the paragraph.
            </summary>
            <param name="wordDocument"></param>
            <param name="paragraph"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ListTools.GetListType(DocumentFormat.OpenXml.Packaging.WordprocessingDocument,System.Int32)">
            <summary>
            Gets the list type of the abstract numbering id.
            </summary>
            <param name="wordDocument"></param>
            <param name="abstractNumId"></param>
            <returns></returns>
        </member>
        <member name="T:Qhta.OpenXmlTools.MathPropertiesTools">
            <summary>
            Tools for working with math properties
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.MathPropertiesTools.HasMathProperties(DocumentFormat.OpenXml.Packaging.WordprocessingDocument)">
            <summary>
            Check if the document has math properties
            </summary>
            <param name="wordDoc">The WordprocessingDocument</param>
            <returns>True if the document has math properties</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.MathPropertiesTools.GetMathProperties(DocumentFormat.OpenXml.Packaging.WordprocessingDocument)">
            <summary>
            Gets the math properties from the document. If the document does not have math properties, the properties are created.
            </summary>
            <param name="wordDoc">The WordprocessingDocument</param>
            <returns>The instance of the math properties</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.MathPropertiesTools.Count(DocumentFormat.OpenXml.Math.MathProperties,Qhta.OpenXmlTools.ItemFilter)">
            <summary>
            Get the count of the properties.
            </summary>
            <param name="properties"></param>
            <param name="filter">specifies if all property names should be counted or non-empty ones</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.MathPropertiesTools.GetNames(DocumentFormat.OpenXml.Math.MathProperties,Qhta.OpenXmlTools.ItemFilter)">
            <summary>
            Get the names of the properties.
            </summary>
            <param name="properties"></param>
            <param name="filter">specifies if all property names should be listed or non-empty ones</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.MathPropertiesTools.GetType(DocumentFormat.OpenXml.Math.MathProperties,System.String)">
            <summary>
            Get the type of property with its name.
            </summary>
            <param name="properties"></param>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.MathPropertiesTools.GetDocument(DocumentFormat.OpenXml.Math.MathProperties)">
            <summary>
            Gets the <c>WordprocessingDocument</c> from the <c>MathProperties</c> object.
            </summary>
            <param name="properties"></param>
            <result>wordprocessing document</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.MathPropertiesTools.GetValue(DocumentFormat.OpenXml.Math.MathProperties,System.String)">
            <summary>
            Gets the value of a <c>MathProperties</c> property.
            </summary>
            <param name="properties"></param>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.MathPropertiesTools.SetValue(DocumentFormat.OpenXml.Math.MathProperties,System.String,System.Object)">
            <summary>
            Sets the value of a <c>MathProperties</c> property.
            </summary>
            <param name="properties"></param>
            <param name="propertyName"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.MathPropertiesTools.GetBreakBinary(DocumentFormat.OpenXml.Math.MathProperties)">
            <summary>
            Get the <c>BreakBinary</c> property value.
            </summary>
            <param name="properties"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.MathPropertiesTools.GetBreakBinarySubtraction(DocumentFormat.OpenXml.Math.MathProperties)">
            <summary>
            Get the <c>BreakBinarySubtraction</c> property value.
            </summary>
            <param name="properties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.MathPropertiesTools.GetDefaultJustification(DocumentFormat.OpenXml.Math.MathProperties)">
            <summary>
             Get the <c>DefaultJustification</c> property value.
            </summary>
            <param name="properties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.MathPropertiesTools.GetDisplayDefaults(DocumentFormat.OpenXml.Math.MathProperties)">
            <summary>
            Get the <c>DisplayDefaults</c> property value.
            </summary>
            <param name="properties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.MathPropertiesTools.GetInterSpacing(DocumentFormat.OpenXml.Math.MathProperties)">
            <summary>
            Get 
            </summary>
            <param name="properties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.MathPropertiesTools.GetIntegralLimitLocation(DocumentFormat.OpenXml.Math.MathProperties)">
            <summary>
            Get the <c>IntegralLimitLocations</c> property value.
            </summary>
            <param name="properties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.MathPropertiesTools.GetIntraSpacing(DocumentFormat.OpenXml.Math.MathProperties)">
            <summary>
            Get the <c>IntraSpacing</c> property value.
            </summary>
            <param name="properties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.MathPropertiesTools.GetLeftMargin(DocumentFormat.OpenXml.Math.MathProperties)">
            <summary>
            Get the <c>LeftMargin</c> property value.
            </summary>
            <param name="properties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.MathPropertiesTools.GetMathFont(DocumentFormat.OpenXml.Math.MathProperties)">
            <summary>
            Get the <c>MathFont</c> property value.
            </summary>
            <param name="properties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.MathPropertiesTools.GetNaryLimitLocation(DocumentFormat.OpenXml.Math.MathProperties)">
            <summary>
            Get the <c>NaryLimitLocation</c> property value.
            </summary>
            <param name="properties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.MathPropertiesTools.GetPostSpacing(DocumentFormat.OpenXml.Math.MathProperties)">
            <summary>
            Get the <c>PostSpacing</c> property value.
            </summary>
            <param name="properties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.MathPropertiesTools.GetPreSpacing(DocumentFormat.OpenXml.Math.MathProperties)">
            <summary>
            Get the <c>PreSpacing</c> property value.
            </summary>
            <param name="properties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.MathPropertiesTools.GetRightMargin(DocumentFormat.OpenXml.Math.MathProperties)">
            <summary>
            Get the <c>RightMargin</c> property value.
            </summary>
            <param name="properties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.MathPropertiesTools.GetSmallFraction(DocumentFormat.OpenXml.Math.MathProperties)">
            <summary>
            Get the <c>SmallFraction</c> property value.
            </summary>
            <param name="properties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.MathPropertiesTools.GetWrapIndent(DocumentFormat.OpenXml.Math.MathProperties)">
            <summary>
            Get the <c>WrapIndent</c> property value.
            </summary>
            <param name="properties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.MathPropertiesTools.GetWrapRight(DocumentFormat.OpenXml.Math.MathProperties)">
            <summary>
            Get the <c>WrapRight</c> property value.
            </summary>
            <param name="properties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.MathPropertiesTools.SetBreakBinary(DocumentFormat.OpenXml.Math.MathProperties,System.Nullable{DocumentFormat.OpenXml.Math.BreakBinaryOperatorValues})">
            <summary>
            Set <c>BreakBinary</c> property value.
            </summary>
            <param name="properties"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.MathPropertiesTools.SetBreakBinarySubtraction(DocumentFormat.OpenXml.Math.MathProperties,System.Nullable{DocumentFormat.OpenXml.Math.BreakBinarySubtractionValues})">
            <summary>
            Set <c>BreakBinarySubtraction</c> property value.
            </summary>
            <param name="properties"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.MathPropertiesTools.SetDefaultJustification(DocumentFormat.OpenXml.Math.MathProperties,System.Nullable{DocumentFormat.OpenXml.Math.JustificationValues})">
            <summary>
            Set <c>DefaultJustification</c> property value.
            </summary>
            <param name="properties"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.MathPropertiesTools.SetDisplayDefaults(DocumentFormat.OpenXml.Math.MathProperties,System.Nullable{DocumentFormat.OpenXml.Math.BooleanValues})">
            <summary>
            Set <c>DisplayDefaults</c> property value.
            </summary>
            <param name="properties"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.MathPropertiesTools.SetInterSpacing(DocumentFormat.OpenXml.Math.MathProperties,System.Nullable{Qhta.OpenXmlTools.Twips})">
            <summary>
            Set
            </summary>
            <param name="properties"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.MathPropertiesTools.SetIntegralLimitLocation(DocumentFormat.OpenXml.Math.MathProperties,System.Nullable{DocumentFormat.OpenXml.Math.LimitLocationValues})">
            <summary>
            Set <c>IntegralLimitLocation</c> property value.
            </summary>
            <param name="properties"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.MathPropertiesTools.SetIntraSpacing(DocumentFormat.OpenXml.Math.MathProperties,System.Nullable{Qhta.OpenXmlTools.Twips})">
            <summary>
            Set <c>IntraSpacing</c> property value.
            </summary>
            <param name="properties"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.MathPropertiesTools.SetLeftMargin(DocumentFormat.OpenXml.Math.MathProperties,System.Nullable{Qhta.OpenXmlTools.Twips})">
            <summary>
            Set <c>LeftMargin</c> property value.
            </summary>
            <param name="properties"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.MathPropertiesTools.SetMathFont(DocumentFormat.OpenXml.Math.MathProperties,System.String)">
            <summary>
            Set <c>MathFont</c> property value.
            </summary>
            <param name="properties"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.MathPropertiesTools.SetNaryLimitLocation(DocumentFormat.OpenXml.Math.MathProperties,System.Nullable{DocumentFormat.OpenXml.Math.LimitLocationValues})">
            <summary>
            Set <c>NaryLimitLocation</c> property value.
            </summary>
            <param name="properties"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.MathPropertiesTools.SetPostSpacing(DocumentFormat.OpenXml.Math.MathProperties,System.Nullable{Qhta.OpenXmlTools.Twips})">
            <summary>
            Set <c>PostSpacing</c> property value.
            </summary>
            <param name="properties"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.MathPropertiesTools.SetPreSpacing(DocumentFormat.OpenXml.Math.MathProperties,System.Nullable{Qhta.OpenXmlTools.Twips})">
            <summary>
            Set <c>PreSpacing</c> property value.
            </summary>
            <param name="properties"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.MathPropertiesTools.SetRightMargin(DocumentFormat.OpenXml.Math.MathProperties,System.Nullable{Qhta.OpenXmlTools.Twips})">
            <summary>
            Set <c>RightMargin</c> property value.
            </summary>
            <param name="properties"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.MathPropertiesTools.SetSmallFraction(DocumentFormat.OpenXml.Math.MathProperties,System.Nullable{DocumentFormat.OpenXml.Math.BooleanValues})">
            <summary>
            Set <c>SmallFraction</c> property value.
            </summary>
            <param name="properties"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.MathPropertiesTools.SetWrapIndent(DocumentFormat.OpenXml.Math.MathProperties,System.Nullable{Qhta.OpenXmlTools.Twips})">
            <summary>
            Set <c>WrapIndent</c> property value.
            </summary>
            <param name="properties"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.MathPropertiesTools.SetWrapRight(DocumentFormat.OpenXml.Math.MathProperties,System.Nullable{DocumentFormat.OpenXml.Math.BooleanValues})">
            <summary>
            Set <c>WrapRight</c> property value.
            </summary>
            <param name="properties"></param>
            <param name="value"></param>
        </member>
        <member name="T:Qhta.OpenXmlTools.NumberingExtraTools">
            <summary>
            Tools for working with OpenXml Wordprocessing Numbering elements.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.NumberingExtraTools.GetNumberingString(System.String)">
            <summary>
            Gets the numbering string from a string.
            Numbering string is the first sequence of digits, periods or letters followed with a space or tab.
            Numbering string may be ended with a closing parenthesis.
            Numbering string should be valid.
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.NumberingExtraTools.IsValidNumbering(System.String)">
            <summary>
            Determines if the string is a valid numbering string.
            String is trimmed and final closing parenthesis (if exists) is removed before checking.
            First string is divided to parts by periods.
            Then each part is checked if it is a valid numbering part.
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.NumberingExtraTools.IsValidNumberingSegment(System.String)">
            <summary>
            Determines if the string is a valid numbering segment.
            To be valid, the segment should contain only digits, letters.
            It may be a single letter or a valid roman number sequence of digits.
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.NumberingExtraTools.GetNumberingString(DocumentFormat.OpenXml.Wordprocessing.Paragraph,Qhta.OpenXmlTools.TextOptions)">
            <summary>
            Get the numbering string of the paragraph.
            If the paragraph is numbered, the string is taken from the numbering list.
            If the paragraph is not numbered, the string is taken from the paragraph text.
            First sequence of digits, periods or letters is returned.
            Only single periods and single letters are allowed.
            </summary>
            <param name="paragraph"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.NumberingExtraTools.GetNumberingList(DocumentFormat.OpenXml.Wordprocessing.Paragraph)">
            <summary>
            Get the numbering list of the paragraph.
            </summary>
            <param name="paragraph"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.NumberingExtraTools.GetNumberingInstance(DocumentFormat.OpenXml.Wordprocessing.Paragraph)">
            <summary>
            Get the numbering instance of the paragraph.
            </summary>
            <param name="paragraph"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.NumberingExtraTools.GetAbstractNum(DocumentFormat.OpenXml.Wordprocessing.NumberingInstance)">
            <summary>
            Get the abstract numbering of the numbering instance
            </summary>
            <param name="numInstance"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.NumberingExtraTools.GetNumberingId(DocumentFormat.OpenXml.Wordprocessing.Paragraph)">
            <summary>
            Get the numbering instance id of the paragraph.
            </summary>
            <param name="paragraph">Source paragraph element</param>
            <returns>Integer numbering instance id or null</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.NumberingExtraTools.GetAbstractNumberingId(DocumentFormat.OpenXml.Wordprocessing.Paragraph)">
            <summary>
            Get the abstract numbering definition id of the paragraph.
            </summary>
            <param name="paragraph">Source paragraph element</param>
            <returns>Integer abstract numbering id or null</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.NumberingExtraTools.GetNumberingDefinitions(DocumentFormat.OpenXml.Packaging.MainDocumentPart)">
            <summary>
            Get the numbering element from the word document's numbering definition part.
            If the numbering definition part is not found, it is created.
            </summary>
            <param name="mainDocumentPart">Main part of the Wordprocessing document.</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.NumberingExtraTools.GetBulletedNumbering(DocumentFormat.OpenXml.Packaging.MainDocumentPart,System.Char,System.Int32)">
            <summary>
            Get numbering instance which is assigned to abstract numbering level with bullet.
            If there is no such numbering instance, it is created.
            </summary>
            <param name="mainDocumentPart"></param>
            <param name="bullet">symbol to compare with numbering text</param>
            <param name="level">minimal level that is checked</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.NumberingExtraTools.GetAbstractNumId(DocumentFormat.OpenXml.Packaging.WordprocessingDocument,System.Int32)">
            <summary>
            Get the abstract numbering definition id of the numbering instance id.
            </summary>
            <param name="wordDocument">Source Wordprocessing document to which the numbering instance belongs.</param>
            <param name="numId">Numbering instance id</param>
            <returns>Integer abstract numbering id or null</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.NumberingExtraTools.GetAbstractNum(DocumentFormat.OpenXml.Wordprocessing.Numbering,System.Int32)">
            <summary>
            Get the abstract numbering definition with an id.
            </summary>
            <param name="numbering">Numbering element to which the abstract numbering belongs.</param>
            <param name="numId">Numbering instance id</param>
            <returns>Integer abstract numbering id or null</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.NumberingExtraTools.GetNumberingLevel(DocumentFormat.OpenXml.Wordprocessing.Paragraph)">
            <summary>
            Get the numbering level of the paragraph.
            </summary>
            <param name="paragraph">Source paragraph element</param>
            <returns>Integer numbering level (from 0 to 9) or null</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.NumberingExtraTools.GetNumberingProperties(DocumentFormat.OpenXml.Wordprocessing.Paragraph)">
            <summary>
            Get the numbering properties of the paragraph or of the paragraph style.
            </summary>
            <param name="paragraph">Source paragraph element</param>
            <returns>Numbering properties or null</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.NumberingExtraTools.SetNumbering(DocumentFormat.OpenXml.Wordprocessing.Paragraph,DocumentFormat.OpenXml.Wordprocessing.AbstractNum,DocumentFormat.OpenXml.Wordprocessing.Level)">
            <summary>
            Set the numbering of the paragraph.
            </summary>
            <param name="paragraph"></param>
            <param name="abstractNum"></param>
            <param name="level"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.NumberingExtraTools.SetNumberingProperties(DocumentFormat.OpenXml.Wordprocessing.Paragraph,DocumentFormat.OpenXml.Wordprocessing.NumberingProperties)">
            <summary>
            Get the numbering properties of the paragraph or of the paragraph style.
            </summary>
            <param name="paragraph">Source paragraph element</param>
            <param name="numPr">Numbering properties or null</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.NumberingExtraTools.GetNumberingLevel(DocumentFormat.OpenXml.Wordprocessing.NumberingProperties)">
            <summary>
            Get the numbering level of the numbering properties.
            </summary>
            <param name="numPr">Numbering properties element</param>
            <returns>Integer numbering level (from 0 to 8) or null</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.NumberingExtraTools.GetNumberingLevelDef(DocumentFormat.OpenXml.Packaging.WordprocessingDocument,System.Int32,System.Int32)">
            <summary>
            Get the numbering level definition of the abstract numbering id and the level index.
            </summary>
            <param name="wordDocument">Source Wordprocessing document</param>
            <param name="abstractNumId">Abstract numbering definition id</param>
            <param name="levelNdx">level index</param>
            <returns>Level definition or null</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.NumberingExtraTools.GetLevelIndex(DocumentFormat.OpenXml.Wordprocessing.Level)">
            <summary>
            Get the numbering level definition of the level definition.
            </summary>
            <param name="level"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.NumberingExtraTools.SetLevelIndex(DocumentFormat.OpenXml.Wordprocessing.Level,System.Nullable{System.Int32})">
            <summary>
            Set the numbering level definition of the level definition.
            </summary>
            <param name="level"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.NumberingExtraTools.GetOutlineLevel(DocumentFormat.OpenXml.Packaging.WordprocessingDocument,DocumentFormat.OpenXml.Wordprocessing.Paragraph)">
            <summary>
             Get the outline level of the paragraph.
            </summary>
            <param name="wordDocument">Source Wordprocessing document to which the paragraph belongs.</param>
            <param name="paragraph">Source paragraph element</param>
            <returns>Integer outline level (from 0 to 8) or null</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.NumberingExtraTools.GetListType(DocumentFormat.OpenXml.Packaging.WordprocessingDocument,System.Int32)">
            <summary>
            Get the list type of the abstract numbering id.
            </summary>
            <param name="wordDocument">Source Wordprocessing document to which the abstract numbering belongs.</param>
            <param name="abstractNumId">id of the abstract numbering</param>
            <returns><see cref="T:DocumentFormat.OpenXml.Wordprocessing.NumberFormatValues"/> enum value or null</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.NumberingExtraTools.GetListText(DocumentFormat.OpenXml.Packaging.WordprocessingDocument,System.Int32,System.Int32)">
            <summary>
            Get the list text of the abstract numbering id and the level index.
            </summary>
            <param name="wordDocument">Source Wordprocessing document to which the abstract numbering belongs.</param>
            <param name="abstractNumId">id of the abstract numbering</param>
            <param name="levelNdx">level index</param>
            <returns>Level text or null</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.NumberingExtraTools.JoinSingleLevelsHybridMultiLevel(DocumentFormat.OpenXml.Wordprocessing.Level[])">
            <summary>
            Create a new hybrid multilevel abstract numbering definition from an array a single level abstract numbering definition.
            </summary>
            <param name="levels">Array of source levels. Should be single element elements</param>
            <returns>Joined hybrid multilevel abstract numbering definition element containing source elements</returns>
            <remarks>
            Subsequent levels are additionally indented by the left indent of the previous level.
            </remarks>
        </member>
        <member name="M:Qhta.OpenXmlTools.NumberingExtraTools.IsBulleted(DocumentFormat.OpenXml.Wordprocessing.AbstractNum)">
            <summary>
            Check if the abstract numbering definition is bulleted.
            </summary>
            <param name="abstractNum"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.NumberingExtraTools.GetNumberingStatistics(DocumentFormat.OpenXml.OpenXmlCompositeElement)">
            <summary>
            Get statistics of abstract numbering used in paragraphs. If the run does not contain font information, return default properties statistic.
            </summary>
            <param name="element">composite element to examine</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.NumberingExtraTools.FindMostFrequentBulletedAbstractNumbering(DocumentFormat.OpenXml.OpenXmlCompositeElement)">
            <summary>
            Find and return the most frequent bulleted abstract numbering.
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.NumberingExtraTools.GetNumberingInstanceStatistics(DocumentFormat.OpenXml.OpenXmlCompositeElement,System.Nullable{System.Int32})">
            <summary>
            Get statistics of numbering instances used in paragraphs. If the run does not contain font information, return default properties statistic.
            </summary>
            <param name="element">composite element to examine</param>
            <param name="abstractNumId">optional abstract numbering Id to filter statistics</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.NumberingExtraTools.IsNumbered(DocumentFormat.OpenXml.Wordprocessing.Paragraph)">
            <summary>
            Check if the paragraph is numbered.
            </summary>
            <param name="paragraph"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.NumberingExtraTools.GetPreviousNumberedParagraph(DocumentFormat.OpenXml.Wordprocessing.Paragraph)">
            <summary>
            Find the previous paragraph that is numbered.
            </summary>
            <param name="paragraph"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.NumberingExtraTools.GetNextNumberedParagraph(DocumentFormat.OpenXml.Wordprocessing.Paragraph)">
            <summary>
            Find the next paragraph that is numbered.
            </summary>
            <param name="paragraph"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.NumberingExtraTools.IsBulleted(DocumentFormat.OpenXml.Wordprocessing.Paragraph)">
            <summary>
            Check if the paragraph is bulleted.
            </summary>
            <param name="paragraph"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.NumberingExtraTools.GetPreviousBulletedParagraph(DocumentFormat.OpenXml.Wordprocessing.Paragraph)">
            <summary>
            Find the previous paragraph that is bulleted.
            </summary>
            <param name="paragraph"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.NumberingExtraTools.GetNextBulletedParagraph(DocumentFormat.OpenXml.Wordprocessing.Paragraph)">
            <summary>
            Find the next paragraph that is numbered.
            </summary>
            <param name="paragraph"></param>
            <returns></returns>
        </member>
        <member name="T:Qhta.OpenXmlTools.NumberingInstanceTools">
            <summary>
            A collection of tools for working with NumberingInstance elements.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.NumberingInstanceTools.GetNumberingId(DocumentFormat.OpenXml.Wordprocessing.NumberingInstance)">
            <summary>
            Get the numbering ID of the numbering instance.
            </summary>
            <param name="numberingInstance"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.NumberingInstanceTools.SetNumberingId(DocumentFormat.OpenXml.Wordprocessing.NumberingInstance,System.Nullable{System.Int32})">
            <summary>
            Set the numbering ID of the numbering instance.
            If value to set is null, the element will be removed.
            </summary>
            <param name="numberingInstance"></param>
            <param name="numberingId"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.NumberingInstanceTools.GetAbstractNumId(DocumentFormat.OpenXml.Wordprocessing.NumberingInstance)">
            <summary>
            Get the abstract number ID of the numbering instance.
            </summary>
            <param name="numberingInstance"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.NumberingInstanceTools.SetAbstractNumId(DocumentFormat.OpenXml.Wordprocessing.NumberingInstance,System.Nullable{System.Int32})">
            <summary>
            Set the abstract number ID of the numbering instance.
            If value to set is null, the element will be removed.
            </summary>
            <param name="numberingInstance"></param>
            <param name="abstractNumId"></param>
        </member>
        <member name="T:Qhta.OpenXmlTools.NumberingList">
            <summary>
            Class to represent a collection of numbered paragraphs in OpenXml document.
            </summary>
            <param name="instance"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.NumberingList.#ctor(DocumentFormat.OpenXml.Wordprocessing.NumberingInstance)">
            <summary>
            Class to represent a collection of numbered paragraphs in OpenXml document.
            </summary>
            <param name="instance"></param>
        </member>
        <member name="P:Qhta.OpenXmlTools.NumberingList.Instance">
            <summary>
            OpenXml numbering instance.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.NumberingList.AbstractNum">
            <summary>
            Abstract numbering definition.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.NumberingList.GetNumberingString(DocumentFormat.OpenXml.Wordprocessing.Paragraph,Qhta.OpenXmlTools.TextOptions)">
            <summary>
            Method to get the numbering string of the paragraph.
            </summary>
            <param name="paragraph"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.NumberingList.ToRoman(System.Int32)">
            <summary>
            Converts a number to a Roman numeral.
            </summary>
            <param name="number"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="T:Qhta.OpenXmlTools.NumberingPropertiesTools">
            <summary>
            A collection of tools for working with <c>NumberingProperties</c> element.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.NumberingPropertiesTools.GetNumberingId(DocumentFormat.OpenXml.Wordprocessing.NumberingProperties)">
            <summary>
            Get the numbering id of the numbering properties.
            </summary>
            <param name="numberingProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.NumberingPropertiesTools.SetNumberingId(DocumentFormat.OpenXml.Wordprocessing.NumberingProperties,System.Nullable{System.Int32})">
            <summary>
            Set the numbering id of the numbering properties.
            If value to set is null, the element will be removed.
            </summary>
            <param name="numberingProperties"></param>
            <param name="id"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.NumberingPropertiesTools.GetNumberingLevelReference(DocumentFormat.OpenXml.Wordprocessing.NumberingProperties)">
            <summary>
            Get the numbering level reference of the numbering properties.
            </summary>
            <param name="numberingProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.NumberingPropertiesTools.SetNumberingLevelReference(DocumentFormat.OpenXml.Wordprocessing.NumberingProperties,System.Nullable{System.Int32})">
            <summary>
            Set the numbering level reference  of the numbering properties.
            If value to set is null, the element will be removed.
            </summary>
            <param name="numberingProperties"></param>
            <param name="level"></param>
        </member>
        <member name="T:Qhta.OpenXmlTools.NumberingTools">
            <summary>
            A collection of tools for working with <c>Numbering</c> element.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.NumberingTools.GetNewAbstractNumId(DocumentFormat.OpenXml.Wordprocessing.Numbering)">
            <summary>
            Get the new abstract number ID unique of all the abstract numbering elements.
            </summary>
            <param name="numbering">Element to examine</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.NumberingTools.GetDefaultBulletedAbstractNumbering(DocumentFormat.OpenXml.Wordprocessing.Numbering)">
            <summary>
            Get or create bulleted abstract numbering.
            </summary>
            <param name="numbering">Element to process</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.NumberingTools.GetNewNumberingInstanceId(DocumentFormat.OpenXml.Wordprocessing.Numbering)">
            <summary>
            Get the new numbering instance ID unique of all the numbering instance elements.
            </summary>
            <param name="numbering">Element to examine</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.NumberingTools.GetNumberingInstance(DocumentFormat.OpenXml.Wordprocessing.Numbering,System.Int32)">
            <summary>
            Get or create numbering instance for an abstract numbering.
            </summary>
            <param name="numbering">Element to process</param>
            <param name="abstractNumId">Abstract numbering id</param>
            <returns></returns>
        </member>
        <member name="T:Qhta.OpenXmlTools.ObjectStatistics">
            <summary>
            Represents the statistics of Objects.
            Each entry in the dictionary represents an object and the number of times it is used.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.ObjectStatistics.Add(System.Object,System.Int32)">
            <summary>
            Adds an object count to the statistics.
            If the oject is already in the statistics, the given count is added to existing object count.
            Otherwise, the object is added to the statistics with the given count.
            </summary>
            <param name="str">Added Object</param>
            <param name="count">Added Object count</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.ObjectStatistics.Add(System.Object)">
            <summary>
            Adds an object to the statistics.
            If the object is already in the statistics, its count is incremented.
            Otherwise, the object is added to the statistics with the count of 1.  
            </summary>
            <param name="str"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.ObjectStatistics.MostFrequent">
            <summary>
            Returns the object that has the highest count.
            If two objects have the same count, the first one is returned.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ObjectStatistics.Add(Qhta.OpenXmlTools.ObjectStatistics)">
            <summary>
            Adds the counts of another ObjectStatistics object to this object.
            </summary>
            <param name="other"></param>
        </member>
        <member name="T:Qhta.OpenXmlTools.ObjectStatistics`1">
            <summary>
            Represents the statistics of object of a specific type.
            Each entry in the dictionary represents an object and the number of times it is used.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.ObjectStatistics`1.Add(`0,System.Int32)">
            <summary>
            Adds an object count to the statistics.
            If the object is already in the statistics, the given count is added to existing object count.
            Otherwise, the object is added to the statistics with the given count.
            </summary>
            <param name="item">Added object</param>
            <param name="count">Added object count</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.ObjectStatistics`1.Add(`0)">
            <summary>
            Adds an object to the statistics.
            If the object is already in the statistics, its count is incremented.
            Otherwise, the object is added to the statistics with the count of 1.  
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.ObjectStatistics`1.MostFrequent">
            <summary>
            Returns the object that has the highest count.
            If two objects have the same count, the first one is returned.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ObjectStatistics`1.Add(Qhta.OpenXmlTools.ObjectStatistics{`0})">
            <summary>
            Adds the counts of another ObjectStatistics object to this object.
            </summary>
            <param name="other"></param>
        </member>
        <member name="T:Qhta.OpenXmlTools.OpenXmlCompositeElementTools">
            <summary>
            Contains tools for working with OpenXml composite elements.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlCompositeElementTools.RemoveEmptyParagraphs(DocumentFormat.OpenXml.OpenXmlCompositeElement,System.Boolean)">
            <summary>
            Removes all the empty paragraphs from the document.
            </summary>
            <param name="body"></param>
            <param name="allDescendants">should remove in all descendants or at children level only</param>
            <returns>count of removed paragraphs</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlCompositeElementTools.RemoveProofErrors(DocumentFormat.OpenXml.OpenXmlCompositeElement)">
            <summary>
            Removes all <c>ProofError</c> and <c>ProofState</c> members from the element.
            </summary>
            <param name="element">Processed element</param>
            <returns>count of trimmed paragraphs</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlCompositeElementTools.FixKnownProofErrors(DocumentFormat.OpenXml.OpenXmlCompositeElement,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Fixing known proofing errors. Get invalid strings from the dictionary and replace them with valid ones.
            </summary>
            <param name="element">Processed element</param>
            <param name="dictionary">Dictionary of erroneous-proper strings</param>
            <returns>count of trimmed paragraphs</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlCompositeElementTools.TrimParagraphs(DocumentFormat.OpenXml.OpenXmlCompositeElement,Qhta.OpenXmlTools.TrimOptions)">
            <summary>
            Trimming all paragraphs endings.
            </summary>
            <param name="element">Processed element</param>
            <param name="options"></param>
            <returns>count of trimmed paragraphs</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlCompositeElementTools.NormalizeWhitespaces(DocumentFormat.OpenXml.OpenXmlCompositeElement,Qhta.OpenXmlTools.WhitespaceOptions)">
            <summary>
            Trimming all paragraphs endings.
            </summary>
            <param name="element">Processed element</param>
            <param name="options"></param>
            <returns>count of trimmed paragraphs</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlCompositeElementTools.ReplaceSymbolEncoding(DocumentFormat.OpenXml.OpenXmlCompositeElement)">
            <summary>
            Replace characters with a code between F000 and F0DD to corresponding unicode characters according to the symbol encoding.
            </summary>
            <param name="element">Processed element</param>
            <returns>number of replaced symbols</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlCompositeElementTools.FixLongWords(DocumentFormat.OpenXml.OpenXmlCompositeElement)">
            <summary>
            Insert an optional hyphens into long words, especially URL's.
            </summary>
            <param name="element">Processed element</param>
            <returns>number of fixed runs in the element</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlCompositeElementTools.JoinAdjacentRuns(DocumentFormat.OpenXml.OpenXmlCompositeElement)">
            <summary>
            Join all adjacent runs that have the same run properties.
            </summary>
            <param name="element">Processed element</param>
            <returns>number of joins</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlCompositeElementTools.RemoveContent(DocumentFormat.OpenXml.OpenXmlCompositeElement)">
            <summary>
            Removes all members from the element.
            </summary>
            <param name="element"/>/param>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlCompositeElementTools.JoinParagraphsInFirstColumn(DocumentFormat.OpenXml.OpenXmlCompositeElement)">
            <summary>
            Find tables that have invalid columns and fix them.
            Such tables have rows filled with empty cells.
            </summary>
            <param name="body">Processed body</param>
            <returns>number of cells fixed</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlCompositeElementTools.BreakParagraphsBefore(DocumentFormat.OpenXml.OpenXmlCompositeElement,System.String)">
            <summary>
            Browse paragraphs and break them before the specified string.
            </summary>
            <param name="body">Processed body</param>
            <param name="str">string to break paragraphs before</param>
            <returns>Number of broken paragraphs</returns>
        </member>
        <member name="T:Qhta.OpenXmlTools.OpenXmlElementTools">
            <summary>
            Tools for working with OpenXml elements.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlElementTools.NextElement(DocumentFormat.OpenXml.OpenXmlElement)">
            <summary>
            Get the next element in the document.
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlElementTools.IsOfType(DocumentFormat.OpenXml.OpenXmlElement,System.Type)">
            <summary>
            Checks if the element is the specified type.
            </summary>
            <param name="element">Checked element</param>
            <param name="type">
            Specified type to check the element.
            It must be one of the DocumentFormat.OpenXml.OpenXmlElement type.
            It must not be an empty array.
            </param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlElementTools.HasType(DocumentFormat.OpenXml.OpenXmlElement,System.Type[])">
            <summary>
            Checks if the element is one of the specified types.
            </summary>
            <param name="element">Checked element</param>
            <param name="types">
            A set of element types to check the element.
            It must be one of the DocumentFormat.OpenXml.OpenXmlElement types.
            It must not be an empty array.
            </param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlElementTools.IsEmpty(DocumentFormat.OpenXml.OpenXmlElement)">
            <summary>
            Checks if the element is empty.
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlElementTools.GetMembers(DocumentFormat.OpenXml.OpenXmlCompositeElement)">
            <summary>
            Get member elements (without properties) of the OpenXmlElement.
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlElementTools.RemoveAllMembers(DocumentFormat.OpenXml.OpenXmlCompositeElement)">
            <summary>
            Remove all member elements (without properties) of the OpenXmlElement.
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlElementTools.IsMember(DocumentFormat.OpenXml.OpenXmlElement)">
            <summary>
            Checks if the element is a member-typed element.
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlElementTools.NextSiblingMember(DocumentFormat.OpenXml.OpenXmlElement)">
            <summary>
            Gets the next sibling element of the OpenXmlElement which is a member.
            Omits non-member elements.
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlElementTools.PreviousSiblingMember(DocumentFormat.OpenXml.OpenXmlElement)">
            <summary>
            Gets the previous sibling element of the OpenXmlElement which is a member.
            Omits non-member elements.
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlElementTools.GetDocumentPart(DocumentFormat.OpenXml.OpenXmlElement)">
            <summary>
            Gets the document part of the OpenXmlElement. Works specially for Document, Header and Footer elements.
            </summary>
            <param name="xmlElement">Checked source element</param>
            <returns>Returned document part or null</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlElementTools.GetWordprocessingDocument(DocumentFormat.OpenXml.OpenXmlElement)">
            <summary>
            Get the <c>WordprocessingDocument</c> of the OpenXmlElement. 
            </summary>
            <param name="xmlElement">Checked source element</param>
            <returns>Returned document part or null</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlElementTools.GetRootElement(DocumentFormat.OpenXml.OpenXmlElement)">
            <summary>
            Recursively get the root element of the OpenXmlElement.
            </summary>
            <param name="xmlElement">Checked source element</param>
            <returns>Returned document part or null</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlElementTools.GetFirstElementStringValue``1(DocumentFormat.OpenXml.OpenXmlCompositeElement)">
            <summary>
            Get the string value of the first child element of the specified type of the <c>OpenXmlLeafTextElement</c>.
            </summary>
            <param name="xmlElement">checked element</param>
            <result>string value or null (on parse error)</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlElementTools.SetFirstElementStringValue``1(DocumentFormat.OpenXml.OpenXmlCompositeElement,System.String)">
            <summary>
            Set the text content of the first child element of the specified type of the <c>OpenXmlLeafTextElement</c> to the string value.
            </summary>
            <typeparam name="ElementType">Type of the element</typeparam>
            <param name="xmlElement">element to set</param>
            <param name="value">string value to set</param>
            <remarks>
            If the value is null, the existing element is removed.
            </remarks>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlElementTools.GetFirstElementStringTypeValue``1(DocumentFormat.OpenXml.OpenXmlCompositeElement)">
            <summary>
            Get the string value of the first child element of the specified type of the <c>StringType</c>.
            </summary>
            <param name="xmlElement">checked element</param>
            <result>string value or null (on parse error)</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlElementTools.SetFirstElementStringTypeValue``1(DocumentFormat.OpenXml.OpenXmlCompositeElement,System.String)">
            <summary>
            Set the value of the first child element of the specified type of the <c>StringType</c> to the string value.
            </summary>
            <typeparam name="ElementType">Type of the element</typeparam>
            <param name="xmlElement">element to set</param>
            <param name="value">string value to set</param>
            <remarks>
            If the value is null, the existing element is removed.
            </remarks>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlElementTools.GetFirstElementIntValue``1(DocumentFormat.OpenXml.OpenXmlCompositeElement)">
            <summary>
            Get the integer value of the first child element of the specified type of the <c>OpenXmlLeafTextElement</c>.
            </summary>
            <param name="xmlElement">checked element</param>
            <result>integer value or null (on parse error)</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlElementTools.SetFirstElementIntValue``1(DocumentFormat.OpenXml.OpenXmlCompositeElement,System.Nullable{System.Int32})">
            <summary>
            Set the text content of the first child element of the specified type  of the <c>OpenXmlLeafTextElement</c> to the integer value.
            </summary>
            <typeparam name="ElementType">element to set</typeparam>
            <param name="xmlElement">element to set</param>
            <param name="value">integer value (or null)</param>
            <remarks>
            If the value is null, the existing element is removed.
            </remarks>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlElementTools.GetFirstElementIntVal``1(DocumentFormat.OpenXml.OpenXmlCompositeElement)">
            <summary>
            Get the integer <c>Val</c> value of the first child element of the specified type of the <c>OpenXmlLeafElement</c>.
            </summary>
            <param name="xmlElement">checked element</param>
            <result>integer value or null</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlElementTools.SetFirstElementIntVal``1(DocumentFormat.OpenXml.OpenXmlCompositeElement,System.Nullable{System.Int32})">
            <summary>
            Set the <c>Val</c> property of the first child element of the specified type  of the <c>OpenXmlLeafElement</c> to the integer value.
            </summary>
            <typeparam name="ElementType">element to set</typeparam>
            <param name="xmlElement">element to set</param>
            <param name="value">integer value (or null)</param>
            <remarks>
            If the value is null, the existing element is removed.
            </remarks>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlElementTools.GetFirstNonNegativeShortTypeElementVal``1(DocumentFormat.OpenXml.OpenXmlCompositeElement)">
            <summary>
            Get the short integer <c>Val</c> value of the first child element of the specified type of the <c>NonNegativeShortType</c> element.
            </summary>
            <param name="xmlElement">checked element</param>
            <result>integer value or null</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlElementTools.SetFirstNonNegativeShortTypeElementVal``1(DocumentFormat.OpenXml.OpenXmlCompositeElement,System.Nullable{System.Int16})">
            <summary>
            Set the short integer <c>Val</c> value of the first child element of the specified type of the <c>NonNegativeShortType</c> element.
            </summary>
            <typeparam name="ElementType">element to set</typeparam>
            <param name="xmlElement">element to set</param>
            <param name="value">integer value (or null)</param>
            <remarks>
            If the value is null, the existing element is removed.
            </remarks>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlElementTools.GetFirstElementUShortVal``1(DocumentFormat.OpenXml.OpenXmlCompositeElement)">
            <summary>
            Get the short unsigned integer <c>Val</c> value of the first child element of the specified type of the <c>OpenXmlLeafTextElement</c> element.
            </summary>
            <param name="xmlElement">checked element</param>
            <result>integer value or null</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlElementTools.SetFirstElementUShortVal``1(DocumentFormat.OpenXml.OpenXmlCompositeElement,System.Nullable{System.UInt16})">
            <summary>
            Set the short unsigned integer <c>Val</c> value of the first child element of the specified type of the <c>OpenXmlLeafTextElement</c> element.
            </summary>
            <typeparam name="ElementType">element to set</typeparam>
            <param name="xmlElement">element to set</param>
            <param name="value">integer value (or null)</param>
            <remarks>
            If the value is null, the existing element is removed.
            </remarks>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlElementTools.GetFirstTwipsMeasureTypeElementVal``1(DocumentFormat.OpenXml.OpenXmlCompositeElement)">
            <summary>
            Get the <see cref="T:Qhta.OpenXmlTools.Twips"/> <c>Val</c> property of the first child element of the specified type of the <c>TwipsMeasureType</c> element.
            </summary>
            <param name="xmlElement">checked element</param>
            <result>integer value or null (on parse error)</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlElementTools.SetFirstTwipsMeasureTypeElementVal``1(DocumentFormat.OpenXml.OpenXmlCompositeElement,System.Nullable{Qhta.OpenXmlTools.Twips})">
             <summary>
            Set the <c>Val</c> property of the first child element of the specified type of the <c>TwipsMeasureType</c> element to the <see cref="T:Qhta.OpenXmlTools.Twips"/> value.
             </summary>
             <typeparam name="ElementType">element to set</typeparam>
             <param name="xmlElement">element to set</param>
             <param name="value">integer value (or null)</param>
             <remarks>
             If the value is null, the existing element is removed.
             </remarks>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlElementTools.GetFirstTwipsMeasureMathTypeElementVal``1(DocumentFormat.OpenXml.OpenXmlCompositeElement)">
            <summary>
            Get the <see cref="T:Qhta.OpenXmlTools.Twips"/> <c>Val</c> property of the first child element of the specified type of the <c>TwipsMeasureType</c> element.
            </summary>
            <param name="xmlElement">checked element</param>
            <result>integer value or null (on parse error)</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlElementTools.SetFirstTwipsMeasureMathTypeElementVal``1(DocumentFormat.OpenXml.OpenXmlCompositeElement,System.Nullable{Qhta.OpenXmlTools.Twips})">
             <summary>
            Set the <c>Val</c> property of the first child element of the specified type of the <c>TwipsMeasureType</c> element to the <see cref="T:Qhta.OpenXmlTools.Twips"/> value.
             </summary>
             <typeparam name="ElementType">element to set</typeparam>
             <param name="xmlElement">element to set</param>
             <param name="value">integer value (or null)</param>
             <remarks>
             If the value is null, the existing element is removed.
             </remarks>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlElementTools.GetFirstUnsignedInt7TypeElementVal``1(DocumentFormat.OpenXml.OpenXmlCompositeElement)">
            <summary>
            Get the byte <c>Val</c> property of the first child element of the specified type of the <c>UnsignedInt7Type</c> element.
            </summary>
            <param name="xmlElement">checked element</param>
            <result>integer value or null (on parse error)</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlElementTools.SetFirstUnsignedInt7TypeElementVal``1(DocumentFormat.OpenXml.OpenXmlCompositeElement,System.Nullable{System.Byte})">
             <summary>
            Set the <c>Val</c> property of the first child element of the specified type of the <c>UnsignedInt7Type</c> element to the byte value.
             </summary>
             <typeparam name="ElementType">element to set</typeparam>
             <param name="xmlElement">element to set</param>
             <param name="value">integer value (or null)</param>
             <remarks>
             If the value is null, the existing element is removed.
             </remarks>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlElementTools.GetFirstStringTypeElementVal``1(DocumentFormat.OpenXml.OpenXmlCompositeElement)">
            <summary>
            Get the string <c>Val</c> property of the first child element of the specified type of the <c>StringType</c> element.
            </summary>
            <param name="xmlElement">checked element</param>
            <result>string value or null</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlElementTools.SetFirstStringTypeElementVal``1(DocumentFormat.OpenXml.OpenXmlCompositeElement,System.String)">
            <summary>
            Set the <c>Val</c> property of the first child element of the specified type of the <c>StringType</c> element to the string value.
            </summary>
            <typeparam name="ElementType">element to set</typeparam>
            <param name="xmlElement">element to set</param>
            <param name="value">string value (or null)</param>
            <remarks>
            If the value is null, the existing element is removed.
            </remarks>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlElementTools.GetFirstString253TypeElementVal``1(DocumentFormat.OpenXml.OpenXmlCompositeElement)">
            <summary>
            Get the string <c>Val</c> property of the first child element of the specified type of the <c>String253Type</c> element.
            </summary>
            <param name="xmlElement">checked element</param>
            <result>string value or null</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlElementTools.SetFirstString253TypeElementVal``1(DocumentFormat.OpenXml.OpenXmlCompositeElement,System.String)">
            <summary>
            Set the <c>Val</c> property of the first child element of the specified type of the <c>String253Type</c> element to the string value.
            </summary>
            <typeparam name="ElementType">element to set</typeparam>
            <param name="xmlElement">element to set</param>
            <param name="value">string value (or null)</param>
            <remarks>
            If the value is null, the existing element is removed.
            </remarks>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlElementTools.GetFirstElementBoolValue``1(DocumentFormat.OpenXml.OpenXmlCompositeElement)">
            <summary>
            Get the boolean value of the first child element of the specified type of the <c>OpenXmlLeadTextElement</c>.
            </summary>
            <param name="xmlElement">checked element</param>
            <result>boolean value or null (on parse error)</result>
            <remarks>
              boolean value can be "true" or "false" (case-insensitive) or "1" or "0".
            </remarks>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlElementTools.SetFirstElementBoolValue``1(DocumentFormat.OpenXml.OpenXmlCompositeElement,System.Nullable{System.Boolean})">
            <summary>
            Set the text content of the first child element of the specified type of the <c>OpenXmlLeadTextElement</c> to the bool value.
            </summary>
            <typeparam name="ElementType">element to set</typeparam>
            <param name="xmlElement">element to set</param>
            <param name="value">bool value (or null)</param>
            <remarks>
            If the value is null, the text content is removed.
            </remarks>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlElementTools.GetOnOffTypeElement``1(DocumentFormat.OpenXml.OpenXmlCompositeElement)">
            <summary>
            Get the boolean value according to existence of the element of the specified type of the <c>OnOffType</c> in the composite element.
            If the element exists in the composite element and the <c>Val</c> property is <c>true</c>> or is empty. the result is true.
            Otherwise, the result is false.
            </summary>
            <typeparam name="ElementType">type of element to get</typeparam>
            <param name="xmlElement">checked element</param>
            <result>boolean value (not null)</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlElementTools.SetOnOffTypeElement``1(DocumentFormat.OpenXml.OpenXmlCompositeElement,System.Nullable{System.Boolean})">
            <summary>
            Set the existence of the element of the specified type of the <c>OnOffType</c> in the composite element according to the bool value.
            If the value is true, the element is added without the <c>Val</c> property.
            If the value is false, the element is added with the <c>Val</c> property set to <c>false</c>.
            if the value is null, the element is removed.
            </summary>
            <typeparam name="ElementType">type of element to set</typeparam>
            <param name="xmlElement">element to set</param>
            <param name="value">bool value (or null)</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlElementTools.GetFirstOnOffMathTypeElementVal``1(DocumentFormat.OpenXml.OpenXmlCompositeElement)">
            <summary>
            Get the boolean value of the first child element of the specified type of the <c>Math.OnOffType</c>.
            </summary>
            <param name="xmlElement">checked element</param>
            <result>boolean value or null (on parse error)</result>
            <remarks>
              boolean value can be "true" or "false" (case-insensitive) or "1" or "0".
            </remarks>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlElementTools.SetFirstOnOffMathTypeElementVal``1(DocumentFormat.OpenXml.OpenXmlCompositeElement,System.Nullable{DocumentFormat.OpenXml.Math.BooleanValues})">
            <summary>
            Set the text content of the first child element of the specified type of the <c>Math.OnOffType</c> to the bool value.
            </summary>
            <typeparam name="ElementType">element to set</typeparam>
            <param name="xmlElement">element to set</param>
            <param name="value">bool value (or null)</param>
            <remarks>
            If the value is null, the text content is removed.
            </remarks>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlElementTools.GetFirstOnOffValuesElementVal``1(DocumentFormat.OpenXml.OpenXmlCompositeElement)">
            <summary>
            Get the <c>Val</c> property of the first child element of the specified type of the <c>Office2010.Word.OnOffType</c> as the <c>OnOffValues</c> value.
            </summary>
            <param name="xmlElement">checked element</param>
            <result>boolean value or null (on parse error)</result>
            <remarks>
              boolean value can be "true" or "false" (case-insensitive) or "1" or "0".
            </remarks>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlElementTools.SetFirstOnOffValuesElementVal``1(DocumentFormat.OpenXml.OpenXmlCompositeElement,System.Nullable{DocumentFormat.OpenXml.Office2010.Word.OnOffValues})">
            <summary>
            Set the <c>Val</c> property of the first child element of the specified type of the <c>Office2010.Word.OnOffType</c> to the <c>OnOffValues</c> value.
            </summary>
            <typeparam name="ElementType">element to set</typeparam>
            <param name="xmlElement">element to set</param>
            <param name="value">bool value (or null)</param>
            <remarks>
            If the value is null, the text content is removed.
            </remarks>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlElementTools.GetFirstOnOffValueElementVal``1(DocumentFormat.OpenXml.OpenXmlCompositeElement)">
            <summary>
            Get the <c>Val</c> property of the first child element of the specified type of the <c>Office2013.Word.OnOffType</c> as the <c>OnOffValue</c> value.
            </summary>
            <param name="xmlElement">checked element</param>
            <result>boolean value or null (on parse error)</result>
            <remarks>
              boolean value can be "true" or "false" (case-insensitive) or "1" or "0".
            </remarks>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlElementTools.SetFirstOnOffValueElementVal``1(DocumentFormat.OpenXml.OpenXmlCompositeElement,DocumentFormat.OpenXml.OnOffValue)">
            <summary>
            Set the <c>Val</c> property of the first child element of the specified type of the <c>Office2013.Word.OnOffType</c> to the <c>OnOffValue</c> value.
            </summary>
            <typeparam name="ElementType">element to set</typeparam>
            <param name="xmlElement">element to set</param>
            <param name="value">bool value (or null)</param>
            <remarks>
            If the value is null, the text content is removed.
            </remarks>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlElementTools.GetFirstEmptyTypeElementAsBoolean``1(DocumentFormat.OpenXml.OpenXmlCompositeElement)">
            <summary>
            Get the boolean value indicating that a child <c>EmptyType</c> element exists.
            </summary>
            <param name="xmlElement">checked element</param>
            <result>boolean value (true or false)</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlElementTools.SetFirstEmptyTypeElementAsBoolean``1(DocumentFormat.OpenXml.OpenXmlCompositeElement,System.Nullable{System.Boolean})">
            <summary>
            Appends or removes a child <c>EmptyType</c> element depending on boolean value. 
            </summary>
            <typeparam name="ElementType">element to set</typeparam>
            <param name="xmlElement">element to set</param>
            <param name="value">bool value (or null)</param>
            <remarks>
            If the value is null, nothing is changed.
            If the value is true and the element of the specified type is not in the collection, it is added.
            If the value is false and the element of the specified type is in the collection, it is removed.
            </remarks>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlElementTools.GetFirstElement``1(DocumentFormat.OpenXml.OpenXmlCompositeElement)">
            <summary>
            Get first element of the specified type from the <c>OpenXmlCompositeElement</c>. 
            </summary>
            <param name="xmlElement"></param>
            <remarks>
            </remarks>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlElementTools.SetFirstElement``1(DocumentFormat.OpenXml.OpenXmlCompositeElement,``0)">
            <summary>
            Set first element of the specified type in the <c>OpenXmlCompositeElement</c>. 
            </summary>
            <param name="xmlElement"></param>
            <param name="value"></param>
            <remarks>
            If the value is null and the element of the specified type is already in the collection, it is removed.
            If the value equals existing element, nothing is changed.
            Otherwise, the existing element is removed and the new element is added.
            </remarks>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlElementTools.GetFirstElementStringVal``1(DocumentFormat.OpenXml.OpenXmlCompositeElement)">
            <summary>
            Get the <c>Val</c> property value of the first specified type element of the <c>OpenXmlCompositeElement</c> as a string.
            </summary>
            <param name="xmlElement"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlElementTools.SetFirstElementStringVal``1(DocumentFormat.OpenXml.OpenXmlCompositeElement,System.String)">
            <summary>
            Set the <c>Val</c> property value of the first specified type element in the <c>OpenXmlCompositeElement</c> as a string.
            </summary>
            <param name="xmlElement"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlElementTools.SetFirstElementVal``1(DocumentFormat.OpenXml.OpenXmlCompositeElement,System.Object)">
            <summary>
            Set the <c>Val</c> property value of the first specified type element in the <c>OpenXmlCompositeElement</c> as an object.
            </summary>
            <param name="xmlElement"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlElementTools.GetFirstElementHexIntVal``1(DocumentFormat.OpenXml.OpenXmlCompositeElement)">
            <summary>
            Get the <c>Val</c> property value of the first specified type element of the <c>OpenXmlCompositeElement</c> as a hex integer.
            </summary>
            <param name="xmlElement"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlElementTools.SetFirstElementHexIntVal``1(DocumentFormat.OpenXml.OpenXmlCompositeElement,System.Nullable{System.Int32})">
            <summary>
            Set the <c>Val</c> property value of the first specified type element in the <c>OpenXmlCompositeElement</c> as a hex integer.
            </summary>
            <param name="xmlElement"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlElementTools.GetFirstElementGuidVal``1(DocumentFormat.OpenXml.OpenXmlCompositeElement)">
            <summary>
            Get the <c>Val</c> property value of the first specified type element of the <c>OpenXmlCompositeElement</c> as a Guid value.
            </summary>
            <param name="xmlElement"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlElementTools.SetFirstElementGuidVal``1(DocumentFormat.OpenXml.OpenXmlCompositeElement,System.Nullable{System.Guid})">
            <summary>
            Set the <c>Val</c> property value of the first specified type element in the <c>OpenXmlCompositeElement</c> as a Guid value.
            </summary>
            <param name="xmlElement"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlElementTools.GetFirstElementDecimalValue``1(DocumentFormat.OpenXml.OpenXmlCompositeElement)">
            <summary>
            Get the fixed point real number value of the first child element of the specified type of the <c>OpenXmlLeafTextElement</c>.
            </summary>
            <param name="xmlElement">checked element</param>
            <result>decimal value or null (on parse error)</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlElementTools.SetFirstElementDecimalValue``1(DocumentFormat.OpenXml.OpenXmlCompositeElement,System.Nullable{System.Decimal})">
            <summary>
            Set the text content of the first child element of the specified type  of the <c>OpenXmlLeafTextElement</c> to the fixed point real value.
            </summary>
            <typeparam name="ElementType">element to set</typeparam>
            <param name="xmlElement">element to set</param>
            <param name="value">decimal value (or null)</param>
            <remarks>
            If the value is null, the existing element is removed.
            </remarks>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlElementTools.GetFirstElementDecimalNumberValue``1(DocumentFormat.OpenXml.OpenXmlCompositeElement)">
            <summary>
            Get the integer value of the first child element of the specified type of the <c>DecimalNumberType</c>.
            </summary>
            <param name="xmlElement">checked element</param>
            <result>decimal value or null (on parse error)</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlElementTools.SetFirstElementDecimalNumberValue``1(DocumentFormat.OpenXml.OpenXmlCompositeElement,System.Nullable{System.Int32})">
            <summary>
            Set the value of the first child element of the specified type  of the <c>DecimalNumberType</c> to integer val.
            </summary>
            <typeparam name="ElementType">element to set</typeparam>
            <param name="xmlElement">element to set</param>
            <param name="value">integer value (or null)</param>
            <remarks>
            If the value is null, the existing element is removed.
            </remarks>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlElementTools.SetAllElements``1(DocumentFormat.OpenXml.OpenXmlCompositeElement,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Set all elements of the first specified type element in the <c>OpenXmlCompositeElement</c>.
            </summary>
            <param name="xmlElement"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlElementTools.GetFirstEnumTypeElementVal``2(DocumentFormat.OpenXml.OpenXmlCompositeElement)">
            <summary>
            Get the <c>Val</c> value of the first specified type element of type <c>IEnumValueFactory</c> from the <c>OpenXmlCompositeElement</c>.
            </summary>
            <param name="xmlElement"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlElementTools.SetFirstEnumTypeElementVal``2(DocumentFormat.OpenXml.OpenXmlCompositeElement,System.Nullable{``1})">
            <summary>
            Set the value of the first specified type element of type <c>IEnumValueFactory</c>  in the <c>OpenXmlCompositeElement</c>.
            </summary>
            <param name="xmlElement"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlElementTools.SetFirstElementVal``2(DocumentFormat.OpenXml.OpenXmlCompositeElement,``1)">
            <summary>
            Set the value of the first specified type element in the <c>OpenXmlCompositeElement</c>.
            </summary>
            <param name="xmlElement"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlElementTools.GetValValue``1(DocumentFormat.OpenXml.OpenXmlElement)">
            <summary>
            Get the <c>Val</c> property of the specified type int the <c>OpenXmlLeafElement</c>.
            </summary>
            <typeparam name="ValType"></typeparam>
            <param name="xmlElement"></param>
            <exception cref="T:System.IO.InvalidDataException"></exception>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlElementTools.SetValValue``1(DocumentFormat.OpenXml.OpenXmlElement,``0)">
            <summary>
            Set the <c>Val</c> property of the specified type int the <c>OpenXmlLeafElement</c>.
            </summary>
            <typeparam name="ValType"></typeparam>
            <param name="xmlElement"></param>
            <param name="value"></param>
            <exception cref="T:System.IO.InvalidDataException"></exception>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlElementTools.GetFirstRelationshipElementId``1(DocumentFormat.OpenXml.OpenXmlCompositeElement)">
            <summary>
            Get the <c>Id</c> property of the first specified type from the <c>OpenXmlLeafElement</c>.
            </summary>
            <typeparam name="ElementType"></typeparam>
            <param name="xmlElement"></param>
            <exception cref="T:System.IO.InvalidDataException"></exception>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlElementTools.SetFirstRelationshipElementId``1(DocumentFormat.OpenXml.OpenXmlElement,System.String)">
            <summary>
            Set the <c>Id</c> property of the first specified type in the <c>OpenXmlLeafElement</c>.
            </summary>
            <typeparam name="ElementType"></typeparam>
            <param name="xmlElement"></param>
            <param name="value"></param>
            <exception cref="T:System.IO.InvalidDataException"></exception>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlElementTools.GetRelationshipValue(DocumentFormat.OpenXml.OpenXmlPartRootElement,System.String,System.String)">
            <summary>
            Get the relationship of the specified by <c>relationshipType</c> in the <c>OpenXmlPartRootElement</c>
            </summary>
            <param name="rootElement"></param>
            <param name="relationshipType"></param>
            <param name="rId"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlElementTools.SetRelationshipValue(DocumentFormat.OpenXml.OpenXmlPartRootElement,System.String,System.String)">
            <summary>
            Set the relationship of the specified by <c>relationshipType</c> in the <c>OpenXmlPartRootElement</c> to the specified value.
            </summary>
            <param name="rootElement"></param>
            <param name="relationshipType"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlElementTools.GetFirstElementVTBlobValue``1(DocumentFormat.OpenXml.OpenXmlCompositeElement)">
            <summary>
            Get the <c>VTBlob</c> value of the first child element of the specified type of the <c>OpenXmlCompositeElement</c>.
            </summary>
            <param name="xmlElement">checked element</param>
            <result>value or null</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlElementTools.SetFirstElementVTBlobValue``1(DocumentFormat.OpenXml.OpenXmlCompositeElement,DocumentFormat.OpenXml.VariantTypes.VTBlob)">
            <summary>
            Set the content of the first child element of the specified type of the <c>OpenXmlCompositeElement</c> to the <c>VTBlob</c> value.
            </summary>
            <typeparam name="ElementType">Type of the element</typeparam>
            <param name="xmlElement">element to set</param>
            <param name="value">value to set</param>
            <remarks>
            If the value is null, the existing element is removed.
            </remarks>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlElementTools.GetFirstElementVTVectorValue``1(DocumentFormat.OpenXml.OpenXmlCompositeElement)">
            <summary>
            Get the <c>VTVector</c> value of the first child element of the specified type of the <c>OpenXmlCompositeElement</c>.
            </summary>
            <param name="xmlElement">checked element</param>
            <result>value or null</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlElementTools.SetFirstElementVTVectorValue``1(DocumentFormat.OpenXml.OpenXmlCompositeElement,DocumentFormat.OpenXml.VariantTypes.VTVector)">
            <summary>
            Set the content of the first child element of the specified type of the <c>OpenXmlCompositeElement</c> to the <c>VTVector</c> value.
            </summary>
            <typeparam name="ElementType">Type of the element</typeparam>
            <param name="xmlElement">element to set</param>
            <param name="value">value to set</param>
            <remarks>
            If the value is null, the existing element is removed.
            </remarks>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlElementTools.GetRange(DocumentFormat.OpenXml.OpenXmlElement)">
            <summary>
            Gets the <c>Range</c> element from any composite element.
            </summary>
            <param name="xmlElement"></param>
            <returns></returns>
            <exception cref="T:System.IO.InvalidDataException"></exception>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlElementTools.GetMainDocumentPart(DocumentFormat.OpenXml.OpenXmlElement)">
            <summary>
            Gets the root <c>MainDocumentPart</c> of the <c>OpenXmlElement</c>.
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlElementTools.IsEqual(DocumentFormat.OpenXml.OpenXmlElement,DocumentFormat.OpenXml.OpenXmlElement)">
            <summary>
            Checks if the <c>OpenXmlElement</c> is equal the other element.
            </summary>
            <param name="thisElement"></param>
            <param name="otherElement"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlElementTools.HasEqualAttributes(DocumentFormat.OpenXml.OpenXmlElement,DocumentFormat.OpenXml.OpenXmlElement)">
            <summary>
            Checks if the <c>OpenXmlElement</c> has the same attributes as the other element.
            "rsid*" and "*Id" attributes are ignored.
            </summary>
            <param name="thisElement"></param>
            <param name="otherElement"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlElementTools.HasEqualChildren(DocumentFormat.OpenXml.OpenXmlElement,DocumentFormat.OpenXml.OpenXmlElement)">
            <summary>
            Checks if the <c>OpenXmlElement</c> has the same children as the other element.
            </summary>
            <param name="thisElement"></param>
            <param name="otherElement"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.OpenXmlElementTools.GetParent``1(DocumentFormat.OpenXml.OpenXmlElement)">
            <summary>
            Get the first parent element of the specified type of the <c>OpenXmlElement</c>.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="T:Qhta.OpenXmlTools.PackageTools">
            <summary>
            Tools for working with OpenXml Wordprocessing Package elements.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.PackageTools.CreatePackageFromWordOpenXML(System.String,System.String,System.String)">
            <summary>
            Create a package from a Word OpenXml string.
            </summary>
            <param name="wordOpenXml"></param>
            <param name="filePath"></param>
            <param name="relDirectoryRoot"></param>
        </member>
        <member name="F:Qhta.OpenXmlTools.PackageTools.subdocumentRelType">
            <summary>
            Uri of the subdocument relationship type.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.PackageTools.RecreateSubdocumentRelationships(DocumentFormat.OpenXml.Wordprocessing.Document,System.String)">
            <summary>
            Recreate subdocument relationships in the document.
            </summary>
            <param name="doc">document which contains relationships</param>
            <param name="docxPath">new path for subdocuments</param>
        </member>
        <member name="T:Qhta.OpenXmlTools.ParagraphPropertiesTools">
            <summary>
            Tools for working with OpenXml Wordprocessing ParagraphProperties element.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphPropertiesTools.ToStyleParagraphProperties(DocumentFormat.OpenXml.Wordprocessing.ParagraphProperties)">
            <summary>
            Convert a <see cref="T:DocumentFormat.OpenXml.Wordprocessing.ParagraphProperties"/> element to a <see cref="T:DocumentFormat.OpenXml.Wordprocessing.StyleParagraphProperties"/> element.
            </summary>
            <param name="paragraphProperties">source properties</param>
            <returns>new style paragraph properties with cloned source elements</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphPropertiesTools.GetKeepLines(DocumentFormat.OpenXml.Wordprocessing.ParagraphProperties)">
            <summary>
            Get <c>KeepLines</c> boolean attribute value
            </summary>
            <param name="paragraphProperties">Paragraph properties to process</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphPropertiesTools.SetKeepLines(DocumentFormat.OpenXml.Wordprocessing.ParagraphProperties,System.Boolean)">
            <summary>
            Set <c>KeepLines</c> boolean attribute value
            </summary>
            <param name="paragraphProperties">Paragraph properties to process</param>
            <param name="value">attribute value</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphPropertiesTools.GetKeepNext(DocumentFormat.OpenXml.Wordprocessing.ParagraphProperties)">
            <summary>
            Get <c>KeepNext</c> boolean attribute value
            </summary>
            <param name="paragraphProperties">Paragraph properties to process</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphPropertiesTools.SetKeepNext(DocumentFormat.OpenXml.Wordprocessing.ParagraphProperties,System.Boolean)">
            <summary>
            Set <c>KeepNext</c> boolean attribute value
            </summary>
            <param name="paragraphProperties">Paragraph properties to process</param>
            <param name="value">attribute value</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphPropertiesTools.GetKinsoku(DocumentFormat.OpenXml.Wordprocessing.ParagraphProperties)">
            <summary>
            Get <c>Kinsoku</c> boolean attribute value
            </summary>
            <param name="paragraphProperties">Paragraph properties to process</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphPropertiesTools.SetKinsoku(DocumentFormat.OpenXml.Wordprocessing.ParagraphProperties,System.Boolean)">
            <summary>
            Set <c>Kinsoku</c> boolean attribute value
            </summary>
            <param name="paragraphProperties">Paragraph properties to process</param>
            <param name="value">attribute value</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphPropertiesTools.GetMirrorIndents(DocumentFormat.OpenXml.Wordprocessing.ParagraphProperties)">
            <summary>
            Get <c>MirrorIndents</c> boolean attribute value
            </summary>
            <param name="paragraphProperties">Paragraph properties to process</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphPropertiesTools.SetMirrorIndents(DocumentFormat.OpenXml.Wordprocessing.ParagraphProperties,System.Boolean)">
            <summary>
            Set <c>MirrorIndents</c> boolean attribute value
            </summary>
            <param name="paragraphProperties">Paragraph properties to process</param>
            <param name="value">attribute value</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphPropertiesTools.GetAdjustRightIndent(DocumentFormat.OpenXml.Wordprocessing.ParagraphProperties)">
            <summary>
            Get <c>AdjustRightIndent</c> boolean attribute value
            </summary>
            <param name="paragraphProperties">Paragraph properties to process</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphPropertiesTools.SetAdjustRightIndent(DocumentFormat.OpenXml.Wordprocessing.ParagraphProperties,System.Boolean)">
            <summary>
            Set <c>AdjustRightIndent</c> boolean attribute value
            </summary>
            <param name="paragraphProperties">Paragraph properties to process</param>
            <param name="value">attribute value</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphPropertiesTools.GetAutoSpaceDE(DocumentFormat.OpenXml.Wordprocessing.ParagraphProperties)">
            <summary>
            Get <c>AutoSpaceDE</c> boolean attribute value
            </summary>
            <param name="paragraphProperties">Paragraph properties to process</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphPropertiesTools.SetAutoSpaceDE(DocumentFormat.OpenXml.Wordprocessing.ParagraphProperties,System.Boolean)">
            <summary>
            Set <c>AutoSpaceDE</c> boolean attribute value
            </summary>
            <param name="paragraphProperties">Paragraph properties to process</param>
            <param name="value">attribute value</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphPropertiesTools.GetAutoSpaceDN(DocumentFormat.OpenXml.Wordprocessing.ParagraphProperties)">
            <summary>
            Get <c>AutoSpaceDN</c> boolean attribute value
            </summary>
            <param name="paragraphProperties">Paragraph properties to process</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphPropertiesTools.SetAutoSpaceDN(DocumentFormat.OpenXml.Wordprocessing.ParagraphProperties,System.Boolean)">
            <summary>
            Set <c>AutoSpaceDN</c> boolean attribute value
            </summary>
            <param name="paragraphProperties">Paragraph properties to process</param>
            <param name="value">attribute value</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphPropertiesTools.GetContextualSpacing(DocumentFormat.OpenXml.Wordprocessing.ParagraphProperties)">
            <summary>
            Get <c>ContextualSpacing</c> boolean attribute value
            </summary>
            <param name="paragraphProperties">Paragraph properties to process</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphPropertiesTools.SetContextualSpacing(DocumentFormat.OpenXml.Wordprocessing.ParagraphProperties,System.Boolean)">
            <summary>
            Set <c>ContextualSpacing</c> boolean attribute value
            </summary>
            <param name="paragraphProperties">Paragraph properties to process</param>
            <param name="value">attribute value</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphPropertiesTools.GetFrameProperties(DocumentFormat.OpenXml.Wordprocessing.ParagraphProperties)">
            <summary>
            Get <c>FrameProperties</c> element or create a new one.
            </summary>
            <param name="paragraphProperties">Paragraph properties to process</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphPropertiesTools.SetFrameProperties(DocumentFormat.OpenXml.Wordprocessing.ParagraphProperties,DocumentFormat.OpenXml.Wordprocessing.FrameProperties)">
            <summary>
            Set <c>FrameProperties</c> element.
            If value to set is null, the element will be removed.
            </summary>
            <param name="paragraphProperties">Paragraph properties to process</param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphPropertiesTools.GetIndentation(DocumentFormat.OpenXml.Wordprocessing.ParagraphProperties)">
            <summary>
            Get <c>Indentation</c> element or create a new one.
            </summary>
            <param name="paragraphProperties">Paragraph properties to process</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphPropertiesTools.SetIndentation(DocumentFormat.OpenXml.Wordprocessing.ParagraphProperties,DocumentFormat.OpenXml.Wordprocessing.Indentation)">
            <summary>
            Set <c>Indentation</c> element.
            If value to set is null, the element will be removed.
            </summary>
            <param name="paragraphProperties">Paragraph properties to process</param>
            <param name="value">Value to set</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphPropertiesTools.GetJustification(DocumentFormat.OpenXml.Wordprocessing.ParagraphProperties)">
            <summary>
            Get <c>JustificationValues</c> enumeration attribute value.
            </summary>
            <param name="paragraphProperties">Paragraph properties to process</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphPropertiesTools.GetJustification(DocumentFormat.OpenXml.Wordprocessing.ParagraphProperties,System.Nullable{DocumentFormat.OpenXml.Wordprocessing.JustificationValues})">
            <summary>
            Set <c>JustificationValues</c> enumeration attribute value.
            If value to set is null, the element will be removed.
            </summary>
            <param name="paragraphProperties">Paragraph properties to process</param>
            <param name="value">Value to set</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphPropertiesTools.GetNumberingProperties(DocumentFormat.OpenXml.Wordprocessing.ParagraphProperties)">
            <summary>
            Get <c>NumberingProperties</c> element or create a new one.
            </summary>
            <param name="paragraphProperties">Paragraph properties to process</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphPropertiesTools.SetNumbering(DocumentFormat.OpenXml.Wordprocessing.ParagraphProperties,System.Nullable{System.Int32})">
            <summary>
            Set <c>NumberingProperties</c> element.
            If value to set is null, the element will be removed.
            </summary>
            <param name="paragraphProperties">Paragraph properties to process</param>
            <param name="numberingInstanceId">Value to set</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphPropertiesTools.GetOutlineLevel(DocumentFormat.OpenXml.Wordprocessing.ParagraphProperties)">
            <summary>
            Get <c>OutlineLevel</c> element or create a new one.
            </summary>
            <param name="paragraphProperties">Paragraph properties to process</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphPropertiesTools.GetOverflowPunctuation(DocumentFormat.OpenXml.Wordprocessing.ParagraphProperties)">
            <summary>
            Get <c>OverflowPunctuation</c> boolean attribute value
            </summary>
            <param name="paragraphProperties">Paragraph properties to process</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphPropertiesTools.SetOverflowPunctuation(DocumentFormat.OpenXml.Wordprocessing.ParagraphProperties,System.Boolean)">
            <summary>
            Set <c>OverflowPunctuation</c> boolean attribute value
            </summary>
            <param name="paragraphProperties">Paragraph properties to process</param>
            <param name="value">attribute value</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphPropertiesTools.GetPageBreakBefore(DocumentFormat.OpenXml.Wordprocessing.ParagraphProperties)">
            <summary>
            Get <c>PageBreakBefore</c> boolean attribute value
            </summary>
            <param name="paragraphProperties">Paragraph properties to process</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphPropertiesTools.SetPageBreakBefore(DocumentFormat.OpenXml.Wordprocessing.ParagraphProperties,System.Boolean)">
            <summary>
            Set <c>PageBreakBefore</c> boolean attribute value
            </summary>
            <param name="paragraphProperties">Paragraph properties to process</param>
            <param name="value">attribute value</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphPropertiesTools.GetParagraphBorders(DocumentFormat.OpenXml.Wordprocessing.ParagraphProperties)">
            <summary>
            Get <c>ParagraphBorders</c> element or create a new one.
            </summary>
            <param name="paragraphProperties">Paragraph properties to process</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphPropertiesTools.GetShading(DocumentFormat.OpenXml.Wordprocessing.ParagraphProperties)">
            <summary>
            Get <c>Shading</c> element or create a new one.
            </summary>
            <param name="paragraphProperties">Paragraph properties to process</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphPropertiesTools.GetSpacingBetweenLines(DocumentFormat.OpenXml.Wordprocessing.ParagraphProperties)">
            <summary>
            Get <c>SpacingBetweenLines</c> element or create a new one.
            </summary>
            <param name="paragraphProperties">Paragraph properties to process</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphPropertiesTools.GetSuppressAutoHyphens(DocumentFormat.OpenXml.Wordprocessing.ParagraphProperties)">
            <summary>
            Get <c>SuppressAutoHyphens</c> boolean attribute value
            </summary>
            <param name="paragraphProperties">Paragraph properties to process</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphPropertiesTools.SetSuppressAutoHyphens(DocumentFormat.OpenXml.Wordprocessing.ParagraphProperties,System.Boolean)">
            <summary>
            Set <c>SuppressAutoHyphens</c> boolean attribute value
            </summary>
            <param name="paragraphProperties">Paragraph properties to process</param>
            <param name="value">attribute value</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphPropertiesTools.GetSuppressLineNumbers(DocumentFormat.OpenXml.Wordprocessing.ParagraphProperties)">
            <summary>
            Get <c>SuppressLineNumbers</c> boolean attribute value
            </summary>
            <param name="paragraphProperties">Paragraph properties to process</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphPropertiesTools.SetSuppressLineNumbers(DocumentFormat.OpenXml.Wordprocessing.ParagraphProperties,System.Boolean)">
            <summary>
            Set <c>SuppressLineNumbers</c> boolean attribute value
            </summary>
            <param name="paragraphProperties">Paragraph properties to process</param>
            <param name="value">attribute value</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphPropertiesTools.GetSuppressOverlap(DocumentFormat.OpenXml.Wordprocessing.ParagraphProperties)">
            <summary>
            Get <c>SuppressOverlap</c> boolean attribute value
            </summary>
            <param name="paragraphProperties">Paragraph properties to process</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphPropertiesTools.SetSuppressOverlap(DocumentFormat.OpenXml.Wordprocessing.ParagraphProperties,System.Boolean)">
            <summary>
            Set <c>SuppressOverlap</c> boolean attribute value
            </summary>
            <param name="paragraphProperties">Paragraph properties to process</param>
            <param name="value">attribute value</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphPropertiesTools.GetTabs(DocumentFormat.OpenXml.Wordprocessing.ParagraphProperties)">
            <summary>
            Get <c>Tabs</c> element or create a new one.
            </summary>
            <param name="paragraphProperties">Paragraph properties to process</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphPropertiesTools.GetTextAlignment(DocumentFormat.OpenXml.Wordprocessing.ParagraphProperties)">
            <summary>
            Get <c>TextAlignment</c> enumeration attribute value
            </summary>
            <param name="paragraphProperties">Paragraph properties to process</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphPropertiesTools.SetTextAlignment(DocumentFormat.OpenXml.Wordprocessing.ParagraphProperties,System.Nullable{DocumentFormat.OpenXml.Wordprocessing.VerticalTextAlignmentValues})">
            <summary>
            Set <c>TextAlignment</c> enumeration attribute value
            </summary>
            <param name="paragraphProperties">Paragraph properties to process</param>
            <param name="value">attribute value</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphPropertiesTools.GetTextBoxTightWrap(DocumentFormat.OpenXml.Wordprocessing.ParagraphProperties)">
            <summary>
            Get <c>TextBoxTightWrap</c> enumeration attribute value
            </summary>
            <param name="paragraphProperties">Paragraph properties to process</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphPropertiesTools.SetTextBoxTightWrap(DocumentFormat.OpenXml.Wordprocessing.ParagraphProperties,System.Nullable{DocumentFormat.OpenXml.Wordprocessing.TextBoxTightWrapValues})">
            <summary>
            Set <c>TextBoxTightWrap</c> enumeration attribute value
            </summary>
            <param name="paragraphProperties">Paragraph properties to process</param>
            <param name="value">attribute value</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphPropertiesTools.GetTextDirection(DocumentFormat.OpenXml.Wordprocessing.ParagraphProperties)">
            <summary>
            Get <c>TextDirection</c> enumeration attribute value
            </summary>
            <param name="paragraphProperties">Paragraph properties to process</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphPropertiesTools.SetTextDirection(DocumentFormat.OpenXml.Wordprocessing.ParagraphProperties,System.Nullable{DocumentFormat.OpenXml.Wordprocessing.TextDirectionValues})">
            <summary>
            Set <c>TextDirection</c> enumeration attribute value
            </summary>
            <param name="paragraphProperties">Paragraph properties to process</param>
            <param name="value">attribute value</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphPropertiesTools.GetTopLinePunctuation(DocumentFormat.OpenXml.Wordprocessing.ParagraphProperties)">
            <summary>
            Get <c>TopLinePunctuation</c> boolean attribute value
            </summary>
            <param name="paragraphProperties">Paragraph properties to process</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphPropertiesTools.SetTopLinePunctuation(DocumentFormat.OpenXml.Wordprocessing.ParagraphProperties,System.Boolean)">
            <summary>
            Set <c>TopLinePunctuation</c> boolean attribute value
            </summary>
            <param name="paragraphProperties">Paragraph properties to process</param>
            <param name="value">attribute value</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphPropertiesTools.GetWidowControl(DocumentFormat.OpenXml.Wordprocessing.ParagraphProperties)">
            <summary>
            Get <c>WidowControl</c> boolean attribute value
            </summary>
            <param name="paragraphProperties">Paragraph properties to process</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphPropertiesTools.SetWidowControl(DocumentFormat.OpenXml.Wordprocessing.ParagraphProperties,System.Boolean)">
            <summary>
            Set <c>WidowControl</c> boolean attribute value
            </summary>
            <param name="paragraphProperties">Paragraph properties to process</param>
            <param name="value">attribute value</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphPropertiesTools.GetWordWrap(DocumentFormat.OpenXml.Wordprocessing.ParagraphProperties)">
            <summary>
            Get <c>WordWrap</c> boolean attribute value
            </summary>
            <param name="paragraphProperties">Paragraph properties to process</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphPropertiesTools.SetWordWrap(DocumentFormat.OpenXml.Wordprocessing.ParagraphProperties,System.Boolean)">
            <summary>
            Set <c>WordWrap</c> boolean attribute value
            </summary>
            <param name="paragraphProperties">Paragraph properties to process</param>
            <param name="value">attribute value</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphPropertiesTools.SetHeight(DocumentFormat.OpenXml.Wordprocessing.ParagraphProperties,System.String,System.Nullable{DocumentFormat.OpenXml.Wordprocessing.LineSpacingRuleValues})">
            <summary>
            Sets the paragraph height (in twips).
            It is set as LineSpacing element Line property. If the rule is not specified, it is set to Exact.
            LineSpacing element is Before and After is set to "0".
            If value to set is null, and rule is null then all LineSpacing element is removed.
            </summary>
            <param name="paragraphProperties">Paragraph properties to set</param>
            <param name="value">value to set</param>
            <param name="rule">rule to set</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphPropertiesTools.GetSpacingBefore(DocumentFormat.OpenXml.Wordprocessing.ParagraphProperties)">
            <summary>
            Get the spacing before paragraph as a triple (twips, percent of line, auto).
            </summary>
            <param name="paragraphProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphPropertiesTools.GetSpacingAfter(DocumentFormat.OpenXml.Wordprocessing.ParagraphProperties)">
            <summary>
            Get the spacing after paragraph as a triple (twips, percent of line, auto).
            </summary>
            <param name="paragraphProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphPropertiesTools.SetSpacingBefore(DocumentFormat.OpenXml.Wordprocessing.ParagraphProperties,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Set the spacing before paragraph as a triple (twips, percent of line, auto).
            </summary>
            <param name="paragraphProperties"></param>
            <param name="val"></param>
            <param name="percent"></param>
            <param name="auto"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphPropertiesTools.SetSpacingAfter(DocumentFormat.OpenXml.Wordprocessing.ParagraphProperties,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Set the spacing before paragraph as a triple (twips, percent of line, auto).
            </summary>
            <param name="paragraphProperties"></param>
            <param name="val"></param>
            <param name="percent"></param>
            <param name="auto"></param>
            <returns></returns>
        </member>
        <member name="T:Qhta.OpenXmlTools.ParagraphTools">
            <summary>
            Tools for working with OpenXml Wordprocessing Paragraph element.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphTools.GetParagraphId(DocumentFormat.OpenXml.Wordprocessing.Paragraph)">
            <summary>
            Gets the integer identifier of the paragraph.
            </summary>
            <param name="paragraph"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphTools.FindParagraph(DocumentFormat.OpenXml.Packaging.WordprocessingDocument,System.String)">
            <summary>
            Find a paragraph in the document by the paragraph id.
            </summary>
            <param name="document">document to browse</param>
            <param name="paraId">id of the paragraph</param>
            <returns>found paragraph or null</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphTools.FindParagraph(DocumentFormat.OpenXml.OpenXmlCompositeElement,System.String)">
            <summary>
            Find a paragraph in the composite element by the paragraph id.
            </summary>
            <param name="compositeElement">element to browse</param>
            <param name="paraId">id of the paragraph</param>
            <returns>found paragraph or nul</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphTools.GetParagraphProperties(DocumentFormat.OpenXml.Wordprocessing.Paragraph)">
            <summary>
            Get the <c>ParagraphProperties</c> element of the paragraph. If it is null, create a new one.
            </summary>
            <param name="paragraph"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphTools.SetText(DocumentFormat.OpenXml.Wordprocessing.Paragraph,System.String,Qhta.OpenXmlTools.TextOptions)">
            <summary>
            Set the text of the paragraph.
            </summary>
            <param name="paragraph"></param>
            <param name="text"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphTools.GetStyleId(DocumentFormat.OpenXml.Wordprocessing.Paragraph)">
            <summary>
            Get the style id of the paragraph.
            </summary>
            <param name="paragraph">source paragraph</param>
            <returns>style id or null</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphTools.SetStyleId(DocumentFormat.OpenXml.Wordprocessing.Paragraph,System.String)">
            <summary>
            Set the style id of the paragraph.
            </summary>
            <param name="paragraph">source paragraph</param>
            <param name="styleId">style id or null</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphTools.GetStyle(DocumentFormat.OpenXml.Wordprocessing.Paragraph)">
            <summary>
            Get the style of the paragraph.
            </summary>
            <param name="paragraph"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphTools.IsHeading(DocumentFormat.OpenXml.Wordprocessing.Paragraph)">
            <summary>
            Check if the paragraph is a heading.
            </summary>
            <param name="paragraph">source paragraph</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphTools.OutlineLevel(DocumentFormat.OpenXml.Wordprocessing.Paragraph)">
            <summary>
            Get the outline level of the paragraph.
            Outline level is counted rom 0 to 9,
            where 9 specifically indicates that there is no outline level specifically applied to this paragraph.
            </summary>
            <param name="paragraph">paragraph to check</param>
            <returns>number of paragraph outline level</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphTools.HeadingLevel(DocumentFormat.OpenXml.Wordprocessing.Paragraph)">
            <summary>
            Get the heading level of the paragraph.
            Heading level is counted from 1 to 9 (outline level + 1).
            If a paragraph is not a heading then the return value is null.
            </summary>
            <param name="paragraph">paragraph to check</param>
            <returns>number of paragraph heading level (or null)</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphTools.IsEmpty(DocumentFormat.OpenXml.Wordprocessing.Paragraph)">
            <summary>
            Checks if the paragraph is empty.
            </summary>
            <param name="paragraph"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphTools.IsEmptyOrWhiteSpace(DocumentFormat.OpenXml.Wordprocessing.Paragraph)">
            <summary>
            Checks if the paragraph is empty or whitespace.
            </summary>
            <param name="paragraph"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphTools.IsTabulated(DocumentFormat.OpenXml.Wordprocessing.Paragraph)">
            <summary>
            Checks if the paragraph contains any tab char.
            </summary>
            <param name="paragraph"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphTools.Trim(DocumentFormat.OpenXml.Wordprocessing.Paragraph,Qhta.OpenXmlTools.TrimOptions)">
            <summary>
            Trim the paragraph removing leading and/or trailing whitespaces.
            </summary>
            <param name="paragraph"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphTools.TrimStart(DocumentFormat.OpenXml.Wordprocessing.Paragraph)">
            <summary>
            Trims the paragraph removing leading whitespaces.
            </summary>
            <param name="paragraph"></param>
            <returns>true if the trimming was successful, false if it was not needed.</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphTools.TrimEnd(DocumentFormat.OpenXml.Wordprocessing.Paragraph)">
            <summary>
            Trims the paragraph removing trailing whitespaces.
            </summary>
            <param name="paragraph"></param>
            <returns>true if the trimming was successful, false if it was not needed.</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphTools.TryResetFormat(DocumentFormat.OpenXml.Wordprocessing.Paragraph,System.Boolean)">
            <summary>
            Reset paragraph format by removing all the properties except the style id and numbering properties.
            </summary>
            <param name="paragraph"></param>
            <param name="deep">reset also text format</param>
            <returns>true if any properties were removed</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphTools.RemoveAllMembers(DocumentFormat.OpenXml.Wordprocessing.Paragraph)">
            <summary>
            Removes all the members of the paragraph (leaving paragraph properties).
            </summary>
            <param name="paragraph"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphTools.GetFont(DocumentFormat.OpenXml.Wordprocessing.Paragraph,System.String)">
            <summary>
            Get the name of the font most frequently used in the paragraph.
            </summary>
            <param name="paragraph">Paragraph element to examine</param>
            <param name="defaultFont">Font name used when there is no runFonts element</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphTools.GetRunFonts(DocumentFormat.OpenXml.Wordprocessing.Paragraph,System.String)">
            <summary>
            Get statistics of fonts used in the paragraph.
            If the paragraph has no font information, return default font statistics.
            </summary>
            <param name="paragraph">Paragraph element to examine</param>
            <param name="defaultFont">Font name used when there is no runFonts element</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphTools.GetTextProperties(DocumentFormat.OpenXml.Wordprocessing.Paragraph,System.String,System.Nullable{System.Int32})">
            <summary>
            Get the most frequently used text properties of the paragraph.
            </summary>
            <param name="paragraph">Paragraph element to examine</param>
            <param name="defaultFontName">Default font name used when there is no runFonts element</param>
            <param name="defaultFontSize">Default font name used when there is no runFonts element</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphTools.GetTextProperties(DocumentFormat.OpenXml.Wordprocessing.Paragraph,Qhta.OpenXmlTools.TextProperties)">
            <summary>
            Get the most frequently used text properties of the paragraph.
            </summary>
            <param name="paragraph">Paragraph element to examine</param>
            <param name="defaultProperties">Default text properties used when there is no text properties</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphTools.NormalizeWhitespaces(DocumentFormat.OpenXml.Wordprocessing.Paragraph,Qhta.OpenXmlTools.WhitespaceOptions)">
            <summary>
            Normalize whitespaces in all runs in the paragraph.
            </summary>
            <param name="paragraph">Paragraph element to process</param>
            <param name="options"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphTools.AppendText(DocumentFormat.OpenXml.Wordprocessing.Paragraph,System.String)">
            <summary>
            Append text to the paragraph.
            </summary>
            <param name="paragraph"></param>
            <param name="text"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphTools.SplitAt(DocumentFormat.OpenXml.Wordprocessing.Paragraph,System.Int32,Qhta.OpenXmlTools.TextOptions)">
            <summary>
            Split the paragraph at the specified index, which is the number of characters from the beginning of the paragraph.
            Returns the second part of the paragraph.
            Split is not possible if the index is at the beginning or end of the paragraph.
            Split is possible only in a run element.
            </summary>
            <param name="paragraph">Paragraph element to process</param>
            <param name="index">Char position number</param>
            <param name="options">Options to extract text</param>
            <returns>Next, newly created paragraph (or null if split is not available)</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphTools.SplitBefore(DocumentFormat.OpenXml.Wordprocessing.Paragraph,DocumentFormat.OpenXml.OpenXmlElement)">
            <summary>
            Split the paragraph before the given member element which can be a paragraph-level or run-level element.
            Returns the second part of the paragraph.
            </summary>
            <param name="paragraph">Paragraph element to process</param>
            <param name="member">Paragraph-level or run-level member element</param>
            <returns>Next, newly created paragraph (or null if split is not available)</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphTools.SplitAfter(DocumentFormat.OpenXml.Wordprocessing.Paragraph,DocumentFormat.OpenXml.OpenXmlElement)">
            <summary>
            Split the paragraph after the given member element which can be a paragraph-level or run-level element.
            Returns the second part of the paragraph.
            </summary>
            <param name="paragraph">Paragraph element to process</param>
            <param name="member">Paragraph-level or run-level member element</param>
            <returns>Next, newly created paragraph (or null if split is not available)</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphTools.GetTextPosOfElement(DocumentFormat.OpenXml.Wordprocessing.Paragraph,DocumentFormat.OpenXml.OpenXmlElement,Qhta.OpenXmlTools.TextOptions)">
            <summary>
            Get the position of the paragraph-level or run-level element in the paragraph text.
            </summary>
            <param name="paragraph">Run element to process</param>
            <param name="element">member element to search</param>
            <param name="options">Options for text extraction</param>
            <returns>Char position of the element (or -1 if not found)</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphTools.GetElementAtTextPos(DocumentFormat.OpenXml.Wordprocessing.Paragraph,System.Int32,Qhta.OpenXmlTools.TextOptions)">
            <summary>
            Get the paragraph-level or run-level element at the given position the paragraph text.
            If the position refers to the start or interior of the run element, the run-level element is returned.
            </summary>
            <param name="paragraph">Run element to process</param>
            <param name="pos">position of element to search</param>
            <param name="options">Options for text extraction</param>
            <returns>Paragraph-level or run-level element found at position (or null if not found)</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphTools.InsertAt(DocumentFormat.OpenXml.Wordprocessing.Paragraph,System.Int32,DocumentFormat.OpenXml.OpenXmlElement,Qhta.OpenXmlTools.TextOptions)">
            <summary>
            Insert a child to the paragraph at the specified index, which is the number of characters from the beginning of the paragraph.
            </summary>
            <param name="paragraph">Paragraph element to process</param>
            <param name="index">Char position number</param>
            <param name="child">new child member</param>
            <param name="options">Options to extract text</param>
            <returns>Next, newly created paragraph (or null if split is not available)</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphTools.NewParagraph(DocumentFormat.OpenXml.Wordprocessing.Paragraph)">
            <summary>
            Create a new paragraph with the same properties as the source paragraph.
            </summary>
            <param name="paragraph">Paragraph element to process</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphTools.GetIndentation(DocumentFormat.OpenXml.Wordprocessing.Paragraph)">
            <summary>
            Get the indentation of the paragraph. If it is not defined, return null.
            </summary>
            <param name="paragraph"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphTools.GetSectionProperties(DocumentFormat.OpenXml.Wordprocessing.Paragraph)">
            <summary>
            Get the section properties of the paragraph.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphTools.JoinNextParagraph(DocumentFormat.OpenXml.Wordprocessing.Paragraph,DocumentFormat.OpenXml.Wordprocessing.Paragraph)">
            <summary>
            Join next paragraph to the paragraph. Insert space before the next paragraph.
            </summary>
            <param name="para"></param>
            <param name="nextPara"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphTools.BreakBefore(DocumentFormat.OpenXml.Wordprocessing.Paragraph,System.String)">
            <summary>
            Break the paragraph before the specified text.
            </summary>
            <param name="paragraph"></param>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphTools.SetJustification(DocumentFormat.OpenXml.Wordprocessing.Paragraph,DocumentFormat.OpenXml.Wordprocessing.JustificationValues)">
            <summary>
            Set the paragraph justification.
            </summary>
            <param name="paragraph"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphTools.SetIndentation(DocumentFormat.OpenXml.Wordprocessing.Paragraph,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Set the paragraph indentation.
            </summary>
            <param name="paragraph"></param>
            <param name="left"></param>
            <param name="right"></param>
            <param name="firstLine"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphTools.SetHeight(DocumentFormat.OpenXml.Wordprocessing.Paragraph,System.String,System.Nullable{DocumentFormat.OpenXml.Wordprocessing.LineSpacingRuleValues})">
            <summary>
            Sets the paragraph height (in twips).
            It is set as LineSpacing element Line property. If the rule is not specified, it is set to Exact.
            LineSpacing element is Before and After is set to "0".
            If value to set is null, and rule is null then all LineSpacing element is removed.
            </summary>
            <param name="paragraph">Paragraph properties to set</param>
            <param name="value">value to set</param>
            <param name="rule">rule to set</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphTools.GetSpacingBefore(DocumentFormat.OpenXml.Wordprocessing.Paragraph)">
            <summary>
            Get the spacing before paragraph as a triple (twips, percent of line, auto).
            </summary>
            <param name="paragraph"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphTools.GetSpacingAfter(DocumentFormat.OpenXml.Wordprocessing.Paragraph)">
            <summary>
            Get the spacing after paragraph as a triple (twips, percent of line, auto).
            </summary>
            <param name="paragraph"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphTools.SetSpacingBefore(DocumentFormat.OpenXml.Wordprocessing.Paragraph,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Set the spacing before paragraph as a triple (twips, percent of line, auto).
            </summary>
            <param name="paragraph"></param>
            <param name="val"></param>
            <param name="percent"></param>
            <param name="auto"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphTools.SetSpacingAfter(DocumentFormat.OpenXml.Wordprocessing.Paragraph,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Set the spacing after paragraph as a triple (twips, percent of line, auto).
            </summary>
            <param name="paragraph"></param>
            <param name="val"></param>
            <param name="percent"></param>
            <param name="auto"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphTools.GetFlattenedMembers(DocumentFormat.OpenXml.Wordprocessing.Paragraph)">
            <summary>
            Get the enumeration of the flattened paragraph members.
            Flattened means that the enumeration contains run-level members instead of runs.
            </summary>
            <param name="paragraph"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.ParagraphTools.SetStyle(DocumentFormat.OpenXml.Wordprocessing.Paragraph,System.String)">
            <summary>
            Set the paragraph style.
            </summary>
            <param name="paragraph"></param>
            <param name="styleName"></param>
        </member>
        <member name="T:Qhta.OpenXmlTools.PlainTextTools">
            <summary>
            Tools for working with OpenXml Wordprocessing plain text element.
            </summary>
        </member>
        <member name="T:Qhta.OpenXmlTools.PreviousSectionPropertiesTools">
            <summary>
            Tools for working with OpenXml Wordprocessing PreviousSectionProperties element.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.PreviousSectionPropertiesTools.GetHeaderReferences(DocumentFormat.OpenXml.Wordprocessing.PreviousSectionProperties)">
            <summary>
            Get all <c>HeaderReference</c> elements from the section properties.
            </summary>
            <param name="PreviousSectionProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.PreviousSectionPropertiesTools.GetFooterReferences(DocumentFormat.OpenXml.Wordprocessing.PreviousSectionProperties)">
            <summary>
            Get all <c>FooterReference</c> elements from the section properties.
            </summary>
            <param name="PreviousSectionProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.PreviousSectionPropertiesTools.GetFootnoteProperties(DocumentFormat.OpenXml.Wordprocessing.PreviousSectionProperties)">
            <summary>
            Get the first <c>FootnoteProperties</c> element from the section properties.
            </summary>
            <param name="PreviousSectionProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.PreviousSectionPropertiesTools.GetEndnoteProperties(DocumentFormat.OpenXml.Wordprocessing.PreviousSectionProperties)">
            <summary>
            Get the first <c>EndnoteProperties</c> element from the section properties.
            </summary>
            <param name="PreviousSectionProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.PreviousSectionPropertiesTools.GetSectionType(DocumentFormat.OpenXml.Wordprocessing.PreviousSectionProperties)">
            <summary>
            Get the first <c>SectionType</c> value from the section properties.
            </summary>
            <param name="PreviousSectionProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.PreviousSectionPropertiesTools.GetPageSize(DocumentFormat.OpenXml.Wordprocessing.PreviousSectionProperties)">
            <summary>
            Get the first <c>PageSize</c> element from the section properties.
            </summary>
            <param name="PreviousSectionProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.PreviousSectionPropertiesTools.GetPageMargin(DocumentFormat.OpenXml.Wordprocessing.PreviousSectionProperties)">
            <summary>
            Get the first <c>PageMargin</c> from the section properties.
            </summary>
            <param name="PreviousSectionProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.PreviousSectionPropertiesTools.GetPaperSource(DocumentFormat.OpenXml.Wordprocessing.PreviousSectionProperties)">
            <summary>
            Get the first <c>PaperSource</c> element from the section properties.
            </summary>
            <param name="PreviousSectionProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.PreviousSectionPropertiesTools.GetPageBorders(DocumentFormat.OpenXml.Wordprocessing.PreviousSectionProperties)">
            <summary>
            Get the first <c>PageBorders</c> element from the section properties.
            </summary>
            <param name="PreviousSectionProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.PreviousSectionPropertiesTools.GetLineNumberType(DocumentFormat.OpenXml.Wordprocessing.PreviousSectionProperties)">
            <summary>
            Get the first <c>LineNumberType</c> element from the section properties.
            </summary>
            <param name="PreviousSectionProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.PreviousSectionPropertiesTools.GetPageNumberType(DocumentFormat.OpenXml.Wordprocessing.PreviousSectionProperties)">
            <summary>
            Get the first <c>PageNumberType</c> element from the section properties.
            </summary>
            <param name="PreviousSectionProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.PreviousSectionPropertiesTools.GetColumns(DocumentFormat.OpenXml.Wordprocessing.PreviousSectionProperties)">
            <summary>
            Get the first <c>columns</c> element from the section properties.
            </summary>
            <param name="PreviousSectionProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.PreviousSectionPropertiesTools.GetFormProtection(DocumentFormat.OpenXml.Wordprocessing.PreviousSectionProperties)">
            <summary>
            Get the first <c>FormProtection</c> from the section properties.
            </summary>
            <param name="PreviousSectionProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.PreviousSectionPropertiesTools.GetVerticalTextAlignmentOnPage(DocumentFormat.OpenXml.Wordprocessing.PreviousSectionProperties)">
            <summary>
            Get the first <c>VerticalTextAlignmentOnPage</c> value from the section properties.
            </summary>
            <param name="PreviousSectionProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.PreviousSectionPropertiesTools.IsNoEndnote(DocumentFormat.OpenXml.Wordprocessing.PreviousSectionProperties)">
            <summary>
            Get the first <c>NoEndnote</c> value from the section properties.
            </summary>
            <param name="PreviousSectionProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.PreviousSectionPropertiesTools.IsTitlePage(DocumentFormat.OpenXml.Wordprocessing.PreviousSectionProperties)">
            <summary>
            Get the first <c>TitlePage</c> value from the section properties.
            </summary>
            <param name="PreviousSectionProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.PreviousSectionPropertiesTools.GetTextDirection(DocumentFormat.OpenXml.Wordprocessing.PreviousSectionProperties)">
            <summary>
            Get the first <c>TextDirection</c> value from the section properties.
            </summary>
            <param name="PreviousSectionProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.PreviousSectionPropertiesTools.GetTitlePage(DocumentFormat.OpenXml.Wordprocessing.PreviousSectionProperties)">
            <summary>
            Get the first <c>TitlePage</c> value from the section properties.
            </summary>
            <param name="PreviousSectionProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.PreviousSectionPropertiesTools.GetNoEndnote(DocumentFormat.OpenXml.Wordprocessing.PreviousSectionProperties)">
            <summary>
            Get the first <c>NoEndnote</c> value from the section properties.
            </summary>
            <param name="PreviousSectionProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.PreviousSectionPropertiesTools.GetBiDi(DocumentFormat.OpenXml.Wordprocessing.PreviousSectionProperties)">
            <summary>
            Get the first <c>BiDi</c> value from the section properties.
            </summary>
            <param name="PreviousSectionProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.PreviousSectionPropertiesTools.GetGutterOnRight(DocumentFormat.OpenXml.Wordprocessing.PreviousSectionProperties)">
            <summary>
            Get the first <c>GutterOnRight</c> value from the section properties.
            </summary>
            <param name="PreviousSectionProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.PreviousSectionPropertiesTools.GetDocGrid(DocumentFormat.OpenXml.Wordprocessing.PreviousSectionProperties)">
            <summary>
            Get the first <c>DocGrid</c> element from the section properties.
            </summary>
            <param name="PreviousSectionProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.PreviousSectionPropertiesTools.GetPrinterSettingsReference(DocumentFormat.OpenXml.Wordprocessing.PreviousSectionProperties)">
            <summary>
            Get the first <c>PrinterSettingsReference</c> element from the section properties.
            </summary>
            <param name="PreviousSectionProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.PreviousSectionPropertiesTools.GetFootnoteColumns(DocumentFormat.OpenXml.Wordprocessing.PreviousSectionProperties)">
            <summary>
            Get the first <c>FootnoteColumns</c> element from the section properties.
            </summary>
            <param name="PreviousSectionProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.PreviousSectionPropertiesTools.SetHeaderReferences(DocumentFormat.OpenXml.Wordprocessing.PreviousSectionProperties,System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.Wordprocessing.HeaderReference})">
            <summary>
            Set all <c>HeaderReference</c> elements in the section properties.
            </summary>
            <param name="PreviousSectionProperties"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.PreviousSectionPropertiesTools.SetFooterReferences(DocumentFormat.OpenXml.Wordprocessing.PreviousSectionProperties,System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.Wordprocessing.FooterReference})">
            <summary>
             Set all <c>FooterReference</c> elements in the section properties.
            </summary>
            <param name="PreviousSectionProperties"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.PreviousSectionPropertiesTools.SetFootnoteProperties(DocumentFormat.OpenXml.Wordprocessing.PreviousSectionProperties,DocumentFormat.OpenXml.Wordprocessing.FootnoteProperties)">
            <summary>
            Set <c>FootnoteProperties</c> element in the section properties.
            </summary>
            <param name="PreviousSectionProperties"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.PreviousSectionPropertiesTools.SetEndnoteProperties(DocumentFormat.OpenXml.Wordprocessing.PreviousSectionProperties,DocumentFormat.OpenXml.Wordprocessing.EndnoteProperties)">
            <summary>
            Set <c>EndnoteProperties</c> element in the section properties.
            </summary>
            <param name="PreviousSectionProperties"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.PreviousSectionPropertiesTools.SetSectionType(DocumentFormat.OpenXml.Wordprocessing.PreviousSectionProperties,System.Nullable{DocumentFormat.OpenXml.Wordprocessing.SectionMarkValues})">
            <summary>
            Set <c>SectionType</c> value in the section properties.
            </summary>
            <param name="PreviousSectionProperties"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.PreviousSectionPropertiesTools.SetPageSize(DocumentFormat.OpenXml.Wordprocessing.PreviousSectionProperties,DocumentFormat.OpenXml.Wordprocessing.PageSize)">
            <summary>
            Set <c>PageSize</c> element in the section properties.
            </summary>
            <param name="PreviousSectionProperties"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.PreviousSectionPropertiesTools.SetPageMargin(DocumentFormat.OpenXml.Wordprocessing.PreviousSectionProperties,DocumentFormat.OpenXml.Wordprocessing.PageMargin)">
            <summary>
            Set <c>PageMargin</c> element in the section properties.
            </summary>
            <param name="PreviousSectionProperties"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.PreviousSectionPropertiesTools.SetPaperSource(DocumentFormat.OpenXml.Wordprocessing.PreviousSectionProperties,DocumentFormat.OpenXml.Wordprocessing.PaperSource)">
            <summary>
            Set <c>PaperSource</c> element in the section properties.
            </summary>
            <param name="PreviousSectionProperties"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.PreviousSectionPropertiesTools.SetPageBorders(DocumentFormat.OpenXml.Wordprocessing.PreviousSectionProperties,DocumentFormat.OpenXml.Wordprocessing.PageBorders)">
            <summary>
            Set <c>PageBorders</c> element in the section properties.
            </summary>
            <param name="PreviousSectionProperties"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.PreviousSectionPropertiesTools.SetLineNumberType(DocumentFormat.OpenXml.Wordprocessing.PreviousSectionProperties,DocumentFormat.OpenXml.Wordprocessing.LineNumberType)">
            <summary>
            Set <c>LineNumberType</c> element in the section properties.
            </summary>
            <param name="PreviousSectionProperties"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.PreviousSectionPropertiesTools.SetPageNumberType(DocumentFormat.OpenXml.Wordprocessing.PreviousSectionProperties,DocumentFormat.OpenXml.Wordprocessing.PageNumberType)">
            <summary>
            Set <c>PageNumberType</c> element in the section properties.
            </summary>
            <param name="PreviousSectionProperties"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.PreviousSectionPropertiesTools.SetColumns(DocumentFormat.OpenXml.Wordprocessing.PreviousSectionProperties,DocumentFormat.OpenXml.Wordprocessing.Columns)">
            <summary>
            Set <c>Columns</c> element in the section properties.
            </summary>
            <param name="PreviousSectionProperties"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.PreviousSectionPropertiesTools.SetFormProtection(DocumentFormat.OpenXml.Wordprocessing.PreviousSectionProperties,System.Nullable{System.Boolean})">
            <summary>
            Set <c>FormProtection</c> value in the section properties.
            </summary>
            <param name="PreviousSectionProperties"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.PreviousSectionPropertiesTools.SetVerticalTextAlignmentOnPage(DocumentFormat.OpenXml.Wordprocessing.PreviousSectionProperties,System.Nullable{DocumentFormat.OpenXml.Wordprocessing.VerticalJustificationValues})">
            <summary>
            Set <c>VerticalTextAlignmentOnPage</c> value in the section properties.
            </summary>
            <param name="PreviousSectionProperties"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.PreviousSectionPropertiesTools.SetNoEndnote(DocumentFormat.OpenXml.Wordprocessing.PreviousSectionProperties,System.Nullable{System.Boolean})">
            <summary>
            Set <c>NoEndnote</c> value in the section properties.
            </summary>
            <param name="PreviousSectionProperties"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.PreviousSectionPropertiesTools.SetTitlePage(DocumentFormat.OpenXml.Wordprocessing.PreviousSectionProperties,System.Nullable{System.Boolean})">
            <summary>
            Set <c>TitlePage</c> value in the section properties.
            </summary>
            <param name="PreviousSectionProperties"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.PreviousSectionPropertiesTools.SetTextDirection(DocumentFormat.OpenXml.Wordprocessing.PreviousSectionProperties,System.Nullable{DocumentFormat.OpenXml.Wordprocessing.TextDirectionValues})">
            <summary>
            Set <c>TextDirection</c> value in the section properties.
            </summary>
            <param name="PreviousSectionProperties"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.PreviousSectionPropertiesTools.SetBiDi(DocumentFormat.OpenXml.Wordprocessing.PreviousSectionProperties,System.Nullable{System.Boolean})">
            <summary>
            Set <c>BiDi</c> value in the section properties.
            </summary>
            <param name="PreviousSectionProperties"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.PreviousSectionPropertiesTools.SetGutterOnRight(DocumentFormat.OpenXml.Wordprocessing.PreviousSectionProperties,System.Nullable{System.Boolean})">
            <summary>
            Set <c>GutterOnRight</c> value in the section properties.
            </summary>
            <param name="PreviousSectionProperties"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.PreviousSectionPropertiesTools.SetDocGrid(DocumentFormat.OpenXml.Wordprocessing.PreviousSectionProperties,DocumentFormat.OpenXml.Wordprocessing.DocGrid)">
            <summary>
            Set <c>DocGrid</c> element in the section properties.
            </summary>
            <param name="PreviousSectionProperties"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.PreviousSectionPropertiesTools.SetPrinterSettingsReference(DocumentFormat.OpenXml.Wordprocessing.PreviousSectionProperties,DocumentFormat.OpenXml.Wordprocessing.PrinterSettingsReference)">
            <summary>
            Set <c>PrinterSettingsReference</c> element in the section properties.
            </summary>
            <param name="PreviousSectionProperties"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.PreviousSectionPropertiesTools.SetFootnoteColumns(DocumentFormat.OpenXml.Wordprocessing.PreviousSectionProperties,DocumentFormat.OpenXml.Office2013.Word.FootnoteColumns)">
            <summary>
            Set <c>FootnoteColumns</c> element in the section properties.
            </summary>
            <param name="PreviousSectionProperties"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.PreviousSectionPropertiesTools.GetBody(DocumentFormat.OpenXml.Wordprocessing.PreviousSectionProperties)">
            <summary>
            Recursively get the parent <c>Body</c> element of the section properties.
            </summary>
            <param name="PreviousSectionProperties"></param>
            <returns></returns>
        </member>
        <member name="T:Qhta.OpenXmlTools.PropertiesTools">
            <summary>
            Methods for working with properties.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.PropertiesTools.IsObsolete(System.Reflection.PropertyInfo)">
            <summary>
            Determines if a property is obsolete.
            </summary>
            <param name="property"></param>
            <returns></returns>
        </member>
        <member name="T:Qhta.OpenXmlTools.Range">
            <summary>
            Class to represent a range of elements in a Word document.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.Range.#ctor(DocumentFormat.OpenXml.OpenXmlElement,DocumentFormat.OpenXml.OpenXmlElement)">
            <summary>
            Class to represent a range of elements in a Word document.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.Range.Start">
            <summary>
            First element in the range.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.Range.End">
            <summary>
            Last element in the range.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.Range.GetMembers">
            <summary>
            Gets all the member elements in the range.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.Range.GetElements``1">
            <summary>
            Gets elements of the specified type in the range.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.Range.GetParagraphs(System.Boolean)">
            <summary>
            Gets paragraphs in the range.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.Range.GetTables(System.Boolean)">
            <summary>
            Gets all tables in the range.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.Range.GetText(Qhta.OpenXmlTools.TextOptions)">
            <summary>
            Get the text content of the run.
            </summary>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="T:Qhta.OpenXmlTools.RelationshipTools">
            <summary>
            Contains tools for working with OpenXml Relationship elements.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.RelationshipTools.IsEqual(DocumentFormat.OpenXml.Packaging.ReferenceRelationship,DocumentFormat.OpenXml.Packaging.ReferenceRelationship)">
            <summary>
            Checks if the relationship is equal to another relationship.
            </summary>
            <param name="thisRelationship"></param>
            <param name="otherRelationship"></param>
            <returns></returns>
        </member>
        <member name="T:Qhta.OpenXmlTools.UpperLower">
            <summary>
            Required upper or lower case numbering.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.UpperLower.Upper">
            <summary>
            Requires upper case numbering.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.UpperLower.Lower">
            <summary>
            Requires lower case numbering.
            </summary>
        </member>
        <member name="T:Qhta.OpenXmlTools.RomanNumeralConverter">
            <summary>
            Converts Roman numerals to integers and vice versa.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.RomanNumeralConverter.FromRoman(System.String,Qhta.OpenXmlTools.UpperLower)">
            <summary>
            Converts a Roman numeral to an integer.
            If conversion is impossible, returns null.
            </summary>
            <param name="roman">converted string (without spaces)</param>
            <param name="caseRequirement">Upper/lower case requirement. To no requirement set to 0</param>
            <returns></returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:Qhta.OpenXmlTools.RomanNumeralConverter.ToRoman(System.Int32,Qhta.OpenXmlTools.UpperLower)">
            <summary>
            Converts an integer to a Roman numeral.
            If conversion is impossible, returns null.
            </summary>
            <param name="number">Number to convert</param>
            <param name="caseRequirement">Upper/lower case requirement. To no requirement set to 0</param>
            <returns></returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="T:Qhta.OpenXmlTools.RsidsTools">
            <summary>
            Tools for working with <c>Rsids</c> of a document.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.RsidsTools.ToArray(DocumentFormat.OpenXml.Wordprocessing.Rsids)">
            <summary>
            Get all the <c>Rsids</c> as an array of <see cref="T:Qhta.OpenXmlTools.HexInt"/> values (including <c>RsidRoot</c>).
            </summary>
            <param name="rsids"></param>
            <returns></returns>
        </member>
        <member name="T:Qhta.OpenXmlTools.RunFontsTools">
            <summary>
            Contains tools for working with RunFonts elements.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.RunFontsTools.GetAsciiFontName(DocumentFormat.OpenXml.Wordprocessing.RunFonts)">
            <summary>
            Get Ascii font name or AsciiTheme font name (if defined)
            </summary>
            <param name="runFonts"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.RunFontsTools.GetHighAnsiFontName(DocumentFormat.OpenXml.Wordprocessing.RunFonts)">
            <summary>
            Get HighAnsi font name or HighAnsiTheme font name (if defined)
            </summary>
            <param name="runFonts"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.RunFontsTools.GetComplexScriptFontName(DocumentFormat.OpenXml.Wordprocessing.RunFonts)">
            <summary>
            Get ComplexScript font name or ComplexScriptTheme font name (if defined)
            </summary>
            <param name="runFonts"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.RunFontsTools.GetEastAsiaFontName(DocumentFormat.OpenXml.Wordprocessing.RunFonts)">
            <summary>
            Get EastAsia font name or EastAsiaTheme font name (if defined).
            </summary>
            <param name="runFonts"></param>
            <returns></returns>
        </member>
        <member name="T:Qhta.OpenXmlTools.RunPropertiesBridge">
            <summary>
            Run properties class that is a bridge for:
            <list type="bullet">
            <item><c>RunProperties</c> element</item>
            <item><c>PreviousRunProperties</c> element</item>
            <item><c>RunPropertiesBaseStyle</c> element</item>
            <item><c>StyleRunProperties</c> element</item>
            <item><c>ParagraphMarkRunProperties</c> element</item>
            <item><c>PreviousParagraphMarkRunProperties</c> element</item>
            <item><c>NumberingSymbolRunProperties</c> element</item>
            <item><c>Math.RunProperties</c> element</item>
            </list>
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.RunPropertiesBridge.BaseElement">
            <summary>
            Base element that is a bridge for a valid run properties element.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.RunPropertiesBridge.#ctor(DocumentFormat.OpenXml.Wordprocessing.RunProperties)">
            <summary>
            Creates a new instance of the <c>RunPropertiesBridge</c> class from a <c>RunProperties</c> element.
            </summary>
            <param name="runProperties"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.RunPropertiesBridge.#ctor(DocumentFormat.OpenXml.Wordprocessing.PreviousRunProperties)">
            <summary>
            Creates a new instance of the <c>RunPropertiesBridge</c> class from a <c>PreviousRunProperties</c> element.
            </summary>
            <param name="previousRunProperties"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.RunPropertiesBridge.#ctor(DocumentFormat.OpenXml.Wordprocessing.RunPropertiesBaseStyle)">
            <summary>
            Creates a new instance of the <c>RunPropertiesBridge</c> class from a <c>RunPropertiesBaseStyle</c> element.
            </summary>
            <param name="RunPropertiesBaseStyle"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.RunPropertiesBridge.#ctor(DocumentFormat.OpenXml.Wordprocessing.StyleRunProperties)">
            <summary>
            Creates a new instance of the <c>RunPropertiesBridge</c> class from a <c>StyleRunProperties</c> element.
            </summary>
            <param name="styleRunProperties"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.RunPropertiesBridge.#ctor(DocumentFormat.OpenXml.Wordprocessing.ParagraphMarkRunProperties)">
            <summary>
            Creates a new instance of the <c>RunPropertiesBridge</c> class from a <c>ParagraphMarkRunProperties</c> element.
            </summary>
            <param name="paragraphMarkRunProperties"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.RunPropertiesBridge.#ctor(DocumentFormat.OpenXml.Wordprocessing.PreviousParagraphMarkRunProperties)">
            <summary>
            Creates a new instance of the <c>RunPropertiesBridge</c> class from a <c>PreviousParagraphMarkRunProperties</c> element.
            </summary>
            <param name="previousParagraphMarkRunProperties"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.RunPropertiesBridge.#ctor(DocumentFormat.OpenXml.Wordprocessing.NumberingSymbolRunProperties)">
            <summary>
            Creates a new instance of the <c>RunPropertiesBridge</c> class from a <c>NumberingSymbolRunProperties</c> element.
            </summary>
            <param name="numberingSymbolRunProperties"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.RunPropertiesBridge.#ctor(DocumentFormat.OpenXml.Math.RunProperties)">
            <summary>
            Creates a new instance of the <c>RunPropertiesBridge</c> class from a <c>RunProperties</c> element.
            </summary>
            <param name="mathRunProperties"></param>
        </member>
        <member name="P:Qhta.OpenXmlTools.RunPropertiesBridge.FontName">
            <summary>
            Gets or sets the font name.
            Gets the first available attribute from: <c>HighAnsiFont</c>, <c>AsciiFont</c>, <c>ComplexScriptFont</c>, <c>EastAsiaFont</c>.
            Sets the font name for all attributes.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.RunPropertiesBridge.AsciiFont">
            <summary>
            Gets or sets the font name for ASCII characters.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.RunPropertiesBridge.HighAnsiFont">
            <summary>
            Gets or sets the font name for high ANSI characters.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.RunPropertiesBridge.ComplexScriptFont">
            <summary>
            Gets or sets the font name for complex script characters.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.RunPropertiesBridge.EastAsiaFont">
            <summary>
            Gets or sets the font name for east asian characters.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.RunPropertiesBridge.Language">
            <summary>
            Gets or sets the language.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.RunPropertiesBridge.BiDiLanguage">
            <summary>
            Gets or sets the bidirectional language.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.RunPropertiesBridge.EastAsiaLanguage">
            <summary>
            Gets or sets the east asia language.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.RunPropertiesBridge.Bold">
            <summary>
            Gets or sets the <c>Bold</c> attribute.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.RunPropertiesBridge.BoldComplexScript">
            <summary>
            Gets or sets the <c>BoldComplexScript</c> attribute.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.RunPropertiesBridge.Italic">
            <summary>
            Gets or sets the <c>Italic</c> attribute.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.RunPropertiesBridge.ItalicComplexScript">
            <summary>
            Gets or sets the <c>ItalicComplexScript</c> attribute.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.RunPropertiesBridge.Caps">
            <summary>
            Gets or sets the <c>Caps</c> attribute.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.RunPropertiesBridge.SmallCaps">
            <summary>
            Gets or sets the <c>SmallCaps</c> attribute.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.RunPropertiesBridge.Strike">
            <summary>
            Gets or sets the <c>Strike</c> attribute.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.RunPropertiesBridge.DoubleStrike">
            <summary>
            Gets or sets the <c>DoubleStrike</c> attribute.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.RunPropertiesBridge.Outline">
            <summary>
            Gets or sets the <c>Outline</c> attribute.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.RunPropertiesBridge.Shadow">
            <summary>
            Gets or sets the <c>Shadow</c> attribute.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.RunPropertiesBridge.Emboss">
            <summary>
            Gets or sets the <c>Emboss</c> attribute.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.RunPropertiesBridge.Imprint">
            <summary>
            Gets or sets the <c>Imprint</c> attribute.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.RunPropertiesBridge.NoProof">
            <summary>
            Gets or sets the <c>NoProof</c> attribute.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.RunPropertiesBridge.SnapToGrid">
            <summary>
            Gets or sets the <c>SnapToGrid</c> attribute.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.RunPropertiesBridge.Vanish">
            <summary>
            Gets or sets the <c>Vanish</c> attribute.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.RunPropertiesBridge.SpecVanish">
            <summary>
            Gets or sets the <c>SpecVanish</c> attribute.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.RunPropertiesBridge.WebHidden">
            <summary>
            Gets or sets the <c>WebHidden</c> attribute.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.RunPropertiesBridge.Color">
            <summary>
            Gets or sets the <c>Color</c> attribute.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.RunPropertiesBridge.Spacing">
            <summary>
            Gets or sets the <c>Spacing</c> attribute.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.RunPropertiesBridge.CharacterScale">
            <summary>
            Gets or sets the <c>CharacterScale</c> attribute.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.RunPropertiesBridge.Kern">
            <summary>
            Gets or sets the <c>Kern</c> attribute.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.RunPropertiesBridge.FitText">
            <summary>
            Gets or sets the <c>FitText</c> attribute.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.RunPropertiesBridge.Position">
            <summary>
            Gets or sets the <c>Position</c> attribute.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.RunPropertiesBridge.FontSize">
            <summary>
            Gets or sets the <c>FontSize</c> attribute.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.RunPropertiesBridge.FontSizeComplexScript">
            <summary>
            Gets or sets the <c>FontSizeComplexScript</c> attribute.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.RunPropertiesBridge.Underline">
            <summary>
            Gets or sets the <c>Underline</c> attribute.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.RunPropertiesBridge.TextEffect">
            <summary>
            Gets or sets the <c>TextEffect</c> attribute.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.RunPropertiesBridge.Border">
            <summary>
            Gets or sets the <c>Border</c> attribute.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.RunPropertiesBridge.Shading">
            <summary>
            Gets or sets the <c>Shading</c> attribute.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.RunPropertiesBridge.VerticalTextAlignment">
            <summary>
            Gets or sets the <c>VerticalTextAlignment</c> attribute.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.RunPropertiesBridge.Emphasis">
            <summary>
            Gets or sets the <c>Emphasis</c> attribute.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.RunPropertiesBridge.EastAsianLayout">
            <summary>
            Gets or sets the <c>EastAsianLayout</c> child element.
            </summary>
        </member>
        <member name="T:Qhta.OpenXmlTools.RunPropertiesDefaultTools">
            <summary>
            Tools for working with <c>RunPropertiesDefault</c>> in OpenXml documents.
            </summary>
        </member>
        <member name="T:Qhta.OpenXmlTools.RunPropertiesTools">
            <summary>
            Tools for working with OpenXml Wordprocessing RunProperties element.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.RunPropertiesTools.ToStyleRunProperties(DocumentFormat.OpenXml.Wordprocessing.RunProperties)">
            <summary>
            Converts a <see cref="T:DocumentFormat.OpenXml.Wordprocessing.RunProperties"/> element to a <see cref="T:DocumentFormat.OpenXml.Wordprocessing.StyleRunProperties"/> element.
            </summary>
            <param name="runProperties">source properties to convert</param>
            <returns>target properties</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.RunPropertiesTools.ToRunProperties(DocumentFormat.OpenXml.Wordprocessing.StyleRunProperties)">
            <summary>
            Converts a <see cref="T:DocumentFormat.OpenXml.Wordprocessing.StyleRunProperties"/> element to a <see cref="T:DocumentFormat.OpenXml.Wordprocessing.RunProperties"/> element.
            </summary>
            <param name="styleRunProperties">source properties to convert</param>
            <returns>target properties</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.RunPropertiesTools.ToNumberingSymbolRunProperties(DocumentFormat.OpenXml.Wordprocessing.RunProperties)">
            <summary>
            Converts a <see cref="T:DocumentFormat.OpenXml.Wordprocessing.RunProperties"/> element to a <see cref="T:DocumentFormat.OpenXml.Wordprocessing.NumberingSymbolRunProperties"/> element.
            </summary>
            <param name="runProperties">source properties to convert</param>
            <returns>target properties</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.RunPropertiesTools.ToRunProperties(DocumentFormat.OpenXml.Wordprocessing.NumberingSymbolRunProperties)">
            <summary>
            Converts a <see cref="T:DocumentFormat.OpenXml.Wordprocessing.NumberingSymbolRunProperties"/> element to a <see cref="T:DocumentFormat.OpenXml.Wordprocessing.RunProperties"/> element.
            </summary>
            <param name="styleRunProperties">source properties to convert</param>
            <returns>target properties</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.RunPropertiesTools.GetTextPropertiesStatistics(DocumentFormat.OpenXml.Wordprocessing.RunProperties,System.String,Qhta.OpenXmlTools.TextProperties)">
            <summary>
            Get statistics of properties used for text in the run. If the run does not contain font information, return default properties statistic.
            </summary>
            <param name="runProperties">Run properties which should have <c>RunFonts</c> and many have <c>Languages</c> elements</param>
            <param name="text">Fonts are chosen for each character of the text</param>
            <param name="defaultProperties">Default text properties used when there is no <c>RunFonts</c> element</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.RunPropertiesTools.SetTextProperties(DocumentFormat.OpenXml.Wordprocessing.RunProperties,Qhta.OpenXmlTools.TextProperties)">
            <summary>
            Sets appropriate run properties to the values in text properties.
            </summary>
            <param name="runProperties"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.RunPropertiesTools.GetBold(DocumentFormat.OpenXml.Wordprocessing.RunProperties,System.Boolean)">
            <summary>
            Return Bold attribute from run properties.
            </summary>
            <param name="runProperties">Processed run properties</param>
            <param name="complexScript">determines if <c>Bold</c> or <c>BoldComplexScript</c> elements are examined</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.RunPropertiesTools.SetBold(DocumentFormat.OpenXml.Wordprocessing.RunProperties,System.Nullable{System.Boolean},System.Boolean)">
            <summary>
            If value is true, set bold to true, if value is false, set bold to false, if value is null, remove bold element.
            </summary>
            <param name="runProperties">Processed run properties</param>
            <param name="value">value to set</param>
            <param name="complexScript">determines if <c>Bold</c> or <c>BoldComplexScript</c> elements are set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.RunPropertiesTools.GetItalic(DocumentFormat.OpenXml.Wordprocessing.RunProperties,System.Boolean)">
            <summary>
            Return Italic attribute from run properties.
            </summary>
            <param name="runProperties">Processed run properties</param>
            <param name="complexScript">determines if <c>Italic</c> or <c>ItalicComplexScript</c> elements are examined</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.RunPropertiesTools.SetItalic(DocumentFormat.OpenXml.Wordprocessing.RunProperties,System.Nullable{System.Boolean},System.Boolean)">
            <summary>
            If value is true, set italic to true, if value is false, set italic to false, if value is null, remove italic element.
            </summary>
            <param name="runProperties">Processed run properties</param>
            <param name="value">value to set</param>
            <param name="complexScript">determines if <c>Italic</c> or <c>ItalicComplexScript</c> elements are set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.RunPropertiesTools.GetVerticalPosition(DocumentFormat.OpenXml.Wordprocessing.RunProperties)">
            <summary>
            Return Vertical text alignment (superscript/subscript) attribute from run properties.
            </summary>
            <param name="runProperties">Processed run properties</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.RunPropertiesTools.SetVerticalPosition(DocumentFormat.OpenXml.Wordprocessing.RunProperties,System.Nullable{DocumentFormat.OpenXml.Wordprocessing.VerticalPositionValues})">
            <summary>
            Set Vertical text alignment (superscript/subscript) attribute from run properties.
            </summary>
            <param name="runProperties">Processed run properties</param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.RunPropertiesTools.GetStrikeThrough(DocumentFormat.OpenXml.Wordprocessing.RunProperties)">
            <summary>
            Return StrikeThrough attribute from run properties.
            </summary>
            <param name="runProperties">Processed run properties</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.RunPropertiesTools.SetStrikeThrough(DocumentFormat.OpenXml.Wordprocessing.RunProperties,System.Nullable{System.Int32})">
            <summary>
            If value is 1, set <c>Strike</c> element, if value is 2, set <c>DoubleStrike</c>.
            In other case remove both <c>Strike</c> and <c>DoubleStrike</c> elements.
            </summary>
            <param name="runProperties">Processed run properties</param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.RunPropertiesTools.GetUnderline(DocumentFormat.OpenXml.Wordprocessing.RunProperties)">
            <summary>
            Return Underline attribute from run properties.
            </summary>
            <param name="runProperties">Processed run properties</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.RunPropertiesTools.GetUnderlineColor(DocumentFormat.OpenXml.Wordprocessing.RunProperties)">
            <summary>
            Return Underline attribute from run properties.
            </summary>
            <param name="runProperties">Processed run properties</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.RunPropertiesTools.SetUnderline(DocumentFormat.OpenXml.Wordprocessing.RunProperties,System.Nullable{DocumentFormat.OpenXml.Wordprocessing.UnderlineValues},DocumentFormat.OpenXml.Office2013.Word.Color)">
            <summary>
            If value not null, set underline.
            </summary>
            <param name="runProperties">Processed run properties</param>
            <param name="value">underline value to set</param>
            <param name="color">underline color to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.RunPropertiesTools.GetFontSize(DocumentFormat.OpenXml.Wordprocessing.RunProperties,System.Boolean)">
            <summary>
            Return font size from run properties.
            </summary>
            <param name="runProperties">Processed run properties</param>
            <param name="complexScript">determines if <c>FontSize</c> or <c>FontSizeComplexScript</c> elements are examined</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.RunPropertiesTools.SetFontSize(DocumentFormat.OpenXml.Wordprocessing.RunProperties,System.Nullable{System.Int32},System.Boolean)">
            <summary>
            Set font size from run properties.
            </summary>
            <param name="runProperties">Processed run properties</param>
            <param name="value">value to set</param>
            <param name="complexScript">determines if <c>FontSize</c> or <c>FontSizeComplexScript</c> elements are set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.RunPropertiesTools.GetRunFonts(DocumentFormat.OpenXml.Wordprocessing.RunProperties,System.String,System.String)">
            <summary>
            Get statistics of fonts used for text in the run. If the run does not contain font information, return default font statistic.
            </summary>
            <param name="runProperties">Run properties which should have <c>RunFonts</c> and many have <c>Languages</c> elements</param>
            <param name="text">Fonts are chosen for each character of the text</param>
            <param name="defaultFont">Font name used when there is no <c>RunFonts</c> element</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.RunPropertiesTools.GetFontName(DocumentFormat.OpenXml.Wordprocessing.RunProperties,System.Char,DocumentFormat.OpenXml.Wordprocessing.Languages)">
            <summary>
            Get font name selected from runFonts for a character.
            </summary>
            <param name="runProperties">Processed run properties</param>
            <param name="ch">single character to evaluate font and strict</param>
            <param name="lang">Languages settings of the run</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.RunPropertiesTools.GetFontAndScript(DocumentFormat.OpenXml.Wordprocessing.RunProperties,System.Char,DocumentFormat.OpenXml.Wordprocessing.Languages)">
            <summary>
            Get font name and a script selected from runFonts for a character.
            </summary>
            <param name="runProperties"></param>
            <param name="ch"></param>
            <param name="lang"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.RunPropertiesTools.GetFontAndScript(DocumentFormat.OpenXml.Wordprocessing.RunFonts,System.Char,DocumentFormat.OpenXml.Wordprocessing.Languages)">
            <summary>
            Get font name and a script selected from runFonts for a character.
            </summary>
            <param name="runFonts"></param>
            <param name="ch"></param>
            <param name="lang"></param>
        </member>
        <member name="T:Qhta.OpenXmlTools.RunTextTools">
            <summary>
            Tools for working with OpenXml Wordprocessing SearchText element.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.RunTextTools.IsEmpty(DocumentFormat.OpenXml.Wordprocessing.Text)">
            <summary>
            Checks if the run text is empty.
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.RunTextTools.SplitAt(DocumentFormat.OpenXml.Wordprocessing.Text,System.Int32,Qhta.OpenXmlTools.TextOptions)">
            <summary>
            Split the run runText at the specified index, which is the number of characters from the beginning of the runText.
            Split is not possible if the index is at the beginning or end of the runText.
            Returns the second part of the runText.
            </summary>
            <param name="runText">Run runText element to process</param>
            <param name="index">Char position number</param>
            <param name="options">Options for runText extraction</param>
            <returns>Next, newly created runText (or null) if split is not available</returns>
        </member>
        <member name="T:Qhta.OpenXmlTools.RunTools">
            <summary>
            Tools for working with OpenXml Wordprocessing Run element.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.RunTools.GetRunProperties(DocumentFormat.OpenXml.Wordprocessing.Run)">
            <summary>
            Get the <c>RunProperties</c> element of the run. If it is null, create a new one.
            </summary>
            <param name="run"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.RunTools.AppendText(DocumentFormat.OpenXml.Wordprocessing.Run,System.String)">
            <summary>
            Append text to the run.
            </summary>
            <param name="run"></param>
            <param name="text"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.RunTools.IsBold(DocumentFormat.OpenXml.Wordprocessing.Run)">
            <summary>
            Checks if the run properties contain a <c>Bold</c> or <c>BoldComplexScript</c> element and returns the value of the <c>Val</c> attribute.
            </summary>
            <param name="run"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.RunTools.SetBold(DocumentFormat.OpenXml.Wordprocessing.Run,System.Nullable{System.Boolean})">
            <summary>
            Sets both <c>Bold</c> or <c>BoldComplexScript</c> elements to the given value.
            If the value is <c>null</c>, the elements are removed.
            </summary>
            <param name="run"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.RunTools.IsItalic(DocumentFormat.OpenXml.Wordprocessing.Run)">
            <summary>
            Checks if the run properties contain a <c>Italic</c> or <c>ItalicComplexScript</c> element and returns the value of the <c>Val</c> attribute.
            </summary>
            <param name="run"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.RunTools.SetItalic(DocumentFormat.OpenXml.Wordprocessing.Run,System.Nullable{System.Boolean})">
            <summary>
            Sets both <c>Bold</c> or <c>BoldComplexScript</c> elements to the given value.
            If the value is <c>null</c>, the elements are removed.
            </summary>
            <param name="run"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.RunTools.IsUnderline(DocumentFormat.OpenXml.Wordprocessing.Run)">
            <summary>
            Checks if the run properties contain a <c>Underline</c> element and checks if the value of the <c>Val</c> attribute is not <c>None</c>.
            </summary>
            <param name="run"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.RunTools.IsEmpty(DocumentFormat.OpenXml.Wordprocessing.Run)">
            <summary>
            Checks if the run is empty.
            </summary>
            <param name="run"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.RunTools.HasTabChar(DocumentFormat.OpenXml.Wordprocessing.Run)">
            <summary>
            Checks if the run contains any tab char.
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.RunTools.IsTabChar(DocumentFormat.OpenXml.Wordprocessing.Run)">
            <summary>
            Checks if the run contains a single tab char.
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.RunTools.HasDrawing(DocumentFormat.OpenXml.Wordprocessing.Run)">
            <summary>
            Checks if the run contains any drawing.
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.RunTools.IsDrawing(DocumentFormat.OpenXml.Wordprocessing.Run)">
            <summary>
            Checks if the run contains a single drawing.
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.RunTools.TrimStart(DocumentFormat.OpenXml.Wordprocessing.Run)">
            <summary>
            Trim run text removing leading whitespaces
            </summary>
            <param name="run"></param>
            <returns>True is trimmed</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.RunTools.TrimEnd(DocumentFormat.OpenXml.Wordprocessing.Run)">
            <summary>
            Trim run text removing trailing whitespaces
            </summary>
            <param name="run"></param>
            <returns>True is trimmed</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.RunTools.TryResetFormat(DocumentFormat.OpenXml.Wordprocessing.Run)">
            <summary>
            Reset run format by removing all the properties except the run style.
            </summary>
            <param name="run"></param>
            <returns>true if any properties were removed</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.RunTools.TryFixLongWords(DocumentFormat.OpenXml.Wordprocessing.Run)">
            <summary>
            Insert an optional hyphens into long words, especially URL's.
            </summary>
            <param name="run"></param>
            <returns>true if the fixing was successful, false if it was not needed.</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.RunTools.ReplaceSymbolEncoding(DocumentFormat.OpenXml.Wordprocessing.Run)">
            <summary>
            Replace characters with a code between F000 and F0DD to corresponding unicode characters according to the symbol encoding.
            </summary>
            <param name="run"></param>
            <returns>number of replaced symbols</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.RunTools.GetFont(DocumentFormat.OpenXml.Wordprocessing.Run,System.String)">
            <summary>
            Get the name of the font most frequently used in run text.
            If there is no font defined, return default font statistics.
            </summary>
            <param name="run"></param>
            <param name="defaultFont">Font name used when there is no runFonts element</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.RunTools.GetRunFonts(DocumentFormat.OpenXml.Wordprocessing.Run,System.String)">
            <summary>
            Get statistics of fonts used for run text. If there is no font defined, return default font statistics.
            </summary>
            <param name="run">Run element to examine</param>
            <param name="defaultFont">Font name used when there is no runFonts element</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.RunTools.GetTextPropertiesStatistics(DocumentFormat.OpenXml.Wordprocessing.Run,Qhta.OpenXmlTools.TextProperties)">
            <summary>
            Get statistics of properties used for run text. Each entry in the dictionary represents a property fullName and the number of times it is used.
            The fullName of the property consists of the property element fullName (prefix+":"+localName), attribute fullName and the text value of the attribute.
            Format is: elementFullName attributeFullName=attributeValue
            </summary>
            <param name="run">Run element to examine</param>
            <param name="defaultProperties">Default font properties used when RunProperties are not found</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.RunTools.SetTextProperties(DocumentFormat.OpenXml.Wordprocessing.Run,Qhta.OpenXmlTools.TextProperties)">
            <summary>
            Set the text properties to the run.
            </summary>
            <param name="run"></param>
            <param name="properties"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.RunTools.NormalizeWhitespaces(DocumentFormat.OpenXml.Wordprocessing.Run)">
            <summary>
            Normalize whitespaces in the run text. Run element is modified when it contains only text or tab elements.
            In the effect, there is only one text run with all whitespaces replaced by a single space.
            All other elements are removed.
            </summary>
            <param name="run">Run element to process</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.RunTools.SplitAt(DocumentFormat.OpenXml.Wordprocessing.Run,System.Int32,Qhta.OpenXmlTools.TextOptions)">
            <summary>
            Split the run at the specified position, which is the number of characters from the beginning of the run.
            Split is not possible if the position is at the beginning or end of the run.
            Returns the second part of the run.
            </summary>
            <param name="run">Run element to process</param>
            <param name="position">Char position number</param>
            <param name="options">Options for text extraction</param>
            <returns>Next, newly created run (or null if split is not available)</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.RunTools.InsertAt(DocumentFormat.OpenXml.Wordprocessing.Run,System.Int32,DocumentFormat.OpenXml.OpenXmlElement,Qhta.OpenXmlTools.TextOptions)">
            <summary>
            Insert a child to the run at the specified index, which is the number of characters from the beginning of the run.
            </summary>
            <param name="run">Run element to process</param>
            <param name="index">Char position number</param>
            <param name="child">New child member</param>
            <param name="options">Options for text extraction</param>
            <returns>Next, newly created run (or null if split is not available)</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.RunTools.GetTextPosOfElement(DocumentFormat.OpenXml.Wordprocessing.Run,DocumentFormat.OpenXml.OpenXmlElement,Qhta.OpenXmlTools.TextOptions)">
            <summary>
            Get the position of the paragraph-level element in the paragraph text
            </summary>
            <param name="run">Run element to process</param>
            <param name="element">member element to search</param>
            <param name="options">Options for text extraction</param>
            <returns>Char position of the element (or -1 if not found)</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.RunTools.GetElementAtTextPos(DocumentFormat.OpenXml.Wordprocessing.Run,System.Int32,Qhta.OpenXmlTools.TextOptions)">
            <summary>
            Get the run-level element at the given position in the run text.
            </summary>
            <param name="run">Run element to process</param>
            <param name="pos">position of element to search</param>
            <param name="options">Options for text extraction</param>
            <returns>Paragraph-level or run-level element found at position (or null if not found)</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.RunTools.NewRun(DocumentFormat.OpenXml.Wordprocessing.Run)">
            <summary>
            Create a new run with the same properties as the source run.
            </summary>
            <param name="run">Run element to process</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.RunTools.SplitBefore(DocumentFormat.OpenXml.Wordprocessing.Run,DocumentFormat.OpenXml.OpenXmlElement)">
            <summary>
            Split the run before the given member element which can be a run-level element.
            Returns the second part of the run.
            </summary>
            <param name="run">Paragraph element to process</param>
            <param name="member">Paragraph-level or run-level member element</param>
            <returns>Next, newly created run (or null if split is not available)</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.RunTools.SplitAfter(DocumentFormat.OpenXml.Wordprocessing.Run,DocumentFormat.OpenXml.OpenXmlElement)">
            <summary>
            Split the run after the given member element which can be a run-level element.
            Returns the second part of the run.
            </summary>
            <param name="run">Paragraph element to process</param>
            <param name="member">Paragraph-level or run-level member element</param>
            <returns>Next, newly created run (or null if split is not available)</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.RunTools.GetFormat(DocumentFormat.OpenXml.Wordprocessing.Run)">
            <summary>
            Get the text format of the run.
            </summary>
            <param name="run"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.RunTools.SetFormat(DocumentFormat.OpenXml.Wordprocessing.Run,Qhta.OpenXmlTools.TextFormat)">
            <summary>
            Set the text format to the run.
            </summary>
            <param name="run"></param>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="T:Qhta.OpenXmlTools.ScriptType">
            <summary>
            Represents the type of script used to select the appropriate font.
            </summary>
        </member>
        <member name="T:Qhta.OpenXmlTools.SectionPropertiesChangeTools">
            <summary>
            Tools for changing section properties.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.SectionPropertiesChangeTools.GetPreviousSectionProperties(DocumentFormat.OpenXml.Wordprocessing.SectionPropertiesChange)">
            <summary>
            Get the first <c>PreviousSectionProperties</c> element from the section properties change.
            </summary>
            <param name="sectionPropertiesChange"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.SectionPropertiesChangeTools.SetPreviousSectionProperties(DocumentFormat.OpenXml.Wordprocessing.SectionPropertiesChange,DocumentFormat.OpenXml.Wordprocessing.PreviousSectionProperties)">
            <summary>
            Set <c>PreviousSectionProperties</c> element in the section properties change.
            </summary>
            <param name="sectionPropertiesChange"></param>
            <param name="value"></param>
        </member>
        <member name="T:Qhta.OpenXmlTools.SectionPropertiesTools">
            <summary>
            Tools for working with OpenXml Wordprocessing SectionProperties element.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.SectionPropertiesTools.GetHeaderReferences(DocumentFormat.OpenXml.Wordprocessing.SectionProperties)">
            <summary>
            Get all <c>HeaderReference</c> elements from the section properties.
            </summary>
            <param name="sectionProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.SectionPropertiesTools.GetFooterReferences(DocumentFormat.OpenXml.Wordprocessing.SectionProperties)">
            <summary>
            Get all <c>FooterReference</c> elements from the section properties.
            </summary>
            <param name="sectionProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.SectionPropertiesTools.GetFootnoteProperties(DocumentFormat.OpenXml.Wordprocessing.SectionProperties)">
            <summary>
            Get the first <c>FootnoteProperties</c> element from the section properties.
            </summary>
            <param name="sectionProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.SectionPropertiesTools.GetEndnoteProperties(DocumentFormat.OpenXml.Wordprocessing.SectionProperties)">
            <summary>
            Get the first <c>EndnoteProperties</c> element from the section properties.
            </summary>
            <param name="sectionProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.SectionPropertiesTools.GetSectionType(DocumentFormat.OpenXml.Wordprocessing.SectionProperties)">
            <summary>
            Get the first <c>SectionType</c> value from the section properties.
            </summary>
            <param name="sectionProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.SectionPropertiesTools.GetPageSize(DocumentFormat.OpenXml.Wordprocessing.SectionProperties)">
            <summary>
            Get the page size from the section properties.
            </summary>
            <param name="sectionProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.SectionPropertiesTools.SetPageSize(DocumentFormat.OpenXml.Wordprocessing.SectionProperties,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Set the page size to the section properties.
            </summary>
            <param name="sectionProperties"></param>
            <param name="width"></param>
            <param name="height"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.SectionPropertiesTools.GetPageMargin(DocumentFormat.OpenXml.Wordprocessing.SectionProperties)">
            <summary>
            Get the first <c>PageMargin</c> from the section properties.
            </summary>
            <param name="sectionProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.SectionPropertiesTools.GetPaperSource(DocumentFormat.OpenXml.Wordprocessing.SectionProperties)">
            <summary>
            Get the first <c>PaperSource</c> element from the section properties.
            </summary>
            <param name="sectionProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.SectionPropertiesTools.GetPageBorders(DocumentFormat.OpenXml.Wordprocessing.SectionProperties)">
            <summary>
            Get the first <c>PageBorders</c> element from the section properties.
            </summary>
            <param name="sectionProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.SectionPropertiesTools.GetLineNumberType(DocumentFormat.OpenXml.Wordprocessing.SectionProperties)">
            <summary>
            Get the first <c>LineNumberType</c> element from the section properties.
            </summary>
            <param name="sectionProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.SectionPropertiesTools.GetPageNumberType(DocumentFormat.OpenXml.Wordprocessing.SectionProperties)">
            <summary>
            Get the first <c>PageNumberType</c> element from the section properties.
            </summary>
            <param name="sectionProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.SectionPropertiesTools.GetColumns(DocumentFormat.OpenXml.Wordprocessing.SectionProperties)">
            <summary>
            Get the first <c>columns</c> element from the section properties.
            </summary>
            <param name="sectionProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.SectionPropertiesTools.GetFormProtection(DocumentFormat.OpenXml.Wordprocessing.SectionProperties)">
            <summary>
            Get the first <c>FormProtection</c> from the section properties.
            </summary>
            <param name="sectionProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.SectionPropertiesTools.GetVerticalTextAlignmentOnPage(DocumentFormat.OpenXml.Wordprocessing.SectionProperties)">
            <summary>
            Get the first <c>VerticalTextAlignmentOnPage</c> value from the section properties.
            </summary>
            <param name="sectionProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.SectionPropertiesTools.IsNoEndnote(DocumentFormat.OpenXml.Wordprocessing.SectionProperties)">
            <summary>
            Get the first <c>NoEndnote</c> value from the section properties.
            </summary>
            <param name="sectionProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.SectionPropertiesTools.IsTitlePage(DocumentFormat.OpenXml.Wordprocessing.SectionProperties)">
            <summary>
            Get the first <c>TitlePage</c> value from the section properties.
            </summary>
            <param name="sectionProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.SectionPropertiesTools.GetTextDirection(DocumentFormat.OpenXml.Wordprocessing.SectionProperties)">
            <summary>
            Get the first <c>TextDirection</c> value from the section properties.
            </summary>
            <param name="sectionProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.SectionPropertiesTools.GetTitlePage(DocumentFormat.OpenXml.Wordprocessing.SectionProperties)">
            <summary>
            Get the first <c>TitlePage</c> value from the section properties.
            </summary>
            <param name="sectionProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.SectionPropertiesTools.GetNoEndnote(DocumentFormat.OpenXml.Wordprocessing.SectionProperties)">
            <summary>
            Get the first <c>NoEndnote</c> value from the section properties.
            </summary>
            <param name="sectionProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.SectionPropertiesTools.GetBiDi(DocumentFormat.OpenXml.Wordprocessing.SectionProperties)">
            <summary>
            Get the first <c>BiDi</c> value from the section properties.
            </summary>
            <param name="sectionProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.SectionPropertiesTools.GetGutterOnRight(DocumentFormat.OpenXml.Wordprocessing.SectionProperties)">
            <summary>
            Get the first <c>GutterOnRight</c> value from the section properties.
            </summary>
            <param name="sectionProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.SectionPropertiesTools.GetDocGrid(DocumentFormat.OpenXml.Wordprocessing.SectionProperties)">
            <summary>
            Get the first <c>DocGrid</c> element from the section properties.
            </summary>
            <param name="sectionProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.SectionPropertiesTools.GetPrinterSettingsReference(DocumentFormat.OpenXml.Wordprocessing.SectionProperties)">
            <summary>
            Get the first <c>PrinterSettingsReference</c> element from the section properties.
            </summary>
            <param name="sectionProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.SectionPropertiesTools.GetFootnoteColumns(DocumentFormat.OpenXml.Wordprocessing.SectionProperties)">
            <summary>
            Get the first <c>FootnoteColumns</c> element from the section properties.
            </summary>
            <param name="sectionProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.SectionPropertiesTools.GetSectionPropertiesChange(DocumentFormat.OpenXml.Wordprocessing.SectionProperties)">
            <summary>
            Get the first <c>SectionPropertiesChange</c> element from the section properties.
            </summary>
            <param name="sectionProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.SectionPropertiesTools.SetHeaderReferences(DocumentFormat.OpenXml.Wordprocessing.SectionProperties,System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.Wordprocessing.HeaderReference})">
            <summary>
            Set all <c>HeaderReference</c> elements in the section properties.
            </summary>
            <param name="sectionProperties"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SectionPropertiesTools.SetFooterReferences(DocumentFormat.OpenXml.Wordprocessing.SectionProperties,System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.Wordprocessing.FooterReference})">
            <summary>
             Set all <c>FooterReference</c> elements in the section properties.
            </summary>
            <param name="sectionProperties"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SectionPropertiesTools.SetFootnoteProperties(DocumentFormat.OpenXml.Wordprocessing.SectionProperties,DocumentFormat.OpenXml.Wordprocessing.FootnoteProperties)">
            <summary>
            Set <c>FootnoteProperties</c> element in the section properties.
            </summary>
            <param name="sectionProperties"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SectionPropertiesTools.SetEndnoteProperties(DocumentFormat.OpenXml.Wordprocessing.SectionProperties,DocumentFormat.OpenXml.Wordprocessing.EndnoteProperties)">
            <summary>
            Set <c>EndnoteProperties</c> element in the section properties.
            </summary>
            <param name="sectionProperties"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SectionPropertiesTools.SetSectionType(DocumentFormat.OpenXml.Wordprocessing.SectionProperties,System.Nullable{DocumentFormat.OpenXml.Wordprocessing.SectionMarkValues})">
            <summary>
            Set <c>SectionType</c> value in the section properties.
            </summary>
            <param name="sectionProperties"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SectionPropertiesTools.SetPageSize(DocumentFormat.OpenXml.Wordprocessing.SectionProperties,DocumentFormat.OpenXml.Wordprocessing.PageSize)">
            <summary>
            Set <c>PageSize</c> element in the section properties.
            </summary>
            <param name="sectionProperties"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SectionPropertiesTools.SetPageMargin(DocumentFormat.OpenXml.Wordprocessing.SectionProperties,DocumentFormat.OpenXml.Wordprocessing.PageMargin)">
            <summary>
            Set <c>PageMargin</c> element in the section properties.
            </summary>
            <param name="sectionProperties"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SectionPropertiesTools.SetPaperSource(DocumentFormat.OpenXml.Wordprocessing.SectionProperties,DocumentFormat.OpenXml.Wordprocessing.PaperSource)">
            <summary>
            Set <c>PaperSource</c> element in the section properties.
            </summary>
            <param name="sectionProperties"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SectionPropertiesTools.SetPageBorders(DocumentFormat.OpenXml.Wordprocessing.SectionProperties,DocumentFormat.OpenXml.Wordprocessing.PageBorders)">
            <summary>
            Set <c>PageBorders</c> element in the section properties.
            </summary>
            <param name="sectionProperties"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SectionPropertiesTools.SetLineNumberType(DocumentFormat.OpenXml.Wordprocessing.SectionProperties,DocumentFormat.OpenXml.Wordprocessing.LineNumberType)">
            <summary>
            Set <c>LineNumberType</c> element in the section properties.
            </summary>
            <param name="sectionProperties"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SectionPropertiesTools.SetPageNumberType(DocumentFormat.OpenXml.Wordprocessing.SectionProperties,DocumentFormat.OpenXml.Wordprocessing.PageNumberType)">
            <summary>
            Set <c>PageNumberType</c> element in the section properties.
            </summary>
            <param name="sectionProperties"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SectionPropertiesTools.SetColumns(DocumentFormat.OpenXml.Wordprocessing.SectionProperties,DocumentFormat.OpenXml.Wordprocessing.Columns)">
            <summary>
            Set <c>Columns</c> element in the section properties.
            </summary>
            <param name="sectionProperties"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SectionPropertiesTools.SetFormProtection(DocumentFormat.OpenXml.Wordprocessing.SectionProperties,System.Nullable{System.Boolean})">
            <summary>
            Set <c>FormProtection</c> value in the section properties.
            </summary>
            <param name="sectionProperties"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SectionPropertiesTools.SetVerticalTextAlignmentOnPage(DocumentFormat.OpenXml.Wordprocessing.SectionProperties,System.Nullable{DocumentFormat.OpenXml.Wordprocessing.VerticalJustificationValues})">
            <summary>
            Set <c>VerticalTextAlignmentOnPage</c> value in the section properties.
            </summary>
            <param name="sectionProperties"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SectionPropertiesTools.SetNoEndnote(DocumentFormat.OpenXml.Wordprocessing.SectionProperties,System.Nullable{System.Boolean})">
            <summary>
            Set <c>NoEndnote</c> value in the section properties.
            </summary>
            <param name="sectionProperties"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SectionPropertiesTools.SetTitlePage(DocumentFormat.OpenXml.Wordprocessing.SectionProperties,System.Nullable{System.Boolean})">
            <summary>
            Set <c>TitlePage</c> value in the section properties.
            </summary>
            <param name="sectionProperties"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SectionPropertiesTools.SetTextDirection(DocumentFormat.OpenXml.Wordprocessing.SectionProperties,System.Nullable{DocumentFormat.OpenXml.Wordprocessing.TextDirectionValues})">
            <summary>
            Set <c>TextDirection</c> value in the section properties.
            </summary>
            <param name="sectionProperties"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SectionPropertiesTools.SetBiDi(DocumentFormat.OpenXml.Wordprocessing.SectionProperties,System.Nullable{System.Boolean})">
            <summary>
            Set <c>BiDi</c> value in the section properties.
            </summary>
            <param name="sectionProperties"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SectionPropertiesTools.SetGutterOnRight(DocumentFormat.OpenXml.Wordprocessing.SectionProperties,System.Nullable{System.Boolean})">
            <summary>
            Set <c>GutterOnRight</c> value in the section properties.
            </summary>
            <param name="sectionProperties"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SectionPropertiesTools.SetDocGrid(DocumentFormat.OpenXml.Wordprocessing.SectionProperties,DocumentFormat.OpenXml.Wordprocessing.DocGrid)">
            <summary>
            Set <c>DocGrid</c> element in the section properties.
            </summary>
            <param name="sectionProperties"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SectionPropertiesTools.SetPrinterSettingsReference(DocumentFormat.OpenXml.Wordprocessing.SectionProperties,DocumentFormat.OpenXml.Wordprocessing.PrinterSettingsReference)">
            <summary>
            Set <c>PrinterSettingsReference</c> element in the section properties.
            </summary>
            <param name="sectionProperties"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SectionPropertiesTools.SetFootnoteColumns(DocumentFormat.OpenXml.Wordprocessing.SectionProperties,DocumentFormat.OpenXml.Office2013.Word.FootnoteColumns)">
            <summary>
            Set <c>FootnoteColumns</c> element in the section properties.
            </summary>
            <param name="sectionProperties"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SectionPropertiesTools.SetSectionPropertiesChange(DocumentFormat.OpenXml.Wordprocessing.SectionProperties,DocumentFormat.OpenXml.Wordprocessing.SectionPropertiesChange)">
            <summary>
            Set <c>SectionPropertiesChange</c> element in the section properties.
            </summary>
            <param name="sectionProperties"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SectionPropertiesTools.GetBody(DocumentFormat.OpenXml.Wordprocessing.SectionProperties)">
            <summary>
            Recursively get the parent <c>Body</c> element of the section properties.
            </summary>
            <param name="sectionProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.SectionPropertiesTools.GetInternalPageWidth(DocumentFormat.OpenXml.Wordprocessing.SectionProperties)">
            <summary>
            Get the internal page width of the section properties.
            Internal page width is the width of the page without the margins.
            </summary>
            <param name="sectionProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.SectionPropertiesTools.GetPageWidth(DocumentFormat.OpenXml.Wordprocessing.SectionProperties)">
            <summary>
            Get the page width of the section properties.
            </summary>
            <param name="sectionProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.SectionPropertiesTools.SetPageWidth(DocumentFormat.OpenXml.Wordprocessing.SectionProperties,System.Nullable{System.Int32})">
            <summary>
            Set the page width to the section properties.
            </summary>
            <param name="sectionProperties"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SectionPropertiesTools.GetPageHeight(DocumentFormat.OpenXml.Wordprocessing.SectionProperties)">
            <summary>
            Get the page height of the section properties.
            </summary>
            <param name="sectionProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.SectionPropertiesTools.SetHeight(DocumentFormat.OpenXml.Wordprocessing.SectionProperties,System.Nullable{System.UInt32})">
            <summary>
            Set the page height to the section properties.
            </summary>
            <param name="sectionProperties"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SectionPropertiesTools.GetLeftPageMargin(DocumentFormat.OpenXml.Wordprocessing.SectionProperties)">
            <summary>
            Get the page left margin.
            </summary>
            <param name="sectionProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.SectionPropertiesTools.SetLeftPageMargin(DocumentFormat.OpenXml.Wordprocessing.SectionProperties,System.Nullable{System.Int32})">
            <summary>
            Set the  page left margin.
            </summary>
            <param name="sectionProperties"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SectionPropertiesTools.GetRightPageMargin(DocumentFormat.OpenXml.Wordprocessing.SectionProperties)">
            <summary>
            Get the  page right margin.
            </summary>
            <param name="sectionProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.SectionPropertiesTools.SetRightPageMargin(DocumentFormat.OpenXml.Wordprocessing.SectionProperties,System.Nullable{System.Int32})">
            <summary>
            Set the page right margin.
            </summary>
            <param name="sectionProperties"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SectionPropertiesTools.GetTopPageMargin(DocumentFormat.OpenXml.Wordprocessing.SectionProperties)">
            <summary>
            Get the page top margin.
            </summary>
            <param name="sectionProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.SectionPropertiesTools.SetTopPageMargin(DocumentFormat.OpenXml.Wordprocessing.SectionProperties,System.Nullable{System.Int32})">
            <summary>
            Set the page top margin.
            </summary>
            <param name="sectionProperties"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SectionPropertiesTools.GetBottomPageMargin(DocumentFormat.OpenXml.Wordprocessing.SectionProperties)">
            <summary>
            Get the page bottom margin.
            </summary>
            <param name="sectionProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.SectionPropertiesTools.SetBottomPageMargin(DocumentFormat.OpenXml.Wordprocessing.SectionProperties,System.Nullable{System.Int32})">
            <summary>
            Set the page bottom margin.
            </summary>
            <param name="sectionProperties"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SectionPropertiesTools.GetHeaderPageMargin(DocumentFormat.OpenXml.Wordprocessing.SectionProperties)">
            <summary>
            Get the page header margin.
            </summary>
            <param name="sectionProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.SectionPropertiesTools.SetHeaderPageMargin(DocumentFormat.OpenXml.Wordprocessing.SectionProperties,System.Nullable{System.Int32})">
            <summary>
            Set the page header margin.
            </summary>
            <param name="sectionProperties"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SectionPropertiesTools.GetFooterPageMargin(DocumentFormat.OpenXml.Wordprocessing.SectionProperties)">
            <summary>
            Get the page footer margin.
            </summary>
            <param name="sectionProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.SectionPropertiesTools.SetFooterPageMargin(DocumentFormat.OpenXml.Wordprocessing.SectionProperties,System.Nullable{System.Int32})">
            <summary>
            Set the page footer margin.
            </summary>
            <param name="sectionProperties"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SectionPropertiesTools.GetGutterPageMargin(DocumentFormat.OpenXml.Wordprocessing.SectionProperties)">
            <summary>
            Get the page gutter.
            </summary>
            <param name="sectionProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.SectionPropertiesTools.SetGutterPageMargin(DocumentFormat.OpenXml.Wordprocessing.SectionProperties,System.Nullable{System.Int32})">
            <summary>
            Set the page gutter.
            </summary>
            <param name="sectionProperties"></param>
            <param name="value"></param>
        </member>
        <member name="T:Qhta.OpenXmlTools.SectionRange">
            <summary>
            Class to represent a range of elements in a Word section of the document.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.SectionRange.#ctor(DocumentFormat.OpenXml.Wordprocessing.SectionProperties,DocumentFormat.OpenXml.OpenXmlElement,DocumentFormat.OpenXml.OpenXmlElement)">
            <summary>
            Class to represent a range of elements in a Word section of the document.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.SectionRange.SectionProperties">
            <summary>
            Section properties of the range.
            </summary>
        </member>
        <member name="T:Qhta.OpenXmlTools.SectionsTools">
            <summary>
            Tools for working with OpenXml Wordprocessing sections.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.SectionsTools.HasSectionProperties(DocumentFormat.OpenXml.Packaging.WordprocessingDocument)">
            <summary>
            Check if the document has section properties defined.
            </summary>
            <param name="wordDoc">The WordprocessingDocument</param>
            <returns>True if the document has more than one section properties defined</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.SectionsTools.GetSectionProperties(DocumentFormat.OpenXml.Packaging.WordprocessingDocument)">
            <summary>
            Gets all the sections properties from the document.
            </summary>
            <param name="wordDoc">The WordprocessingDocument</param>
            <returns>Instance of the sections element</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.SectionsTools.GetSectionProperties(DocumentFormat.OpenXml.Wordprocessing.Body)">
            <summary>
            Gets the section properties from the document body. If the body does not have a section properties element, it is created.
            </summary>
            <param name="body">Body of the WordprocessingDocument</param>
            <returns>Instance of the sections element</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.SectionsTools.GetSectionRanges(DocumentFormat.OpenXml.Wordprocessing.Body)">
            <summary>
            Gets all the section ranges from the document body.
            </summary>
            <param name="body">Body of the WordprocessingDocument</param>
            <returns>Instance of the sections element</returns>
        </member>
        <member name="T:Qhta.OpenXmlTools.SetTextMethods">
            <summary>
            Methods to set text to OpenXml elements.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.SetTextMethods.SetText(DocumentFormat.OpenXml.OpenXmlElement,System.String,Qhta.OpenXmlTools.TextOptions)">
            <summary>
            Set text to an OpenXml element using text parser.
            </summary>
            <param name="element"></param>
            <param name="text"></param>
            <param name="options"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SetTextMethods.SetTextTo(DocumentFormat.OpenXml.Wordprocessing.Run,System.String,Qhta.OpenXmlTools.TextOptions)">
            <summary>
            Set text to a run element.
            </summary>
            <param name="run"></param>
            <param name="text"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.SetTextMethods.SetTextTo(DocumentFormat.OpenXml.Wordprocessing.Run,DocumentFormat.OpenXml.OpenXmlElement,System.String,Qhta.OpenXmlTools.TextOptions)">
            <summary>
            Set text to a run SearchText element to/before the specified member.
            </summary>
            <param name="run"></param>
            <param name="member"></param>
            <param name="text"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.SetTextMethods.InsertTextAt(DocumentFormat.OpenXml.Wordprocessing.Text,System.Int32,System.String,Qhta.OpenXmlTools.TextOptions)">
            <summary>
            Insert text to a run SearchText element at the specified position.
            </summary>
            <param name="runText"></param>
            <param name="text"></param>
            <param name="pos"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.SetTextMethods.SetTextAt(DocumentFormat.OpenXml.Wordprocessing.Text,System.Int32,System.String,Qhta.OpenXmlTools.TextOptions)">
            <summary>
            Set text to a run SearchText element at the specified position.
            Existing text before the position is kept intact.
            SearchText after the position is replaced with the new text.
            </summary>
            <param name="runText"></param>
            <param name="text"></param>
            <param name="pos"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.SetTextMethods.SetTextOf(DocumentFormat.OpenXml.Wordprocessing.Text,System.String,Qhta.OpenXmlTools.TextOptions)">
            <summary>
            Set the text of the run SearchText element.
            </summary>
            <param name="runText"></param>
            <param name="text"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="T:Qhta.OpenXmlTools.SettingCategory">
            <summary>
            Settings
            categories.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.SettingCategory.Automation">
            <summary>
            Settings applied to automation and evaluation.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.SettingCategory.Compatibility">
            <summary>
            Compatibility properties.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.SettingCategory.CustomXml">
            <summary>
            Settings applied to the custom Xml
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.SettingCategory.Hyphenation">
            <summary>
            Settings applied to the text hyphenation
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.SettingCategory.Identification">
            <summary>
            Identifying the document
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.SettingCategory.Layout">
            <summary>
            Settings applied to the layout and view of the document
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.SettingCategory.Load">
            <summary>
            Settings applied to the document load operations
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.SettingCategory.MailMerge">
            <summary>
            Settings applied to the mail-merge operations
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.SettingCategory.Printing">
            <summary>
            Settings applied to the document print operations
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.SettingCategory.Proofing">
            <summary>
            Settings applied to the document proofing operations
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.SettingCategory.Revisions">
            <summary>
            Settings applied to the revision operations
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.SettingCategory.Save">
            <summary>
            Settings applied to the document save operations
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.SettingCategory.Security">
            <summary>
            Settings applied to the document security
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.SettingCategory.Styles">
            <summary>
            Settings applied to the document styles
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.SettingCategory.Theming">
            <summary>
            Settings applied to the document theme
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.SettingCategory.Tracking">
            <summary>
            Settings applied to the change tracking
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.SettingCategory.UI">
            <summary>
            Settings applied to the user interface
            </summary>
        </member>
        <member name="T:Qhta.OpenXmlTools.SettingsTools">
            <summary>
            Tools for working with the Settings element.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.HasSettings(DocumentFormat.OpenXml.Packaging.WordprocessingDocument)">
            <summary>
            Checks if the document has settings.
            </summary>
            <param name="wordDoc"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetSettings(DocumentFormat.OpenXml.Packaging.WordprocessingDocument)">
            <summary>
            Returns the settings of the document. If the settings are not found, they are created.
            </summary>
            <param name="wordDoc"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.Count(DocumentFormat.OpenXml.Wordprocessing.Settings,Qhta.OpenXmlTools.ItemFilter)">
            <summary>
            Get the count of the settings properties.
            </summary>
            <param name="settings"></param>
            <param name="filter">specifies if all property names should be counted or non-empty ones</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetNames(DocumentFormat.OpenXml.Wordprocessing.Settings,Qhta.OpenXmlTools.ItemFilter)">
            <summary>
            Get the names of the settings properties.
            </summary>
            <param name="settings"></param>
            <param name="filter">specifies if all property names should be listed or non-empty ones</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetType(DocumentFormat.OpenXml.Wordprocessing.Settings,System.String)">
            <summary>
            Get the type of property with its name.
            </summary>
            <param name="settings"></param>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetCategory(DocumentFormat.OpenXml.Wordprocessing.Settings,System.String)">
            <summary>
            Get the category of property with its name.
            </summary>
            <param name="settings"></param>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetInfo(DocumentFormat.OpenXml.Wordprocessing.Settings,System.String)">
            <summary>
            Get the info of property with its name.
            </summary>
            <param name="settings"></param>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetValue(DocumentFormat.OpenXml.Wordprocessing.Settings,System.String)">
            <summary>
            Gets the value of a settings property.
            </summary>
            <param name="settings"></param>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetValue(DocumentFormat.OpenXml.Wordprocessing.Settings,System.String,System.Object)">
            <summary>
            Sets the value of a settings property.
            </summary>
            <param name="settings"></param>
            <param name="propertyName"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetBordersDoNotSurroundHeader(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>BordersDoNotSurroundHeader</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetDrawingGridHorizontalSpacing(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>DrawingGridHorizontalSpacing</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetPersistentDocumentId(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>DocumentProtection</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetView(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>View</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetZoom(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>Zoom</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetRemovePersonalInformation(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>RemovePersonalInformation</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetRemoveDateAndTime(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>RemoveDateAndTime</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetDoNotDisplayPageBoundaries(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>DoNotDisplayPageBoundaries</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetDisplayBackgroundShape(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>DisplayBackgroundShape</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetPrintPostScriptOverText(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>PrintPostScriptOverText</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetPrintFractionalCharacterWidth(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>PrintFractionalCharacterWidth</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetPrintFormsData(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>PrintFormsData</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetEmbedTrueTypeFonts(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>EmbedTrueTypeFonts</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetEmbedSystemFonts(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>EmbedSystemFonts</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetSaveSubsetFonts(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>SaveSubsetFonts</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetSaveFormsData(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>SaveFormsData</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetMirrorMargins(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>MirrorMargins</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetAlignBorderAndEdges(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>AlignBordersAndEdges</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetBordersDoNotSurroundFooter(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>BordersDoNotSurroundFooter</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetGutterAtTop(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>DoNotSuppressParagraphBorders</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetHideSpellingErrors(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>HideSpellingErrors</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetHideGrammaticalErrors(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>HideGrammaticalErrors</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetActiveWritingStyle(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>ActiveWritingStyle</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetProofState(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>ProofState</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetFormsDesign(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>FormsDesign</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetAttachedTemplate(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>AttachedTemplate</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetLinkStyles(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>LinkStyles</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetStylePaneFormatFilter(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>StylePaneFormatFilter</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetStylePaneSortMethods(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>StylePaneSortMethod</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetDocumentType(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>DocumentType</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetMailMerge(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>MailMerge</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetRevisionView(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetTrackRevisions(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>TrackRevisions</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetDoNotTrackMoves(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>DoNotTrackMoves</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetDoNotTrackFormatting(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>DoNotTrackFormatting</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetDocumentProtection(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>DocumentProtection</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetAutoFormatOverride(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>AutoFormatOverride</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetStyleLockThemesPart(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>StyleLockTheme</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetStyleLockStylesPart(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>StyleLockQFSet</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetDefaultTabStop(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>DefaultTabStop</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetAutoHyphenation(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>AutoHyphenation</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetConsecutiveHyphenLimit(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>ConsecutiveHyphenLimit</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetHyphenationZone(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>HyphenationZone</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetDoNotHyphenateCaps(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>DoNotHyphenateCaps</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetShowEnvelope(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>DoNotLeaveBackslashAlone</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetSummaryLength(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>SummaryLength</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetClickAndTypeStyle(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>ClickAndTypeStyle</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetDefaultTableStyle(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>DefaultTableStyle</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetEvenAndOddHeaders(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>EvenAndOddHeaders</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetBookFoldReversePrinting(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>BookFoldPrintingSheets</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetBookFoldPrinting(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>BookFoldPrinting</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetBookFoldPrintingSheets(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>BookFoldPrintingSheets</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetWriteProtection(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>WriteProtection</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetDrawingGridVerticalSpacing(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>DrawingGridVerticalSpacing</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetDisplayHorizontalDrawingGrid(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>DisplayHorizontalDrawingGrid</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetDisplayVerticalDrawingGrid(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>DisplayVerticalDrawingGrid</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetDoNotUseMarginsForDrawingGridOrigin(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>DoNotUseMarginsForDrawingGridOrigin</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetDrawingGridHorizontalOrigin(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>DoNotShadeFormData</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetDrawingGridVerticalOrigin(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>DrawingGridVerticalOrigin</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetDoNotShadeFormData(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>DoNotShadeFormData</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetNoPunctuationKerning(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>NoPunctuationKerning</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetCharacterSpacingControl(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>CharacterSpacingControl</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetPrintTwoOnOne(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>PrintTwoOnOne</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetStrictFirstAndLastChars(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>StrictFirstAndLastChars</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetNoLineBreaksAfterKinsoku(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>NoLineBreaksAfterKinsoku</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetNoLineBreaksBeforeKinsoku(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>NoLineBreaksBeforeKinsoku</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetSavePreviewPicture(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>SavePreviewPicture</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetDoNotValidateAgainstSchema(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetSaveInvalidXml(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>SaveInvalidXml</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetIgnoreMixedContent(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>IgnoreMixedContent</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetAlwaysShowPlaceholderText(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
              Get the <c>AlwaysShowPlaceholderText</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetDoNotDemarcateInvalidXml(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>DoNotDemarcateInvalidXml</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetSaveXmlDataOnly(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>SaveXmlDataOnly</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetUseXsltWhenSaving(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>UseXsltWhenSaving</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetSaveThroughXslt(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>SaveThroughXslt</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetShowXmlTags(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>ShowXmlTags</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetAlwaysMergeEmptyNamespace(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>AlwaysMergeEmptyNamespace</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetUpdateFieldsOnOpen(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>UpdateFieldsOnOpen</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetHeaderShapeDefaults(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>HeaderShapeDefaults</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetFootnoteDocumentWideProperties(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>FootnoteDocumentWideProperties</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetEndnoteDocumentWideProperties(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>EndnoteDocumentWideProperties</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetCompatibility(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>Compatibility</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetDocumentVariables(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>DocumentVariables</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetRsids(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>Rsids</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetMathProperties(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>MathProperties</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetUICompatibleWith97To2003(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>UICompatibleWith97To2003</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetAttachedSchema(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>AttachedSchema</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetThemeFontLanguages(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>ThemeFontLang</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetColorSchemeMapping(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
             Get the <c>ColorSchemeMapping</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetDoNotIncludeSubdocsInStats(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
             Get the <c>DoNotIncludeSubdocsInStats</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetDoNotAutoCompressPictures(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>DoNotAutoCompressPictures</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetForceUpgrade(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>ForceUpgrade</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetCaptions(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>Captions</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetReadModeInkLockDown(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>ReadModeInkLockDown</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetSchemaLibrary(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>SchemaLibrary</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetShapeDefaults(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>ShapeDefaults</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetDecimalSymbol(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>DecimalSymbol</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetListSeparator(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>ListSeparator</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetDocumentId(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>DocumentId</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetDiscardImageEditingData(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>DiscardImageEditingData</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetDefaultImageDpi(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>DefaultImageDpi</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetConflictMode(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>ConflictMode</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetChartTrackingRefBased(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Get the <c>ChartTrackingRefBased</c> setting value.
            </summary>
            <param name="settings"></param>
            <result>result value</result>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetBordersDoNotSurroundHeader(DocumentFormat.OpenXml.Wordprocessing.Settings,System.Nullable{System.Boolean})">
            <summary>
            Set the <c>BordersDoNotSurroundHeader</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetDrawingGridHorizontalSpacing(DocumentFormat.OpenXml.Wordprocessing.Settings,System.Nullable{Qhta.OpenXmlTools.Twips})">
            <summary>
            Set the <c>DrawingGridHorizontalSpacing</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetPersistentDocumentId(DocumentFormat.OpenXml.Wordprocessing.Settings,System.Nullable{System.Guid})">
            <summary>
            Set the <c>DocumentProtection</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetView(DocumentFormat.OpenXml.Wordprocessing.Settings,System.Nullable{DocumentFormat.OpenXml.Wordprocessing.ViewValues})">
            <summary>
            Set the <c>View</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetZoom(DocumentFormat.OpenXml.Wordprocessing.Settings,DocumentFormat.OpenXml.Wordprocessing.Zoom)">
            <summary>
            Set the <c>Zoom</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetRemovePersonalInformation(DocumentFormat.OpenXml.Wordprocessing.Settings,System.Nullable{System.Boolean})">
            <summary>
            Set the <c>RemovePersonalInformation</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetRemoveDateAndTime(DocumentFormat.OpenXml.Wordprocessing.Settings,System.Nullable{System.Boolean})">
            <summary>
            Set the <c>RemoveDateAndTime</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetDoNotDisplayPageBoundaries(DocumentFormat.OpenXml.Wordprocessing.Settings,System.Nullable{System.Boolean})">
            <summary>
            Set the <c>DoNotDisplayPageBoundaries</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetDisplayBackgroundShape(DocumentFormat.OpenXml.Wordprocessing.Settings,System.Nullable{System.Boolean})">
            <summary>
            Set the <c>DisplayBackgroundShape</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetPrintPostScriptOverText(DocumentFormat.OpenXml.Wordprocessing.Settings,System.Nullable{System.Boolean})">
            <summary>
            Set the <c>PrintPostScriptOverText</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetPrintFractionalCharacterWidth(DocumentFormat.OpenXml.Wordprocessing.Settings,System.Nullable{System.Boolean})">
            <summary>
            Set the <c>PrintFractionalCharacterWidth</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetPrintFormsData(DocumentFormat.OpenXml.Wordprocessing.Settings,System.Nullable{System.Boolean})">
            <summary>
            Set the <c>PrintFormsData</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetEmbedTrueTypeFonts(DocumentFormat.OpenXml.Wordprocessing.Settings,System.Nullable{System.Boolean})">
            <summary>
            Set the <c>EmbedTrueTypeFonts</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetEmbedSystemFonts(DocumentFormat.OpenXml.Wordprocessing.Settings,System.Nullable{System.Boolean})">
            <summary>
            Set the <c>EmbedSystemFonts</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetSaveSubsetFonts(DocumentFormat.OpenXml.Wordprocessing.Settings,System.Nullable{System.Boolean})">
            <summary>
            Set the <c>SaveSubsetFonts</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetSaveFormsData(DocumentFormat.OpenXml.Wordprocessing.Settings,System.Nullable{System.Boolean})">
            <summary>
            Set the <c>SaveFormsData</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetMirrorMargins(DocumentFormat.OpenXml.Wordprocessing.Settings,System.Nullable{System.Boolean})">
            <summary>
            Set the <c>MirrorMargins</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetAlignBorderAndEdges(DocumentFormat.OpenXml.Wordprocessing.Settings,System.Nullable{System.Boolean})">
            <summary>
            Set the <c>AlignBordersAndEdges</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetBordersDoNotSurroundFooter(DocumentFormat.OpenXml.Wordprocessing.Settings,System.Nullable{System.Boolean})">
            <summary>
            Set the <c>BordersDoNotSurroundFooter</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetGutterAtTop(DocumentFormat.OpenXml.Wordprocessing.Settings,System.Nullable{System.Boolean})">
            <summary>
            Set the <c>DoNotSuppressParagraphBorders</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetHideSpellingErrors(DocumentFormat.OpenXml.Wordprocessing.Settings,System.Nullable{System.Boolean})">
            <summary>
            Set the <c>HideSpellingErrors</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetHideGrammaticalErrors(DocumentFormat.OpenXml.Wordprocessing.Settings,System.Nullable{System.Boolean})">
            <summary>
            Set the <c>HideGrammaticalErrors</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetActiveWritingStyle(DocumentFormat.OpenXml.Wordprocessing.Settings,DocumentFormat.OpenXml.Wordprocessing.ActiveWritingStyle)">
            <summary>
            Set the <c>ActiveWritingStyle</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetProofState(DocumentFormat.OpenXml.Wordprocessing.Settings,DocumentFormat.OpenXml.Wordprocessing.ProofState)">
            <summary>
            Set the <c>ProofState</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetFormsDesign(DocumentFormat.OpenXml.Wordprocessing.Settings,System.Nullable{System.Boolean})">
            <summary>
            Set the <c>FormsDesign</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetAttachedTemplate(DocumentFormat.OpenXml.Wordprocessing.Settings,System.String)">
            <summary>
            Set the <c>AttachedTemplate</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetLinkStyles(DocumentFormat.OpenXml.Wordprocessing.Settings,System.Nullable{System.Boolean})">
            <summary>
            Set the <c>LinkStyles</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetStylePaneFormatFilter(DocumentFormat.OpenXml.Wordprocessing.Settings,DocumentFormat.OpenXml.Wordprocessing.StylePaneFormatFilter)">
            <summary>
            Set the <c>StylePaneFormatFilter</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetStylePaneSortMethods(DocumentFormat.OpenXml.Wordprocessing.Settings,System.String)">
            <summary>
            Set the <c>StylePaneSortMethod</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetDocumentType(DocumentFormat.OpenXml.Wordprocessing.Settings,System.Nullable{DocumentFormat.OpenXml.Wordprocessing.DocumentTypeValues})">
            <summary>
            Set the <c>DocumentType</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetMailMerge(DocumentFormat.OpenXml.Wordprocessing.Settings,DocumentFormat.OpenXml.Wordprocessing.MailMerge)">
            <summary>
            Set the <c>MailMerge</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetRevisionView(DocumentFormat.OpenXml.Wordprocessing.Settings,DocumentFormat.OpenXml.Wordprocessing.RevisionView)">
            <summary>
            
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetTrackRevisions(DocumentFormat.OpenXml.Wordprocessing.Settings,System.Nullable{System.Boolean})">
            <summary>
            Set the <c>TrackRevisions</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetDoNotTrackMoves(DocumentFormat.OpenXml.Wordprocessing.Settings,System.Nullable{System.Boolean})">
            <summary>
            Set the <c>DoNotTrackMoves</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetDoNotTrackFormatting(DocumentFormat.OpenXml.Wordprocessing.Settings,System.Nullable{System.Boolean})">
            <summary>
            Set the <c>DoNotTrackFormatting</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetDocumentProtection(DocumentFormat.OpenXml.Wordprocessing.Settings,DocumentFormat.OpenXml.Wordprocessing.DocumentProtection)">
            <summary>
            Set the <c>DocumentProtection</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetAutoFormatOverride(DocumentFormat.OpenXml.Wordprocessing.Settings,System.Nullable{System.Boolean})">
            <summary>
            Set the <c>AutoFormatOverride</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetStyleLockThemesPart(DocumentFormat.OpenXml.Wordprocessing.Settings,System.Nullable{System.Boolean})">
            <summary>
            Set the <c>StyleLockTheme</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetStyleLockStylesPart(DocumentFormat.OpenXml.Wordprocessing.Settings,System.Nullable{System.Boolean})">
            <summary>
            Set the <c>StyleLockQFSet</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetDefaultTabStop(DocumentFormat.OpenXml.Wordprocessing.Settings,System.Nullable{System.Int16})">
            <summary>
            Set the <c>DefaultTabStop</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetAutoHyphenation(DocumentFormat.OpenXml.Wordprocessing.Settings,System.Nullable{System.Boolean})">
            <summary>
            Set the <c>AutoHyphenation</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetConsecutiveHyphenLimit(DocumentFormat.OpenXml.Wordprocessing.Settings,System.Nullable{System.UInt16})">
            <summary>
            Set the <c>ConsecutiveHyphenLimit</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetHyphenationZone(DocumentFormat.OpenXml.Wordprocessing.Settings,System.Nullable{Qhta.OpenXmlTools.Twips})">
            <summary>
            Set the <c>HyphenationZone</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetDoNotHyphenateCaps(DocumentFormat.OpenXml.Wordprocessing.Settings,System.Nullable{System.Boolean})">
            <summary>
            Set the <c>DoNotHyphenateCaps</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetShowEnvelope(DocumentFormat.OpenXml.Wordprocessing.Settings,System.Nullable{System.Boolean})">
            <summary>
            Set the <c>DoNotLeaveBackslashAlone</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetSummaryLength(DocumentFormat.OpenXml.Wordprocessing.Settings,System.Nullable{System.Int32})">
            <summary>
            Set the <c>SummaryLength</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetClickAndTypeStyle(DocumentFormat.OpenXml.Wordprocessing.Settings,System.String)">
            <summary>
            Set the <c>ClickAndTypeStyle</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetDefaultTableStyle(DocumentFormat.OpenXml.Wordprocessing.Settings,System.String)">
            <summary>
            Set the <c>DefaultTableStyle</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetEvenAndOddHeaders(DocumentFormat.OpenXml.Wordprocessing.Settings,System.Nullable{System.Boolean})">
            <summary>
            Set the <c>EvenAndOddHeaders</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetBookFoldReversePrinting(DocumentFormat.OpenXml.Wordprocessing.Settings,System.Nullable{System.Boolean})">
            <summary>
            Set the <c>BookFoldPrintingSheets</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetBookFoldPrinting(DocumentFormat.OpenXml.Wordprocessing.Settings,System.Nullable{System.Boolean})">
            <summary>
            Set the <c>BookFoldPrinting</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetBookFoldPrintingSheets(DocumentFormat.OpenXml.Wordprocessing.Settings,System.Nullable{System.Int16})">
            <summary>
            Set the <c>BookFoldPrintingSheets</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetWriteProtection(DocumentFormat.OpenXml.Wordprocessing.Settings,DocumentFormat.OpenXml.Wordprocessing.WriteProtection)">
            <summary>
            Set the <c>WriteProtection</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetDrawingGridVerticalSpacing(DocumentFormat.OpenXml.Wordprocessing.Settings,System.Nullable{Qhta.OpenXmlTools.Twips})">
            <summary>
            Set the <c>DrawingGridVerticalSpacing</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetDisplayHorizontalDrawingGrid(DocumentFormat.OpenXml.Wordprocessing.Settings,System.Nullable{System.Byte})">
            <summary>
            Set the <c>DisplayHorizontalDrawingGrid</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetDisplayVerticalDrawingGrid(DocumentFormat.OpenXml.Wordprocessing.Settings,System.Nullable{System.Byte})">
            <summary>
            Set the <c>DisplayVerticalDrawingGrid</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetDoNotUseMarginsForDrawingGridOrigin(DocumentFormat.OpenXml.Wordprocessing.Settings,System.Nullable{System.Boolean})">
            <summary>
            Set the <c>DoNotUseMarginsForDrawingGridOrigin</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetDrawingGridHorizontalOrigin(DocumentFormat.OpenXml.Wordprocessing.Settings,System.Nullable{Qhta.OpenXmlTools.Twips})">
            <summary>
            Set the <c>DoNotShadeFormData</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetDrawingGridVerticalOrigin(DocumentFormat.OpenXml.Wordprocessing.Settings,System.Nullable{Qhta.OpenXmlTools.Twips})">
            <summary>
            Set the <c>DrawingGridVerticalOrigin</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetDoNotShadeFormData(DocumentFormat.OpenXml.Wordprocessing.Settings,System.Nullable{System.Boolean})">
            <summary>
            Set the <c>DoNotShadeFormData</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetNoPunctuationKerning(DocumentFormat.OpenXml.Wordprocessing.Settings,System.Nullable{System.Boolean})">
            <summary>
            Set the <c>NoPunctuationKerning</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetCharacterSpacingControl(DocumentFormat.OpenXml.Wordprocessing.Settings,System.Nullable{DocumentFormat.OpenXml.Wordprocessing.CharacterSpacingValues})">
            <summary>
            Set the <c>CharacterSpacingControl</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetPrintTwoOnOne(DocumentFormat.OpenXml.Wordprocessing.Settings,System.Nullable{System.Boolean})">
            <summary>
            Set the <c>PrintTwoOnOne</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetStrictFirstAndLastChars(DocumentFormat.OpenXml.Wordprocessing.Settings,System.Nullable{System.Boolean})">
            <summary>
            Set the <c>StrictFirstAndLastChars</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetNoLineBreaksAfterKinsoku(DocumentFormat.OpenXml.Wordprocessing.Settings,DocumentFormat.OpenXml.Wordprocessing.NoLineBreaksAfterKinsoku)">
            <summary>
            Set the <c>NoLineBreaksAfterKinsoku</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetNoLineBreaksBeforeKinsoku(DocumentFormat.OpenXml.Wordprocessing.Settings,DocumentFormat.OpenXml.Wordprocessing.NoLineBreaksBeforeKinsoku)">
            <summary>
            Set the <c>NoLineBreaksBeforeKinsoku</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetSavePreviewPicture(DocumentFormat.OpenXml.Wordprocessing.Settings,System.Nullable{System.Boolean})">
            <summary>
            Set the <c>SavePreviewPicture</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetDoNotValidateAgainstSchema(DocumentFormat.OpenXml.Wordprocessing.Settings,System.Nullable{System.Boolean})">
            <summary>
            
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetSaveInvalidXml(DocumentFormat.OpenXml.Wordprocessing.Settings,System.Nullable{System.Boolean})">
            <summary>
            Set the <c>SaveInvalidXml</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetIgnoreMixedContent(DocumentFormat.OpenXml.Wordprocessing.Settings,System.Nullable{System.Boolean})">
            <summary>
            Set the <c>IgnoreMixedContent</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetAlwaysShowPlaceholderText(DocumentFormat.OpenXml.Wordprocessing.Settings,System.Nullable{System.Boolean})">
            <summary>
              Set the <c>AlwaysShowPlaceholderText</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetDoNotDemarcateInvalidXml(DocumentFormat.OpenXml.Wordprocessing.Settings,System.Nullable{System.Boolean})">
            <summary>
            Set the <c>DoNotDemarcateInvalidXml</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetSaveXmlDataOnly(DocumentFormat.OpenXml.Wordprocessing.Settings,System.Nullable{System.Boolean})">
            <summary>
            Set the <c>SaveXmlDataOnly</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetUseXsltWhenSaving(DocumentFormat.OpenXml.Wordprocessing.Settings,System.Nullable{System.Boolean})">
            <summary>
            Set the <c>UseXsltWhenSaving</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetSaveThroughXslt(DocumentFormat.OpenXml.Wordprocessing.Settings,DocumentFormat.OpenXml.Wordprocessing.SaveThroughXslt)">
            <summary>
            Set the <c>SaveThroughXslt</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetShowXmlTags(DocumentFormat.OpenXml.Wordprocessing.Settings,System.Nullable{System.Boolean})">
            <summary>
            Set the <c>ShowXmlTags</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetAlwaysMergeEmptyNamespace(DocumentFormat.OpenXml.Wordprocessing.Settings,System.Nullable{System.Boolean})">
            <summary>
            Set the <c>AlwaysMergeEmptyNamespace</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetUpdateFieldsOnOpen(DocumentFormat.OpenXml.Wordprocessing.Settings,System.Nullable{System.Boolean})">
            <summary>
            Set the <c>UpdateFieldsOnOpen</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetHeaderShapeDefaults(DocumentFormat.OpenXml.Wordprocessing.Settings,DocumentFormat.OpenXml.Wordprocessing.HeaderShapeDefaults)">
            <summary>
            Set the <c>HeaderShapeDefaults</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetFootnoteDocumentWideProperties(DocumentFormat.OpenXml.Wordprocessing.Settings,DocumentFormat.OpenXml.Wordprocessing.FootnoteDocumentWideProperties)">
            <summary>
            Set the <c>FootnoteDocumentWideProperties</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetEndnoteDocumentWideProperties(DocumentFormat.OpenXml.Wordprocessing.Settings,DocumentFormat.OpenXml.Wordprocessing.EndnoteDocumentWideProperties)">
            <summary>
            Set the <c>EndnoteDocumentWideProperties</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetCompatibility(DocumentFormat.OpenXml.Wordprocessing.Settings,DocumentFormat.OpenXml.Wordprocessing.Compatibility)">
            <summary>
            Set the <c>Compatibility</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetDocumentVariables(DocumentFormat.OpenXml.Wordprocessing.Settings,DocumentFormat.OpenXml.Wordprocessing.DocumentVariables)">
            <summary>
            Set the <c>DocumentVariables</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetRsids(DocumentFormat.OpenXml.Wordprocessing.Settings,DocumentFormat.OpenXml.Wordprocessing.Rsids)">
            <summary>
            Set the <c>Rsids</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetMathProperties(DocumentFormat.OpenXml.Wordprocessing.Settings,DocumentFormat.OpenXml.Math.MathProperties)">
            <summary>
            Set the <c>MathProperties</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetUICompatibleWith97To2003(DocumentFormat.OpenXml.Wordprocessing.Settings,DocumentFormat.OpenXml.Wordprocessing.UICompatibleWith97To2003)">
            <summary>
            Set the <c>UICompatibleWith97To2003</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetAttachedSchema(DocumentFormat.OpenXml.Wordprocessing.Settings,System.String)">
            <summary>
            Set the <c>AttachedSchema</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetThemeFontLanguages(DocumentFormat.OpenXml.Wordprocessing.Settings,DocumentFormat.OpenXml.Wordprocessing.ThemeFontLanguages)">
            <summary>
            Set the <c>ThemeFontLang</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetColorSchemeMapping(DocumentFormat.OpenXml.Wordprocessing.Settings,DocumentFormat.OpenXml.Wordprocessing.ColorSchemeMapping)">
            <summary>
             Set the <c>ColorSchemeMapping</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetDoNotIncludeSubdocsInStats(DocumentFormat.OpenXml.Wordprocessing.Settings,System.Nullable{System.Boolean})">
            <summary>
             Set the <c>DoNotIncludeSubdocsInStats</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetDoNotAutoCompressPictures(DocumentFormat.OpenXml.Wordprocessing.Settings,System.Nullable{System.Boolean})">
            <summary>
            Set the <c>DoNotAutoCompressPictures</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetForceUpgrade(DocumentFormat.OpenXml.Wordprocessing.Settings,System.Nullable{System.Boolean})">
            <summary>
            Set the <c>ForceUpgrade</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetCaptions(DocumentFormat.OpenXml.Wordprocessing.Settings,DocumentFormat.OpenXml.Wordprocessing.Captions)">
            <summary>
            Set the <c>Captions</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetReadModeInkLockDown(DocumentFormat.OpenXml.Wordprocessing.Settings,DocumentFormat.OpenXml.Wordprocessing.ReadModeInkLockDown)">
            <summary>
            Set the <c>ReadModeInkLockDown</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetSchemaLibrary(DocumentFormat.OpenXml.Wordprocessing.Settings,DocumentFormat.OpenXml.CustomXmlSchemaReferences.SchemaLibrary)">
            <summary>
            Set the <c>SchemaLibrary</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetShapeDefaults(DocumentFormat.OpenXml.Wordprocessing.Settings,DocumentFormat.OpenXml.Wordprocessing.ShapeDefaults)">
            <summary>
            Set the <c>ShapeDefaults</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetDecimalSymbol(DocumentFormat.OpenXml.Wordprocessing.Settings,System.String)">
            <summary>
            Set the <c>DecimalSymbol</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetListSeparator(DocumentFormat.OpenXml.Wordprocessing.Settings,System.String)">
            <summary>
            Set the <c>ListSeparator</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetDocumentId(DocumentFormat.OpenXml.Wordprocessing.Settings,System.Nullable{System.Int32})">
            <summary>
            Set the <c>DocumentId</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetDiscardImageEditingData(DocumentFormat.OpenXml.Wordprocessing.Settings,System.Nullable{DocumentFormat.OpenXml.Office2010.Word.OnOffValues})">
            <summary>
            Set the <c>DiscardImageEditingData</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetDefaultImageDpi(DocumentFormat.OpenXml.Wordprocessing.Settings,System.Nullable{System.Int32})">
            <summary>
            Set the <c>DefaultImageDpi</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetConflictMode(DocumentFormat.OpenXml.Wordprocessing.Settings,System.Nullable{DocumentFormat.OpenXml.Office2010.Word.OnOffValues})">
            <summary>
            Set the <c>ConflictMode</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.SetChartTrackingRefBased(DocumentFormat.OpenXml.Wordprocessing.Settings,DocumentFormat.OpenXml.OnOffValue)">
            <summary>
            Set the <c>ChartTrackingRefBased</c> setting value.
            </summary>
            <param name="settings"></param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SettingsTools.GetDocument(DocumentFormat.OpenXml.Wordprocessing.Settings)">
            <summary>
            Gets the <c>WordprocessingDocument</c> from the <c>Settings</c> object.
            </summary>
            <param name="settings"></param>
            <result>wordprocessing document</result>
        </member>
        <member name="T:Qhta.OpenXmlTools.StringStatistics">
            <summary>
            Represents the statistics of strings.
            Each entry in the dictionary represents a string and the number of times it is used.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.StringStatistics.Add(System.String,System.Int32)">
            <summary>
            Adds a string count to the statistics.
            If the string is already in the statistics, the given count is added to existing string count.
            Otherwise, the string is added to the statistics with the given count.
            </summary>
            <param name="str">Added string</param>
            <param name="count">Added string count</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.StringStatistics.Add(System.String)">
            <summary>
            Adds a string to the statistics.
            If the string is already in the statistics, its count is incremented.
            Otherwise, the string is added to the statistics with the count of 1.  
            </summary>
            <param name="str"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.StringStatistics.MostFrequent">
            <summary>
            Returns the string that has the highest count.
            If two strings have the same count, the first one is returned.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.StringStatistics.Add(Qhta.OpenXmlTools.StringStatistics)">
            <summary>
            Adds the counts of another StringStatistics object to this object.
            </summary>
            <param name="other"></param>
        </member>
        <member name="T:Qhta.OpenXmlTools.StringTools">
            <summary>
            Extending methods for strings.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.StringTools.HtmlEncode(System.String)">
            <summary>
            Encodes a string using html entities.
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.StringTools.HtmlDecode(System.String)">
            <summary>
            Decodes a string using html entities.
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.StringTools.IndentString(System.String,System.Int32,System.String,System.String)">
            <summary>
            Indent a string.
            </summary>
            <param name="str"></param>
            <param name="startIndent"></param>
            <param name="indentUnit"></param>
            <param name="lineSeparator"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.StringTools.LeftIndentLength(System.String)">
            <summary>
            Get the number of non-whitespace characters at the beginning of the string.
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.StringTools.HasSubstringAt(System.String,System.Int32,System.String)">
            <summary>
            Checks if a string has a substring at a given position.
            </summary>
            <param name="s"></param>
            <param name="pos"></param>
            <param name="substring"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.StringTools.IsNumber(System.String)">
            <summary>
            Determines if a string consists of digits only.
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.StringTools.NormalizeWhitespaces(System.String)">
            <summary>
            Replaces all the whitespaces with a single space.
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.StringTools.RemoveWhitespaces(System.String)">
            <summary>
            Removes all the whitespaces.
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.StringTools.FixLongWords(System.String)">
            <summary>
            Insert a soft hyphen character into long words in a string.
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.StringTools.TryRemoveNumbering(System.String,System.String@)">
            <summary>
            Removes a numbering from the string (if it begins the string).
            </summary>
            <param name="str"></param>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.StringTools.GetSentences(System.String)">
            <summary>
            Get the list of sentences from the string.
            Sentences are separated by '.', '!', '?' or ':'
            followed by a space (or standing at the end of the string).
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.StringTools.ReplaceSymbolEncoding(System.String)">
            <summary>
            Replace characters in a string with a code between F000 and F0DD to corresponding unicode characters according to symbol encoding.
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="T:Qhta.OpenXmlTools.StringUtils1">
            <summary>
            A bunch of string utility methods
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.StringUtils1.TitleCase(System.String)">
            <summary>
            Change string to title case. First letter tu upper, rest to lower case.
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.StringUtils1.CamelCase(System.String)">
            <summary>
            Change first letter of each word to upper, rest to lower case.
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.StringUtils1.SplitCamelCase(System.String)">
            <summary>
            Split camel-case string to array of words.
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.StringUtils1.DeCamelCase(System.String)">
            <summary>
            Split camel-case string to words.
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.StringUtils1.NumberToText(System.Double)">
            <summary>
            Changes a number to literal text using whole part and a rational fraction part.
            </summary>
            <param name="number"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.StringUtils1.NumberToText(System.Int32)">
            <summary>
            Changes a number to literal text.
            </summary>
            <param name="number"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.StringUtils1.NumberToText(System.Int64)">
            <summary>
            Changes a number to literal text.
            </summary>
            <param name="number"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.StringUtils1.Precede(System.String,System.String)">
            <summary>
            Precedes a string with a prefix when string is not null.
            </summary>
            <param name="str"></param>
            <param name="prefix"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.StringUtils1.Attach(System.String,System.String)">
            <summary>
            Attach a suffix to a string if string is not null.
            </summary>
            <param name="str"></param>
            <param name="suffix"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.StringUtils1.ContainsAt(System.String,System.String,System.Int32)">
            <summary>
            Checks if a string contains a substring at a specified position.
            </summary>
            <param name="str"></param>
            <param name="substring"></param>
            <param name="atIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.StringUtils1.ContainsAt(System.String,System.String,System.Int32,System.StringComparison)">
            <summary>
            Checks if a string contains a substring at a specified position using a specified comparison.
            </summary>
            <param name="str"></param>
            <param name="substring"></param>
            <param name="atIndex"></param>
            <param name="comparison"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.StringUtils1.ContainsBefore(System.String,System.String,System.Int32)">
            <summary>
            Checks if a string ends with a substring at a specified position
            </summary>
            <param name="str"></param>
            <param name="substring"></param>
            <param name="atIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.StringUtils1.ContainsBefore(System.String,System.String,System.Int32,System.StringComparison)">
            <summary>
            Checks if a string contains a substring at a specified position using explicit comparison using a specified comparison.
            </summary>
            <param name="str"></param>
            <param name="substring"></param>
            <param name="atIndex"></param>
            <param name="comparison"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.StringUtils1.IsUpper(System.String)">
            <summary>
            Checks if a string contains only upper-case letters.
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.StringUtils1.IsAscii(System.String)">
            <summary>
            Checks if a string contains characters from space to ~.
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.StringUtils1.IsUnicode(System.String)">
            <summary>
            Checks if a string contains Unicode characters (i.e. with codes greater than 127)
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.StringUtils1.IsLike(System.String,System.String,System.StringComparison)">
            <summary>
              Checks the similarity of key to pattern. Pattern can contain '*' as wildcard replacing any sequence of remaining
              characters.
            </summary>
            <param name="key"></param>
            <param name="pattern"></param>
            <param name="stringComparison"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.StringUtils1.IsLike(System.String,System.String,System.String@,System.StringComparison)">
            <summary>
              Checks the similiarity of key to pattern. Pattern can contain '*' as wildchar replacing any sequence of remaining
              characters.
              Output <paramref name="wildKey" /> is set to found wildchar replacement in the key.
              If there are multiple wildchars in the pattern then returned <paramref name="wildKey" /> contains multiple
              replacements joined with '*' separator.
            </summary>
            <param name="key"></param>
            <param name="pattern"></param>
            <param name="wildKey"></param>
            <param name="stringComparison"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.StringUtils1.IsLikeNumber(System.String,System.String,System.String@,System.Int32@)">
            <summary>
            Checks if a key text starts or ends with a number..
            </summary>
            <param name="key">Checked text</param>
            <param name="pattern">Pattern text containing '#' ad the beginning or end. The rest is a literal pattern</param>
            <param name="wildKey">Literal text detected by pattern</param>
            <param name="wildNum">Number parsed from the wildKey</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.StringUtils1.IsValidUrl(System.String)">
            <summary>
            Check if URL is valid. Uses Regex.
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.StringUtils1.ToUpperFirst(System.String)">
            <summary>
            Changes the first letter to uppercase. All others unchanged.
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.StringUtils1.ToLowerFirst(System.String)">
            <summary>
            Changes the first letter to lowercase. All others unchanged.
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.StringUtils1.TrimParens(System.String,System.ValueTuple{System.Char,System.Char}[])">
            <summary>
            Trims parentheses enclosing the text.
            </summary>
            <param name="text"></param>
            <param name="enclosings"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.StringUtils1.TrimEnclosings(System.String,System.Char,System.Char,System.ValueTuple{System.Char,System.Char}[])">
            <summary>
            Changes enclosing parens. Omits included enclosings.
            </summary>
            <param name="text"></param>
            <param name="openParen"></param>
            <param name="closeParen"></param>
            <param name="enclosings"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.StringUtils1.TrimDblQuotes(System.String)">
            <summary>
            Trim double quote characters enclosing the text.
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.StringUtils1.SplitBy(System.String,System.Char,System.ValueTuple{System.Char,System.Char}[])">
            <summary>
              Splits a text by <paramref name="sep" /> character.
              Fragments enclosed by <paramref name="enclosings" /> are not splitted.
            </summary>
            <param name="text"></param>
            <param name="sep"></param>
            <param name="enclosings"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.StringUtils1.Find(System.String,System.Int32,System.Char,System.ValueTuple{System.Char,System.Char}[])">
            <summary>
              Searches a text from <paramref name="startNdx" /> position for a <paramref name="sep" /> character.
              If not found then length of text is returned;
            </summary>
            <param name="text"></param>
            <param name="startNdx"></param>
            <param name="sep"></param>
            <param name="enclosings"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.StringUtils1.FindMatch(System.String,System.Int32,System.Char,System.ValueTuple{System.Char,System.Char}[])">
            <summary>
              Searches a text from <paramref name="startNdx" /> position for a pair of <paramref name="openingSep" /> character.
              If not found then length of text is returned;
            </summary>
            <param name="text"></param>
            <param name="startNdx"></param>
            <param name="openingSep"></param>
            <param name="enclosings"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.StringUtils1.SubstringUntil(System.String,System.Char,System.Int32)">
            <summary>
            Gets a substring at a specified position until a specified delimiter is found.
            </summary>
            <param name="text"></param>
            <param name="ch"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.StringUtils1.SplitSpecial(System.String,System.Char,System.ValueTuple{System.Char,System.Char}[])">
            <summary>
              Split text with delimiter omitting quotes
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.StringUtils1.SubstringUntil(System.String,System.Char,System.Int32,System.Int32@)">
            <summary>
            Gets a substring between start and end positions, but untils a specified delimiter is found.
            </summary>
            <param name="text"></param>
            <param name="delimiter"></param>
            <param name="startPos"></param>
            <param name="endPos"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.StringUtils1.FindEndOfSentence(System.String,System.Int32,System.String[])">
            <summary>
            Find a position of the end of the sentence using dot position which does not ends amy known abbreviation.
            </summary>
            <param name="text"></param>
            <param name="startPos"></param>
            <param name="abbreviations"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.StringUtils1.ReplaceStart(System.String,System.String,System.String)">
            <summary>
            Replaces the beginning of the string when it starts with a specified text.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.StringUtils1.ReplaceStart(System.String,System.String,System.String,System.StringComparison)">
            <summary>
            Replaces the beginning of the string when it starts with a specified text. Uses a specific string comparison.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.StringUtils1.ReplaceEnd(System.String,System.String,System.String)">
            <summary>
            Replaces the end of the string when it ends with a specified text.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.StringUtils1.ReplaceEnd(System.String,System.String,System.String,System.StringComparison)">
            <summary>
            Replaces the end of the string when it ends with a specified text. Uses a specified string comparison.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.StringUtils1.ReplaceFirst(System.String,System.String,System.String)">
            <summary>
            Replaces the first occurence of the string searching in a specified text.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.StringUtils1.ReplaceFirst(System.String,System.String,System.String,System.Int32)">
            <summary>
            Replaces the first occurence of the string searching in a specified text starting from the specified index.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.StringUtils1.ReplaceFirst(System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Replaces the first occurence of the string searching in a specified text starting from the specified index for the specified characters count.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.StringUtils1.ReplaceFirst(System.String,System.String,System.String,System.StringComparison)">
            <summary>
            Replaces the first occurence of the string in a specified text. Uses a specific string comparison.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.StringUtils1.ReplaceFirst(System.String,System.String,System.String,System.Int32,System.StringComparison)">
            <summary>
            Replaces the first occurence of the string searching in a specified text starting from the specified index. Uses a specific string comparison.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.StringUtils1.ReplaceFirst(System.String,System.String,System.String,System.Int32,System.Int32,System.StringComparison)">
            <summary>
            Replaces the first occurence of the string searching in a specified text starting from the specified index for the specified characters count.
            Uses a specific string comparison.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.StringUtils1.ReplaceLast(System.String,System.String,System.String)">
            <summary>
            Replaces the last occurence of the string searching in a specified text.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.StringUtils1.ReplaceLast(System.String,System.String,System.String,System.Int32)">
            <summary>
            Replaces the last occurence of the string searching in a specified text starting from the specified index
            and continuing towards the begining of the text.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.StringUtils1.ReplaceLast(System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Replaces the last occurence of the string searching in a specified text starting from the specified index
            and continuing towards the begining of the text for the specified characters count.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.StringUtils1.ReplaceLast(System.String,System.String,System.String,System.StringComparison)">
            <summary>
            Replaces the last occurence of the string in a specified text. Uses a specific string comparison.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.StringUtils1.ReplaceLast(System.String,System.String,System.String,System.Int32,System.StringComparison)">
            <summary>
            Replaces the first occurence of the string searching in a specified text starting from the specified index
            and continuing towards the begining of the text. Uses a specific string comparison.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.StringUtils1.ReplaceLast(System.String,System.String,System.String,System.Int32,System.Int32,System.StringComparison)">
            <summary>
            Replaces the first occurence of the string searching in a specified text starting from the specified index
            and continuing towards the begining of the text for the specified characters count.
            Uses a specific string comparison.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.StringUtils1.Concat2(System.String,System.String,System.String)">
            <summary>
            Concatenates two strings with a separator between them.
            If any of both is empty of null - the other is returned.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.StringUtils1.Shorten(System.String,System.Int32)">
            <summary>
            Returns a string shortended by a specified character count.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.StringUtils1.Pluralize(System.String)">
            <summary>
            Makes Englush plural form of the noun.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.StringUtils1.Singularize(System.String)">
            <summary>
            Makes Englush singular form of the noun.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.StringUtils1.DecodeEscapeSeq(System.String)">
            <summary>
            Decodes escapes sequences: \\, \t, \r, \n, \s, \u
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.StringUtils1.Duplicate(System.String,System.Int32)">
            <summary>
            Creates a string by repeating the original string a specified number of times.
            </summary>
            <param name="str"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.StringUtils1.IsLowercase(System.String)">
            <summary>
            Checks if all letters in the string are lower-case.
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.StringUtils1.IsUppercase(System.String)">
            <summary>
            Checks if all letters in the string are upper-case.
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.StringUtils1.IsTitlecase(System.String)">
            <summary>
            Checks if the first char is upper-case letter and all other letters are lower-case.
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="T:Qhta.OpenXmlTools.StylesStrings">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleAnnotationReference">
            <summary>
              Looks up a localized string similar to Comment Reference.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleAnnotationSubject">
            <summary>
              Looks up a localized string similar to Comment Subject.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleAnnotationText">
            <summary>
              Looks up a localized string similar to Comment SearchText.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleBalloonText">
            <summary>
              Looks up a localized string similar to Balloon SearchText.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleBibliography">
            <summary>
              Looks up a localized string similar to Bibliography.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleBlockText">
            <summary>
              Looks up a localized string similar to Block SearchText.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleBodyText">
            <summary>
              Looks up a localized string similar to Body SearchText.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleBodyText2">
            <summary>
              Looks up a localized string similar to Body SearchText 2.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleBodyText3">
            <summary>
              Looks up a localized string similar to Body SearchText 3.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleBodyTextFirstIndent">
            <summary>
              Looks up a localized string similar to Body SearchText First IndentUnit.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleBodyTextFirstIndent2">
            <summary>
              Looks up a localized string similar to Body SearchText First IndentUnit 2.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleBodyTextIndent">
            <summary>
              Looks up a localized string similar to Body SearchText IndentUnit.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleBodyTextIndent2">
            <summary>
              Looks up a localized string similar to Body SearchText IndentUnit 2.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleBodyTextIndent3">
            <summary>
              Looks up a localized string similar to Body SearchText IndentUnit 3.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleBookTitle">
            <summary>
              Looks up a localized string similar to Book Title.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleCaption">
            <summary>
              Looks up a localized string similar to Caption.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleClosing">
            <summary>
              Looks up a localized string similar to Closing.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleColorfulGrid">
            <summary>
              Looks up a localized string similar to Colorful Grid.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleColorfulGridAccent1">
            <summary>
              Looks up a localized string similar to Colorful Grid - Accent 1.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleColorfulGridAccent2">
            <summary>
              Looks up a localized string similar to Colorful Grid - Accent 2.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleColorfulGridAccent3">
            <summary>
              Looks up a localized string similar to Colorful Grid - Accent 3.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleColorfulGridAccent4">
            <summary>
              Looks up a localized string similar to Colorful Grid - Accent 4.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleColorfulGridAccent5">
            <summary>
              Looks up a localized string similar to Colorful Grid - Accent 5.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleColorfulGridAccent6">
            <summary>
              Looks up a localized string similar to Colorful Grid - Accent 6.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleColorfulList">
            <summary>
              Looks up a localized string similar to Colorful List.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleColorfulListAccent1">
            <summary>
              Looks up a localized string similar to Colorful List - Accent 1.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleColorfulListAccent2">
            <summary>
              Looks up a localized string similar to Colorful List - Accent 2.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleColorfulListAccent3">
            <summary>
              Looks up a localized string similar to Colorful List - Accent 3.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleColorfulListAccent4">
            <summary>
              Looks up a localized string similar to Colorful List - Accent 4.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleColorfulListAccent5">
            <summary>
              Looks up a localized string similar to Colorful List - Accent 5.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleColorfulListAccent6">
            <summary>
              Looks up a localized string similar to Colorful List - Accent 6.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleColorfulShading">
            <summary>
              Looks up a localized string similar to Colorful Shading.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleColorfulShadingAccent1">
            <summary>
              Looks up a localized string similar to Colorful Shading - Accent 1.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleColorfulShadingAccent2">
            <summary>
              Looks up a localized string similar to Colorful Shading - Accent 2.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleColorfulShadingAccent3">
            <summary>
              Looks up a localized string similar to Colorful Shading - Accent 3.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleColorfulShadingAccent4">
            <summary>
              Looks up a localized string similar to Colorful Shading - Accent 4.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleColorfulShadingAccent5">
            <summary>
              Looks up a localized string similar to Colorful Shading - Accent 5.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleColorfulShadingAccent6">
            <summary>
              Looks up a localized string similar to Colorful Shading - Accent 6.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleDarkList">
            <summary>
              Looks up a localized string similar to Dark List.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleDarkListAccent1">
            <summary>
              Looks up a localized string similar to Dark List - Accent 1.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleDarkListAccent2">
            <summary>
              Looks up a localized string similar to Dark List - Accent 2.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleDarkListAccent3">
            <summary>
              Looks up a localized string similar to Dark List - Accent 3.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleDarkListAccent4">
            <summary>
              Looks up a localized string similar to Dark List - Accent 4.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleDarkListAccent5">
            <summary>
              Looks up a localized string similar to Dark List - Accent 5.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleDarkListAccent6">
            <summary>
              Looks up a localized string similar to Dark List - Accent 6.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleDate">
            <summary>
              Looks up a localized string similar to Date.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleDefaultParagraphFont">
            <summary>
              Looks up a localized string similar to Default Paragraph HighAnsiFont.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleDocumentMap">
            <summary>
              Looks up a localized string similar to Document Map.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleE_mailSignature">
            <summary>
              Looks up a localized string similar to E-mail Signature.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleEmphasis">
            <summary>
              Looks up a localized string similar to Emphasis.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleEndnoteReference">
            <summary>
              Looks up a localized string similar to Endnote Reference.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleEndnoteText">
            <summary>
              Looks up a localized string similar to Endnote SearchText.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleEnvelopeAddress">
            <summary>
              Looks up a localized string similar to Envelope Address.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleEnvelopeReturn">
            <summary>
              Looks up a localized string similar to Envelope Return.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleFollowedhyperlink">
            <summary>
              Looks up a localized string similar to FollowedHyperlink.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleFooter">
            <summary>
              Looks up a localized string similar to Footer.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleFootnoteReference">
            <summary>
              Looks up a localized string similar to Footnote Reference.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleFootnoteText">
            <summary>
              Looks up a localized string similar to Footnote SearchText.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleGridTable1Light">
            <summary>
              Looks up a localized string similar to Grid Table 1 Light.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleGridTable1LightAccent1">
            <summary>
              Looks up a localized string similar to Grid Table 1 Light - Accent 1.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleGridTable1LightAccent2">
            <summary>
              Looks up a localized string similar to Grid Table 1 Light - Accent 2.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleGridTable1LightAccent3">
            <summary>
              Looks up a localized string similar to Grid Table 1 Light - Accent 3.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleGridTable1LightAccent4">
            <summary>
              Looks up a localized string similar to Grid Table 1 Light - Accent 4.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleGridTable1LightAccent5">
            <summary>
              Looks up a localized string similar to Grid Table 1 Light - Accent 5.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleGridTable1LightAccent6">
            <summary>
              Looks up a localized string similar to Grid Table 1 Light - Accent 6.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleGridTable2">
            <summary>
              Looks up a localized string similar to Grid Table 2.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleGridTable2Accent1">
            <summary>
              Looks up a localized string similar to Grid Table 2 - Accent 1.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleGridTable2Accent2">
            <summary>
              Looks up a localized string similar to Grid Table 2 - Accent 2.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleGridTable2Accent3">
            <summary>
              Looks up a localized string similar to Grid Table 2 - Accent 3.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleGridTable2Accent4">
            <summary>
              Looks up a localized string similar to Grid Table 2 - Accent 4.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleGridTable2Accent5">
            <summary>
              Looks up a localized string similar to Grid Table 2 - Accent 5.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleGridTable2Accent6">
            <summary>
              Looks up a localized string similar to Grid Table 2 - Accent 6.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleGridTable3">
            <summary>
              Looks up a localized string similar to Grid Table 3.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleGridTable3Accent1">
            <summary>
              Looks up a localized string similar to Grid Table 3 - Accent 1.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleGridTable3Accent2">
            <summary>
              Looks up a localized string similar to Grid Table 3 - Accent 2.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleGridTable3Accent3">
            <summary>
              Looks up a localized string similar to Grid Table 3 - Accent 3.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleGridTable3Accent4">
            <summary>
              Looks up a localized string similar to Grid Table 3 - Accent 4.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleGridTable3Accent5">
            <summary>
              Looks up a localized string similar to Grid Table 3 - Accent 5.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleGridTable3Accent6">
            <summary>
              Looks up a localized string similar to Grid Table 3 - Accent 6.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleGridTable4">
            <summary>
              Looks up a localized string similar to Grid Table 4.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleGridTable4Accent1">
            <summary>
              Looks up a localized string similar to Grid Table 4 - Accent 1.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleGridTable4Accent2">
            <summary>
              Looks up a localized string similar to Grid Table 4 - Accent 2.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleGridTable4Accent3">
            <summary>
              Looks up a localized string similar to Grid Table 4 - Accent 3.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleGridTable4Accent4">
            <summary>
              Looks up a localized string similar to Grid Table 4 - Accent 4.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleGridTable4Accent5">
            <summary>
              Looks up a localized string similar to Grid Table 4 - Accent 5.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleGridTable4Accent6">
            <summary>
              Looks up a localized string similar to Grid Table 4 - Accent 6.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleGridTable5Dark">
            <summary>
              Looks up a localized string similar to Grid Table 5 Dark.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleGridTable5DarkAccent1">
            <summary>
              Looks up a localized string similar to Grid Table 5 Dark - Accent 1.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleGridTable5DarkAccent2">
            <summary>
              Looks up a localized string similar to Grid Table 5 Dark - Accent 2.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleGridTable5DarkAccent3">
            <summary>
              Looks up a localized string similar to Grid Table 5 Dark - Accent 3.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleGridTable5DarkAccent4">
            <summary>
              Looks up a localized string similar to Grid Table 5 Dark - Accent 4.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleGridTable5DarkAccent5">
            <summary>
              Looks up a localized string similar to Grid Table 5 Dark - Accent 5.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleGridTable5DarkAccent6">
            <summary>
              Looks up a localized string similar to Grid Table 5 Dark - Accent 6.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleGridTable6Colorful">
            <summary>
              Looks up a localized string similar to Grid Table 6 Colorful.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleGridTable6ColorfulAccent1">
            <summary>
              Looks up a localized string similar to Grid Table 6 Colorful - Accent 1.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleGridTable6ColorfulAccent2">
            <summary>
              Looks up a localized string similar to Grid Table 6 Colorful - Accent 2.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleGridTable6ColorfulAccent3">
            <summary>
              Looks up a localized string similar to Grid Table 6 Colorful - Accent 3.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleGridTable6ColorfulAccent4">
            <summary>
              Looks up a localized string similar to Grid Table 6 Colorful - Accent 4.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleGridTable6ColorfulAccent5">
            <summary>
              Looks up a localized string similar to Grid Table 6 Colorful - Accent 5.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleGridTable6ColorfulAccent6">
            <summary>
              Looks up a localized string similar to Grid Table 6 Colorful - Accent 6.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleGridTable7Colorful">
            <summary>
              Looks up a localized string similar to Grid Table 7 Colorful.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleGridTable7ColorfulAccent1">
            <summary>
              Looks up a localized string similar to Grid Table 7 Colorful - Accent 1.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleGridTable7ColorfulAccent2">
            <summary>
              Looks up a localized string similar to Grid Table 7 Colorful - Accent 2.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleGridTable7ColorfulAccent3">
            <summary>
              Looks up a localized string similar to Grid Table 7 Colorful - Accent 3.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleGridTable7ColorfulAccent4">
            <summary>
              Looks up a localized string similar to Grid Table 7 Colorful - Accent 4.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleGridTable7ColorfulAccent5">
            <summary>
              Looks up a localized string similar to Grid Table 7 Colorful - Accent 5.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleGridTable7ColorfulAccent6">
            <summary>
              Looks up a localized string similar to Grid Table 7 Colorful - Accent 6.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleGridTableLight">
            <summary>
              Looks up a localized string similar to Table Grid Light.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleHashtag">
            <summary>
              Looks up a localized string similar to Hashtag.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleHeader">
            <summary>
              Looks up a localized string similar to Header.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleHeading1">
            <summary>
              Looks up a localized string similar to Heading 1.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleHeading2">
            <summary>
              Looks up a localized string similar to Heading 2.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleHeading3">
            <summary>
              Looks up a localized string similar to Heading 3.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleHeading4">
            <summary>
              Looks up a localized string similar to Heading 4.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleHeading5">
            <summary>
              Looks up a localized string similar to Heading 5.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleHeading6">
            <summary>
              Looks up a localized string similar to Heading 6.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleHeading7">
            <summary>
              Looks up a localized string similar to Heading 7.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleHeading8">
            <summary>
              Looks up a localized string similar to Heading 8.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleHeading9">
            <summary>
              Looks up a localized string similar to Heading 9.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleHtmlAcronym">
            <summary>
              Looks up a localized string similar to HTML Acronym.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleHtmlAddress">
            <summary>
              Looks up a localized string similar to HTML Address.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleHtmlCite">
            <summary>
              Looks up a localized string similar to HTML Cite.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleHtmlCode">
            <summary>
              Looks up a localized string similar to HTML Code.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleHtmlDefinition">
            <summary>
              Looks up a localized string similar to HTML Definition.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleHtmlKeyboard">
            <summary>
              Looks up a localized string similar to HTML Keyboard.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleHtmlPreformatted">
            <summary>
              Looks up a localized string similar to HTML Preformatted.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleHtmlSample">
            <summary>
              Looks up a localized string similar to HTML Sample.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleHtmlTypewriter">
            <summary>
              Looks up a localized string similar to HTML Typewriter.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleHtmlVariable">
            <summary>
              Looks up a localized string similar to HTML Variable.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleHyperlink">
            <summary>
              Looks up a localized string similar to Hyperlink.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleIndex1">
            <summary>
              Looks up a localized string similar to Index 1.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleIndex2">
            <summary>
              Looks up a localized string similar to Index 2.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleIndex3">
            <summary>
              Looks up a localized string similar to Index 3.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleIndex4">
            <summary>
              Looks up a localized string similar to Index 4.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleIndex5">
            <summary>
              Looks up a localized string similar to Index 5.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleIndex6">
            <summary>
              Looks up a localized string similar to Index 6.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleIndex7">
            <summary>
              Looks up a localized string similar to Index 7.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleIndex8">
            <summary>
              Looks up a localized string similar to Index 8.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleIndex9">
            <summary>
              Looks up a localized string similar to Index 9.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleIndexHeading">
            <summary>
              Looks up a localized string similar to Index Heading.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleIntenseEmphasis">
            <summary>
              Looks up a localized string similar to Intense Emphasis.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleIntenseQuote">
            <summary>
              Looks up a localized string similar to Intense Quote.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleIntenseReference">
            <summary>
              Looks up a localized string similar to Intense Reference.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleLightGrid">
            <summary>
              Looks up a localized string similar to Light Grid.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleLightGridAccent1">
            <summary>
              Looks up a localized string similar to Light Grid - Accent 1.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleLightGridAccent2">
            <summary>
              Looks up a localized string similar to Light Grid - Accent 2.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleLightGridAccent3">
            <summary>
              Looks up a localized string similar to Light Grid - Accent 3.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleLightGridAccent4">
            <summary>
              Looks up a localized string similar to Light Grid - Accent 4.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleLightGridAccent5">
            <summary>
              Looks up a localized string similar to Light Grid - Accent 5.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleLightGridAccent6">
            <summary>
              Looks up a localized string similar to Light Grid - Accent 6.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleLightList">
            <summary>
              Looks up a localized string similar to Light List.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleLightListAccent1">
            <summary>
              Looks up a localized string similar to Light List - Accent 1.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleLightListAccent2">
            <summary>
              Looks up a localized string similar to Light List - Accent 2.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleLightListAccent3">
            <summary>
              Looks up a localized string similar to Light List - Accent 3.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleLightListAccent4">
            <summary>
              Looks up a localized string similar to Light List - Accent 4.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleLightListAccent5">
            <summary>
              Looks up a localized string similar to Light List - Accent 5.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleLightListAccent6">
            <summary>
              Looks up a localized string similar to Light List - Accent 6.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleLightShading">
            <summary>
              Looks up a localized string similar to Light Shading.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleLightShadingAccent1">
            <summary>
              Looks up a localized string similar to Light Shading - Accent 1.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleLightShadingAccent2">
            <summary>
              Looks up a localized string similar to Light Shading - Accent 2.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleLightShadingAccent3">
            <summary>
              Looks up a localized string similar to Light Shading - Accent 3.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleLightShadingAccent4">
            <summary>
              Looks up a localized string similar to Light Shading - Accent 4.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleLightShadingAccent5">
            <summary>
              Looks up a localized string similar to Light Shading - Accent 5.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleLightShadingAccent6">
            <summary>
              Looks up a localized string similar to Light Shading - Accent 6.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleLineNumber">
            <summary>
              Looks up a localized string similar to Line Number.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleList">
            <summary>
              Looks up a localized string similar to List.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleList2">
            <summary>
              Looks up a localized string similar to List 2.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleList3">
            <summary>
              Looks up a localized string similar to List 3.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleList4">
            <summary>
              Looks up a localized string similar to List 4.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleList5">
            <summary>
              Looks up a localized string similar to List 5.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleListBullet">
            <summary>
              Looks up a localized string similar to List Bullet.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleListBullet2">
            <summary>
              Looks up a localized string similar to List Bullet 2.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleListBullet3">
            <summary>
              Looks up a localized string similar to List Bullet 3.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleListBullet4">
            <summary>
              Looks up a localized string similar to List Bullet 4.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleListBullet5">
            <summary>
              Looks up a localized string similar to List Bullet 5.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleListContinue">
            <summary>
              Looks up a localized string similar to List Continue.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleListContinue2">
            <summary>
              Looks up a localized string similar to List Continue 2.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleListContinue3">
            <summary>
              Looks up a localized string similar to List Continue 3.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleListContinue4">
            <summary>
              Looks up a localized string similar to List Continue 4.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleListContinue5">
            <summary>
              Looks up a localized string similar to List Continue 5.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleListNumber">
            <summary>
              Looks up a localized string similar to List Number.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleListNumber2">
            <summary>
              Looks up a localized string similar to List Number 2.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleListNumber3">
            <summary>
              Looks up a localized string similar to List Number 3.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleListNumber4">
            <summary>
              Looks up a localized string similar to List Number 4.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleListNumber5">
            <summary>
              Looks up a localized string similar to List Number 5.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleListParagraph">
            <summary>
              Looks up a localized string similar to List Paragraph.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleListTable1Light">
            <summary>
              Looks up a localized string similar to List Table 1 Light.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleListTable1LightAccent1">
            <summary>
              Looks up a localized string similar to List Table 1 Light - Accent 1.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleListTable1LightAccent2">
            <summary>
              Looks up a localized string similar to List Table 1 Light - Accent 2.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleListTable1LightAccent3">
            <summary>
              Looks up a localized string similar to List Table 1 Light - Accent 3.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleListTable1LightAccent4">
            <summary>
              Looks up a localized string similar to List Table 1 Light - Accent 4.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleListTable1LightAccent5">
            <summary>
              Looks up a localized string similar to List Table 1 Light - Accent 5.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleListTable1LightAccent6">
            <summary>
              Looks up a localized string similar to List Table 1 Light - Accent 6.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleListTable2">
            <summary>
              Looks up a localized string similar to List Table 2.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleListTable2Accent1">
            <summary>
              Looks up a localized string similar to List Table 2 - Accent 1.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleListTable2Accent2">
            <summary>
              Looks up a localized string similar to List Table 2 - Accent 2.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleListTable2Accent3">
            <summary>
              Looks up a localized string similar to List Table 2 - Accent 3.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleListTable2Accent4">
            <summary>
              Looks up a localized string similar to List Table 2 - Accent 4.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleListTable2Accent5">
            <summary>
              Looks up a localized string similar to List Table 2 - Accent 5.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleListTable2Accent6">
            <summary>
              Looks up a localized string similar to List Table 2 - Accent 6.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleListTable3">
            <summary>
              Looks up a localized string similar to List Table 3.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleListTable3Accent1">
            <summary>
              Looks up a localized string similar to List Table 3 - Accent 1.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleListTable3Accent2">
            <summary>
              Looks up a localized string similar to List Table 3 - Accent 2.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleListTable3Accent3">
            <summary>
              Looks up a localized string similar to List Table 3 - Accent 3.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleListTable3Accent4">
            <summary>
              Looks up a localized string similar to List Table 3 - Accent 4.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleListTable3Accent5">
            <summary>
              Looks up a localized string similar to List Table 3 - Accent 5.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleListTable3Accent6">
            <summary>
              Looks up a localized string similar to List Table 3 - Accent 6.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleListTable4">
            <summary>
              Looks up a localized string similar to List Table 4.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleListTable4Accent1">
            <summary>
              Looks up a localized string similar to List Table 4 - Accent 1.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleListTable4Accent2">
            <summary>
              Looks up a localized string similar to List Table 4 - Accent 2.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleListTable4Accent3">
            <summary>
              Looks up a localized string similar to List Table 4 - Accent 3.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleListTable4Accent4">
            <summary>
              Looks up a localized string similar to List Table 4 - Accent 4.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleListTable4Accent5">
            <summary>
              Looks up a localized string similar to List Table 4 - Accent 5.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleListTable4Accent6">
            <summary>
              Looks up a localized string similar to List Table 4 - Accent 6.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleListTable5Dark">
            <summary>
              Looks up a localized string similar to List Table 5 Dark.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleListTable5DarkAccent1">
            <summary>
              Looks up a localized string similar to List Table 5 Dark - Accent 1.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleListTable5DarkAccent2">
            <summary>
              Looks up a localized string similar to List Table 5 Dark - Accent 2.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleListTable5DarkAccent3">
            <summary>
              Looks up a localized string similar to List Table 5 Dark - Accent 3.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleListTable5DarkAccent4">
            <summary>
              Looks up a localized string similar to List Table 5 Dark - Accent 4.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleListTable5DarkAccent5">
            <summary>
              Looks up a localized string similar to List Table 5 Dark - Accent 5.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleListTable5DarkAccent6">
            <summary>
              Looks up a localized string similar to List Table 5 Dark - Accent 6.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleListTable6Colorful">
            <summary>
              Looks up a localized string similar to List Table 6 Colorful.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleListTable6ColorfulAccent1">
            <summary>
              Looks up a localized string similar to List Table 6 Colorful - Accent 1.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleListTable6ColorfulAccent2">
            <summary>
              Looks up a localized string similar to List Table 6 Colorful - Accent 2.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleListTable6ColorfulAccent3">
            <summary>
              Looks up a localized string similar to List Table 6 Colorful - Accent 3.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleListTable6ColorfulAccent4">
            <summary>
              Looks up a localized string similar to List Table 6 Colorful - Accent 4.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleListTable6ColorfulAccent5">
            <summary>
              Looks up a localized string similar to List Table 6 Colorful - Accent 5.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleListTable6ColorfulAccent6">
            <summary>
              Looks up a localized string similar to List Table 6 Colorful - Accent 6.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleListTable7Colorful">
            <summary>
              Looks up a localized string similar to List Table 7 Colorful.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleListTable7ColorfulAccent1">
            <summary>
              Looks up a localized string similar to List Table 7 Colorful - Accent 1.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleListTable7ColorfulAccent2">
            <summary>
              Looks up a localized string similar to List Table 7 Colorful - Accent 2.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleListTable7ColorfulAccent3">
            <summary>
              Looks up a localized string similar to List Table 7 Colorful - Accent 3.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleListTable7ColorfulAccent4">
            <summary>
              Looks up a localized string similar to List Table 7 Colorful - Accent 4.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleListTable7ColorfulAccent5">
            <summary>
              Looks up a localized string similar to List Table 7 Colorful - Accent 5.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleListTable7ColorfulAccent6">
            <summary>
              Looks up a localized string similar to List Table 7 Colorful - Accent 6.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleMacro">
            <summary>
              Looks up a localized string similar to Macro SearchText.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleMediumGrid1">
            <summary>
              Looks up a localized string similar to Medium Grid 1.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleMediumGrid1Accent1">
            <summary>
              Looks up a localized string similar to Medium Grid 1 - Accent 1.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleMediumGrid1Accent2">
            <summary>
              Looks up a localized string similar to Medium Grid 1 - Accent 2.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleMediumGrid1Accent3">
            <summary>
              Looks up a localized string similar to Medium Grid 1 - Accent 3.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleMediumGrid1Accent4">
            <summary>
              Looks up a localized string similar to Medium Grid 1 - Accent 4.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleMediumGrid1Accent5">
            <summary>
              Looks up a localized string similar to Medium Grid 1 - Accent 5.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleMediumGrid1Accent6">
            <summary>
              Looks up a localized string similar to Medium Grid 1 - Accent 6.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleMediumGrid2">
            <summary>
              Looks up a localized string similar to Medium Grid 2.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleMediumGrid2Accent1">
            <summary>
              Looks up a localized string similar to Medium Grid 2 - Accent 1.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleMediumGrid2Accent2">
            <summary>
              Looks up a localized string similar to Medium Grid 2 - Accent 2.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleMediumGrid2Accent3">
            <summary>
              Looks up a localized string similar to Medium Grid 2 - Accent 3.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleMediumGrid2Accent4">
            <summary>
              Looks up a localized string similar to Medium Grid 2 - Accent 4.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleMediumGrid2Accent5">
            <summary>
              Looks up a localized string similar to Medium Grid 2 - Accent 5.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleMediumGrid2Accent6">
            <summary>
              Looks up a localized string similar to Medium Grid 2 - Accent 6.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleMediumGrid3">
            <summary>
              Looks up a localized string similar to Medium Grid 3.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleMediumGrid3Accent1">
            <summary>
              Looks up a localized string similar to Medium Grid 3 - Accent 1.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleMediumGrid3Accent2">
            <summary>
              Looks up a localized string similar to Medium Grid 3 - Accent 2.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleMediumGrid3Accent3">
            <summary>
              Looks up a localized string similar to Medium Grid 3 - Accent 3.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleMediumGrid3Accent4">
            <summary>
              Looks up a localized string similar to Medium Grid 3 - Accent 4.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleMediumGrid3Accent5">
            <summary>
              Looks up a localized string similar to Medium Grid 3 - Accent 5.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleMediumGrid3Accent6">
            <summary>
              Looks up a localized string similar to Medium Grid 3 - Accent 6.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleMediumList1">
            <summary>
              Looks up a localized string similar to Medium List 1.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleMediumList1Accent1">
            <summary>
              Looks up a localized string similar to Medium List 1 - Accent 1.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleMediumList1Accent2">
            <summary>
              Looks up a localized string similar to Medium List 1 - Accent 2.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleMediumList1Accent3">
            <summary>
              Looks up a localized string similar to Medium List 1 - Accent 3.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleMediumList1Accent4">
            <summary>
              Looks up a localized string similar to Medium List 1 - Accent 4.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleMediumList1Accent5">
            <summary>
              Looks up a localized string similar to Medium List 1 - Accent 5.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleMediumList1Accent6">
            <summary>
              Looks up a localized string similar to Medium List 1 - Accent 6.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleMediumList2">
            <summary>
              Looks up a localized string similar to Medium List 2.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleMediumList2Accent1">
            <summary>
              Looks up a localized string similar to Medium List 2 - Accent 1.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleMediumList2Accent2">
            <summary>
              Looks up a localized string similar to Medium List 2 - Accent 2.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleMediumList2Accent3">
            <summary>
              Looks up a localized string similar to Medium List 2 - Accent 3.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleMediumList2Accent4">
            <summary>
              Looks up a localized string similar to Medium List 2 - Accent 4.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleMediumList2Accent5">
            <summary>
              Looks up a localized string similar to Medium List 2 - Accent 5.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleMediumList2Accent6">
            <summary>
              Looks up a localized string similar to Medium List 2 - Accent 6.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleMediumShading1">
            <summary>
              Looks up a localized string similar to Medium Shading 1.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleMediumShading1Accent1">
            <summary>
              Looks up a localized string similar to Medium Shading 1 - Accent 1.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleMediumShading1Accent2">
            <summary>
              Looks up a localized string similar to Medium Shading 1 - Accent 2.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleMediumShading1Accent3">
            <summary>
              Looks up a localized string similar to Medium Shading 1 - Accent 3.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleMediumShading1Accent4">
            <summary>
              Looks up a localized string similar to Medium Shading 1 - Accent 4.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleMediumShading1Accent5">
            <summary>
              Looks up a localized string similar to Medium Shading 1 - Accent 5.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleMediumShading1Accent6">
            <summary>
              Looks up a localized string similar to Medium Shading 1 - Accent 6.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleMediumShading2">
            <summary>
              Looks up a localized string similar to Medium Shading 2.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleMediumShading2Accent1">
            <summary>
              Looks up a localized string similar to Medium Shading 2 - Accent 1.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleMediumShading2Accent2">
            <summary>
              Looks up a localized string similar to Medium Shading 2 - Accent 2.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleMediumShading2Accent3">
            <summary>
              Looks up a localized string similar to Medium Shading 2 - Accent 3.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleMediumShading2Accent4">
            <summary>
              Looks up a localized string similar to Medium Shading 2 - Accent 4.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleMediumShading2Accent5">
            <summary>
              Looks up a localized string similar to Medium Shading 2 - Accent 5.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleMediumShading2Accent6">
            <summary>
              Looks up a localized string similar to Medium Shading 2 - Accent 6.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleMention">
            <summary>
              Looks up a localized string similar to Mention.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleMessageHeader">
            <summary>
              Looks up a localized string similar to Message Header.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleNoList">
            <summary>
              Looks up a localized string similar to No List.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleNormal">
            <summary>
              Looks up a localized string similar to Normal.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleNormalIndent">
            <summary>
              Looks up a localized string similar to Normal IndentUnit.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleNormalTable">
            <summary>
              Looks up a localized string similar to Table Normal.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleNormalweb">
            <summary>
              Looks up a localized string similar to Normal (Web).
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleNoSpacing">
            <summary>
              Looks up a localized string similar to No Spacing.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleNoteHeading">
            <summary>
              Looks up a localized string similar to Note Heading.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleOutlineList1">
            <summary>
              Looks up a localized string similar to 1 / a / i.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleOutlineList2">
            <summary>
              Looks up a localized string similar to 1 / 1.1 / 1.1.1.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleOutlineList3">
            <summary>
              Looks up a localized string similar to Article / Section.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStylePageNumber">
            <summary>
              Looks up a localized string similar to Page Number.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStylePlaceholderText">
            <summary>
              Looks up a localized string similar to Placeholder SearchText.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStylePlainTable1">
            <summary>
              Looks up a localized string similar to Plain Table 1.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStylePlainTable2">
            <summary>
              Looks up a localized string similar to Plain Table 2.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStylePlainTable3">
            <summary>
              Looks up a localized string similar to Plain Table 3.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStylePlainTable4">
            <summary>
              Looks up a localized string similar to Plain Table 4.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStylePlainTable5">
            <summary>
              Looks up a localized string similar to Plain Table 5.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStylePlainText">
            <summary>
              Looks up a localized string similar to Plain SearchText.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleQuote">
            <summary>
              Looks up a localized string similar to Quote.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleSalutation">
            <summary>
              Looks up a localized string similar to Salutation.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleSignature">
            <summary>
              Looks up a localized string similar to Signature.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleSmartHyperlink">
            <summary>
              Looks up a localized string similar to Smart Hyperlink.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleSmartLink">
            <summary>
              Looks up a localized string similar to SmartLink.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleStrong">
            <summary>
              Looks up a localized string similar to Strong.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleSubtitle">
            <summary>
              Looks up a localized string similar to Subtitle.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleSubtleEmphasis">
            <summary>
              Looks up a localized string similar to Subtle Emphasis.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleSubtleReference">
            <summary>
              Looks up a localized string similar to Subtle Reference.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleTable3dEffects1">
            <summary>
              Looks up a localized string similar to Table 3D effects 1.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleTable3dEffects2">
            <summary>
              Looks up a localized string similar to Table 3D effects 2.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleTable3dEffects3">
            <summary>
              Looks up a localized string similar to Table 3D effects 3.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleTableClassic1">
            <summary>
              Looks up a localized string similar to Table Classic 1.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleTableClassic2">
            <summary>
              Looks up a localized string similar to Table Classic 2.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleTableClassic3">
            <summary>
              Looks up a localized string similar to Table Classic 3.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleTableClassic4">
            <summary>
              Looks up a localized string similar to Table Classic 4.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleTableColorful1">
            <summary>
              Looks up a localized string similar to Table Colorful 1.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleTableColorful2">
            <summary>
              Looks up a localized string similar to Table Colorful 2.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleTableColorful3">
            <summary>
              Looks up a localized string similar to Table Colorful 3.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleTableColumns1">
            <summary>
              Looks up a localized string similar to Table Columns 1.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleTableColumns2">
            <summary>
              Looks up a localized string similar to Table Columns 2.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleTableColumns3">
            <summary>
              Looks up a localized string similar to Table Columns 3.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleTableColumns4">
            <summary>
              Looks up a localized string similar to Table Columns 4.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleTableColumns5">
            <summary>
              Looks up a localized string similar to Table Columns 5.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleTableContemporary">
            <summary>
              Looks up a localized string similar to Table Contemporary.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleTableElegant">
            <summary>
              Looks up a localized string similar to Table Elegant.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleTableGrid">
            <summary>
              Looks up a localized string similar to Table Grid.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleTableGrid1">
            <summary>
              Looks up a localized string similar to Table Grid 1.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleTableGrid2">
            <summary>
              Looks up a localized string similar to Table Grid 2.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleTableGrid3">
            <summary>
              Looks up a localized string similar to Table Grid 3.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleTableGrid4">
            <summary>
              Looks up a localized string similar to Table Grid 4.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleTableGrid5">
            <summary>
              Looks up a localized string similar to Table Grid 5.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleTableGrid6">
            <summary>
              Looks up a localized string similar to Table Grid 6.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleTableGrid7">
            <summary>
              Looks up a localized string similar to Table Grid 7.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleTableGrid8">
            <summary>
              Looks up a localized string similar to Table Grid 8.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleTableList1">
            <summary>
              Looks up a localized string similar to Table List 1.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleTableList2">
            <summary>
              Looks up a localized string similar to Table List 2.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleTableList3">
            <summary>
              Looks up a localized string similar to Table List 3.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleTableList4">
            <summary>
              Looks up a localized string similar to Table List 4.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleTableList5">
            <summary>
              Looks up a localized string similar to Table List 5.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleTableList6">
            <summary>
              Looks up a localized string similar to Table List 6.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleTableList7">
            <summary>
              Looks up a localized string similar to Table List 7.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleTableList8">
            <summary>
              Looks up a localized string similar to Table List 8.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleTableOfAuthorities">
            <summary>
              Looks up a localized string similar to Table of Authorities.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleTableOfFigures">
            <summary>
              Looks up a localized string similar to Table of Figures.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleTableProfessional">
            <summary>
              Looks up a localized string similar to Table Professional.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleTableSimple1">
            <summary>
              Looks up a localized string similar to Table Simple 1.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleTableSimple2">
            <summary>
              Looks up a localized string similar to Table Simple 2.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleTableSimple3">
            <summary>
              Looks up a localized string similar to Table Simple 3.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleTableSubtle1">
            <summary>
              Looks up a localized string similar to Table Subtle 1.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleTableSubtle2">
            <summary>
              Looks up a localized string similar to Table Subtle 2.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleTableTheme">
            <summary>
              Looks up a localized string similar to Table Theme.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleTableWeb1">
            <summary>
              Looks up a localized string similar to Table Web 1.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleTableWeb2">
            <summary>
              Looks up a localized string similar to Table Web 2.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleTableWeb3">
            <summary>
              Looks up a localized string similar to Table Web 3.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleTitle">
            <summary>
              Looks up a localized string similar to Title.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleTOAHeading">
            <summary>
              Looks up a localized string similar to TOA Heading.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleTOC1">
            <summary>
              Looks up a localized string similar to TOC 1.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleTOC2">
            <summary>
              Looks up a localized string similar to TOC 2.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleTOC3">
            <summary>
              Looks up a localized string similar to TOC 3.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleTOC4">
            <summary>
              Looks up a localized string similar to TOC 4.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleTOC5">
            <summary>
              Looks up a localized string similar to TOC 5.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleTOC6">
            <summary>
              Looks up a localized string similar to TOC 6.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleTOC7">
            <summary>
              Looks up a localized string similar to TOC 7.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleTOC8">
            <summary>
              Looks up a localized string similar to TOC 8.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleTOC9">
            <summary>
              Looks up a localized string similar to TOC 9.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleTocHeading">
            <summary>
              Looks up a localized string similar to TOC Heading.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.StylesStrings.wdStyleUnresolvedMention">
            <summary>
              Looks up a localized string similar to Unresolved Mention.
            </summary>
        </member>
        <member name="T:Qhta.OpenXmlTools.StylesTools">
            <summary>
            Tools for working with styles in OpenXml documents.
            </summary>
            <summary>
            Tools for working with styles in OpenXml documents.
            </summary>
            <summary>
            Tools for working with styles in OpenXml documents.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.StylesTools.StyleNameToId(System.String)">
            <summary>
            Converts a style name to a valid style ID.
            </summary>
            <param name="styleName">Name to convert</param>
            <returns>Style normalized ID</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.StylesTools.IsHeading(System.String)">
            <summary>
            Checks if the style name starts with "Heading".
            </summary>
            <param name="styleName">Name to check</param>
            <returns>true or false</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.StylesTools.IsHeading(DocumentFormat.OpenXml.Wordprocessing.Styles,System.String)">
            <summary>
            Checks if the style name starts with "Heading".
            </summary>
            <param name="styles"></param>
            <param name="styleName">Name to check</param>
            <returns>true or false</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.StylesTools.IsHeading(DocumentFormat.OpenXml.Wordprocessing.Style)">
            <summary>
            Checks if the style is a heading style.
            </summary>
            <param name="style">Style to check</param>
            <returns>true or false</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.StylesTools.HeadingLevel(System.String)">
            <summary>
            Checks if the style name starts with "Heading".
            If true, returns the level of the heading (starting with 1).
            </summary>
            <param name="styleName">Name to check</param>
            <returns>level of the heading (starting with 1) or null</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.StylesTools.HeadingLevel(DocumentFormat.OpenXml.Wordprocessing.Styles,System.String)">
            <summary>
            Checks if the style name starts with "Heading".
            If true, returns the level of the heading (starting with 1).
            </summary>
            <param name="styles"></param>
            <param name="styleName">Name to check</param>
            <returns>level of the heading (starting with 1) or null</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.StylesTools.HeadingLevel(DocumentFormat.OpenXml.Wordprocessing.Style)">
            <summary>
            Checks if the style is a heading style.
            If true, returns the level of the heading (starting with 1).
            </summary>
            <param name="style">Style to check</param>
            <returns>level of the heading (starting with 1) or null</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.StylesTools.HasStyles(DocumentFormat.OpenXml.Packaging.WordprocessingDocument)">
            <summary>
            Check if the document has styles defined
            </summary>
            <param name="wordDoc">The WordprocessingDocument</param>
            <returns>True if the document has styles defined</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.StylesTools.GetStyles(DocumentFormat.OpenXml.Packaging.WordprocessingDocument,System.String)">
            <summary>
            Gets the styles from the document. If the document does not have styles element, it is created
            </summary>
            <param name="wordDoc">The WordprocessingDocument</param>
            <param name="buildInStylesFileName">Path to a docx with buildIn styles defined and used</param>
            <returns>Instance of the styles element</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.StylesTools.GetBuildInStylesCount">
            <summary>
            Get the count of the known styles definitions.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.StylesTools.GetBuiltInStyleName(System.Int32)">
            <summary>
            Get the name of the known style definitions.
            </summary>
            <param name="sc">Number of the style</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.StylesTools.Count(DocumentFormat.OpenXml.Wordprocessing.Styles,Qhta.OpenXmlTools.ItemFilter)">
            <summary>
            Get the count of the style definitions.
            </summary>
            <param name="styles"></param>
            <param name="filter">specifies if all style names should be counted or only the defined ones</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.StylesTools.GetNames(DocumentFormat.OpenXml.Wordprocessing.Styles,Qhta.OpenXmlTools.ItemFilter)">
            <summary>
            Get the names of the style definitions.
            </summary>
            <param name="styles"></param>
            <param name="filter">specifies if all style names should be counted or only the defined ones</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.StylesTools.GetType(DocumentFormat.OpenXml.Wordprocessing.Styles,System.String)">
            <summary>
            Get the type of the style with its name.
            </summary>
            <param name="styles"></param>
            <param name="styleName"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.StylesTools.GetStyle(DocumentFormat.OpenXml.Wordprocessing.Styles,System.String)">
            <summary>
            Get the style definition with its name.
            </summary>
            <param name="styles"></param>
            <param name="styleName"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.StylesTools.SetStyle(DocumentFormat.OpenXml.Wordprocessing.Styles,DocumentFormat.OpenXml.Wordprocessing.Style)">
            <summary>
            Set the style definition. If the style with the same name exists, it is replaced.
            Otherwise, the new style is added.
            </summary>
            <param name="styles"></param>
            <param name="aStyle">Style to set</param>
            <returns></returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:Qhta.OpenXmlTools.StylesTools.StyleValuesToStyleType(DocumentFormat.OpenXml.Wordprocessing.StyleValues)">
            <summary>
            Converts a style value to a style type.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.StylesTools.StyleTypeToStyleValues(Qhta.OpenXmlTools.StyleType)">
            <summary>
            Converts a style type to a style value.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.StylesTools.GetDocDefaults(DocumentFormat.OpenXml.Wordprocessing.Styles)">
            <summary>
            Gets the default style settings for the <c>Styles</c> element.
            If the <c>Styles</c> element does not have a <c>DocDefaults</c> element, one is created.
            </summary>
            <param name="styles"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.StylesTools.GetRunPropertiesDefault(DocumentFormat.OpenXml.Wordprocessing.DocDefaults)">
            <summary>
            Gets the default run properties for the <c>DocDefaults</c> element.
            If the <c>DocDefaults</c> element does not have a <c>RunPropertiesDefault</c> element, one is created.
            </summary>
            <param name="docDefaults"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.StylesTools.GetRunProperties(DocumentFormat.OpenXml.Wordprocessing.RunPropertiesDefault)">
            <summary>
            Gets the run properties base style for the <c>RunPropertiesDefault</c> element.
            If the <c>RunPropertiesDefault</c> element does not have a <c>RunProperties</c> element, one is created.
            </summary>
            <param name="runPropertiesDefault"/>
            <returns></returns>
        </member>
        <member name="T:Qhta.OpenXmlTools.StyleType">
            <summary>Specifies a built-in Microsoft Word style.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.StyleType.Paragraph">
            <summary>Paragraph style.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.StyleType.Character">
            <summary>Body character style.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.StyleType.Table">
            <summary>Table style.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.StyleType.Numbering">
            <summary>List style.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.StyleType.ParagraphOnly">
            <summary>Reserved for internal use.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.StyleType.Linked">
            <summary>Reserved for internal use.</summary>
        </member>
        <member name="T:Qhta.OpenXmlTools.SubdocumentTools">
            <summary>
            Tools for working with subdocuments in OpenXml documents.
            </summary>
        </member>
        <member name="T:Qhta.OpenXmlTools.SubdocumentTools.SubdocRefRelPair">
            <summary>
            Pair of a subdocument reference and its external relationship.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.SubdocumentTools.SubdocRefRelPair.Ref">
            <summary>
            Subdocument reference.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.SubdocumentTools.SubdocRefRelPair.Rel">
            <summary>
            External relationship.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.SubdocumentTools.SubdocRefRelPair.#ctor(DocumentFormat.OpenXml.Wordprocessing.SubDocumentReference,DocumentFormat.OpenXml.Packaging.ExternalRelationship)">
            <summary>
            Constructor.
            </summary>
            <param name="ref"></param>
            <param name="rel"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.SubdocumentTools.GetSubDocumentRelationships(DocumentFormat.OpenXml.Packaging.MainDocumentPart)">
            <summary>
            Gets the external relationships that are subdocuments.
            </summary>
            <param name="mainDocumentPart"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.SubdocumentTools.GetSubDocumentReferences(DocumentFormat.OpenXml.Packaging.MainDocumentPart)">
            <summary>
            Gets the subdocument references in the main document part.
            </summary>
            <param name="mainDocumentPart"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.SubdocumentTools.GetSubDocuments(DocumentFormat.OpenXml.Packaging.MainDocumentPart)">
            <summary>
            Gets the subdocument references and their external relationships.
            </summary>
            <param name="mainDocumentPart"></param>
            <returns></returns>
        </member>
        <member name="T:Qhta.OpenXmlTools.TableCellMarginDefaultTools">
            <summary>
            Contains tools for working with TableCellMarginDefault elements.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.TableCellMarginDefaultTools.SetMargins(DocumentFormat.OpenXml.Wordprocessing.TableCellMarginDefault,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Sets the default margins for the table cell.
            If the value is null, the margin is not set.
            </summary>
            <param name="margin"></param>
            <param name="top"></param>
            <param name="left"></param>
            <param name="bottom"></param>
            <param name="right"></param>
        </member>
        <member name="T:Qhta.OpenXmlTools.TableCellPropertiesTools">
            <summary>
            Tools for working with table cell properties in OpenXml documents.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.TableCellPropertiesTools.GetTableCellBorders(DocumentFormat.OpenXml.Wordprocessing.TableCellProperties)">
            <summary>
            Gets the cell borders. If the cell properties do not contain a <c>TableCellBorders</c> element, a new one is created.
            </summary>
            <param name="cellProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.TableCellPropertiesTools.SetTableCellBorders(DocumentFormat.OpenXml.Wordprocessing.TableCellProperties,DocumentFormat.OpenXml.Wordprocessing.TableCellBorders)">
            <summary>
            Sets the cell borders.
            </summary>
            <param name="cellProperties"></param>
            <param name="borders"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.TableCellPropertiesTools.SetShading(DocumentFormat.OpenXml.Wordprocessing.TableCellProperties,System.Nullable{DocumentFormat.OpenXml.Wordprocessing.ShadingPatternValues},System.String,System.String)">
            <summary>
            Sets the cell shading
            </summary>
            <param name="cellProperties"></param>
            <param name="color"></param>
            <param name="fillPattern"></param>
            <param name="fillColor"></param>
        </member>
        <member name="T:Qhta.OpenXmlTools.WhichParagraphs">
            <summary>
            Options for selecting paragraphs in a cell.
            </summary>
        </member>
        <member name="T:Qhta.OpenXmlTools.TableCellTools">
            <summary>
            Tools for working with table cells in OpenXml documents.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.TableCellTools.GetMembers(DocumentFormat.OpenXml.OpenXmlElement)">
            <summary>
            Get all the member elements of the cell (except <c>TableCellProperties</c>).
            </summary>
            <param name="cell"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.TableCellTools.HasSimpleContent(DocumentFormat.OpenXml.Wordprocessing.TableCell)">
            <summary>
            Determines if the cell content is empty or contains only empty paragraphs.
            </summary>
            <param name="cell"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.TableCellTools.GetTableCellProperties(DocumentFormat.OpenXml.Wordprocessing.TableCell)">
            <summary>
            Get the <c>TableCellProperties</c> element of the cell. If it does not exist, it will be created.
            </summary>
            <param name="cell"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.TableCellTools.SetKeepWithNext(DocumentFormat.OpenXml.Wordprocessing.TableCell,System.Boolean,Qhta.OpenXmlTools.WhichParagraphs)">
            <summary>
            Sets the keep with next property for the paragraphs in the cell.
            </summary>
            <param name="cell"></param>
            <param name="value">value to set</param>
            <param name="mode">specifies which paragraphs to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.TableCellTools.IsEmpty(DocumentFormat.OpenXml.Wordprocessing.TableCell)">
            <summary>
            Checks if the cell is empty.
            </summary>
            <param name="cell"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.TableCellTools.IsLong(DocumentFormat.OpenXml.Wordprocessing.TableCell)">
            <summary>
            Determines if the cell contains a long text or non text elements.
            </summary>
            <param name="cell"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.TableCellTools.GetWidth(DocumentFormat.OpenXml.Wordprocessing.TableCell)">
            <summary>
            Returns the width of the cell (is twips).
            </summary>
            <param name="cell"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.TableCellTools.GetWidth(DocumentFormat.OpenXml.Wordprocessing.TableCell,System.Nullable{DocumentFormat.OpenXml.Wordprocessing.TableWidthUnitValues}@)">
            <summary>
            Returns the width of the cell (with the unitValues);
            </summary>
            <param name="cell"></param>
            <param name="unitValues">retrieved from TableCellWidth element</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.TableCellTools.SetWidth(DocumentFormat.OpenXml.Wordprocessing.TableCell,System.Nullable{System.Int32},System.Nullable{DocumentFormat.OpenXml.Wordprocessing.TableWidthUnitValues})">
            <summary>
            Sets the width of the cell.
            If value is null, the width element is removed.
            </summary>
            <param name="cell"></param>
            <param name="value"></param>
            <param name="unitValues"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.TableCellTools.GetSpan(DocumentFormat.OpenXml.Wordprocessing.TableCell)">
            <summary>
            Returns the number of columns merged in the cell.
            If the cell is not spanned, the returned value is 1.
            </summary>
            <param name="cell"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.TableCellTools.SetSpan(DocumentFormat.OpenXml.Wordprocessing.TableCell,System.Int32)">
            <summary>
            Sets the number of columns merged in the cell.
            if value is 1 or less, the grid span element is removed.
            </summary>
            <param name="cell"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.TableCellTools.GetBorder``1(DocumentFormat.OpenXml.Wordprocessing.TableCell)">
            <summary>
            Returns the border of the table.
            </summary>
            <param name="Table"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.TableCellTools.SetBorder``1(DocumentFormat.OpenXml.Wordprocessing.TableCell,DocumentFormat.OpenXml.Wordprocessing.BorderType)">
            <summary>
            Set the border of the cell.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="cell"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.TableCellTools.SetJustification(DocumentFormat.OpenXml.Wordprocessing.TableCell,DocumentFormat.OpenXml.Wordprocessing.JustificationValues)">
            <summary>
            Sets justification for all paragraphs in the cell.
            </summary>
            <param name="cell"></param>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.TableCellTools.SetBackgroundColor(DocumentFormat.OpenXml.Wordprocessing.TableCell,System.Int32)">
            <summary>
            Set the cell background color.
            </summary>
            <param name="cell"></param>
            <param name="backgroundColor"></param>
        </member>
        <member name="T:Qhta.OpenXmlTools.TableExtraTools">
            <summary>
            Extra tools for working with tables in OpenXml documents.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.TableExtraTools.GetNonEmptyColumns(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.Wordprocessing.TableRow})">
            <summary>
            Find the first and the last non-empty column in the group of rows.
            </summary>
            <param name="rows"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.TableExtraTools.GetNonEmptyColumns(DocumentFormat.OpenXml.Wordprocessing.TableRow)">
            <summary>
            Find the first and the last non-empty cell in the row.
            </summary>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.TableExtraTools.GetNonSeparatedColumns(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.Wordprocessing.TableRow})">
            <summary>
            Find the first and the last non-separated column in the group of rows.
            Only first sequence of non-separated cells are recognized.
            </summary>
            <param name="rows"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.TableExtraTools.GetNonSeparatedColumns(DocumentFormat.OpenXml.Wordprocessing.TableRow)">
            <summary>
            Find the first and the last non-separated cell in the row.
            Non-separated cells are the cells which have no borders between.
            Only first sequence of non-separated cells is recognized.
            </summary>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.TableExtraTools.GetCellsInColumn(DocumentFormat.OpenXml.Wordprocessing.Table,System.Int32)">
            <summary>
            Get the cells in the selected column from the table.
            </summary>
            <param name="table"></param>
            <param name="columnNdx"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.TableExtraTools.GetCellsInColumn(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.Wordprocessing.TableRow},System.Int32)">
            <summary>
            Get the cells in the selected column from the group of rows.
            </summary>
            <param name="rows"></param>
            <param name="columnNdx"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.TableExtraTools.AreMerged(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.Wordprocessing.TableCell})">
            <summary>
            Check if the cells in the cellColumn are merged.
            True if the first cell has VerticalMerge element
            and additionally first VerticalMerge element has value of Restart.
            </summary>
            <param name="cellColumn"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.TableExtraTools.GetNewTableGrid(DocumentFormat.OpenXml.Wordprocessing.Table)">
            <summary>
            Gets the new table grid of the table by evaluating all columns in the table.
            </summary>
            <param name="table"/>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.TableExtraTools.GetColumnsCount(DocumentFormat.OpenXml.Wordprocessing.TableRow)">
            <summary>
            Evaluate the column count in the row.
            </summary>
            <param name="aRow"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.TableExtraTools.GetColumnWith(DocumentFormat.OpenXml.Wordprocessing.Table,System.Int32)">
            <summary>
            Evaluate the width of the specific column in the table.
            Only cells which are not spanned are taken into account.
            </summary>
            <param name="aTable"></param>
            <param name="columnNdx">column index</param>
            <returns></returns>
        </member>
        <member name="T:Qhta.OpenXmlTools.TableGridTools">
            <summary>
            Tools for working with table grid columns in OpenXml documents.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.TableGridTools.GetColumns(DocumentFormat.OpenXml.Wordprocessing.TableGrid)">
            <summary>
            Gets columns from the table grid.
            </summary>
            <param name="tableGrid"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.TableGridTools.GetTotalWidth(DocumentFormat.OpenXml.Wordprocessing.TableGrid)">
            <summary>
            Gets columns from the table grid.
            </summary>
            <param name="tableGrid"></param>
            <returns></returns>
        </member>
        <member name="T:Qhta.OpenXmlTools.TablePropertiesTools">
            <summary>
            Tools for working with table properties in OpenXml documents.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.TablePropertiesTools.ToStyleTableProperties(DocumentFormat.OpenXml.Wordprocessing.TableProperties)">
            <summary>
            Converts a <c>TableProperties</c> object to a <c>StyleTableProperties</c> object.
            </summary>
            <param name="tableProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.TablePropertiesTools.GetTableCellMarginDefault(DocumentFormat.OpenXml.Wordprocessing.TableProperties)">
            <summary>
            Get the default table cell margins of the table properties.
            </summary>
            <param name="tableProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.TablePropertiesTools.GetTableBorders(DocumentFormat.OpenXml.Wordprocessing.TableProperties)">
            <summary>
            Gets the table borders. If the table properties do not contain a <c>TableBorders</c> element, a new one is created.
            </summary>
            <param name="TableProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.TablePropertiesTools.SetTableBorders(DocumentFormat.OpenXml.Wordprocessing.TableProperties,DocumentFormat.OpenXml.Wordprocessing.TableBorders)">
            <summary>
            Sets the table borders.
            </summary>
            <param name="TableProperties"></param>
            <param name="borders"></param>
        </member>
        <member name="T:Qhta.OpenXmlTools.TableRowPropertiesTools">
            <summary>
            Tools for working with table row properties in OpenXml documents.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.TableRowPropertiesTools.GetTableRowHeight(DocumentFormat.OpenXml.Wordprocessing.TableRowProperties)">
            <summary>
            Gets the row height. If the row properties do not contain a <c>TableRowHeight</c> element, null is returned.
            </summary>
            <param name="tableRowProperties">Table row properties to examine</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.TableRowPropertiesTools.SetTableRowHeight(DocumentFormat.OpenXml.Wordprocessing.TableRowProperties,System.Nullable{System.Int32},System.Nullable{DocumentFormat.OpenXml.Wordprocessing.HeightRuleValues})">
            <summary>
            Sets the row height.
            If value to set is null, the height is removed.
            </summary>
            <param name="tableRowProperties">Table row properties to set</param>
            <param name="value">value to set</param>
            <param name="rule">rule to set</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.TableRowPropertiesTools.GetCantSplit(DocumentFormat.OpenXml.Wordprocessing.TableRowProperties)">
            <summary>
            Get <c>CantSplit</c> boolean attribute value
            </summary>
            <param name="tableRowProperties">Table row properties to process</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.TableRowPropertiesTools.SetCantSplit(DocumentFormat.OpenXml.Wordprocessing.TableRowProperties,System.Boolean)">
            <summary>
            Set <c>CantSplit</c> boolean attribute value
            </summary>
            <param name="tableRowProperties">Table row properties to process</param>
            <param name="value">attribute value</param>
            <returns></returns>
        </member>
        <member name="T:Qhta.OpenXmlTools.TableRowTools">
            <summary>
            Tools for working with table rows in OpenXml documents.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.TableRowTools.GetCells(DocumentFormat.OpenXml.Wordprocessing.TableRow)">
            <summary>
            Get the <c>TableCell</c> elements of the row.
            </summary>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.TableRowTools.GetHeight(DocumentFormat.OpenXml.Wordprocessing.TableRow)">
            <summary>
            Gets the row height. If the row properties do not contain a <c>TableRowHeight</c> element, null is returned.
            </summary>
            <param name="tableRow">Table row to examine</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.TableRowTools.SetHeight(DocumentFormat.OpenXml.Wordprocessing.TableRow,System.Nullable{System.Int32},System.Nullable{DocumentFormat.OpenXml.Wordprocessing.HeightRuleValues})">
            <summary>
            Sets the row height.
            If value to set is null, the height is removed.
            </summary>
            <param name="tableRow">Table row to set</param>
            <param name="value">value to set</param>
            <param name="rule">rule to set</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.TableRowTools.SetKeepWithNext(DocumentFormat.OpenXml.Wordprocessing.TableRow,System.Boolean)">
            <summary>
            Sets the keep with next property for all cells in the row.
            </summary>
            <param name="row">Table row to set</param>
            <param name="value">value to set</param>
        </member>
        <member name="M:Qhta.OpenXmlTools.TableRowTools.GetTableRowProperties(DocumentFormat.OpenXml.Wordprocessing.TableRow)">
            <summary>
            Get the <c>TableRowProperties</c> element of the row. If it does not exist, it will be created.
            </summary>
            <param name="row">Table row to examine</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.TableRowTools.IsEmpty(DocumentFormat.OpenXml.Wordprocessing.TableRow)">
            <summary>
            Checks if the row is empty.
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.TableRowTools.GetCell(DocumentFormat.OpenXml.Wordprocessing.TableRow,System.Int32)">
            <summary>
            Get row cell by column index. If the cell in this columnIndex is merged, the null is returned.
            Also, if the column index is out of range, the null is returned.
            </summary>
            <param name="row"></param>
            <param name="columnIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.TableRowTools.GetMergedCell(DocumentFormat.OpenXml.Wordprocessing.TableRow,System.Int32)">
            <summary>
            Get row cell by column index. If the cell in this columnIndex is merged, the first cell in merge is returned.
            If the column index is out of range, the null is returned.
            </summary>
            <param name="row"></param>
            <param name="columnIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.TableRowTools.SetBackgroundColor(DocumentFormat.OpenXml.Wordprocessing.TableRow,System.Int32)">
            <summary>
            Set the row background color.
            </summary>
            <param name="row"></param>
            <param name="backgroundColor"></param>
        </member>
        <member name="T:Qhta.OpenXmlTools.TableTools">
            <summary>
            Tools for working with tables in OpenXml documents.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.TableTools.GetMembers(DocumentFormat.OpenXml.Wordprocessing.Table)">
            <summary>
            Get member elements (without properties and TableGrid) of the table.
            </summary>
            <param name="table"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.TableTools.GetRows(DocumentFormat.OpenXml.Wordprocessing.Table)">
            <summary>
            Get the <c>TableRow</c> elements of the table.
            </summary>
            <param name="table"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.TableTools.GetCells(DocumentFormat.OpenXml.Wordprocessing.Table)">
            <summary>
            Get the <c>TableCell</c> elements of the table.
            </summary>
            <param name="table"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.TableTools.Style(DocumentFormat.OpenXml.Wordprocessing.Table)">
            <summary>
            Gets the style name of the table.
            </summary>
            <param name="table"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.TableTools.GetTableProperties(DocumentFormat.OpenXml.Wordprocessing.Table)">
            <summary>
            Gets the table properties of the table.
            If the <c>TableProperties</c> element is null, creates a new one.
            </summary>
            <param name="table"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.TableTools.SetTableProperties(DocumentFormat.OpenXml.Wordprocessing.Table,DocumentFormat.OpenXml.Wordprocessing.TableProperties)">
            <summary>
            Sets the table properties of the table.
            If the value to set is null, removes the <c>TableProperties</c> element.
            </summary>
            <param name="table"></param>
            <param name="value">Value to set</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.TableTools.GetWidth(DocumentFormat.OpenXml.Wordprocessing.Table)">
            <summary>
            Returns the width of the table (in twips).
            </summary>
            <param name="table"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.TableTools.GetWidth(DocumentFormat.OpenXml.Wordprocessing.Table,System.Nullable{DocumentFormat.OpenXml.Wordprocessing.TableWidthUnitValues}@)">
            <summary>
            Returns the width of the table (with the unitValues);
            </summary>
            <param name="table"></param>
            <param name="unitValues">retrieved from TableCellWidth element</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.TableTools.SetWidth(DocumentFormat.OpenXml.Wordprocessing.Table,System.Nullable{System.Int32},System.Nullable{DocumentFormat.OpenXml.Wordprocessing.TableWidthUnitValues})">
            <summary>
            Sets the width of the table.
            If value is null, the width element is removed.
            </summary>
            <param name="table"></param>
            <param name="value"></param>
            <param name="unitValues"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.TableTools.GetTableGrid(DocumentFormat.OpenXml.Wordprocessing.Table)">
            <summary>
            Gets the table grid of the table.
            If the <c>TableGrid</c> element is null, creates a new one.
            </summary>
            <param name="table"/>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.TableTools.SetTableGrid(DocumentFormat.OpenXml.Wordprocessing.Table,DocumentFormat.OpenXml.Wordprocessing.TableGrid)">
            <summary>
            Sets the table grid of the table.
            If the value to set is null, removes the <c>TableGrid</c> element.
            </summary>
            <param name="table"></param>
            <param name="value">Value to set</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.TableTools.TryKeepOnPage(DocumentFormat.OpenXml.Wordprocessing.Table,System.Int32)">
            <summary>
            Try to keep the table on the same page.
            It is done by setting the first rows to be kept with next on the same page.
            Last row is never kept with next.
            </summary>
            <param name="table"></param>
            <param name="rowLimit"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.TableTools.TryLimitLeftIndent(DocumentFormat.OpenXml.Wordprocessing.Table)">
            <summary>
            Try to limit left indent to zero.
            </summary>
            <param name="table"></param>
            <returns>true if indent was less than zero</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.TableTools.LimitWidth(DocumentFormat.OpenXml.Wordprocessing.Table,System.Int32)">
            <summary>
            Try to limit table width.
            </summary>
            <param name="table"></param>
            <param name="widthLimit"></param>
            <returns>true if limit was set, false if the current table width is less then limit</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.TableTools.SetColumnCellsWidth(DocumentFormat.OpenXml.Wordprocessing.Table,System.Int32,System.Int32)">
            <summary>
            Set the width of all cells in the column.
            </summary>
            <param name="table"></param>
            <param name="columnIndex"></param>
            <param name="width"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.TableTools.ClearRowsHeight(DocumentFormat.OpenXml.Wordprocessing.Table)">
            <summary>
            Set the height of all rows in the table to auto.
            </summary>
            <param name="table"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.TableTools.SetUniformCellMargins(DocumentFormat.OpenXml.Wordprocessing.Table,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Set the height of all rows in the table to auto.
            </summary>
            <param name="table">Table to process</param>
            <param name="left">Left cell margin (in twips)</param>
            <param name="top">Top cell margin (in twips)</param>
            <param name="right">Right cell margin (in twips)</param>
            <param name="bottom">Bottom cell margin (in twips)</param>
            <returns>Number of cell affected</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.TableTools.GetSectionProperties(DocumentFormat.OpenXml.Wordprocessing.Table)">
            <summary>
            Get the section properties of the table.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.TableTools.TryJoinFirstColumnParagraphs(DocumentFormat.OpenXml.Wordprocessing.Table)">
            <summary>
            Browse through cells in the first column and try to join paragraphs in the cells.
            </summary>
            <param name="table"></param>
            <returns>Number of joined cells</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.TableTools.IsEmpty(DocumentFormat.OpenXml.Wordprocessing.Table)">
            <summary>
            Checks if the paragraph is empty.
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.TableTools.GetLeftMargin(DocumentFormat.OpenXml.Wordprocessing.Table)">
            <summary>
            Get the left margin of TableCellMarginDefault.LeftMargin.
            </summary>
            <param name="table"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.TableTools.SetLeftMargin(DocumentFormat.OpenXml.Wordprocessing.Table,System.Nullable{System.Int32})">
            <summary>
            Set the left margin of TableCellMarginDefault.LeftMargin.
            </summary>
            <param name="table"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.TableTools.GetRightMargin(DocumentFormat.OpenXml.Wordprocessing.Table)">
            <summary>
            Get the right margin of TableCellMarginDefault.LeftMargin.
            </summary>
            <param name="table"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.TableTools.GetTableLook(DocumentFormat.OpenXml.Wordprocessing.Table)">
            <summary>
            Get the table look element of the table properties.
            </summary>
            <param name="table"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.TableTools.SetBackgroundColor(DocumentFormat.OpenXml.Wordprocessing.Table,System.Int32)">
            <summary>
            Set the table background color.
            </summary>
            <param name="table"></param>
            <param name="backgroundColor"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.TableTools.GetBorder``1(DocumentFormat.OpenXml.Wordprocessing.Table)">
            <summary>
            Returns the border of the table.
            </summary>
            <param name="Table"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.TableTools.SetBorder``1(DocumentFormat.OpenXml.Wordprocessing.Table,DocumentFormat.OpenXml.Wordprocessing.BorderType)">
            <summary>
            Set the border of the table.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="table"></param>
            <param name="value"></param>
        </member>
        <member name="T:Qhta.OpenXmlTools.TableWidthDxaNilTypeTools">
            <summary>
            Tools for working with table width types in OpenXml documents.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.TableWidthDxaNilTypeTools.GetValue(DocumentFormat.OpenXml.Wordprocessing.TableWidthDxaNilType)">
            <summary>
            Gets the value of the table width.
            </summary>
            <param name="tableWidth"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.TableWidthDxaNilTypeTools.SetValue(DocumentFormat.OpenXml.Wordprocessing.TableWidthDxaNilType,System.Nullable{System.Int32})">
            <summary>
            Sets the value of the table width.
            </summary>
            <param name="tableWidth"></param>
            <param name="value"></param>
        </member>
        <member name="T:Qhta.OpenXmlTools.TableWidthTypeTools">
            <summary>
            Tools for working with table width types in OpenXml documents.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.TableWidthTypeTools.GetValue(DocumentFormat.OpenXml.Wordprocessing.TableWidthType)">
            <summary>
            Gets the value of the table width.
            </summary>
            <param name="tableWidth"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.TableWidthTypeTools.SetValue(DocumentFormat.OpenXml.Wordprocessing.TableWidthType,System.Nullable{System.Int32})">
            <summary>
            Sets the value of the table width.
            </summary>
            <param name="tableWidth"></param>
            <param name="value"></param>
        </member>
        <member name="T:Qhta.OpenXmlTools.TestTools">
            <summary>
            Methods to help with testing.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.TestTools.CreateNewPropertyValue(System.String,System.Type)">
            <summary>
            Creates a new property value.
            </summary>
            <param name="propertyName"></param>
            <param name="propertyType"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.TestTools.AsString(System.Object,System.Int32,System.Int32)">
            <summary>
            Converts the object to a string.
            </summary>
            <param name="value">value to convert</param>
            <param name="indent">indent size (spaces = indent*2) to put before</param>
            <param name="depthLimit">limit of internal elements levels (in composite elements</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.TestTools.AsString(DocumentFormat.OpenXml.OpenXmlLeafElement,System.Int32,System.Int32)">
            <summary>
            Converts the <c>OpenXmlLeafElement</c> to a string.
            </summary>
            <param name="element"></param>
            <param name="indent"></param>
            <param name="depthLimit">limit of internal elements levels (in composite elements</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.TestTools.AsString(DocumentFormat.OpenXml.OpenXmlCompositeElement,System.Int32,System.Int32)">
            <summary>
            Converts the <c>OpenXmlCompositeElement</c> to a string.
            </summary>
            <param name="element"></param>
            <param name="indent"></param>
            <param name="depthLimit">limit of internal elements levels (in composite elements</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.TestTools.AsString(DocumentFormat.OpenXml.Wordprocessing.Rsids,System.Int32,System.Int32)">
            <summary>
            Converts the <c>Rsids</c> to a string.
            </summary>
            <param name="element"></param>
            <param name="indent"></param>
            <param name="depthLimit">limit of internal elements levels (in composite elements</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.TestTools.FromString(System.String,System.Type)">
            <summary>
            Converts the object form a string.
            </summary>
            <param name="value">value to convert</param>
            <param name="targetType"></param>
            <returns></returns>
        </member>
        <member name="T:Qhta.OpenXmlTools.TextFormat">
            <summary>
            Format of the text to process
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextFormat.Bold">
            <summary>
            Bold attribute of the text.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextFormat.Italic">
            <summary>
            Italic attribute of the text.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.TextFormat.IsSame(Qhta.OpenXmlTools.TextFormat)">
            <summary>
            Compare the text format with another text format.
            If some format attributes are not set, they are not compared.
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="T:Qhta.OpenXmlTools.TextOptions">
            <summary>
            Options for getting text.
            </summary>
        </member>
        <member name="T:Qhta.OpenXmlTools.TextOptions.TextMode">
            <summary>
            Mode to get text.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.TextOptions.TextMode.PlainText">
            <summary>
            Get plain text.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.TextOptions.TextMode.TaggedText">
            <summary>
            Get text with XML tags.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextOptions.Mode">
            <summary>
            
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.TextOptions.EscChar">
            <summary>
            Marker to precede a tag.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.TextOptions.PlainText">
            <summary>
            Options to get only plain text. All non-text elements are returned as a single control character \u001B (ESC).
            SearchText is returned as is.
            Symbols like new line, tab, page break, column break, line break, carriage return are replaced by control characters,
            which are as follows:
            <list type="table">
              <item>
                 <term>Tab character</term>
                 <description>\t = \u0009</description>
              </item>
              <item>
                 <term>Line break</term>
                 <description>\n = \u000A</description>
              </item>
              <item>
                 <term>Column break</term>
                 <description>\v = \u000B</description>
              </item>
              <item>
                 <term>Page break</term>
                 <description>\f = \u000C</description>
              </item>
              <item>
                 <term>Carriage return</term>
                 <description>\r = \u000D</description>
              </item>
            </list>
            Positional tabulators are treated as tab characters.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextOptions.ParaText">
            <summary>
            Options to get paragraph text.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.TextOptions.XmlTaggedText">
            <summary>
            Options to get tabbed text.
            Such characters as &lt;, &gt;, &amp; are replaced with html entities.
            Paragraphs and line breaks are represented with HTML tags.
            Tables are represented as HTML tables.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextOptions.FullText">
            <summary>
            Options to get full text. All non-text elements are replaced with tags.
            Html entities are used.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextOptions.FormattedText">
            <summary>
            Options to get full text. All non-text elements are replaced with tags.
            Html entities are used.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextOptions.OuterText">
            <summary>
            Options important for getting text from paragraphs.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextOptions.NewLine">
            <summary>
            Tag to mark a new line.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.TextOptions.TabChar">
            <summary>
            Char to mark a tab character in PlainText mode.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.TextOptions.TabTag">
            <summary>
            Tag to mark a tab character in TaggedText mode.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.TextOptions.BreakLineChar">
            <summary>
            Char to mark a line break in PlainText mode.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.TextOptions.BreakLineTag">
            <summary>
            Tag to mark a line break in TaggedText mode.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.TextOptions.BreakColumnChar">
            <summary>
            Char to mark a column break in PlainText mode.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.TextOptions.BreakColumnTag">
            <summary>
            Tag to mark a column break in TaggedText mode.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.TextOptions.BreakPageChar">
            <summary>
            Char to mark a page break in PlainText mode.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.TextOptions.BreakPageTag">
            <summary>
            Tag to mark a page break in TaggedText mode.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.TextOptions.CarriageReturnChar">
            <summary>
            Char to mark a carriage return in PlainText mode.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.TextOptions.CarriageReturnTag">
            <summary>
            Tag to mark a carriage return in TaggedText mode.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.TextOptions.SoftHyphenChar">
            <summary>
            Char to mark a soft hyphen in PlainText mode.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.TextOptions.SoftHyphenTag">
            <summary>
            Tag to mark a soft hyphen in TaggedText mode.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.TextOptions.NoBreakHyphenChar">
            <summary>
            Char to mark a non-break hyphen in PlainText mode.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.TextOptions.NoBreakHyphenTag">
            <summary>
            Tag to mark a non-break hyphen in TaggedText mode.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.TextOptions.PositionalTabChar">
            <summary>
            Char to mark a Positional tab in PlainText mode.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.TextOptions.PositionalTabTab">
            <summary>
            Positional tab replacement char.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextOptions.OtherObjectSubstituteTag">
            <summary>
            Tag to mark other object in TaggedText mode.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.TextOptions.PageNumberChar">
            <summary>
            Char to mark a page number in PlainText mode.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.TextOptions.PageNumberTag">
            <summary>
            Tag to mark a page number in TaggedText mode.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.TextOptions.LastRenderedPageBreakChar">
            <summary>
            Tag to mark a last rendered page break.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.TextOptions.LastRenderedPageBreakTag">
            <summary>
            Tag to mark a last rendered page break.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.TextOptions.DayLongChar">
            <summary>
            Tag to mark a DayLong element.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.TextOptions.DayLongTag">
            <summary>
            Tag to mark a DayLong element in TaggedText mode.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.TextOptions.DayShortChar">
            <summary>
            Tag to mark a DayShort element.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.TextOptions.DayShortTag">
            <summary>
            Tag to mark a DayShort element in TaggedText mode.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.TextOptions.MonthLongChar">
            <summary>
            Tag to mark a MonthLong element.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.TextOptions.MonthLongTag">
            <summary>
            Tag to mark a MonthLong element in TaggedText mode.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.TextOptions.MonthShortChar">
            <summary>
            Tag to mark a MonthShort element.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.TextOptions.MonthShortTag">
            <summary>
            Tag to mark a MonthShort element in TaggedText mode.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.TextOptions.YearLongChar">
            <summary>
            Tag to mark a YearLong element.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.TextOptions.YearLongTag">
            <summary>
            Tag to mark a YearLong element in TaggedText mode.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.TextOptions.YearShortChar">
            <summary>
            Char to mark a YearShort element in PlainText mode.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.TextOptions.YearShortTag">
            <summary>
            Tag to mark a YearShort element in TaggedText mode.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextOptions.IgnoreEmptyParagraphs">
            <summary>
            Ignore empty paragraphs in plain text.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextOptions.ParagraphSeparator">
            <summary>
            Tag to insert between paragraphs.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextOptions.TableSeparator">
            <summary>
            Tag to insert between table in plain text.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextOptions.TableRowSeparator">
            <summary>
            Tag to insert between table cells in plain text.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextOptions.TableCellSeparator">
            <summary>
            Tag to insert between table cells in plain text.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextOptions.UseHtmlEntities">
            <summary>
            Convert plain text to HTML entities.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextOptions.UseHtmlFormatting">
            <summary>
            Convert Run properties to HTML formatting tags.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextOptions.BoldStartTag">
            <summary>
            Tag to start bold formatting.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextOptions.BoldEndTag">
            <summary>
            Tag to end bold formatting.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextOptions.ItalicStartTag">
            <summary>
            Tag to start italic formatting.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextOptions.ItalicEndTag">
            <summary>
            Tag to end italic formatting.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextOptions.SuperscriptStartTag">
            <summary>
            Tag to start superscript formatting.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextOptions.SuperscriptEndTag">
            <summary>
            Tag to end superscript formatting.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextOptions.SubscriptStartTag">
            <summary>
            Tag to start subscript formatting.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextOptions.SubscriptEndTag">
            <summary>
            Tag to end subscript formatting.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextOptions.UseHtmlParagraphs">
            <summary>
            Use HTML paragraph tags instead of paragraph separators.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextOptions.TextStartTag">
            <summary>
            Tag to start a run.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextOptions.TextEndTag">
            <summary>
            Tag to end a run.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextOptions.RunStartTag">
            <summary>
            Tag to start a run.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextOptions.RunEndTag">
            <summary>
            Tag to end a run.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.TextOptions.RunSeparator">
            <summary>
            Tag to start a run.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextOptions.ParagraphStartTag">
            <summary>
            Tag to start a paragraph.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextOptions.ParagraphEndTag">
            <summary>
            Tag to end a paragraph.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextOptions.UseHtmlTables">
            <summary>
            Use HTML Table tags.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextOptions.IgnoreTableContents">
            <summary>
            Include table as TableSubstituteTag.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextOptions.TableSubstituteTag">
            <summary>
            Tag to represent empty Table.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextOptions.TableStartTag">
            <summary>
            Tag to start a Table.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextOptions.TableEndTag">
            <summary>
            Tag to end a Table.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextOptions.TableRowStartTag">
            <summary>
            Tag to start a table row.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextOptions.TableRowEndTag">
            <summary>
            Tag to end a table row.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextOptions.TableCellStartTag">
            <summary>
            Tag to start a table cell.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextOptions.TableCellEndTag">
            <summary>
            Tag to end a table cell.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextOptions.IncludeFieldFormula">
            <summary>
            Include formula command text.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextOptions.IncludeFieldResult">
            <summary>
            Include formula result text.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.TextOptions.FieldCharBeginChar">
            <summary>
            Char to mark field char begin in PlainText mode.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.TextOptions.FieldCharBeginTag">
            <summary>
            Tag to mark field char begin in TaggedText mode.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.TextOptions.FieldCharSeparateChar">
            <summary>
            Char to mark field char separator in PlainText mode.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.TextOptions.FieldCharSeparateTag">
            <summary>
            Tag to mark field char separator in TaggedText mode.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.TextOptions.FieldCharEndChar">
            <summary>
            Char to mark field char end in PlainText mode.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.TextOptions.FieldCharEndTag">
            <summary>
            Tag to mark field char end in TaggedText mode.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextOptions.FieldStartTag">
            <summary>
            Tag to start a field.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextOptions.FieldCodeStart">
            <summary>
            Tag to start a field code start.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextOptions.FieldCodeEnd">
            <summary>
            Tag to start a field code end.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextOptions.FieldResultTag">
            <summary>
            Tag to separate a field formula command from result.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextOptions.FieldEndTag">
            <summary>
            Tag to end a field formula.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextOptions.FootnoteRefStart">
            <summary>
            Tag to start a footnote reference.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextOptions.FootnoteRefEnd">
            <summary>
            Tag to end a footnote reference.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextOptions.EndnoteRefStart">
            <summary>
            Tag to start an endnote reference.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextOptions.EndnoteRefEnd">
            <summary>
            Tag to end an end note reference.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextOptions.CommentRefStart">
            <summary>
            Tag to start a comment reference.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextOptions.CommentRefEnd">
            <summary>
            Tag to end a comment reference.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.TextOptions.AnnotationReferenceMarkChar">
            <summary>
            Tag to mark an annotation reference mark in PlainText mode.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.TextOptions.AnnotationReferenceMarkTag">
            <summary>
            Tag to mark an annotation reference mark in TaggedText mode.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.TextOptions.FootnoteReferenceMarkChar">
            <summary>
            Char to mark an endnote reference mark in PlainText mode.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.TextOptions.FootnoteReferenceMarkTag">
            <summary>
            Tag to mark an endnote reference mark in TaggedText mode.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.TextOptions.EndnoteReferenceMarkChar">
            <summary>
            Tag to mark an endnote reference mark in PlainText mode.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.TextOptions.EndnoteReferenceMarkTag">
            <summary>
            Tag to mark an endnote reference mark in TaggedText mode.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.TextOptions.SeparatorMarkChar">
            <summary>
            Char to mark a footnotes/endnotes separator mark in PlainText mode.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.TextOptions.SeparatorMarkTag">
            <summary>
            Tag to mark a footnotes/endnotes separator mark in TaggedText mode.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.TextOptions.ContinuationSeparatorMarkChar">
            <summary>
            Char to mark a continuation separator mark in PlainText mode.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.TextOptions.ContinuationSeparatorMarkTag">
            <summary>
            Tag to mark a continuation separator mark in TaggedText mode.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextOptions.IncludeParagraphNumbering">
            <summary>
            Include paragraph numbering string at the beginning of paragraph text.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextOptions.IndentNumberingLists">
            <summary>
            Should numbered list be indented on each level.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextOptions.NumberingStartTag">
            <summary>
            Tag to start a paragraph numbering.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextOptions.NumberingEndTag">
            <summary>
            Tag to end a paragraph numbering.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextOptions.DeletedTextStartTag">
            <summary>
            Deleted text start tag.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextOptions.DeletedTextEndTag">
            <summary>
            Deleted text end tag.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextOptions.DeletedInstrStartTag">
            <summary>
            Deletion start tag.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextOptions.DeletedInstrEndTag">
            <summary>
            Deletion end tag.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextOptions.IncludeEmbeddedObjects">
            <summary>
            Include embedded objects in the text. Objects are included as Xml.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextOptions.IgnoreEmbeddedObjectContent">
            <summary>
            Ignore embedded objects content.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextOptions.EmbeddedObjectSubstituteTag">
            <summary>
            Tag to replace an object.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextOptions.EmbeddedObjectStartTag">
            <summary>
            Tag to start an object.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextOptions.EmbeddedObjectEndTag">
            <summary>
            Tag to end an object.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextOptions.IncludeDrawings">
            <summary>
            Include drawings in the text. Drawings are included as Xml.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextOptions.IgnoreDrawingContents">
            <summary>
            Ignore drawings content.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextOptions.DrawingSubstituteTag">
            <summary>
            Tag to replace a drawing.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextOptions.DrawingStartTag">
            <summary>
            Tag to start a drawing.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextOptions.DrawingEndTag">
            <summary>
            Tag to end a drawing.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextOptions.BlipTag">
            <summary>
            Tag to show blip linked object.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextOptions.IncludeOtherMembers">
            <summary>
            Include other members of the element.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextOptions.IgnoreOtherMembersContent">
            <summary>
            Ignore other members content.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextOptions.IncludeMemberProperties">
            <summary>
            Determine if the member properties should be included.
            </summary>
        </member>
        <member name="T:Qhta.OpenXmlTools.TextProcessor">
            <summary>
            Class to process text in a document.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.TextProcessor.#ctor(DocumentFormat.OpenXml.Wordprocessing.Paragraph)">
            <summary>
            Construct a formatted text using paragraph as a context element.
            </summary>
            <param name="paragraph"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.TextProcessor.NormalizeWhitespaces(Qhta.OpenXmlTools.WhitespaceOptions)">
            <summary>
            Remove exceeding whitespaces from all paragraphs in the context.
            </summary>
        </member>
        <member name="T:Qhta.OpenXmlTools.TextProperties">
            <summary>
            Represents the properties of a text. These properties are used to format the text.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextProperties.ScriptType">
            <summary>
            Type of the script used to select the appropriate font.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextProperties.FontName">
            <summary>
            Name of the font.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextProperties.FontSize">
            <summary>
            Size of the font.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextProperties.Bold">
            <summary>
            Bold attribute of the text.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextProperties.Italic">
            <summary>
            Italic attribute of the text.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextProperties.StrikeThrough">
            <summary>
            StrikeThrough attribute of the text (0 - none, 1 - single, 2 - double).
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextProperties.Underline">
            <summary>
            Underline attribute of the text.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.TextProperties.UnderlineColor">
            <summary>
            Underline color. Valid if underline attribute is set.
            </summary>
        </member>
        <member name="T:Qhta.OpenXmlTools.TrimOptions">
            <summary>
            Options for trimming paragraphs.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.TrimOptions.TrimStart">
            <summary>
            Trim white spaces at the start of the paragraph.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.TrimOptions.TrimEnd">
            <summary>
            Trim white spaces at the end of the paragraph.
            </summary>
        </member>
        <member name="T:Qhta.OpenXmlTools.Twips">
            <summary>
            Represents a twips measure integer.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.Twips.Value">
            <summary>
            Stored value.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.Twips.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Qhta.OpenXmlTools.Twips"/> struct with the integer value.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.Twips.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Qhta.OpenXmlTools.Twips"/> struct with the unsigned integer value.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.Twips.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Qhta.OpenXmlTools.Twips"/> struct with the string value.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.Twips.op_Implicit(System.Nullable{System.Int32})~System.Nullable{Qhta.OpenXmlTools.Twips}">
            <summary>
            Converts the integer to the <see cref="T:Qhta.OpenXmlTools.Twips"/> struct.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.Twips.op_Implicit(System.Nullable{Qhta.OpenXmlTools.Twips})~System.Nullable{System.Int32}">
            <summary>
            Converts the <see cref="T:Qhta.OpenXmlTools.Twips"/> struct to the integer.
            </summary>
            <param name="Twips"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.Twips.op_Implicit(System.Nullable{System.UInt32})~System.Nullable{Qhta.OpenXmlTools.Twips}">
            <summary>
            Converts the unsigned integer to the <see cref="T:Qhta.OpenXmlTools.Twips"/> struct.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.Twips.op_Implicit(System.Nullable{Qhta.OpenXmlTools.Twips})~System.Nullable{System.UInt32}">
            <summary>
            Converts the <see cref="T:Qhta.OpenXmlTools.Twips"/> struct to the unsigned integer.
            </summary>
            <param name="Twips"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.Twips.op_Implicit(System.String)~System.Nullable{Qhta.OpenXmlTools.Twips}">
            <summary>
            Converts the string value to the <see cref="T:Qhta.OpenXmlTools.Twips"/> struct.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.Twips.op_Implicit(System.Nullable{Qhta.OpenXmlTools.Twips})~System.String">
            <summary>
            Converts the <see cref="T:Qhta.OpenXmlTools.Twips"/> struct to the string.
            </summary>
            <param name="Twips"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.Twips.FromString(System.String)">
            <summary>
            Converts string to the <see cref="T:Qhta.OpenXmlTools.Twips"/> struct.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.Twips.ToString">
            <summary>
            Converts the <see cref="T:Qhta.OpenXmlTools.Twips"/> struct to the string.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.Twips.op_Equality(System.Nullable{Qhta.OpenXmlTools.Twips},System.Nullable{Qhta.OpenXmlTools.Twips})">
            <summary>
            Equality comparison operator.
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.Twips.op_Inequality(System.Nullable{Qhta.OpenXmlTools.Twips},System.Nullable{Qhta.OpenXmlTools.Twips})">
            <summary>
            Inequality comparison operator.
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.Twips.ToPoints">
            <summary>
            Converts the <see cref="T:Qhta.OpenXmlTools.Twips"/> value to points.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.Twips.FromPoints(System.Double)">
            <summary>
            Converts the points value to the <see cref="T:Qhta.OpenXmlTools.Twips"/> value.
            </summary>
            <param name="points"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.Twips.Equals(Qhta.OpenXmlTools.Twips)">
            <summary>
            Compares the <see cref="T:Qhta.OpenXmlTools.Twips"/> value to the other.
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.Twips.Equals(System.Object)">
            <summary>
            Compares the <see cref="T:Qhta.OpenXmlTools.Twips"/> value to the other object.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.Twips.GetHashCode">
            <summary>
            Gets the hash code of the <see cref="T:Qhta.OpenXmlTools.Twips"/> value
            </summary>
            <returns></returns>
        </member>
        <member name="T:Qhta.OpenXmlTools.TypeTools">
            <summary>
            Tools for OpenXml element types and their values.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.TypeTools.IsMemberType(System.Type)">
            <summary>
            Checks if the elementType is a member type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.TypeTools.IsBodyMemberType(System.Type)">
            <summary>
            Checks if the elementType is accepted type of member of body.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.TypeTools.IsParagraphMemberType(System.Type)">
            <summary>
            Checks if the elementType is accepted type of member of paragraph.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.TypeTools.IsRunMemberType(System.Type)">
            <summary>
            Checks if the elementType is accepted type of member of run.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.TypeTools.GetOpenXmlProperties(System.Type)">
            <summary>
            Gets the properties of the OpenXml type (except for the framework properties).
            </summary>
            <param name="openXmlType"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.TypeTools.ToEnumValue``1(``0)">
            <summary>
            Converts an enum value to an EnumValue.
            </summary>
            <param name="enumInstance"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.TypeTools.IsOpenXmlEnum(System.Type)">
            <summary>
            Checks whether the openXmlType is an OpenXml enum.
            </summary>
            <param name="openXmlType"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.TypeTools.GetOpenXmlEnumValues(System.Type)">
            <summary>
            Checks whether the openXmlType is an OpenXml enum.
            </summary>
            <param name="openXmlType"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.TypeTools.ToSystemType(System.Type,System.String)">
            <summary>
            Converts an OpenXml type to a system type.
            If conversion is not possible, the original type is returned.
            </summary>
            <param name="openXmlType"></param>
            <param name="propertyName">Used when the input type is not sufficient to determine output type</param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.TypeTools.ToSystemValue(System.Object,System.Type)">
            <summary>
            Converts an OpenXml type value to a system type value.
            If conversion is not possible, the original value is returned.
            </summary>
            <param name="openXmlType"></param>
            <param name="openXmlValue"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.TypeTools.UpdateFromSystemValue(DocumentFormat.OpenXml.OpenXmlElement,System.Object)">
            <summary>
            Updates the OpenXml value with the system value.
            If conversion is not possible, the false value is returned.
            </summary>
            <param name="openXmlElement">OpenXmlElement</param>
            <param name="systemValue"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.TypeTools.ToOpenXmlValue(System.Object,System.Type)">
            <summary>
            Converts a system type value to an OpenXml type value.
            If conversion is not possible, the original value is returned.
            </summary>
            <param name="openXmlType"></param>
            <param name="systemValue"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.TypeTools.IsContainer(System.Type)">
            <summary>
            Check whether the OpenXml type can contain members.
            </summary>
            <param name="openXmlType"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.TypeTools.GetAllowedMemberTypes(System.Type)">
            <summary>
            Gets the acceptable member types of the OpenXml type.
            </summary>
            <param name="openXmlType"></param>
            <returns></returns>
        </member>
        <member name="T:Qhta.OpenXmlTools.UnderlineTools">
            <summary>
            Contains tools for working with underline element.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.UnderlineTools.GetColor(DocumentFormat.OpenXml.Wordprocessing.Underline)">
            <summary>
            Get underline color.
            </summary>
            <param name="underline">Underline element to examine</param>
            <returns></returns>
        </member>
        <member name="T:Qhta.OpenXmlTools.UnicodeRange">
            <summary>
            Definition of the Unicode ranges.
            </summary>
        </member>
        <member name="T:Qhta.OpenXmlTools.UnicodeTools">
            <summary>
            
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.UnicodeTools.GetUnicodeRange(System.Char)">
            <summary>
            Gets the Unicode range of a character.
            </summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="T:Qhta.OpenXmlTools.VariantTools">
            <summary>
            Tools for working with variant types.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.VariantTools.GetVariantValue(DocumentFormat.OpenXml.OpenXmlElement)">
            <summary>
            Get the value of the VTVariant element.
            </summary>
            <param name="element">Source element</param>
            <returns>simple type result</returns>
            <exception cref="T:System.IO.InvalidDataException"></exception>
        </member>
        <member name="M:Qhta.OpenXmlTools.VariantTools.DecodeBstr(System.String)">
            <summary>
            Decodes the BSTR string
            </summary>
            <param name="bstr"></param>
            <returns></returns>
            <remarks>
            Unicode characters that cannot be directly represented in XML as defined by the XML 1.0 specification,
            shall be escaped using the Unicode numerical character representation escape character format _xHHHH_,
            where H represents a hexadecimal character in the character's value.
            [Example: The Unicode character 8 is not permitted in an XML 1.0 document, so it shall be escaped as _x0008_. end example]
            To store the literal form of an escape sequence, the initial underscore shall itself be escaped (i.e. stored as _x005F_).
            [Example: The string literal _x0008_ would be stored as _x005F_x0008_. end example]
            </remarks>
        </member>
        <member name="M:Qhta.OpenXmlTools.VariantTools.EncodeBstr(System.String)">
            <summary>
            Decodes the BSTR string
            </summary>
            <param name="bstr"></param>
            <returns></returns>
            <remarks>
            Unicode characters that cannot be directly represented in XML as defined by the XML 1.0 specification,
            shall be escaped using the Unicode numerical character representation escape character format _xHHHH_,
            where H represents a hexadecimal character in the character's value.
            [Example: The Unicode character 8 is not permitted in an XML 1.0 document, so it shall be escaped as _x0008_. end example]
            To store the literal form of an escape sequence, the initial underscore shall itself be escaped (i.e. stored as _x005F_).
            [Example: The string literal _x0008_ would be stored as _x005F_x0008_. end example]
            </remarks>
        </member>
        <member name="M:Qhta.OpenXmlTools.VariantTools.GetData(DocumentFormat.OpenXml.VariantTypes.VTStreamData)">
            <summary>
            Get byte array from the <c>VTStreamData</c> element.
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.VariantTools.GetData(DocumentFormat.OpenXml.VariantTypes.VTOStreamData)">
            <summary>
            Get byte array from the <c>VTOStreamData</c> element.
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.VariantTools.GetData(DocumentFormat.OpenXml.VariantTypes.VTVStreamData)">
            <summary>
            Get byte array from the <c>VTVStreamData</c> element.
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.VariantTools.GetData(DocumentFormat.OpenXml.VariantTypes.VTStorage)">
            <summary>
            Get byte array from the <c>VTStorage</c> element.
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.VariantTools.GetData(DocumentFormat.OpenXml.VariantTypes.VTOStorage)">
            <summary>
            Get byte array from the <c>VTOStorage</c> element.
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.VariantTools.CreateVTArray(System.Array)">
            <summary>
            Creates the <c>VTArray</c> element from the array data.
            </summary>
            <param name="array"></param>
            <returns></returns>
            <exception cref="T:System.IO.InvalidDataException"></exception>
        </member>
        <member name="M:Qhta.OpenXmlTools.VariantTools.GetData(DocumentFormat.OpenXml.VariantTypes.VTArray)">
            <summary>
            Get the array from the <c>VTArray</c> element.
            </summary>
            <param name="vArray"></param>
            <returns></returns>
            <exception cref="T:System.IO.InvalidDataException"></exception>
        </member>
        <member name="F:Qhta.OpenXmlTools.VariantTools.ArrayBaseTypeToType">
            <summary>
            Dictionary mapping the <c>ArrayBaseValues</c> to the data type.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.VariantTools.TypeToArrayBaseType">
            <summary>
            Dictionary mapping data type to the <c>ArrayBaseValues</c>.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.VariantTools.ArrayBaseTypeToVTType">
            <summary>
            Dictionary mapping the <c>ArrayBaseValues</c> to the Variant type.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.VariantTools.VectorBaseTypeToType">
            <summary>
            Dictionary mapping the <c>VectorBaseValues</c> type to the data type.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.VariantTools.VTTypeToType">
            <summary>
            Dictionary mapping the variant type to the data type.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.VariantTools.GetData(DocumentFormat.OpenXml.VariantTypes.VTVector)">
            <summary>
            Get the array from the <c>VTVector</c> element.
            </summary>
            <param name="vector"></param>
            <returns></returns>
            <exception cref="T:System.IO.InvalidDataException"></exception>
        </member>
        <member name="M:Qhta.OpenXmlTools.VariantTools.GetData(DocumentFormat.OpenXml.VariantTypes.VTBlob)">
            <summary>
            Get byte array from the VTBlob element.
            </summary>
            <param name="blob">Source blob element</param>
            <returns>byte array or null</returns>
            <exception cref="T:System.IO.InvalidDataException"></exception>
            <remarks>
            Blob must be encoded in base64 with the first 4 bytes representing the length of the data.
            </remarks>
        </member>
        <member name="M:Qhta.OpenXmlTools.VariantTools.CreateBlob(System.Byte[])">
            <summary>
            Create a VTBlob element from a byte array.
            Result is encoded in base64 with the first 4 bytes representing the length of the data.
            </summary>
            <param name="data">Source byte array</param>
            <returns>VTBlob result</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.VariantTools.GetData(DocumentFormat.OpenXml.VariantTypes.VTOBlob)">
            <summary>
            Get byte array from the VTOBlob element.
            </summary>
            <param name="blob">Source blob element</param>
            <returns>byte array or null</returns>
            <exception cref="T:System.IO.InvalidDataException"></exception>
            <remarks>
            Blob must be encoded in base64 with the first 4 bytes representing the length of the data.
            </remarks>
        </member>
        <member name="M:Qhta.OpenXmlTools.VariantTools.CreateOBlob(System.Byte[])">
            <summary>
            Create a VTOBlob element from a byte array.
            Result is encoded in base64 with the first 4 bytes representing the length of the data.
            </summary>
            <param name="data">Source byte array</param>
            <returns>VTOBlob result</returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.VariantTools.CreateVariant(Qhta.OpenXmlTools.VariantType,System.Object,System.String)">
            <summary>
            Create variant element from the value.
            </summary>
            <param name="value">value to set </param>
            <param name="variantType">optional type of the variant</param>
            <param name="format">optional format of the value</param>
            <returns>variant with the specified value</returns>
            <exception cref="T:System.IO.InvalidDataException">When the value cannot be converter to variant type</exception>
        </member>
        <member name="M:Qhta.OpenXmlTools.VariantTools.CreateVariant(System.Type,System.Object,System.String)">
            <summary>
            Create variant element from the value.
            </summary>
            <param name="valueType"></param>
            <param name="value"></param>
            <param name="format"></param>
            <returns></returns>
            <exception cref="T:System.IO.InvalidDataException"></exception>
        </member>
        <member name="M:Qhta.OpenXmlTools.VariantTools.CreateVariant(System.Object,System.String)">
            <summary>
            Create variant element from the value.
            </summary>
            <param name="value">value to set </param>
            <param name="format">optional format of the value</param>
            <returns>variant with the specified value</returns>
            <exception cref="T:System.IO.InvalidDataException">When the value cannot be converter to variant type</exception>
        </member>
        <member name="M:Qhta.OpenXmlTools.VariantTools.ValidateVariantString(System.Type,System.String,System.String)">
            <summary>
            Validate string for a variant of the specified type
            </summary>
            <param name="valueType"></param>
            <param name="value"></param>
            <param name="format"></param>
            <returns></returns>
            <exception cref="T:System.IO.InvalidDataException"></exception>
        </member>
        <member name="M:Qhta.OpenXmlTools.VariantTools.IntegerToString(System.Object,System.String)">
            <summary>
            Convert integer value to string with the specified format.
            If the format is null, the default format is used.
            If the value is not integer, the null value is returned.
            </summary>
            <param name="value"></param>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.VariantTools.FloatToString(System.Object,System.String)">
            <summary>
            Convert float, double or decimal value to string with the specified format with the invariant culture.
            If the format is null, the default format is used.
            If the value is not  float, double nor decimal, it is converted to decimal.
            </summary>
            <param name="value"></param>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.VariantTools.DecimalToString(System.Object,System.String)">
            <summary>
            Convert float, double or decimal value to string with the specified format with the current culture.
            If the format is null, the <c>F</c> format is used.
            If the value is not  float, double nor decimal, it is converted to decimal.
            </summary>
            <param name="value"></param>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.VariantTools.DateTimeToString(System.Object,System.String)">
            <summary>
            Convert DateTime value to string with the specified format.
            If the format is not specified, the <c>"yyyy-MM-ddTHH:mm:sszzz"</c> format is used.
            if the value is not DateTime, returns null.
            </summary>
            <param name="value"></param>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="M:Qhta.OpenXmlTools.VariantTools.BooleanToString(System.Object,System.String)">
            <summary>
            Convert DateTime value to string with the specified format.
            If the format is not specified, the <c>"yyyy-MM-ddTHH:mm:sszzz"</c> format is used.
            if the value is not DateTime, returns null.
            </summary>
            <param name="value"></param>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="T:Qhta.OpenXmlTools.VariantType">
            <summary>
            Enumeration of the OpenXMl variant types.
            </summary>
        </member>
        <member name="T:Qhta.OpenXmlTools.WdBuiltinStyle">
            <summary>Specifies a built-in Microsoft Word style.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleTocHeading">
            <summary>TOC Heading.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleBibliography">
            <summary>Bibliography.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleBookTitle">
            <summary>Book title.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleIntenseReference">
            <summary>Intense Reference.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleSubtleReference">
            <summary>Subtle Reference.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleIntenseEmphasis">
            <summary>Intense Emphasis.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleSubtleEmphasis">
            <summary>Subtle Emphasis.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleIntenseQuote">
            <summary>Intense Quote.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleQuote">
            <summary>Quote.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleListParagraph">
            <summary>List Paragraph.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleTableMediumList1Accent1">
            <summary>Medium List 1 Accent 1.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleTableMediumShading2Accent1">
            <summary>Medium Shading 2 Accent 1.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleTableMediumShading1Accent1">
            <summary>Medium List 1 Accent 1.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleTableLightGridAccent1">
            <summary>Light Grid Accent 1.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleTableLightListAccent1">
            <summary>Light List Accent 1.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleTableLightShadingAccent1">
            <summary>Light Shading Accent 1.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleTableColorfulGrid">
            <summary>Colorful Grid.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleTableColorfulList">
            <summary>Colorful List.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleTableColorfulShading">
            <summary>Colorful Shading.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleTableDarkList">
            <summary>Dark List.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleTableMediumGrid3">
            <summary>Medium Grid 3.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleTableMediumGrid2">
            <summary>Medium Grid 2.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleTableMediumGrid1">
            <summary>Medium Grid 1.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleTableMediumList2">
            <summary>Medium List 2.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleTableMediumList1">
            <summary>Medium List 1.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleTableMediumShading2">
            <summary>Medium Shading 2.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleTableMediumShading1">
            <summary>Medium Shading 1.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleTableLightGrid">
            <summary>Light Grid.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleTableLightList">
            <summary>Light List.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleTableLightShading">
            <summary>Light Shading.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleNormalObject">
            <summary>Normal (applied to an object).</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleNormalTable">
            <summary>Normal (applied within a table).</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleHtmlVar">
            <summary>HTML Variable.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleHtmlTt">
            <summary>HTML Typewriter.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleHtmlSamp">
            <summary>HTML Sample.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleHtmlPre">
            <summary>HTML Preformatted.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleHtmlKbd">
            <summary>HTML Keyboard.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleHtmlDfn">
            <summary>HTML Definition.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleHtmlCode">
            <summary>HTML Code.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleHtmlCite">
            <summary>HTML City.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleHtmlAddress">
            <summary>HTML Address.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleHtmlAcronym">
            <summary>HTML Acronym.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleHtmlNormal">
            <summary>Normal (Web).</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStylePlainText">
            <summary>Plain SearchText.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleNavPane">
            <summary>Document Map.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleEmphasis">
            <summary>Emphasis.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleStrong">
            <summary>Strong.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleHyperlinkFollowed">
            <summary>Followed Hyperlink.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleHyperlink">
            <summary>Hyperlink.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleBlockQuotation">
            <summary>Block Quotation.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleBodyTextIndent3">
            <summary>Body SearchText IndentUnit 3.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleBodyTextIndent2">
            <summary>Body SearchText IndentUnit 2.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleBodyText3">
            <summary>Body SearchText 3.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleBodyText2">
            <summary>Body SearchText 2.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleNoteHeading">
            <summary>Note Heading.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleBodyTextFirstIndent2">
            <summary>Body SearchText First IndentUnit 2.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleBodyTextFirstIndent">
            <summary>Body SearchText First IndentUnit.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleDate">
            <summary>Date.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleSalutation">
            <summary>Salutation.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleSubtitle">
            <summary>Subtitle.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleMessageHeader">
            <summary>Message Header.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleListContinue5">
            <summary>List Continue 5.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleListContinue4">
            <summary>List Continue 4.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleListContinue3">
            <summary>List Continue 3.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleListContinue2">
            <summary>List Continue 2.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleListContinue">
            <summary>List Continue.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleBodyTextIndent">
            <summary>Body SearchText IndentUnit.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleBodyText">
            <summary>Body SearchText.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleDefaultParagraphFont">
            <summary>Default Paragraph HighAnsiFont.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleSignature">
            <summary>Signature.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleClosing">
            <summary>Closing.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleTitle">
            <summary>Title.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleListNumber5">
            <summary>List Number 5.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleListNumber4">
            <summary>List Number 4.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleListNumber3">
            <summary>List Number 3.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleListNumber2">
            <summary>List Number 2.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleListBullet5">
            <summary>List Bullet 5.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleListBullet4">
            <summary>List Bullet 4.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleListBullet3">
            <summary>List Bullet 3.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleListBullet2">
            <summary>List Bullet 2.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleList5">
            <summary>List 5.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleList4">
            <summary>List 4.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleList3">
            <summary>List 3.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleList2">
            <summary>List 2.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleListNumber">
            <summary>List Number.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleListBullet">
            <summary>List Bullet.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleList">
            <summary>List.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleTOAHeading">
            <summary>TOA Heading.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleMacroText">
            <summary>Macro SearchText.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleTableOfAuthorities">
            <summary>Table of Authorities.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleEndnoteText">
            <summary>Endnote SearchText.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleEndnoteReference">
            <summary>Endnote Reference.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStylePageNumber">
            <summary>Page Number.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleLineNumber">
            <summary>Line Number.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleCommentReference">
            <summary>Comment Reference.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleFootnoteReference">
            <summary>Footnote Reference.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleEnvelopeReturn">
            <summary>Envelope Return.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleEnvelopeAddress">
            <summary>Envelope Address.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleTableOfFigures">
            <summary>Table of Figures.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleCaption">
            <summary>Caption.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleIndexHeading">
            <summary>Index Heading</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleFooter">
            <summary>Footer.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleHeader">
            <summary>Header.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleCommentText">
            <summary>Comment SearchText.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleFootnoteText">
            <summary>Footnote SearchText.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleNormalIndent">
            <summary>Normal IndentUnit.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleTOC9">
            <summary>TOC 9.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleTOC8">
            <summary>TOC 8.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleTOC7">
            <summary>TOC 7.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleTOC6">
            <summary>TOC 6.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleTOC5">
            <summary>TOC 5.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleTOC4">
            <summary>TOC 4.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleTOC3">
            <summary>TOC 3.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleTOC2">
            <summary>TOC 2.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleTOC1">
            <summary>TOC 1.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleIndex9">
            <summary>Index 9.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleIndex8">
            <summary>Index8.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleIndex7">
            <summary>Index 7.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleIndex6">
            <summary>Index 6.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleIndex5">
            <summary>Index 5.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleIndex4">
            <summary>Index 4.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleIndex3">
            <summary>Index 3.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleIndex2">
            <summary>Index 2.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleIndex1">
            <summary>Index 1.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleHeading9">
            <summary>Heading 9.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleHeading8">
            <summary>Heading 8.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleHeading7">
            <summary>Heading 7.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleHeading6">
            <summary>Heading 6.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleHeading5">
            <summary>Heading 5.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleHeading4">
            <summary>Heading 4.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleHeading3">
            <summary>Heading 3.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleHeading2">
            <summary>Heading 2.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleHeading1">
            <summary>Heading 1.</summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WdBuiltinStyle.wdStyleNormal">
            <summary>Normal.</summary>
        </member>
        <member name="T:Qhta.OpenXmlTools.WsMode">
            <summary>
            Mode for handling whitespaces.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WsMode.NoChange">
            <summary>
            Do not change the white spaces.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WsMode.Remove">
            <summary>
            Remove white spaces.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WsMode.Reduce">
            <summary>
            Remove white spaces and replace with a single space.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WsMode.ChangeToTabs">
            <summary>
            Change white spaces to tabs.
            </summary>
        </member>
        <member name="F:Qhta.OpenXmlTools.WsMode.ChangeToSpaces">
            <summary>
            Change tabs to whitespaces.
            </summary>
        </member>
        <member name="T:Qhta.OpenXmlTools.WhitespaceOptions">
            <summary>
            Options for handling whitespaces in text.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.WhitespaceOptions.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Qhta.OpenXmlTools.WhitespaceOptions.#ctor(Qhta.OpenXmlTools.WsMode,Qhta.OpenXmlTools.WsMode,Qhta.OpenXmlTools.WsMode)">
            <summary>
            Constructor with all options.
            </summary>
            <param name="mode"></param>
            <param name="start"></param>
            <param name="end"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.WhitespaceOptions.#ctor(Qhta.OpenXmlTools.WsMode)">
            <summary>
            Constructor with the same mode for all options.
            </summary>
            <param name="mode"></param>
        </member>
        <member name="M:Qhta.OpenXmlTools.WhitespaceOptions.#ctor(Qhta.OpenXmlTools.WsMode,Qhta.OpenXmlTools.TrimOptions)">
            <summary>
            Constructor with mode and trim options.
            </summary>
            <param name="mode"></param>
            <param name="trimOptions"></param>
        </member>
        <member name="P:Qhta.OpenXmlTools.WhitespaceOptions.Mode">
            <summary>
            What to do with whitespaces at the main part of the text.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.WhitespaceOptions.Start">
            <summary>
            What to do with whitespaces at the start of the text.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.WhitespaceOptions.End">
            <summary>
            What to do with whitespaces at the end of the text.
            </summary>
        </member>
        <member name="P:Qhta.OpenXmlTools.WhitespaceOptions.TabSize">
            <summary>
            How many spaces to use for a tab.
            </summary>
        </member>
    </members>
</doc>
